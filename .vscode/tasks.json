{
    "version": "2.0.0",
    "presentation": {
      "echo": false,
      "reveal": "always",
      "focus": false,
      "panel": "dedicated",
      "showReuseMessage": true
    },
    "tasks": [
      {
        "label": "~Start Local Dev~",
        "dependsOn": [
          "YarnInstall",
          "Launch All"
        ],
        // Mark as the default build task so cmd/ctrl+shift+b will create them
        "group": {
          "kind": "build",
          "isDefault": true
        },
        "dependsOrder": "sequence"
      },
      {
        "label": "Launch All",
        "dependsOn": [
          "Dendrite (from source)",
          "Casablanca",
          "Anvil",
          "DeployAllContracts",
          "WatchSharedLib",
          "WatchCasablancaClient",
          "App",
          "SampleApp",
          "UnfurlWorker",
          "TokenWorker"
        ],
        "group": {
          "kind": "build",
          "isDefault": true
        },
        "problemMatcher": []
      },
      {
        "label": "~Start Local Dev Casablanca Only~",
        "dependsOn": [
          "Casablanca",
          "Anvil",
          "DeployAllContracts",
          "WatchCasablancaClient"
        ],
        "problemMatcher": [],
      },
      {
        "label": "Start Anvil, Deploy All Contracts",
        "dependsOn": [
          "DeployAllContracts",
          "Anvil"
        ],
        "group": {
          "kind": "build",
          "isDefault": false
        }
      },
      {
        "label": "DeployAllContracts",
        "dependsOn": [
          "DeployZionGovernance",
          "DeployDAOContracts"
        ],
        "group": {
          "kind": "build",
          "isDefault": false
        },
        "dependsOrder": "sequence"
      },
      {
        "label": "FoundryUp",
        "type": "shell",
        "command": "foundryup",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "ephemeral"
        }
      },
      {
        "label": "YarnInstall",
        "type": "shell",
        "command": "yarn",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "ephemeral"
        }
      },
      {
        "label": "Dendrite (from source)",
        "type": "shell",
        "command": "./scripts/start-local-dendrite.sh",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "local-servers"
        }
      },
      {
        "label": "Dendrite (from docker compose)",
        "type": "shell",
        "command": "./scripts/start-local-dendrite.sh --docker-compose-only",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "local-servers"
        }
      },
      {
        "label": "Casablanca",
        "type": "shell",
        "command": "sleep 3 && ./scripts/start-local-casablanca.sh",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "local-servers"
        }
      },
      {
        "label": "Anvil",
        "type": "shell",
        "command": "foundryup && ./scripts/start-local-blockchain.sh",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "local-servers"
        }
      },
      {
        "label": "DeployZionGovernance",
        "type": "shell",
        "command": "./scripts/wait-for-blockchain.sh && ./scripts/deploy-zion-governance-contracts.sh",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "ephemeral"
        }
      },
      {
        "label": "DeployDAOContracts",
        "type": "shell",
        "command": "./scripts/wait-for-blockchain.sh && ./scripts/deploy-dao-contracts.sh",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "ephemeral"
        }
      },
      {
        "label": "BuildContractTypes",
        "type": "shell",
        "command": "foundryup && ./scripts/build-contract-types.sh localhost",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "ephemeral"
        }
      },
      {
        "label": "WatchSharedLib",
        "type": "shell",
        "command": "./scripts/wait-for-casablanca.sh && cd clients/web/lib && yarn watch",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "local-watch"
        }
      },
      {
        "label": "WatchCasablancaClient",
        "type": "shell",
        "command": "./scripts/wait-for-casablanca.sh && cd casablanca/packages/client && yarn watch",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "local-watch"
        }
      },
      {
        "label": "App",
        "type": "shell",
        "command": "cd clients/web/app && yarn dev",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "local-clients"
        }
      },
      {
        "label": "SampleApp",
        "type": "shell",
        "command": "cd clients/web/sample-app && yarn dev",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "local-clients"
        }
      },
      {
        "label": "MITM - Casablanca",
        "type": "shell",
        "command": "mitmweb -p 7105 --mode reverse:http://localhost:7104/",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "local-mitm"
        }
      },
      {
        "label": "MITM - Dendrite",
        "type": "shell",
        "command": "mitmweb -p 8009 --mode reverse:http://localhost:8008/",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "local-mitm"
        }
      },
      {
        "label": "UnfurlWorker",
        "type": "shell",
        "command": "cd servers/workers/unfurl-worker && yarn dev:local",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "local-workers"
        }
      },
      {
        "label": "TokenWorker",
        "type": "shell",
        "command": "cd servers/workers/token-worker && yarn dev:local",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "local-workers"
        }
      },
      {
        "label": "KillAllLocalDev",
        "type": "shell",
        "command": "./scripts/kill-all-local-dev.sh",
        "isBackground": true,
        "problemMatcher": [],
        "presentation": {
          "group": "ephemeral"
        }
      }
    ]
  }

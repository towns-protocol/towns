# Based on https://github.com/docker/build-push-action

name: 'Build Subgraph Docker Image'

on:
    push:
        branches:
            - main
        paths:
            - '.github/workflows/Subgraph_docker.yml'
            - '.github/workflows/_build-docker-arch.yml'
            - 'packages/contracts/**'
            - 'packages/subgraph/**'
    workflow_dispatch: # A build was manually requested
        inputs:
            release_version:
                description: 'The release version to use for the image (optional)'
                required: false # This is no longer required, so that we can promote existing images to `mainnet`, `testnet`, `stable` etc.
            additional_tags_csv:
                description: 'Comma separated list of tags to apply to the image (optional)'
                required: false

env:
    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL || secrets.SLACK_CD_WORKFLOW_WEBHOOK_URL }}

jobs:
    # Generate complex tags for subgraph (beyond standard commit+latest)
    generate-tags:
        name: Generate Docker tags
        runs-on: ubuntu-latest
        permissions:
            contents: read
        outputs:
            extra_tags: ${{ steps.generate-tags.outputs.EXTRA_TAGS }}
            release_image_tag: ${{ steps.generate-tags.outputs.RELEASE_IMAGE_TAG }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Generate extra tags for subgraph
              id: generate-tags
              env:
                  RELEASE_VERSION: ${{ inputs.release_version }}
                  ADDITIONAL_TAGS: ${{ inputs.additional_tags_csv }}
              run: |
                  COMMIT_HASH=$(git rev-parse --short HEAD)
                  echo "RELEASE_IMAGE_TAG=$COMMIT_HASH" >> "$GITHUB_OUTPUT"
                  BRANCH="${{ github.ref_name }}"

                  EXTRA_TAGS_ARRAY=()

                  # if release version is provided, add it as tag
                  if [ -n "$RELEASE_VERSION" ] && [ "$RELEASE_VERSION" != "subgraph" ]; then
                    EXTRA_TAGS_ARRAY+=($RELEASE_VERSION)
                  fi

                  # If this is a push to main, we also tag the image as dev
                  if [ "$BRANCH" == "main" ] && [ "${{ github.event_name }}" == "push" ]; then
                    EXTRA_TAGS_ARRAY+=(dev)
                  fi

                  # Add additional tags if provided
                  if [ -n "$ADDITIONAL_TAGS" ]; then
                    IFS=',' read -ra ADDITIONAL_TAGS_ARRAY <<< "$ADDITIONAL_TAGS"
                    for tag in "${ADDITIONAL_TAGS_ARRAY[@]}"; do
                      # Trim whitespace
                      tag=$(echo "$tag" | xargs)
                      if [ -n "$tag" ]; then
                        EXTRA_TAGS_ARRAY+=($tag)
                      fi
                    done
                  fi

                  echo "Extra tags beyond commit hash: ${EXTRA_TAGS_ARRAY[@]}"
                  echo "Commit hash: $COMMIT_HASH"
                  echo "Branch: $BRANCH"
                  echo "Release version: ${RELEASE_VERSION:-subgraph}"

                  # Convert to comma-separated string
                  EXTRA_TAGS=""
                  for tag in "${EXTRA_TAGS_ARRAY[@]}"; do
                    if [ -n "$EXTRA_TAGS" ]; then
                      EXTRA_TAGS="$EXTRA_TAGS,$tag"
                    else
                      EXTRA_TAGS="$tag"
                    fi
                  done

                  echo "EXTRA_TAGS=$EXTRA_TAGS" >> $GITHUB_OUTPUT

    # Build AMD64 image on native runner
    build-amd64:
        name: Build AMD64 image
        needs: generate-tags
        uses: ./.github/workflows/_build-docker-arch.yml
        with:
            architecture: amd64
            platform: linux/amd64
            runner: ubuntu-latest
            ecr_registry_alias: h5v6m2x1
            ecr_repository: subgraph
            dockerfile: ./packages/subgraph/Dockerfile
            cache_scope_prefix: subgraph
            append_arch_suffix: true
            tag_latest_on_main: false
            extra_tags: ${{ needs.generate-tags.outputs.extra_tags }}
            build_args: |
                GIT_SHA=${{ github.sha }}
                VER_VERSION=${{ inputs.release_version || 'subgraph' }}
                VER_BRANCH=${{ github.ref_name }}
                VER_COMMIT=${{ github.sha }}
        secrets: inherit

    # Build ARM64 image on native runner
    build-arm64:
        name: Build ARM64 image
        needs: generate-tags
        uses: ./.github/workflows/_build-docker-arch.yml
        with:
            architecture: arm64
            platform: linux/arm64
            runner: ubuntu-24.04-arm
            ecr_registry_alias: h5v6m2x1
            ecr_repository: subgraph
            dockerfile: ./packages/subgraph/Dockerfile
            cache_scope_prefix: subgraph
            append_arch_suffix: true
            tag_latest_on_main: false
            extra_tags: ${{ needs.generate-tags.outputs.extra_tags }}
            build_args: |
                GIT_SHA=${{ github.sha }}
                VER_VERSION=${{ inputs.release_version || 'subgraph' }}
                VER_BRANCH=${{ github.ref_name }}
                VER_COMMIT=${{ github.sha }}
        secrets: inherit

    # Merge architecture-specific images into multi-arch manifest
    merge-manifest:
        needs: [generate-tags, build-amd64, build-arm64]
        uses: ./.github/workflows/_create-docker-manifest.yml
        with:
            ecr_registry_alias: h5v6m2x1
            ecr_repository: subgraph
            amd64_tags: ${{ needs.build-amd64.outputs.arch_tags }}
            arm64_tags: ${{ needs.build-arm64.outputs.arch_tags }}
            validation_tag: ${{ needs.generate-tags.outputs.release_image_tag }}
        secrets: inherit

    # Slack notification on failure
    notify-failure:
        name: Notify on failure
        if: failure()
        needs: [generate-tags, build-amd64, build-arm64, merge-manifest]
        runs-on: ubuntu-latest
        steps:
            - name: Slack notification
              uses: slackapi/slack-github-action@v1.24.0
              with:
                  payload: |
                      {
                          "step": "Build Subgraph Docker Image (Multi-arch)",
                          "environment": "N/A",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }

    deploy:
        if: success() && github.event_name != 'workflow_dispatch'
        needs: [generate-tags, merge-manifest]
        uses: ./.github/workflows/Subgraph_service_continuous_deployment.yml
        with:
            environment_name: gamma
            docker_image_tag: ${{ needs.generate-tags.outputs.release_image_tag }}
        secrets:
            SLACK_CD_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_WORKFLOW_WEBHOOK_URL }}
            ARGOCD_GITHUB_PAT: ${{ secrets.ARGOCD_GITHUB_PAT }}

    notify_deploy_failure:
        if: failure() && github.event_name != 'workflow_dispatch'
        needs: deploy
        runs-on: ubuntu-latest
        steps:
            - name: Slack notification
              uses: slackapi/slack-github-action@v1.24.0
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CD_WORKFLOW_WEBHOOK_URL }}
              with:
                  payload: |
                      {
                          "step": "Subgraph Docker Deploy",
                          "environment": "gamma",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }

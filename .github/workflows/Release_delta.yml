name: Release Delta

on:
    push:
        branches:
            - main

jobs:
    river_nodes:
        name: River Nodes
        uses: './.github/workflows/River_node_continuous_deployment.yml'
        secrets:
            SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}
            HARMONY_GITHUB_PAT: ${{ secrets.HARMONY_GITHUB_PAT }}
        with:
            environment_name: delta

    cloudflare_workers:
        name: Cloudflare Workers
        uses: './.github/workflows/Workers_deploy.yml'
        secrets:
            CLOUDFLARE_WORKERS_API_TOKEN: ${{ secrets.CLOUDFLARE_WORKERS_API_TOKEN }}
            SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}
        with:
            environment_name: delta

    notification_service:
        name: Notification Service
        uses: './.github/workflows/River_notification_service_continuous_deployment.yml'
        secrets:
            SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}
            HARMONY_GITHUB_PAT: ${{ secrets.HARMONY_GITHUB_PAT }}
        with:
            environment_name: delta

    stream_metadata_service:
        name: Stream Metadata Service
        uses: './.github/workflows/Stream_metadata_service_deploy.yml'
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}
            SLACK_CD_INFO_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_INFO_WORKFLOW_WEBHOOK_URL }}
        with:
            environment_name: delta

    # upgrade_facets:
    #     name: Upgrade Facets
    #     uses: './.github/workflows/Upgrade_alpha_facets.yml'
    #     with:
    #         job_to_run: Upgrade_Facets_Sparse
    #     secrets:
    #         S3_AWS_ACCESS_KEY_ID: ${{ secrets.S3_AWS_ACCESS_KEY_ID }}
    #         S3_AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_AWS_SECRET_ACCESS_KEY }}
    #         ALPHA_BASE_SEPOLIA_DEPLOYER_PK: ${{ secrets.ALPHA_BASE_SEPOLIA_DEPLOYER_PK }}
    #         SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}
    #         ALPHA_BASE_SEPOLIA_RPC_URL: ${{ secrets.ALPHA_BASE_SEPOLIA_RPC_URL }}
    #         RIVER_TESTNET_RPC_URL: ${{ secrets.RIVER_TESTNET_RPC_URL }}
    #         BLOCKSCOUT_BASE_SEPOLIA_API_KEY: ${{ secrets.BLOCKSCOUT_BASE_SEPOLIA_API_KEY }}
    #         BASESCAN_SEPOLIA_API_KEY: ${{ secrets.BASESCAN_SEPOLIA_API_KEY }}

    on_failure:
        name: On Failure
        runs-on: ubuntu-latest

        needs: [
                river_nodes,
                # upgrade_facets,
            ]

        if: failure()

        steps:
            # If action failed, we send a slack notification
            - name: Alert notification
              uses: slackapi/slack-github-action@v1.24.0
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}
              with:
                  payload: |
                      {
                          "step": "Release Delta",
                          "environment": "delta",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }

    on_success:
        name: On Success
        runs-on: ubuntu-latest

        needs: [
                river_nodes,
                # upgrade_facets,
            ]

        if: success()

        steps:
            - name: Success notification
              uses: slackapi/slack-github-action@v1.24.0
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CD_INFO_WORKFLOW_WEBHOOK_URL }}
              with:
                  payload: |
                      {
                          "message": "Release candidate ready.",
                          "environment": "delta",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }

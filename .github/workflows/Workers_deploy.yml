name: 'Workers_deploy'

on:
    push:
        branches:
            - main
            - omega
        paths:
            - 'servers/workers/**'
            - 'river/**'
    workflow_dispatch:
        inputs:
            environment_name:
                description: 'Environment name'
                required: true
                type: choice
                options:
                    - 'test-beta'
                    - 'omega'
                    - 'alpha'
                default: 'test-beta'

    workflow_call:
        inputs:
            environment_name:
                description: 'Environment name'
                required: true
                type: string

        secrets:
            SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL:
                description: 'Slack webhook url for alerting'
                required: true
            CLOUDFLARE_WORKERS_API_TOKEN:
                description: 'Cloudflare Workers API Token'
                required: true

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    deploy:
        name: Deploy CF Workers
        runs-on: ubuntu-latest

        permissions:
            contents: write
            packages: write

        steps:
            - name: Set Environment Variables
              env:
                  BRANCH_NAME: ${{ github.ref }}
                  ENVIRONMENT_NAME_INPUT: ${{ github.event.inputs.environment_name }}
              run: |
                  if [ -n "$ENVIRONMENT_NAME_INPUT" ]; then
                    echo "ENV_NAME=$ENVIRONMENT_NAME_INPUT" >> $GITHUB_ENV
                  elif [ $BRANCH_NAME = "refs/heads/main" ]; then
                    echo "ENV_NAME=test-beta" >> $GITHUB_ENV
                  elif [ $BRANCH_NAME = "refs/heads/omega" ]; then
                    echo "ENV_NAME=omega" >> $GITHUB_ENV
                  else
                    echo "Error: Branch name is not main or omega. Exiting."
                    exit 1
                  fi

            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                  go-version: '1.21'
                  cache: true
                  cache-dependency-path: 'servers/**/go.sum'

            - name: Install Foundry
              uses: foundry-rs/foundry-toolchain@v1
              with:
                  version: nightly

            - uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'yarn'

            - name: Install node dependencies
              run: yarn install --immutable

            - name: Build
              run: yarn workers:build

            - name: Deploy All CF Workers
              run: CLOUDFLARE_API_TOKEN=${{ secrets.CLOUDFLARE_WORKERS_API_TOKEN }} ./scripts/deploy-all-workers.sh --environment ${{ env.ENV_NAME }}

            # If action failed, we send a slack notification
            - name: Slack notification
              if: failure()
              uses: slackapi/slack-github-action@v1.24.0
              with:
                  payload: |
                      {
                          "step": "Deploy Workers",
                          "environment": "${{ env.ENV_NAME }}",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}

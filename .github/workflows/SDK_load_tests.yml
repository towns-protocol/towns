name: 'Run SDK Load Tests'
env:
    FOUNDRY_VERSION: nightly

on:
    workflow_dispatch: # A load test was manually triggered
    schedule: # A load test was scheduled
        - cron: '0 9 * * *'  # Run at 01:00 PST (09:00 UTC)
        - cron: '0 10 * * *'  # Run at 02:00 PST (10:00 UTC)
        - cron: '0 11 * * *'  # Run at 03:00 PST (11:00 UTC)
        - cron: '0 12 * * *'  # Run at 04:00 PST (12:00 UTC)

jobs:
    run_load_tests:
        runs-on: load-testing-runner
        timeout-minutes: 240
        services:
            redis:
                image: redis:latest
                ports:
                    - '6379:6379'
        env:
            LAST_FAILED_STEP: ""
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Git submodules
              run: git submodule update --init --recursive

            - name: Install Foundry
              uses: foundry-rs/foundry-toolchain@v1
              with:
                  version: ${{ env.FOUNDRY_VERSION }}

            - name: Install Forge modules
              run: ./scripts/install-deps.sh

            - uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'yarn'

            - name: Install node dependencies
              run: yarn install --immutable

            - name: Build town types
              run: ./scripts/build-town-types.sh localhost --frozen

            - name: Run Load Tests S2
              if: github.event.schedule == '0 9 * * *'
              env:
                DATADOG_API_KEY: ${{ secrets.DD_TOWNS_LOAD_TESTING_KEY }}
              run: |
                export LOAD_TEST_PATH="./casablanca/sdk"
                export TEST_CMD="yarn test:ci:load-tests-s2"
                ./scripts/run-and-publish-load-test-metrics.sh || (echo "Test failed, setting LAST_FAILED_STEP" && echo "LAST_FAILED_STEP=Run Load Tests S2" >> $GITHUB_ENV && exit 1)
            - name: Run Load Tests S3
              if: github.event.schedule == '0 10 * * *'
              run: |
                yarn test:ci:load-tests-s3 || (echo "Test failed, setting LAST_FAILED_STEP" && echo "LAST_FAILED_STEP=Run Load Tests S3" >> $GITHUB_ENV && exit 1)

            - name: Run Load Tests S3.1
              if: github.event.schedule == '0 11 * * *'
              run: |
                yarn test:ci:load-tests-s3.1 || (echo "Test failed, setting LAST_FAILED_STEP" && echo "LAST_FAILED_STEP=Run Load Tests S3.1" >> $GITHUB_ENV && exit 1)

            - name: Run Load Tests S4.1
              if: github.event.schedule == '0 12 * * *'
              run: |
                yarn test:ci:load-tests-s4.1 || (echo "Test failed, setting LAST_FAILED_STEP" && echo "LAST_FAILED_STEP=Run Load Tests S4.1" >> $GITHUB_ENV && exit 1)
            # If failed, we send a slack notification
            - name: Slack notification
              if: failure()
              uses: rtCamp/action-slack-notify@v2
              env:
                  SLACK_WEBHOOK: ${{ secrets.SLACK_CI_CHANNEL_WEBHOOK_URL }}
                  SLACK_TITLE: 'Failure in ${{ env.LAST_FAILED_STEP }}'
                  SLACK_USERNAME: 'Load Tests'
                  SLACK_ICON_EMOJI: ':test_tube:'
                  SLACK_COLOR: '#FF0000'
                  SLACK_MESSAGE: 'Load Test Failure <@${{ env.TESTS_GOALIE_SLACK_GROUP_ID }}>'

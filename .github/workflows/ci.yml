name: Continuous Integration
on:
    push:
        branches:
            - main
    pull_request:

jobs:
    check:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        services:
            redis:
                image: redis:latest
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 55000:6379
            postgres:
                image: postgres:latest
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                ports:
                    # Maps tcp port 5433 on service container to the host
                    - 5433:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Cancel previous runs
              uses: styfle/cancel-workflow-action@0.11.0
              with:
                  access_token: ${{ github.token }}

            - name: Install Foundry
              uses: foundry-rs/foundry-toolchain@v1
              with:
                version: nightly

            - name: Cache node modules
              uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  path: |
                      node_modules
                  key: yarn-lock-${{ hashFiles('yarn.lock') }}

            - uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'yarn'

            - name: Install dependencies
              run: yarn install --immutable

            - name: Syncpack
              run: yarn syncpack:check

            - name: Lint
              run: yarn lint

            - name: Build
              run: yarn build
            
            - name: Start local blockchain
              run: ./scripts/start-local-blockchain.sh &

            - run: psql -h localhost -p 5433 -U postgres -f scripts/sql/create_db.sql
              working-directory: casablanca
              env:
                  POSTGRES_PASSWORD: postgres
                  PGPASSWORD: postgres

            - name: Test
              run: yarn test

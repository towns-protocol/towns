name: Continuous Integration
on:
    push:
        branches:
            - main
    pull_request:

jobs:
    check:
        runs-on: ubuntu-latest
        timeout-minutes: 20
        services:
            redis:
                image: redis:latest
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 55000:6379

            postgres-casablanca:
                image: postgres:latest
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                ports:
                    # Maps tcp port 5433 on service container to the host
                    - 5433:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

            postgres-dendrite:
                image: postgres:14
                env:
                    POSTGRES_USER: dendrite
                    POSTGRES_PASSWORD: itsasecret
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Git submodules
              run: git submodule update --init --recursive

            - name: Setup Go
              uses: actions/setup-go@v3
              with:
                go-version: '1.19.2' # The Go version to download (if necessary) and use.

            - name: Cancel previous runs
              uses: styfle/cancel-workflow-action@0.11.0
              with:
                  access_token: ${{ github.token }}

            - name: Install Foundry
              uses: foundry-rs/foundry-toolchain@v1
              with:
                  version: nightly

            - name: Install Forge modules
              run: ./scripts/install-deps.sh

            - uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'yarn'

            - name: Install node dependencies
              run: yarn install --immutable

            - name: Syncpack
              run: yarn syncpack:check

            - name: Lint
              run: yarn lint

            - name: Build
              run: yarn build

            - name: Build contract types
              run: ./scripts/build-contract-types.sh

            - name: Start anvil
              run: anvil &

            - name: Deploy local zion governance contracts
              run: ./scripts/deploy-local-zion-governance-contracts.sh

            - name: Start dendrite
              run: ./scripts/start-local-dendrite.sh --skip-postgres &

            - name: Casablanca create db
              run: psql -h localhost -p 5433 -U postgres -f scripts/sql/create_db.sql
              working-directory: casablanca
              env:
                  POSTGRES_PASSWORD: postgres
                  PGPASSWORD: postgres

            - name: Run Casablanca node
              run: yarn csb:start &

            - name: Wait for Casablanca node to be up
              run: yarn csb:wait

            - name: Wait for dendrite to be ready
              run: yarn drt:wait

            - name: Test
              run: yarn test

            - name: Test Casablanca node
              run: yarn csb:test-remote

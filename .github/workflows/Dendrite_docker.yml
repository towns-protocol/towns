# Based on https://github.com/docker/build-push-action

name: 'Dendrite_docker'

on:
    push:
        branches:
            - main
        paths:
            - 'servers/dendrite/**'
    workflow_dispatch: # A build was manually requested
    workflow_call: # Another pipeline called us
        secrets:
            DOCKER_HUB_TOKEN:
                required: true
            DOCKER_HUB_USERNAME:
                required: true

env:
    DOCKER_NAMESPACE: herenotthere
    GHCR_NAMESPACE: herenotthere
    PLATFORMS: linux/amd64,linux/arm64

jobs:
    monolith:
        name: Monolith image
        runs-on: ubuntu-latest-8-cores
        permissions:
            contents: write
            packages: write
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Put commit hash to release version
              working-directory: ./servers/dendrite
              run: bash get-version.sh | awk '{print "RELEASE_VERSION="$1""}' >> $GITHUB_ENV

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_TOKEN }}

            - name: Build monolith image
              id: docker_build_monolith
              uses: docker/build-push-action@v3
              with:
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  context: ./servers/dendrite
                  file: ./servers/dendrite/build/docker/Dockerfile.monolith
                  platforms: ${{ env.PLATFORMS }}
                  push: true
                  build-args: |
                      RELEASE_VERSION=${{ env.RELEASE_VERSION }}
                  tags: ${{ env.DOCKER_NAMESPACE }}/dendrite-monolith:${{ env.RELEASE_VERSION }}

            # If action failed, we send a slack notification
            - name: Slack notification
              if: failure()
              uses: rtCamp/action-slack-notify@v2.2.0
              env:
                  SLACK_WEBHOOK: ${{ secrets.SLACK_CI_CHANNEL_WEBHOOK_URL }}
                  SLACK_TITLE: 'Failure'
                  SLACK_USERNAME: 'CI'
                  SLACK_ICON_EMOJI: ':boom:'
                  SLACK_COLOR: '#FF0000'
                  SLACK_MESSAGE: 'Dendrite Docker Failed on ${{ github.repository }}'

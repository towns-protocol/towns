name: 'Run_river_stress_tests'

on:
    workflow_dispatch:
        inputs:
            environment_name:
                description: 'Environment name'
                required: true
                type: string
                default: gamma
            clients_count:
                description: 'Clients count'
                required: true
                type: number
                default: 40
            processes_per_container:
                description: 'Processes per container'
                required: true
                type: number
                default: 2
            container_count:
                description: 'Container count'
                required: true
                type: number
                default: 10
            stress_duration:
                description: 'Stress test duration (seconds)'
                required: true
                type: number
                default: 300
            ecs_mode:
                description: 'ECS mode'
                type: choice
                options:
                    - 'task'
                    - 'service'
                default: 'task'
                required: true

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.environment_name }}
    cancel-in-progress: false

env:
    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL || secrets.SLACK_CD_WORKFLOW_WEBHOOK_URL }}

jobs:
    deploy:
        name: Deploy to AWS ECS
        runs-on: ubuntu-latest

        permissions:
            contents: write
            packages: write

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Run ECS Cluster Tasks
              env:
                  ENVIRONMENT_NAME: ${{ inputs.environment_name }}
                  CLIENTS_COUNT: ${{ inputs.clients_count }}
                  PROCESSES_PER_CONTAINER: ${{ inputs.processes_per_container }}
                  CONTAINER_COUNT: ${{ inputs.container_count }}
                  STRESS_DURATION: ${{ inputs.stress_duration }}
                  ECS_MODE: ${{ inputs.ecs_mode }}
              run: ./scripts/run-river-stress-tests.sh

            # If action failed, we send a slack notification
            - name: Slack notification
              if: failure()
              uses: slackapi/slack-github-action@v1.24.0
              with:
                  payload: |
                      {
                          "step": "Run River Stress Tests",
                          "environment": "${{ inputs.environment_name }}",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }

            - name: Data dog logging
              if: failure()
              working-directory: ./infra
              env:
                  ENV: '${{ inputs.environment_name }}'
                  TF_ACTION_TYPE: 'Stresstest'
                  TF_STATUS: 'ERROR'
                  LOG_MESSAGE: 'Stress test failed for ${{ github.ref }} (https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})'
                  TF_VAR_datadog_api_key: ${{ secrets.TF_VAR_datadog_api_key }}
                  TF_VAR_datadog_app_key: ${{ secrets.TF_VAR_datadog_app_key }}
              run: './log_datadog.sh'

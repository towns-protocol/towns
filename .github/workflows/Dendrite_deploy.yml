name: 'Dendrite_deploy'

on:
    workflow_dispatch:
        inputs:
            environment:
                description: 'Environment'
                required: true
                default: 'test'
                type: choice
                options:
                    - test
                    - production
            docker_image_tag:
                description: 'Docker image tag to deploy'
                required: true
                default: 'latest'

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    deploy:
        name: Deploy to AWS ECS
        runs-on: ubuntu-latest

        environment: ${{ inputs.environment }}

        permissions:
            contents: write
            packages: write

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Create new task definition
              run: ./scripts/create-new-task-definition.sh --environment ${{ inputs.environment }} --docker-image-tag ${{ inputs.docker_image_tag }}

            - name: Deploy service
              run: ./scripts/deploy-task-definition.sh --environment ${{ inputs.environment }} --node-name ${{ vars.PRIMARY_NODE_NAME }}

            # If action failed, we send a slack notification
            - name: Slack notification
              if: failure()
              uses: slackapi/slack-github-action@v1.24.0
              with:
                  payload: |
                      {
                          "step": "Deploy Dendrite ECS",
                          "environment": "${{ inputs.environment }}",
                          "branch": "${{ github.ref }}",
                          "url": "${{ github.event.workflow_run.url }}"
                      }
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CD_WORKFLOW_WEBHOOK_URL }}

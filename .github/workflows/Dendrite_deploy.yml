name: "Dendrite_deploy"

on:
  workflow_dispatch:
    inputs:
      task_definition:
        description: 'Task definition'
        required: true
        default: 'production-zion-dendrite:5'
      service:
        description: 'Service name to deploy to'
        required: true
        default: 'production-zion-dendrite-service'
      cluster:
        description: 'Cluster name to deploy to'
        required: true
        default: 'production-node1-zion-ecs-cluster'
  # workflow_call: # Another pipeline called us #TODO: make this work with other pipelines

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy to AWS ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Redeploy service
        run: |
          aws ecs update-service --cluster=${{ github.event.inputs.cluster }} --service=${{ github.event.inputs.service }} --task-definition=${{ github.event.inputs.task_definition }} --force-new-deployment

      - name: Wait for service to be stable
        run: |
          aws ecs wait services-stable --cluster=${{ github.event.inputs.cluster }} --services=${{ github.event.inputs.service }}

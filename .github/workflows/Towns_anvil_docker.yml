# Based on https://github.com/docker/build-push-action

name: 'Build Towns Anvil Docker Image'

on:
    push:
        branches:
            - main

    workflow_dispatch: # A build was manually requested

env:
    PLATFORMS: linux/amd64,linux/arm64
    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL || secrets.SLACK_CD_WORKFLOW_WEBHOOK_URL }}

jobs:
    build:
        name: Build docker image

        runs-on: ubuntu-latest

        permissions:
            contents: write
            packages: write

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Login to Amazon ECR
              id: login-aws-ecr
              uses: aws-actions/amazon-ecr-login@v2
              with:
                  registry-type: 'public'

            - name: Build and push image to Amazon ECR
              id: build-image
              env:
                  ECR_REGISTRY: ${{ steps.login-aws-ecr.outputs.registry }}
                  #This can be custom alias once requested to aws and approved for public repo
                  REGISTRY_ALIAS: h5v6m2x1
                  ECR_REPOSITORY: towns-anvil
                  RELEASE_VERSION: ${{ inputs.release_version }}
                  ADDITIONAL_TAGS: ${{ inputs.additional_tags_csv }}
              working-directory: .
              run: |
                  COMMIT_HASH=$(git describe --tags --always --dirty)
                  BRANCH=$(git rev-parse --abbrev-ref HEAD)
                  TAGS=($COMMIT_HASH)

                  # If this is a push to main, we also tag the image as dev,
                  # But RELEASE_VERSION remains untouched, as `dev` is not a version, but just a tag.
                  if [ "$BRANCH" == "main" ] && [ "${{ github.event_name }}" == "push" ]; then  
                    TAGS+=(latest)
                  fi

                  echo "Building image with the following tags: ${TAGS[@]}"
                  echo "Commit hash: $COMMIT_HASH"
                  echo "Branch: $BRANCH"
                  echo "Release version: $RELEASE_VERSION"

                  docker build \
                    -t towns-anvil:local-latest \
                    -f ./packages/contracts/docker/Dockerfile \
                    .

                  for tag in "${TAGS[@]}"; do
                    echo "Pushing image to $ECR_REGISTRY/$REGISTRY_ALIAS/$ECR_REPOSITORY:$tag"
                    docker tag towns-anvil:local-latest $ECR_REGISTRY/$REGISTRY_ALIAS/$ECR_REPOSITORY:$tag
                    docker push $ECR_REGISTRY/$REGISTRY_ALIAS/$ECR_REPOSITORY:$tag
                  done
            # If action failed, we send a slack notification
            - name: Slack notification
              if: failure()
              uses: slackapi/slack-github-action@v1.24.0
              with:
                  payload: |
                      {
                          "step": "Build Towns Anvil Docker Image",
                          "environment": "N/",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }

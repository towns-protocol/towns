name: 'River_deploy'

on:
    workflow_dispatch:
        inputs:
            environment_name:
                description: 'Environment name'
                required: true
                type: string
                default: 'gamma'
            docker_image_tag:
                description: 'Docker image tag to deploy'
                required: true
                default: 'latest'
            auto_deploy_node_numbers_json:
                description: 'JSON array of node numbers to deploy to'
                type: string
                default: '[1,2,3,4,5,6,7,8,9,10]'

    workflow_call:
        inputs:
            environment_name:
                description: 'Environment name'
                required: true
                type: string
            docker_image_tag:
                description: 'Docker image tag to deploy'
                required: true
                type: string
            auto_deploy_node_numbers_json:
                description: 'JSON array of node numbers to deploy to'
                type: string
                default: '[-1]'
            public_ecr_url:
                description: 'Public ECR URL'
                required: false
                type: string
        secrets:
            AWS_ACCESS_KEY_ID:
                description: 'AWS access key id'
                required: true
            AWS_SECRET_ACCESS_KEY:
                description: 'AWS secret access key'
                required: true
            SLACK_WEBHOOK_URL:
                description: 'Slack webhook url'
                required: true

concurrency:
    group: ${{ github.workflow }}-${{ inputs.environment_name }}
    cancel-in-progress: true

env:
    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL || secrets.SLACK_CD_WORKFLOW_WEBHOOK_URL }}

jobs:
    deploy:
        name: Deploy to AWS ECS
        runs-on: ubuntu-latest

        permissions:
            contents: write
            packages: write

        strategy:
            matrix:
                iteration: ${{ fromJson(inputs.auto_deploy_node_numbers_json) }}
            fail-fast: false

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Deploy river node
              env:
                  ENVIRONMENT_NAME: ${{ inputs.environment_name }}
                  DOCKER_IMAGE_TAG: ${{ inputs.docker_image_tag }}
                  NODE_NUMBER: ${{ matrix.iteration }}
                  PUBLIC_ECR_URL: ${{ inputs.public_ecr_url }}
              run: ./scripts/create-and-deploy-river-task-definition.sh
              
            # If action failed, we send a slack notification
            - name: Slack notification
              if: failure()
              uses: slackapi/slack-github-action@v1.24.0
              with:
                  payload: |
                      {
                          "step": "Deploy River ECS",
                          "environment": "${{ inputs.environment_name }}",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }

name: 'River_deploy'

on:
    workflow_dispatch:
        inputs:
            environment:
                description: 'Environment'
                required: true
                default: 'test-beta'
                type: choice
                options:
                    - test-beta
            docker_image_tag:
                description: 'Docker image tag to deploy'
                required: true
                default: 'latest'
    repository_dispatch:
        types:
            - deploy-event

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    ENVIRONMENT_NAME: ${{ github.event.inputs.environment || github.event.client_payload.environment }}
    DOCKER_IMAGE_TAG: ${{ github.event.inputs.docker_image_tag || github.event.client_payload.docker_image_tag }}

jobs:
    deploy:
        name: Deploy to AWS ECS
        runs-on: ubuntu-latest

        permissions:
            contents: write
            packages: write

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Create new task definition
              env:
                  ENVIRONMENT_NAME: ${{ env.ENVIRONMENT_NAME }}
                  DOCKER_IMAGE_TAG: ${{ env.DOCKER_IMAGE_TAG }}
              run: ./scripts/create-river-task-definition.sh

            - name: Deploy service
              env:
                  ENVIRONMENT_NAME: ${{ env.ENVIRONMENT_NAME }}
              run: ./scripts/deploy-river-task-definition.sh

            # If action failed, we send a slack notification
            - name: Slack notification
              if: failure()
              uses: slackapi/slack-github-action@v1.24.0
              with:
                  payload: |
                      {
                          "step": "Deploy River ECS",
                          "environment": "${{ github.event.inputs.environment || github.event.client_payload.environment }}",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CD_WORKFLOW_WEBHOOK_URL }}

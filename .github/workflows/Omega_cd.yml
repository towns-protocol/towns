name: Omega Continuous Deployment

on:
    workflow_dispatch:

    push:
        branches:
            - omega

jobs:
    river_nodes:
        name: River Nodes
        uses: './.github/workflows/River_node_continuous_deployment.yml'
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}
            SLACK_CD_INFO_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_INFO_WORKFLOW_WEBHOOK_URL }}
            TF_VAR_datadog_api_key: ${{ secrets.TF_VAR_datadog_api_key }}
        with:
            environment_name: omega

    notification_service:
        name: Notification Service
        uses: './.github/workflows/River_notification_service_continuous_deployment.yml'
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}
            SLACK_CD_INFO_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_INFO_WORKFLOW_WEBHOOK_URL }}
            TF_VAR_datadog_api_key: ${{ secrets.TF_VAR_datadog_api_key }}
        with:
            environment_name: omega

    stream_metadata_service:
        name: Stream Metadata Service
        uses: './.github/workflows/Stream_metadata_service_deploy.yml'
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}
            SLACK_CD_INFO_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_INFO_WORKFLOW_WEBHOOK_URL }}
        with:
            environment_name: omega

    cloudflare_workers:
        name: Cloudflare Workers
        uses: './.github/workflows/Workers_deploy.yml'
        secrets:
            CLOUDFLARE_WORKERS_API_TOKEN: ${{ secrets.CLOUDFLARE_WORKERS_API_TOKEN }}
            SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}
        with:
            environment_name: omega

    on_failure:
        name: On Failure
        runs-on: ubuntu-latest

        needs: [river_nodes, notification_service, cloudflare_workers]

        if: failure()

        steps:
            # If action failed, we send a slack notification
            - name: Alert notification
              uses: slackapi/slack-github-action@v1.24.0
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}
              with:
                  payload: |
                      {
                          "step": "Omega Continuous Deployment",
                          "environment": "omega",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }

    on_success:
        name: On Success
        runs-on: ubuntu-latest

        needs: [river_nodes, notification_service, cloudflare_workers]

        if: success()

        steps:
            - name: Success notification
              uses: slackapi/slack-github-action@v1.24.0
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CD_INFO_WORKFLOW_WEBHOOK_URL }}
              with:
                  payload: |
                      {
                          "message": "Omega Continuous Deployment was successful.",
                          "environment": "omega",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }

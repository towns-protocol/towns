# Based on https://github.com/docker/build-push-action

name: 'Build River Docker Image'

on:
    push:
        branches:
            - main
        paths:
            - 'core/node/**'

    workflow_dispatch: # A build was manually requested

env:
    DOCKER_NAMESPACE: herenotthere
    GHCR_NAMESPACE: herenotthere
    PLATFORMS: linux/amd64,linux/arm64
    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL || secrets.SLACK_CD_WORKFLOW_WEBHOOK_URL }}

jobs:
    build:
        name: Build docker image

        runs-on: ubuntu-latest-8-cores

        permissions:
            contents: write
            packages: write

        outputs:
            release_version: ${{ steps.set_release_version.outputs.release_version }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Put abbreviated commit hash to release version
              id: set_release_version
              run: |
                  COMMIT_HASH=$(git log -1 --pretty=%h)
                  echo "::set-output name=release_version::${COMMIT_HASH}"

            - name: Setup AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-east-1

            - name: Login to Amazon ECR
              id: login-aws-ecr
              uses: aws-actions/amazon-ecr-login@v2
              with:
                registry-type: 'public'

            - name: Build and push image to Amazon ECR
              env:
                ECR_REGISTRY: ${{ steps.login-aws-ecr.outputs.registry }}
                #This can be custom alias once requested to aws and approved for public repo
                REGISTRY_ALIAS: h5v6m2x1
                ECR_REPOSITORY: river
                RELEASE_VERSION: ${{ steps.set_release_version.outputs.release_version }}
              working-directory: ./core/node
              run: |
                docker build --build-arg GIT_SHA=${{ github.sha }} --build-arg RELEASE_VERSION=$RELEASE_VERSION -t $ECR_REGISTRY/$REGISTRY_ALIAS/$ECR_REPOSITORY:latest .
                docker tag $ECR_REGISTRY/$REGISTRY_ALIAS/$ECR_REPOSITORY:latest $ECR_REGISTRY/$REGISTRY_ALIAS/$ECR_REPOSITORY:$RELEASE_VERSION
                docker push $ECR_REGISTRY/$REGISTRY_ALIAS/$ECR_REPOSITORY:latest
                docker push $ECR_REGISTRY/$REGISTRY_ALIAS/$ECR_REPOSITORY:$RELEASE_VERSION

            # If action failed, we send a slack notification
            - name: Slack notification
              if: failure()
              uses: slackapi/slack-github-action@v1.24.0
              with:
                  payload: |
                      {
                          "step": "Build River Docker Image",
                          "environment": "N/",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }
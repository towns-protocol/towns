name: Deprovision Transient Environment
on:
    # Handling intermittent issue with not running deprovision env
    # https://github.com/orgs/community/discussions/26657
    pull_request_target:
        types:
          - closed

    workflow_dispatch:
        inputs:
            pr_number:
                description: 'Pull Request number'
                required: true

concurrency:
    group: ${{ github.workflow }}-deprovision-${{ github.event.pull_request.number || github.event.inputs.pr_number }}
    cancel-in-progress: false
    # TODO: how can we make sure there's only one per environment running at the same time?
    # TODO: make this wait for any ongoing Provision Transient Environment workflow to finish

jobs:
    deprovision_transient_environment:
        permissions: write-all
        runs-on: ubuntu-latest-8-cores
        timeout-minutes: 60

        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            ENV: 'transient'
            TF_VAR_cloudflare_terraform_api_token: ${{ secrets.CLOUDFLARE_TERRAFORM_API_TOKEN }}
            GIT_PR_NUMBER: ${{ github.event.pull_request.number || github.event.inputs.pr_number }}
            # We need to set these 2 while destroying. otherwise lite environments get confused during the deprovision step as terraform tries to delete components that don't exist. But when we set these, lite or not, all components are deleted.
            TF_VAR_num_nodes: 0
            TF_VAR_is_clean_environment: true
            TF_VAR_has_loadtest_infra: false

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-east-1

            # Check Workflow level Provision lock and wait till provision complete
            - name: Check Provision lock
              working-directory: ./infra
              run:  ./github_lock_wait.sh

            - name: Login to Amazon ECR
              id: login-aws-ecr
              uses: aws-actions/amazon-ecr-login@v2
              with:
                registry-type: 'public'

            - name: Terraform init
              working-directory: ./infra
              run: make init

            - name: Terraform destroy
              working-directory: ./infra
              env:
                  CI_AUTOAPPROVE: true
              run: make destroy

            # If action failed, we send a slack notification
            - name: Slack notification
              if: failure()
              uses: slackapi/slack-github-action@v1.24.0
              with:
                  payload: |
                      {
                          "step": "Deprovision Transient Environment",
                          "environment": "Transient-${{ env.GIT_PR_NUMBER }}",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CD_WORKFLOW_WEBHOOK_URL }}

name: 'Reset_environment'
env:
    FOUNDRY_VERSION: nightly-ca67d15f4abd46394b324c50e21e66f306a1162d

on:
    workflow_dispatch:
        inputs:
            environment:
                description: 'Environment'
                required: true
                default: 'test-beta'
                type: choice
                options:
                    - test-beta
            skip_slack_notification:
                description: 'Skip Slack notification'
                required: false
                default: false
                type: boolean
            reset_db:
                description: 'Reset DB'
                required: true
                type: choice
                default: 'false'
                options:
                    - 'true'
                    - 'false'
            create_new_dev_town:
                description: 'Create new Dev Town'
                required: true
                type: choice
                default: 'true'
                options:
                    - 'true'
                    - 'false'

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    deploy:
        name: Reset
        runs-on: ubuntu-latest

        environment:
            name: ${{ github.event.inputs.environment }}

        permissions:
            contents: write
            packages: write

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Install node dependencies
              run: yarn install --immutable

            - name: Git submodules
              run: git submodule update --init --recursive

            - name: Setup Go
              uses: actions/setup-go@v3
              with:
                  go-version: '1.21'
                  cache: true
                  cache-dependency-path: 'servers/**/go.sum'

            - name: Install Foundry
              uses: foundry-rs/foundry-toolchain@v1
              with:
                  version: ${{ env.FOUNDRY_VERSION }}

            - name: Install Forge modules
              run: ./scripts/install-deps.sh

            - name: Build use-zion-client dependencies
              run: yarn run turbo run build --filter=use-zion-client

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            # We notify via Slack that the reset is starting
            - name: Slack notification
              if: ${{ github.event.inputs.skip_slack_notification != 'true' }}
              uses: slackapi/slack-github-action@v1.24.0
              with:
                  payload: |
                      {
                          "environment": "${{ github.event.inputs.environment }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "actor": "${{ github.actor }}"
                      }
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_RESET_ENV_WORKFLOW_WEBHOOK_URL }}

            - name: Reset environment
              run: ETHERS_NETWORK=${{ secrets.ETHERS_NETWORK }} RIVER_NODE_NAME=${{ vars.PRIMARY_NODE_NAME }} ENVIRONMENT=${{ vars.ENVIRONMENT }} WALLET_PRIVATE_KEY=${{ secrets.HARMONY_HOT_WALLET_PRIVATE_KEY }} CLOUDFLARE_API_TOKEN=${{ secrets.CF_API_TOKEN }} DB_URL=${{ secrets.DB_URL }} CLUSTER_NAME=${{ vars.CLUSTER_NAME }} RESET_DB=${{ github.event.inputs.reset_db }} CREATE_NEW_DEV_TOWN=${{ github.event.inputs.create_new_dev_town }} CLOUDFLARE_ENVIRONMENT=${{ vars.CLOUDFLARE_ENVIRONMENT }} CASABLANCA_SERVER_URL=${{ vars.CASABLANCA_SERVER_URL }} CHAIN_ID=${{ vars.CHAIN_ID }} ./scripts/reset-environment.sh

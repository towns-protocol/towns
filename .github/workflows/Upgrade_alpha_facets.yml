name: Upgrade Alpha Facets
env:
    FOUNDRY_VERSION: nightly
    ALPHA_BASE_SEPOLIA_DEPLOYER_PK: ${{ secrets.ALPHA_BASE_SEPOLIA_DEPLOYER_PK }}
    BASE_SEPOLIA_RPC_URL: ${{ secrets.ALPHA_BASE_SEPOLIA_RPC_URL }}
    RIVER_RPC_URL: ${{ secrets.RIVER_TESTNET_RPC_URL }}
    BLOCKSCOUT_SEPOLIA_API_KEY: ${{ secrets.BLOCKSCOUT_BASE_SEPOLIA_API_KEY }}
    RIVERSCAN_DEVNET_API_KEY: 'PLACEHOLDER_STRING'
    RIVERSCAN_API_KEY: 'PLACEHOLDER_STRING'
    BLOCKSCOUT_BASE_URL: 'https://base.blockscout.com/api'
    BLOCKSCOUT_SEPOLIA_URL: 'https://base-sepolia.blockscout.com/api'
    BLOCKSCOUT_BASE_API_KEY: ${{ secrets.BLOCKSCOUT_BASE_SEPOLIA_API_KEY }}
    BASESCAN_SEPOLIA_URL: 'https://api-sepolia.basescan.org/api'
    BASESCAN_SEPOLIA_API_KEY: ${{ secrets.BASESCAN_SEPOLIA_API_KEY }}
    RIVERSCAN_DEVNET_URL: 'https://towns-devnet.explorer.caldera.xyz/api'
    RIVER_DEVNET_RPC_URL: 'https://towns-devnet.rpc.caldera.xyz/http'
    S3_AWS_ACCESS_KEY_ID: ${{ secrets.S3_AWS_ACCESS_KEY_ID }}
    S3_AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_AWS_SECRET_ACCESS_KEY }}
    FACET_SOURCE_PATH: '../../contracts/src'
    COMPILED_FACETS_PATH: '../../contracts/out'
    DEPLOYMENTS_PATH: '../../contracts/deployments'
    SOURCE_DIFF_DIR: 's3://source-diff-reports'
    GOWORK: 'off'

on:
    workflow_dispatch: # Allows manual triggering
        inputs:
            job_to_run:
                description: 'Select job to run'
                required: false
                type: choice
                options:
                    - 'Upgrade_Facets_Sparse'
                    - 'Upgrade_Facets'
                default: 'Upgrade_Facets_Sparse'

    workflow_call:
        inputs:
            job_to_run:
                description: 'Select job to run'
                required: false
                type: string
                default: 'Upgrade_Facets_Sparse'
        secrets:
            S3_AWS_ACCESS_KEY_ID:
                required: true
            S3_AWS_SECRET_ACCESS_KEY:
                required: true
            ALPHA_BASE_SEPOLIA_DEPLOYER_PK:
                required: true
            SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL:
                required: true
            ALPHA_BASE_SEPOLIA_RPC_URL:
                required: true
            RIVER_TESTNET_RPC_URL:
                required: true
            BLOCKSCOUT_BASE_SEPOLIA_API_KEY:
                required: true
            BASESCAN_SEPOLIA_API_KEY:
                required: true
jobs:
    Upgrade_Facets_Sparse:
        if: inputs.job_to_run == 'Upgrade_Facets_Sparse'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.ref }}

            - uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'yarn'

            - name: Install Foundry
              uses: foundry-rs/foundry-toolchain@v1
              with:
                  version: ${{ env.FOUNDRY_VERSION }}

            - name: Install node dependencies
              run: yarn install --immutable

            - name: Build contracts
              run: make build
              working-directory: river/contracts

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: '1.22' # Specify the Go version you need

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ env.S3_AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ env.S3_AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Install dependencies
              run: |
                  go mod download
                  go mod tidy
              working-directory: river/scripts/bytecode-diff

            - name: Run source diff report generation
              run: |
                  go run main.go -s -v
              working-directory: river/scripts/bytecode-diff
              env:
                  SOURCE_DIFF_DIR: ${{ env.SOURCE_DIFF_DIR }}
                  BASESCAN_API_KEY: ${{ env.BASESCAN_API_KEY }}
                  BASE_SEPOLIA_RPC_URL: ${{ env.BASE_SEPOLIA_RPC_URL }}
                  FACET_SOURCE_PATH: ${{ env.FACET_SOURCE_PATH }}
                  COMPILED_FACETS_PATH: ${{ env.COMPILED_FACETS_PATH }}
                  DEPLOYMENTS_PATH: ${{ env.DEPLOYMENTS_PATH }}
                  GOWORK: ${{ env.GOWORK }}

            - name: Read source diff report and output to json
              run: |
                  # Get the latest file from S3
                  LATEST_FILE=$(aws s3 ls ${{ env.SOURCE_DIFF_DIR }} | sort | tail -n 1 | awk '{print $4}')
                  echo "Latest source diff file: $LATEST_FILE"

                  REPORT_FILE_NAME="compiled_source_diff"
                  # Copy the latest file from S3 to local
                  # Switch directories to a directory foundry can read
                  cd deployments
                  aws s3 cp "${{ env.SOURCE_DIFF_DIR }}/$LATEST_FILE" "./${REPORT_FILE_NAME}.yaml"

                  # Convert YAML to JSON
                  yq -o=json "./${REPORT_FILE_NAME}.yaml" > "${REPORT_FILE_NAME}.json"

                  # Check if the file exists
                  if [ ! -f "./${REPORT_FILE_NAME}.json" ]; then
                    echo "Error: ${REPORT_FILE_NAME}.json not found"
                    exit 1
                  fi

                  echo "INTERACTION_INPUT_PATH=/contracts/deployments/${REPORT_FILE_NAME}.json" >> $GITHUB_ENV
              working-directory: river/contracts

            - name: Run Base Sepolia Interaction
              id: base_sepolia_interaction
              run: |
                  make interact-any-explicit \
                    context=alpha \
                    rpc=base_sepolia \
                    contract=InteractAlphaSparse \
                    private_key=${{ env.ALPHA_BASE_SEPOLIA_DEPLOYER_PK }} \
                    etherscan=${{ env.BLOCKSCOUT_SEPOLIA_API_KEY }} \
                    verifier=${{ env.BLOCKSCOUT_SEPOLIA_URL }}
              working-directory: river/contracts
              env:
                  INTERACTION_INPUT_PATH: ${{ env.INTERACTION_INPUT_PATH }}

            - name: Verify Updated Facets on Basescan
              if: success() && steps.base_sepolia_interaction.outcome == 'success'
              run: |
                  ../../scripts/verify-facets-basescan.sh "${INTERACTION_INPUT_PATH}"
              working-directory: river/contracts
              env:
                  BASESCAN_SEPOLIA_URL: ${{ env.BASESCAN_SEPOLIA_URL }}
                  BASESCAN_SEPOLIA_API_KEY: ${{ env.BASESCAN_SEPOLIA_API_KEY }}

            - name: Run River Devnet Interaction
              env:
                  ETHERSCAN_API_KEY: ${{ env.RIVERSCAN_DEVNET_API_KEY }}
              run: make interact-any-explicit-blockscout \
                  context=alpha \
                  rpc=river_devnet \
                  contract=InteractRiverAlpha \
                  private_key=${{ env.ALPHA_BASE_SEPOLIA_DEPLOYER_PK }} \
                  verifier=${{ env.RIVERSCAN_DEVNET_URL }}
              working-directory: river/contracts

            # If action failed, we send a slack notification
            - name: Slack notification
              if: failure()
              uses: slackapi/slack-github-action@v1.24.0
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}
              with:
                  payload: |
                      {
                        "step": "Upgrade Alpha Facets",
                        "environment": "alpha",
                        "branch": "${{ github.ref }}",
                        "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                        "commit": "${{ github.sha }}",
                            "actor": "${{ github.actor }}"
                      }

    Upgrade_Facets:
        if: inputs.job_to_run == 'Upgrade_Facets'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  ref: main

            - uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'yarn'

            - name: Install Foundry
              uses: foundry-rs/foundry-toolchain@v1
              with:
                  version: ${{ env.FOUNDRY_VERSION }}

            - name: Install node dependencies
              run: yarn install --immutable

            - name: Run Base Sepolia Interaction
              id: base_sepolia_interaction
              run: make interact-any-explicit \
                  context=alpha \
                  rpc=base_sepolia \
                  contract=InteractAlpha \
                  private_key=${{ env.ALPHA_BASE_SEPOLIA_DEPLOYER_PK }} \
                  etherscan=${{ env.BLOCKSCOUT_SEPOLIA_API_KEY }} \
                  verifier=${{ env.BLOCKSCOUT_SEPOLIA_URL }}
              working-directory: river/contracts

            - name: Run River Devnet Interaction
              env:
                  ETHERSCAN_API_KEY: ${{ env.RIVERSCAN_DEVNET_API_KEY }}
              run: make interact-any-explicit-blockscout \
                  context=alpha \
                  rpc=river_devnet \
                  contract=InteractRiverAlpha \
                  private_key=${{ env.ALPHA_BASE_SEPOLIA_DEPLOYER_PK }} \
                  verifier=${{ env.RIVERSCAN_DEVNET_URL }}
              working-directory: river/contracts

            # If action failed, we send a slack notification
            - name: Slack notification
              if: failure()
              uses: slackapi/slack-github-action@v1.24.0
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CD_ALERT_WORKFLOW_WEBHOOK_URL }}
              with:
                  payload: |
                      {
                          "step": "Upgrade Alpha Facets",
                          "environment": "alpha",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }

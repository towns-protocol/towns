name: Provision Transient Environment
on:
    pull_request:
        types: [opened, synchronize, reopened, labeled, unlabeled]

concurrency:
    group: ${{ github.workflow }}-provision-${{ github.ref }}
    cancel-in-progress: false
    # TODO: how can we make sure there's only one per environment running at the same time?

jobs:
    check_labels:
        # a step that checks if the PR has the label "provision-transient-environment"
        # if it does, it will trigger the provision_transient_environment job
        runs-on: ubuntu-latest
        permissions: write-all
        outputs:
            provision: ${{ steps.check_labels.outputs.provision }}
        steps:
            - name: Check labels
              id: check_labels
              uses: actions/github-script@v3
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const labels = await github.issues.listLabelsOnIssue({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          issue_number: context.issue.number
                      });
                      const provision = labels.data.some(label => label.name === 'provision transient environment');
                      core.setOutput('provision', provision);

    provision_transient_environment:
        needs: check_labels
        permissions: write-all
        runs-on: ubuntu-latest-8-cores
        timeout-minutes: 40
        if: needs.check_labels.outputs.provision == 'true'

        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            ENV: 'transient'
            TF_VAR_cloudflare_terraform_api_token: ${{ secrets.CLOUDFLARE_TERRAFORM_API_TOKEN }}
            GIT_PR_NUMBER: ${{ github.event.pull_request.number}}

        steps:
            - name: Cancel previous runs
              if: github.event_name != 'schedule'
              uses: styfle/cancel-workflow-action@0.11.0
              with:
                  access_token: ${{ github.token }}

            - name: Checkout code
              uses: actions/checkout@v3

            - name: Terraform init
              working-directory: ./infra
              run: make init

            - name: Terraform apply
              working-directory: ./infra
              env:
                  CI_AUTOAPPROVE: true
              run:
                  make apply
                  # If action failed, we send a slack notification

            - name: Slack notification
              if: failure()
              uses: slackapi/slack-github-action@v1.24.0
              with:
                  payload: |
                      {
                          "step": "Provision Transient Environment",
                          "environment": "Transient-${{ github.event.pull_request.number }}",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_TRANSIENT_CD_WORKFLOW_WEBHOOK_URL }}

    river_node_continuous_deploys:
        uses: './.github/workflows/River_node_docker.yml'
        secrets:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
            DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_TRANSIENT_CD_WORKFLOW_WEBHOOK_URL }}
        needs: provision_transient_environment
        permissions: write-all

        if: needs.check_labels.outputs.provision == 'true'
        # TODO: only run if a change in /casablanca/node is detected
        # TODO: only deploy if the new docker image is different than what's currently active
        with:
            environment_name: ${{ format('transient-{0}', github.event.pull_request.number )}}
            docker_image_tag: ${{ format('transient-{0}-latest', github.event.pull_request.number )}}

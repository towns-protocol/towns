env:
    FOUNDRY_VERSION: nightly

name: Provision Transient Environment
on:
    pull_request:
        types: [opened, reopened]
concurrency:
    group: ${{ github.workflow }}-provision-${{ github.ref }}
    cancel-in-progress: false

jobs:
    provision_transient_environment:
        permissions: write-all
        runs-on: ubuntu-latest
        timeout-minutes: 40

        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            ENV: 'transient'
            TF_VAR_cloudflare_terraform_api_token: ${{ secrets.CLOUDFLARE_TERRAFORM_API_TOKEN }}
            GIT_PR_NUMBER: ${{ github.event.pull_request.number}}
            CI_AUTOAPPROVE: true
            TF_VAR_datadog_api_key: ${{ secrets.TF_VAR_datadog_api_key }}
            TF_VAR_datadog_app_key: ${{ secrets.TF_VAR_datadog_app_key }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Add Workflow level Provision lock
              working-directory: ./infra
              run: ./provision_flag_lock.sh add_lock

            - name: Login to Amazon ECR
              id: login-aws-ecr
              uses: aws-actions/amazon-ecr-login@v2
              with:
                  registry-type: 'public'

            - name: Terraform init
              working-directory: ./infra
              run: make init

            - name: Terraform apply
              working-directory: ./infra
              run: make apply

            - name: Comment on PR
              uses: actions/github-script@v7
              env:
                  GIT_PR_NUMBER: ${{ github.event.pull_request.number }}
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const gitPrNumber = process.env.GIT_PR_NUMBER;
                      const webAppUrl = `https://${gitPrNumber}.app-preview.towns.com`;
                      const message = `
                      Web App: [${webAppUrl}](${webAppUrl})
                      `;

                      github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: message
                      })

            - name: Clear Workflow level Provision lock
              if: always()
              working-directory: ./infra
              run: ./provision_flag_lock.sh clear_lock

            - name: Slack notification
              if: failure()
              uses: slackapi/slack-github-action@v1.24.0
              with:
                  payload: |
                      {
                          "step": "Provision Transient Environment",
                          "environment": "Transient-${{ github.event.pull_request.number }}",
                          "branch": "${{ github.ref }}",
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                          "commit": "${{ github.sha }}",
                          "actor": "${{ github.actor }}"
                      }
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_TRANSIENT_CD_WORKFLOW_WEBHOOK_URL }}

            - name: Data dog logging
              if: failure()
              working-directory: ./infra
              env:
                  ENV: 'transient-${{ github.event.pull_request.number}}'
                  TF_ACTION_TYPE: 'Provision'
                  TF_STATUS: 'ERROR'
                  LOG_MESSAGE: 'Provision step failed for ${{ github.event.pull_request.number}} PR (https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})'
              run: './log_datadog.sh'

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IPricingModules,
  IPricingModulesInterface,
} from "../IPricingModules";

const _abi = [
  {
    type: "function",
    name: "addPricingModule",
    inputs: [
      {
        name: "module",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isPricingModule",
    inputs: [
      {
        name: "module",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "listPricingModules",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct IPricingModulesBase.PricingModule[]",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
          {
            name: "module",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removePricingModule",
    inputs: [
      {
        name: "module",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "PricingModuleAdded",
    inputs: [
      {
        name: "module",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PricingModuleRemoved",
    inputs: [
      {
        name: "module",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "PricingModuleUpdated",
    inputs: [
      {
        name: "module",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InvalidPricingModule",
    inputs: [
      {
        name: "module",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

export class IPricingModules__factory {
  static readonly abi = _abi;
  static createInterface(): IPricingModulesInterface {
    return new utils.Interface(_abi) as IPricingModulesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPricingModules {
    return new Contract(address, _abi, signerOrProvider) as IPricingModules;
  }
}

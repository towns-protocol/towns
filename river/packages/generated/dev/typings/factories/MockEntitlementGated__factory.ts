/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MockEntitlementGated,
  MockEntitlementGatedInterface,
} from "../MockEntitlementGated";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "checker",
        type: "address",
        internalType: "contract IEntitlementChecker",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "__EntitlementGated_init",
    inputs: [
      {
        name: "entitlementChecker",
        type: "address",
        internalType: "contract IEntitlementChecker",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getRuleData",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlement.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleData",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlement.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "postEntitlementCheckResult",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "result",
        type: "uint8",
        internalType: "enum IEntitlementGatedBase.NodeVoteStatus",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestEntitlementCheck",
    inputs: [
      {
        name: "ruleData",
        type: "tuple",
        internalType: "struct IRuleEntitlement.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "EntitlementCheckResultPosted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "result",
        type: "uint8",
        indexed: false,
        internalType: "enum IEntitlementGatedBase.NodeVoteStatus",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceAdded",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceRemoved",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "EntitlementGated_InvalidAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_NodeAlreadyVoted",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_NodeNotFound",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionAlreadyCompleted",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionAlreadyRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionNotRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_InInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_NotInInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_AlreadySupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_NotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyGuard__ReentrantCall",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001af238038062001af2833981016040819052620000349162000127565b6200003e6200007f565b7f9075c515a635ba70c9696f31149324218d75cf00afe836c482e6473f38b19e0080546001600160a01b0319166001600160a01b0383161790555062000159565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef520008054640100000000900460ff1615620000cc576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff90811610156200012457805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b6000602082840312156200013a57600080fd5b81516001600160a01b03811681146200015257600080fd5b9392505050565b61198980620001696000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063069a3ee91461005c5780637adc9cbe146100855780638a59b1b41461009a578063efa8db23146100ad578063f4efb0bb146100ce575b600080fd5b61006f61006a366004610db3565b6100e1565b60405161007c9190610ebd565b60405180910390f35b610098610093366004610f6b565b61030b565b005b61006f6100a8366004610db3565b610361565b6100c06100bb366004610f8f565b610394565b60405190815260200161007c565b6100986100dc366004610fd7565b6103ef565b61010560405180606001604052806060815260200160608152602001606081525090565b6040805160008054608060208202840181019094526060830181815292939192849290918491829085015b8282101561019957600084815260209020604080518082019091529083018054829060ff16600281111561016657610166610dcc565b600281111561017757610177610dcc565b81529054610100900460ff166020918201529082526001929092019101610130565b50505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610251576000848152602090206040805160808101909152600484029091018054829060ff16600581111561020157610201610dcc565b600581111561021257610212610dcc565b815260018281015460208084019190915260028401546001600160a01b03166040840152600390930154606090920191909152918352920191016101c6565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156102fd5760008481526020902060408051606081019091529083018054829060ff1660028111156102b5576102b5610dcc565b60028111156102c6576102c6610dcc565b8152905460ff610100820481166020808501919091526201000090920416604090920191909152908252600192909201910161027e565b505050915250909392505050565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef5200054640100000000900460ff1661035557604051630ef4733760e31b815260040160405180910390fd5b61035e81610491565b50565b61038560405180606001604052806060815260200160608152602001606081525090565b61038e826104cc565b92915050565b600081816103a2828261135e565b50506040516bffffffffffffffffffffffff193260601b16602082015243603482015260009060540160405160208183030381529060405280519060200120905061038e813060006105d0565b60027f54f22f54f370bd020e00ee80e1a5099a71652e2ccbcf6a75281e4c70a3e11a00540361043157604051635db5c7cd60e11b815260040160405180910390fd5b61045a60027f54f22f54f370bd020e00ee80e1a5099a71652e2ccbcf6a75281e4c70a3e11a0055565b6104648282610827565b61048d60017f54f22f54f370bd020e00ee80e1a5099a71652e2ccbcf6a75281e4c70a3e11a0055565b5050565b6104a1637eb6010f60e01b610b42565b60008051602061194983398151915280546001600160a01b0319166001600160a01b03831617905550565b6104f060405180606001604052806060815260200160608152602001606081525090565b60008281526000805160206119698339815191526020526040812080546000805160206119498339815191529260ff9091161515900361054357604051637ad5a43960e11b815260040160405180910390fd5b6002810154600382015460405163069a3ee960e01b81526001600160a01b0390921691600091839163069a3ee9916105819160040190815260200190565b600060405180830381865afa15801561059e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105c6919081019061168a565b9695505050505050565b6000838152600080516020611969833981519152602052604090208054600080516020611949833981519152919060ff1615156001036106235760405163bf2a062560e01b815260040160405180910390fd5b81546001600160a01b031661063a5761063a610c20565b8154604051634f84544560e01b8152600560048201526000916001600160a01b031690634f84544590602401600060405180830381865afa158015610683573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ab91908101906117ca565b825460016001600160a81b03199091166101003302171760ff60a81b191683556002830180546001600160a01b0319166001600160a01b03881617905560038301859055905060005b81518110156107b95782600101604051806040016040528084848151811061071e5761071e611864565b60200260200101516001600160a01b031681526020016000600281111561074757610747610dcc565b9052815460018101835560009283526020928390208251910180546001600160a01b031981166001600160a01b03909316928317825593830151929390929183916001600160a81b03191617600160a01b8360028111156107aa576107aa610dcc565b021790555050506001016106f4565b508254604051636ef10e6960e11b81526001600160a01b039091169063dde21cd2906107ed9033908a90869060040161187a565b600060405180830381600087803b15801561080757600080fd5b505af115801561081b573d6000803e3d6000fd5b50505050505050505050565b6000828152600080516020611969833981519152602052604090208054600080516020611949833981519152919061010090046001600160a01b031661088057604051637ad5a43960e11b815260040160405180910390fd5b8054600160a81b900460ff16156108aa57604051635d802b6760e11b815260040160405180910390fd5b805460ff1615156000036108d157604051637ad5a43960e11b815260040160405180910390fd5b6000805b60018301548110156109925760008360010182815481106108f8576108f8611864565b60009182526020909120018054909150336001600160a01b03909116036109895760008154600160a01b900460ff16600281111561093857610938610dcc565b14610956576040516347592a4d60e01b815260040160405180910390fd5b8054600193508690829060ff60a01b1916600160a01b83600281111561097e5761097e610dcc565b021790555050610992565b506001016108d5565b508015156000036109b657604051638223a7e960e01b815260040160405180910390fd5b60008060005b6001850154811015610a5d5760008560010182815481106109df576109df611864565b6000918252602090912001905060018154600160a01b900460ff166002811115610a0b57610a0b610dcc565b03610a225783610a1a816118dd565b945050610a54565b60028154600160a01b900460ff166002811115610a4157610a41610dcc565b03610a545782610a50816118dd565b9350505b506001016109bc565b506001840154610a6f906002906118f6565b821115610ace57835460ff60a81b1916600160a81b178455867fb9d6ce397e562841871d119aaf77469c60a3b5bf8b99a5d9851656015015c6336001604051610ab89190611918565b60405180910390a2610ac987610cf1565b610b39565b6001840154610adf906002906118f6565b811115610b3957835460ff60a81b1916600160a81b178455867fb9d6ce397e562841871d119aaf77469c60a3b5bf8b99a5d9851656015015c6336002604051610b289190611918565b60405180910390a2610b3987610cf1565b50505050505050565b6001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b00602052604090205460ff161515600114610bcf576001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b0060205260409020805460ff19166001179055610be8565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b6000600080516020611949833981519152905060007fc21004fcc619240a31f006438274d15cd813308303284436eef6055f0fdcb60060060154604051628956cd60e71b81526c29b830b1b2a7b832b930ba37b960991b60048201526001600160a01b03909116906344ab668090602401602060405180830381865afa158015610cae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd2919061192b565b82546001600160a01b0319166001600160a01b03919091161790915550565b60008181526000805160206119698339815191526020526040812060008051602061194983398151915291610d2a906001830190610d77565b600083815260018084016020526040822080546001600160b01b03191681559190610d5790830182610d77565b506002810180546001600160a01b03191690556000600390910155505050565b508054600082559060005260206000209081019061035e91905b80821115610daf5780546001600160a81b0319168155600101610d91565b5090565b600060208284031215610dc557600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6003811061035e5761035e610dcc565b60008151808452602080850194506020840160005b83811015610e5c578151805160068110610e2357610e23610dcc565b885280840151848901526040808201516001600160a01b0316908901526060908101519088015260809096019590820190600101610e07565b509495945050505050565b60008151808452602080850194506020840160005b83811015610e5c5781518051610e9181610de2565b88528084015160ff908116858a0152604091820151169088015260609096019590820190600101610e7c565b6020808252825160608383015280516080840181905260009291820190839060a08601905b80831015610f195783518051610ef781610de2565b835285015160ff16858301529284019260019290920191604090910190610ee2565b50838701519350601f19925082868203016040870152610f398185610df2565b935050506040850151818584030160608601526105c68382610e67565b6001600160a01b038116811461035e57600080fd5b600060208284031215610f7d57600080fd5b8135610f8881610f56565b9392505050565b600060208284031215610fa157600080fd5b813567ffffffffffffffff811115610fb857600080fd5b820160608185031215610f8857600080fd5b6003811061035e57600080fd5b60008060408385031215610fea57600080fd5b823591506020830135610ffc81610fca565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60ff8116811461035e57600080fd5b813561104d81610fca565b61105681610de2565b60ff1982541660ff8216811783555050602082013561107481611033565b815461ff001916600882901b61ff0016178255505050565b6000808335601e198436030181126110a357600080fd5b83018035915067ffffffffffffffff8211156110be57600080fd5b6020019150600781901b36038213156110d657600080fd5b9250929050565b6006811061035e57600080fd5b81356110f5816110dd565b6006811061110557611105610dcc565b60ff1982541660ff82168117835550506020820135600182015560028101604083013561113181610f56565b81546001600160a01b0319166001600160a01b03919091161790556060919091013560039190910155565b600160401b83111561117057611170611007565b8054838255808410156111ee5760026001600160fe1b0382811683146111985761119861101d565b80861686146111a9576111a961101d565b506000838152602081208360021b81018760021b820191505b808210156111e95782825582600183015582848301558260038301556004820191506111c2565b505050505b5060008181526020812083915b858110156112235761120d83836110ea565b60809290920191600491909101906001016111fb565b505050505050565b6000808335601e1984360301811261124257600080fd5b83018035915067ffffffffffffffff82111561125d57600080fd5b60200191506060810236038213156110d657600080fd5b813561127f81610fca565b61128881610de2565b60ff1982541660ff821681178355505060208201356112a681611033565b815461ff001916600882901b61ff00161782555060408201356112c881611033565b815462ff0000191660109190911b62ff00001617905550565b600160401b8311156112f5576112f5611007565b80548382558084101561132c576000828152602081208581019083015b8082101561132857828255600182019150611312565b5050505b5060008181526020812083915b858110156112235761134b8383611274565b6060929092019160019182019101611339565b8135601e1983360301811261137257600080fd5b8201803567ffffffffffffffff81111561138b57600080fd5b6020820191508060061b36038213156113a357600080fd5b600160401b8111156113b7576113b7611007565b8254818455808210156113ee576000848152602081208381019083015b808210156113ea578282556001820191506113d4565b5050505b5060008381526020902060005b828110156114205761140d8483611042565b60409390930192600191820191016113fb565b50505050611431602083018361108c565b61143f81836001860161115c565b505061144e604083018361122b565b61145c8183600286016112e1565b50505050565b6040516080810167ffffffffffffffff8111828210171561148557611485611007565b60405290565b6040516060810167ffffffffffffffff8111828210171561148557611485611007565b6040805190810167ffffffffffffffff8111828210171561148557611485611007565b604051601f8201601f1916810167ffffffffffffffff811182821017156114fa576114fa611007565b604052919050565b600067ffffffffffffffff82111561151c5761151c611007565b5060051b60200190565b600082601f83011261153757600080fd5b8151602061154c61154783611502565b6114d1565b82815260079290921b8401810191818101908684111561156b57600080fd5b8286015b848110156115d057608081890312156115885760008081fd5b611590611462565b815161159b816110dd565b815281850151858201526040808301516115b481610f56565b908201526060828101519082015283529183019160800161156f565b509695505050505050565b600082601f8301126115ec57600080fd5b815160206115fc61154783611502565b8281526060928302850182019282820191908785111561161b57600080fd5b8387015b8581101561167d5781818a0312156116375760008081fd5b61163f61148b565b815161164a81610fca565b81528186015161165981611033565b8187015260408281015161166c81611033565b90820152845292840192810161161f565b5090979650505050505050565b6000602080838503121561169d57600080fd5b825167ffffffffffffffff808211156116b557600080fd5b90840190606082870312156116c957600080fd5b6116d161148b565b8251828111156116e057600080fd5b8301601f810188136116f157600080fd5b80516116ff61154782611502565b81815260069190911b8201860190868101908a83111561171e57600080fd5b928701925b82841015611774576040848c03121561173c5760008081fd5b6117446114ae565b845161174f81610fca565b81528489015161175e81611033565b818a015282526040939093019290870190611723565b8452505050828401518281111561178a57600080fd5b61179688828601611526565b858301525060408301519350818411156117af57600080fd5b6117bb878585016115db565b60408201529695505050505050565b600060208083850312156117dd57600080fd5b825167ffffffffffffffff8111156117f457600080fd5b8301601f8101851361180557600080fd5b805161181361154782611502565b81815260059190911b8201830190838101908783111561183257600080fd5b928401925b8284101561185957835161184a81610f56565b82529284019290840190611837565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038481168252602080830185905260606040840181905284519084018190526000928583019290916080860190855b818110156118ce5785518516835294830194918301916001016118b0565b50909998505050505050505050565b6000600182016118ef576118ef61101d565b5060010190565b60008261191357634e487b7160e01b600052601260045260246000fd5b500490565b6020810161192583610de2565b91905290565b60006020828403121561193d57600080fd5b8151610f8881610f5656fe9075c515a635ba70c9696f31149324218d75cf00afe836c482e6473f38b19e009075c515a635ba70c9696f31149324218d75cf00afe836c482e6473f38b19e01";

type MockEntitlementGatedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockEntitlementGatedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockEntitlementGated__factory extends ContractFactory {
  constructor(...args: MockEntitlementGatedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    checker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockEntitlementGated> {
    return super.deploy(
      checker,
      overrides || {}
    ) as Promise<MockEntitlementGated>;
  }
  override getDeployTransaction(
    checker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(checker, overrides || {});
  }
  override attach(address: string): MockEntitlementGated {
    return super.attach(address) as MockEntitlementGated;
  }
  override connect(signer: Signer): MockEntitlementGated__factory {
    return super.connect(signer) as MockEntitlementGated__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockEntitlementGatedInterface {
    return new utils.Interface(_abi) as MockEntitlementGatedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockEntitlementGated {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockEntitlementGated;
  }
}

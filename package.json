{
    "name": "harmony",
    "version": "1.0.0",
    "license": "MIT",
    "private": true,
    "packageManager": "yarn@3.8.0",
    "scripts": {
        "anvil": "yarn workspace @river-build/contracts exec anvil",
        "build": "turbo build",
        "cast": "yarn workspace @river-build/contracts exec cast",
        "clean": "./scripts/yarn-clean.sh",
        "notification-service:build": "turbo build --filter notification-service",
        "csb:build": "yarn workspace @river-build/proto run build && yarn workspace @river-build/dlog run build && yarn workspace @river-build/web3 run build && yarn workspace @river-build/encryption run build && yarn workspace @river-build/sdk run build && echo BUILD DONE || (echo BUILD ERROR; exit 1)",
        "csb:cb": "yarn csb:clean && yarn csb:build",
        "csb:clean": "yarn csb:command run clean",
        "csb:command": "bash -c 'yarn workspaces foreach --verbose $(yarn csb:list:include) $0 $@'",
        "csb:dev": "yarn csb:dev:entitlements",
        "csb:dev:entitlements": "./river/core/scripts/launch.sh",
        "csb:dev:no-entitlements": "./river/core/scripts/launch.sh --disable_entitlements",
        "csb:list": "yarn workspaces list --json | grep core | grep -o '\"name\":\"[^\"]*' | grep -o '[^\"]*$'",
        "csb:list:exclude:filter": "yarn csb:list | xargs -I arg echo -n \"--filter=!arg \"",
        "csb:list:filter": "yarn csb:list | xargs -I arg echo -n \"--filter arg \"",
        "csb:list:include": "yarn csb:list | xargs -I arg echo -n \"--include arg \"",
        "csb:mainnet": "./river/core/scripts/start_mainnet.sh",
        "csb:multi": "./river/core/scripts/launch_multi.sh",
        "csb:multi:no-entitlements": "./river/core/scripts/launch_multi.sh --disable_entitlements",
        "csb:node": "./river/core/scripts/start_node.sh",
        "csb:prettier:check": "prettier --check ./river/core",
        "csb:prettier:fix": "prettier --write ./river/core",
        "csb:start": "yarn csb:start:entitlements",
        "csb:start:entitlements": "./river/core/scripts/start_node.sh",
        "csb:start:no-entitlements": "./river/core/scripts/start_node.sh --disable_entitlements",
        "csb:stop": "./river/core/scripts/stop.sh",
        "csb:storage": "./river/core/scripts/launch_storage.sh",
        "csb:test": "yarn csb:command run test && echo ALL GOOD || (echo NOT PASSED; exit 1)",
        "csb:test-remote": "yarn workspace @river-build/sdk run test",
        "csb:turbo": "bash -c 'yarn run turbo run build test:ci $(yarn csb:list:filter) --filter=use-towns-client'",
        "csb:turbo-no-sdk": "yarn run turbo run test:ci --filter=use-towns-client",
        "csb:turbo-no-sdk:legacy": "yarn run turbo run test:ci:legacy --filter=use-towns-client",
        "csb:wait": "yarn csb:wait:entitlements",
        "csb:wait:entitlements": "wait-on https://localhost:5157/info --timeout=900000 --i=5000 --verbose",
        "csb:wait:no-entitlements": "wait-on https://localhost:5158/info --timeout=900000 --i=5000 --verbose",
        "drt:wait": "wait-on tcp:8008 --timeout=900000 --i=5000 --verbose",
        "forge": "yarn workspace @river-build/contracts exec forge",
        "harmonyserver:build": "turbo build --filter harmonyserver",
        "harmonyweb:build": "turbo build --filter harmonyweb",
        "install:foundry": "./river/scripts/foundry-up.sh && yarn forge install",
        "lint": "turbo lint",
        "postinstall": "husky install && ./scripts/create-contract-lib-symlink.sh",
        "preinstall": "rm -f river/yarn.lock",
        "prepare": "husky install",
        "prettier:check": "prettier --check .",
        "prettier:fix": "prettier --write .",
        "publish:local": "turbo publish:local",
        "sampleapp:build": "turbo build --filter sample-app",
        "syncpack:check": "syncpack list-mismatches",
        "syncpack:fix": "syncpack fix-mismatches && syncpack format",
        "test": "turbo test $(yarn csb:list:exclude:filter) --filter=!@towns/userops --filter=!use-towns-client && yarn csb:turbo",
        "test:unit": "turbo test:unit -- --silent",
        "worker:wait:stackup": "wait-on tcp:127.0.0.1:${PORT:-8686} --timeout=900000 --i=5000 --verbose",
        "workers:build": "turbo build --filter gateway-worker --filter token-worker --filter unfurl-worker --filter stackup-worker"
    },
    "devDependencies": {
        "@typechain/ethers-v5": "^10.1.1",
        "@types/node": "^20.5.0",
        "esbuild-plugin-wasm": "^1.1.0",
        "eslint": "^8.53.0",
        "eslint-config-prettier": "^8.8.0",
        "eslint-plugin-mocha": "^10.1.0",
        "eslint-plugin-n": "^16.0.0",
        "eslint-plugin-prettier": "^4.2.1",
        "husky": "^8.0.1",
        "jest-extended": "^4.0.1",
        "lint-staged": "^13.1.2",
        "pino-pretty": "^13.0.0",
        "prettier": "^2.8.8",
        "solidity-docgen": "^0.6.0-beta.29",
        "syncpack": "^10.7.3",
        "ts-node": "^10.9.1",
        "turbo": "^2.0.12",
        "typechain": "^8.1.1",
        "typescript": "^5.1.6",
        "wait-on": "^7.0.1"
    },
    "husky": {
        "hooks": {
            "pre-commit": "./pre-commit.sh && lint-staged"
        }
    },
    "lint-staged": {
        "*.{js,mdx,ts,tsx}": [
            "eslint --fix"
        ],
        "*.{json,yml}": [
            "prettier --write"
        ]
    },
    "resolutions": {
        "jest-worker@^29.5.0": "patch:jest-worker@npm%3A29.5.0#./.yarn/patches/jest-worker-npm-29.5.0-70da3388f1.patch",
        "sharp": "0.32.6"
    },
    "syncpack": {
        "dependencyTypes": [
            "dev",
            "prod",
            "peer"
        ],
        "indent": "    ",
        "sortFirst": [
            "name",
            "description",
            "version",
            "author",
            "license",
            "private",
            "packageManager",
            "type",
            "main",
            "types",
            "scripts"
        ],
        "versionGroups": [
            {
                "label": "Different versions in river/* and client",
                "dependencies": [
                    "@testing-library/react",
                    "@vanilla-extract/vite-plugin",
                    "@vitejs/plugin-react",
                    "rollup-plugin-visualizer",
                    "vite-plugin-checker",
                    "vite-tsconfig-paths",
                    "vitest",
                    "wagmi",
                    "viem",
                    "superjson"
                ],
                "packages": [
                    "@river-build/dlog",
                    "@river-build/encryption",
                    "@river-build/playground",
                    "@river-build/proto",
                    "@river-build/react-sdk",
                    "@river-build/sdk",
                    "@river-build/stream-metadata",
                    "@river-build/stress",
                    "@river-build/web3",
                    "@river-build/xchain-monitor"
                ],
                "dependencyTypes": [
                    "prod",
                    "dev",
                    "peer"
                ],
                "isIgnored": true
            },
            {
                "label": "Different versions in harmonyserver",
                "dependencies": [
                    "@fastify/cors",
                    "vitest",
                    "viem"
                ],
                "packages": [
                    "harmonyserver"
                ],
                "dependencyTypes": [
                    "prod",
                    "dev",
                    "peer"
                ]
            },
            {
                "label": "Different versions in token-worker",
                "dependencies": [
                    "viem"
                ],
                "packages": [
                    "token-worker"
                ],
                "dependencyTypes": [
                    "prod",
                    "dev",
                    "peer"
                ]
            },
            {
                "label": "Different versions in sample-app",
                "dependencies": [
                    "wagmi"
                ],
                "packages": [
                    "sample-app"
                ],
                "dependencyTypes": [
                    "prod",
                    "dev",
                    "peer"
                ]
            }
        ]
    },
    "workspaces": [
        "clients/web/*",
        "clients/governance-ui",
        "river/protocol",
        "river/contracts",
        "river/packages/*",
        "servers/workers/*",
        "infra/modules/network-health-monitor/lambda-function"
    ],
    "dependencies": {
        "node-gyp": "^11.0.0"
    }
}

{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "contracts/out",
    "build_infos": "contracts/out/build-info",
    "sources": "contracts",
    "tests": "contracts/test",
    "scripts": "script",
    "libraries": [
      "lib",
      "node_modules"
    ]
  },
  "files": {
    "contracts/scripts/DeployDAO.s.sol": {
      "lastModificationDate": 1679005184357,
      "contentHash": "4f6b94cb49e9fe8c896fa759b9836a26",
      "sourceName": "contracts/scripts/DeployDAO.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/scripts/DeployTowns.s.sol",
        "contracts/scripts/utils/ScriptUtils.sol",
        "contracts/src/core/base/ERC20Base.sol",
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/governance/Council.sol",
        "contracts/src/core/governance/Dao.sol",
        "contracts/src/core/governance/base/CoreVoting.sol",
        "contracts/src/core/governance/base/DaoCoreVoting.sol",
        "contracts/src/core/governance/vaults/CouncilVault.sol",
        "contracts/src/core/governance/vaults/NFTVault.sol",
        "contracts/src/core/tokens/Member.sol",
        "contracts/src/core/tokens/Operator.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/core/tokens/Towns.sol",
        "contracts/src/interfaces/IMember.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/SimpleProxy.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/council/contracts/features/Timelock.sol",
        "lib/council/contracts/features/Treasury.sol",
        "lib/council/contracts/interfaces/ICoreVoting.sol",
        "lib/council/contracts/interfaces/IERC20.sol",
        "lib/council/contracts/interfaces/IVotingVault.sol",
        "lib/council/contracts/libraries/Authorizable.sol",
        "lib/council/contracts/libraries/ReentrancyBlock.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeployDAO": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployDAO.s.sol/DeployDAO.json"
        }
      }
    },
    "contracts/scripts/DeployMember.s.sol": {
      "lastModificationDate": 1678382582340,
      "contentHash": "265e566b2dcef7e870b1a165c1fec7df",
      "sourceName": "contracts/scripts/DeployMember.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/scripts/utils/ScriptUtils.sol",
        "contracts/src/core/tokens/Member.sol",
        "contracts/src/interfaces/IMember.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/murky/src/Merkle.sol",
        "lib/murky/src/common/MurkyBase.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "DeployMember": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployMember.s.sol/DeployMember.json"
        }
      }
    },
    "contracts/scripts/DeployPioneer.s.sol": {
      "lastModificationDate": 1678726101055,
      "contentHash": "1540c3899f78f1f4ff359b0ae068f34d",
      "sourceName": "contracts/scripts/DeployPioneer.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/scripts/utils/ScriptUtils.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeployPioneer": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployPioneer.s.sol/DeployPioneer.json"
        }
      }
    },
    "contracts/scripts/DeploySpaces.s.sol": {
      "lastModificationDate": 1679005184357,
      "contentHash": "1ea8e01fdaedad9f78ca20a41f09c6b8",
      "sourceName": "contracts/scripts/DeploySpaces.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/scripts/DeployPioneer.s.sol",
        "contracts/scripts/DeployTownOwner.s.sol",
        "contracts/scripts/utils/ScriptUtils.sol",
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeploySpaces": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeploySpaces.s.sol/DeploySpaces.json"
        }
      }
    },
    "contracts/scripts/DeployTownOwner.s.sol": {
      "lastModificationDate": 1679005184359,
      "contentHash": "4d046b73d29094e2e41134a7d771d138",
      "sourceName": "contracts/scripts/DeployTownOwner.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/scripts/utils/ScriptUtils.sol",
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeployTownOwner": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployTownOwner.s.sol/DeployTownOwner.json"
        }
      }
    },
    "contracts/scripts/DeployTowns.s.sol": {
      "lastModificationDate": 1678726101056,
      "contentHash": "590085d4811df6c454e4f9bfd3030a72",
      "sourceName": "contracts/scripts/DeployTowns.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/scripts/utils/ScriptUtils.sol",
        "contracts/src/core/base/ERC20Base.sol",
        "contracts/src/core/tokens/Towns.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeployTowns": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeployTowns.s.sol/DeployTowns.json"
        }
      }
    },
    "contracts/scripts/UpgradeTownOwner.s.sol": {
      "lastModificationDate": 1679005184359,
      "contentHash": "3568a163104cb1f8a60c34b57e0f5542",
      "sourceName": "contracts/scripts/UpgradeTownOwner.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/scripts/utils/ScriptUtils.sol",
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "UpgradeTownOwner": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UpgradeTownOwner.s.sol/UpgradeTownOwner.json"
        }
      }
    },
    "contracts/scripts/spaces/CreateSpace.s.sol": {
      "lastModificationDate": 1678382582340,
      "contentHash": "3bd7ac812cb76df83511dcc8396576a8",
      "sourceName": "contracts/scripts/spaces/CreateSpace.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "CreateSpace": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "CreateSpace.s.sol/CreateSpace.json"
        }
      }
    },
    "contracts/scripts/spaces/DeploySpacesUpgrade.s.sol": {
      "lastModificationDate": 1678726101056,
      "contentHash": "8d0ab56f72175f37bd9ea23efdd43e92",
      "sourceName": "contracts/scripts/spaces/DeploySpacesUpgrade.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/scripts/utils/ScriptUtils.sol",
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/SpaceOwner.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DeploySpacesUpgrade": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DeploySpacesUpgrade.s.sol/DeploySpacesUpgrade.json"
        }
      }
    },
    "contracts/scripts/spaces/UpgradeImplementation.s.sol": {
      "lastModificationDate": 1678382582340,
      "contentHash": "2b52334e03990a1854bf32f88ad5ba65",
      "sourceName": "contracts/scripts/spaces/UpgradeImplementation.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/scripts/utils/ScriptUtils.sol",
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "UpgradeImplementation": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UpgradeImplementation.s.sol/UpgradeImplementation.json"
        }
      }
    },
    "contracts/scripts/utils/ScriptUtils.sol": {
      "lastModificationDate": 1678726101056,
      "contentHash": "29cdca221e18b5fb7e46905b208b2658",
      "sourceName": "contracts/scripts/utils/ScriptUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ScriptUtils": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ScriptUtils.sol/ScriptUtils.json"
        }
      }
    },
    "contracts/src/core/base/ERC20Base.sol": {
      "lastModificationDate": 1678802231355,
      "contentHash": "9889ba3f3b25bc6ffdab406e706c8274",
      "sourceName": "contracts/src/core/base/ERC20Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20Base": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC20Base.sol/ERC20Base.json"
        }
      }
    },
    "contracts/src/core/base/ERC721Base.sol": {
      "lastModificationDate": 1679005184360,
      "contentHash": "93a9eddc428f7b595770afa3010d4acb",
      "sourceName": "contracts/src/core/base/ERC721Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "ERC721Base": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC721Base.sol/ERC721Base.json"
        }
      }
    },
    "contracts/src/core/base/ERC721SignatureMint.sol": {
      "lastModificationDate": 1679005184360,
      "contentHash": "f4cf63c775d460ff24a095f82e395481",
      "sourceName": "contracts/src/core/base/ERC721SignatureMint.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/PrimarySale.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/SignatureMintERC721.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IPrimarySale.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/src/misc/interfaces/ISignatureMintERC721.sol",
        "contracts/src/misc/interfaces/IWETH.sol",
        "contracts/src/misc/lib/CurrencyTransfer.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/forge-std/src/console.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "ERC721SignatureMint": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC721SignatureMint.sol/ERC721SignatureMint.json"
        }
      }
    },
    "contracts/src/core/council/CouncilStaking.sol": {
      "lastModificationDate": 1678726101056,
      "contentHash": "f7546e432c6da2e4d4ecbe36b1efc20c",
      "sourceName": "contracts/src/core/council/CouncilStaking.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "CouncilStaking": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "CouncilStaking.sol/CouncilStaking.json"
        }
      }
    },
    "contracts/src/core/governance/Council.sol": {
      "lastModificationDate": 1678726101056,
      "contentHash": "65fc2faf89bdaecba1bbe9d952f8518e",
      "sourceName": "contracts/src/core/governance/Council.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/governance/base/CoreVoting.sol",
        "contracts/src/core/governance/base/DaoCoreVoting.sol",
        "lib/council/contracts/interfaces/ICoreVoting.sol",
        "lib/council/contracts/interfaces/IVotingVault.sol",
        "lib/council/contracts/libraries/Authorizable.sol",
        "lib/council/contracts/libraries/ReentrancyBlock.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Council": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Council.sol/Council.json"
        }
      }
    },
    "contracts/src/core/governance/Dao.sol": {
      "lastModificationDate": 1678726101056,
      "contentHash": "78d033ef03eaac19d84c75404a42465d",
      "sourceName": "contracts/src/core/governance/Dao.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/governance/base/DaoCoreVoting.sol",
        "lib/council/contracts/interfaces/ICoreVoting.sol",
        "lib/council/contracts/interfaces/IVotingVault.sol",
        "lib/council/contracts/libraries/Authorizable.sol",
        "lib/council/contracts/libraries/ReentrancyBlock.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Dao": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Dao.sol/Dao.json"
        }
      }
    },
    "contracts/src/core/governance/base/CoreVoting.sol": {
      "lastModificationDate": 1678726101057,
      "contentHash": "867797935deffdb6e5ff2fff3703000d",
      "sourceName": "contracts/src/core/governance/base/CoreVoting.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/council/contracts/interfaces/ICoreVoting.sol",
        "lib/council/contracts/interfaces/IVotingVault.sol",
        "lib/council/contracts/libraries/Authorizable.sol",
        "lib/council/contracts/libraries/ReentrancyBlock.sol"
      ],
      "versionRequirement": "^0.8.3",
      "artifacts": {
        "CoreVoting": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "CoreVoting.sol/CoreVoting.json"
        }
      }
    },
    "contracts/src/core/governance/base/DaoCoreVoting.sol": {
      "lastModificationDate": 1678726101057,
      "contentHash": "ab3969bb202b6fa95e3e0d1ab8631426",
      "sourceName": "contracts/src/core/governance/base/DaoCoreVoting.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/council/contracts/interfaces/ICoreVoting.sol",
        "lib/council/contracts/interfaces/IVotingVault.sol",
        "lib/council/contracts/libraries/Authorizable.sol",
        "lib/council/contracts/libraries/ReentrancyBlock.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DaoCoreVoting": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DaoCoreVoting.sol/DaoCoreVoting.json"
        }
      }
    },
    "contracts/src/core/governance/vaults/CouncilVault.sol": {
      "lastModificationDate": 1678726101057,
      "contentHash": "7ed3ee847801452903e5adf6625aaa02",
      "sourceName": "contracts/src/core/governance/vaults/CouncilVault.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/council/contracts/interfaces/ICoreVoting.sol",
        "lib/council/contracts/interfaces/IVotingVault.sol",
        "lib/council/contracts/libraries/Authorizable.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "CouncilVault": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "CouncilVault.sol/CouncilVault.json"
        }
      }
    },
    "contracts/src/core/governance/vaults/NFTVault.sol": {
      "lastModificationDate": 1678726101057,
      "contentHash": "0cd527f730228a5f68540bfc6df3bed7",
      "sourceName": "contracts/src/core/governance/vaults/NFTVault.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/council/contracts/interfaces/IVotingVault.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "NFTVault": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "NFTVault.sol/NFTVault.json"
        }
      }
    },
    "contracts/src/core/node-network/FQDNRegex.sol": {
      "lastModificationDate": 1678726101057,
      "contentHash": "d060390a5d08af874654c9405d48402d",
      "sourceName": "contracts/src/core/node-network/FQDNRegex.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "FQDNRegex": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "FQDNRegex.sol/FQDNRegex.json"
        }
      }
    },
    "contracts/src/core/node-network/NodeManager.sol": {
      "lastModificationDate": 1678726101058,
      "contentHash": "4912811cf23e5eca427b92d51e06134d",
      "sourceName": "contracts/src/core/node-network/NodeManager.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/node-network/FQDNRegex.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "NodeManager": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "NodeManager.sol/NodeManager.json"
        }
      }
    },
    "contracts/src/core/spaces/Space.sol": {
      "lastModificationDate": 1678726101058,
      "contentHash": "903808576726b769024dfd18ff22996f",
      "sourceName": "contracts/src/core/spaces/Space.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/MultiCaller.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Space": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Space.sol/Space.json"
        }
      }
    },
    "contracts/src/core/spaces/SpaceFactory.sol": {
      "lastModificationDate": 1679005184360,
      "contentHash": "2dc4146bebd1a6a719de79837c1c4155",
      "sourceName": "contracts/src/core/spaces/SpaceFactory.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "SpaceFactory": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SpaceFactory.sol/SpaceFactory.json"
        }
      }
    },
    "contracts/src/core/spaces/entitlements/TokenEntitlement.sol": {
      "lastModificationDate": 1678726101058,
      "contentHash": "cc8fdabf81a81d990562446dd5dddf35",
      "sourceName": "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "TokenEntitlement": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "TokenEntitlement.sol/TokenEntitlement.json"
        }
      }
    },
    "contracts/src/core/spaces/entitlements/UserEntitlement.sol": {
      "lastModificationDate": 1678726101058,
      "contentHash": "221dcf72c1b433ab8b77644405e0fd8e",
      "sourceName": "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Utils.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "UserEntitlement": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UserEntitlement.sol/UserEntitlement.json"
        }
      }
    },
    "contracts/src/core/tokens/Member.sol": {
      "lastModificationDate": 1678726101058,
      "contentHash": "b388b371ed2aaf7b84d6c82623d060b3",
      "sourceName": "contracts/src/core/tokens/Member.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/interfaces/IMember.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Member": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Member.sol/Member.json"
        }
      }
    },
    "contracts/src/core/tokens/Operator.sol": {
      "lastModificationDate": 1679005184361,
      "contentHash": "0cf58bbe5921882e6a72c77328d96c9f",
      "sourceName": "contracts/src/core/tokens/Operator.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.9",
      "artifacts": {
        "Operator": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Operator.sol/Operator.json"
        }
      }
    },
    "contracts/src/core/tokens/Pioneer.sol": {
      "lastModificationDate": 1678726101058,
      "contentHash": "af5122498e04ad13e5fd7d97d7d0ee43",
      "sourceName": "contracts/src/core/tokens/Pioneer.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Pioneer": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Pioneer.sol/Pioneer.json"
        }
      }
    },
    "contracts/src/core/tokens/SpaceOwner.sol": {
      "lastModificationDate": 1678726101059,
      "contentHash": "b22dcda0e2ed5b08cea355f94283ab72",
      "sourceName": "contracts/src/core/tokens/SpaceOwner.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/libraries/Errors.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "SpaceOwner": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SpaceOwner.sol/SpaceOwner.json"
        }
      }
    },
    "contracts/src/core/tokens/TownOwner.sol": {
      "lastModificationDate": 1679005184361,
      "contentHash": "4ec88d96ee9af30ebf38b024c691bf36",
      "sourceName": "contracts/src/core/tokens/TownOwner.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "TownOwner": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "TownOwner.sol/TownOwner.json"
        }
      }
    },
    "contracts/src/core/tokens/Towns.sol": {
      "lastModificationDate": 1678802231356,
      "contentHash": "1af7fbb47ae2d56c6c2dc4c916c079b4",
      "sourceName": "contracts/src/core/tokens/Towns.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC20Base.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Towns": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Towns.sol/Towns.json"
        }
      }
    },
    "contracts/src/interfaces/IEntitlement.sol": {
      "lastModificationDate": 1678726101059,
      "contentHash": "8b3265364aa8f5ba20b38c813441762a",
      "sourceName": "contracts/src/interfaces/IEntitlement.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/libraries/DataTypes.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IEntitlement": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IEntitlement.sol/IEntitlement.json"
        }
      }
    },
    "contracts/src/interfaces/IMember.sol": {
      "lastModificationDate": 1678726101059,
      "contentHash": "5a5b28dce4dd2e58495ad5ee2e244a59",
      "sourceName": "contracts/src/interfaces/IMember.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IMember": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IMember.sol/IMember.json"
        }
      }
    },
    "contracts/src/interfaces/ISpace.sol": {
      "lastModificationDate": 1678726101059,
      "contentHash": "24ab07ba134c2da1c64efc4181b6047e",
      "sourceName": "contracts/src/interfaces/ISpace.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/libraries/DataTypes.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "ISpace": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ISpace.sol/ISpace.json"
        }
      }
    },
    "contracts/src/interfaces/ISpaceFactory.sol": {
      "lastModificationDate": 1678726101059,
      "contentHash": "b0d06f502dc565702b6ac1d1d15973ed",
      "sourceName": "contracts/src/interfaces/ISpaceFactory.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/libraries/DataTypes.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "ISpaceFactory": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ISpaceFactory.sol/ISpaceFactory.json"
        }
      }
    },
    "contracts/src/libraries/DataTypes.sol": {
      "lastModificationDate": 1678726101059,
      "contentHash": "5c2afcaf6ca924698c6fa7738afc2b6b",
      "sourceName": "contracts/src/libraries/DataTypes.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DataTypes": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DataTypes.sol/DataTypes.json"
        }
      }
    },
    "contracts/src/libraries/Errors.sol": {
      "lastModificationDate": 1678726101060,
      "contentHash": "57a3ae29bee90c2ab35caea45a41e07a",
      "sourceName": "contracts/src/libraries/Errors.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Errors": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Errors.sol/Errors.json"
        }
      }
    },
    "contracts/src/libraries/Events.sol": {
      "lastModificationDate": 1678726101060,
      "contentHash": "99e81da0750614d3cbdc2b89a8470b37",
      "sourceName": "contracts/src/libraries/Events.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Events": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Events.sol/Events.json"
        }
      }
    },
    "contracts/src/libraries/Permissions.sol": {
      "lastModificationDate": 1678726101060,
      "contentHash": "1e69275fd43cde0f3188ea5bfd2e7192",
      "sourceName": "contracts/src/libraries/Permissions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Permissions": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Permissions.sol/Permissions.json"
        }
      }
    },
    "contracts/src/libraries/Utils.sol": {
      "lastModificationDate": 1678726101060,
      "contentHash": "d008eacfbd1f0e2f7267cbd771194460",
      "sourceName": "contracts/src/libraries/Utils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/libraries/Errors.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Utils": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Utils.sol/Utils.json"
        }
      }
    },
    "contracts/src/misc/BatchMintMetadata.sol": {
      "lastModificationDate": 1679005184361,
      "contentHash": "339448d20281bfbd125ff6df3b2b524f",
      "sourceName": "contracts/src/misc/BatchMintMetadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "BatchMintMetadata": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "BatchMintMetadata.sol/BatchMintMetadata.json"
        }
      }
    },
    "contracts/src/misc/Metadata.sol": {
      "lastModificationDate": 1678802231356,
      "contentHash": "ca6f3dddbfe7fb4f8c1c1bdc6db4ecce",
      "sourceName": "contracts/src/misc/Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/misc/interfaces/IMetadata.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Metadata": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Metadata.sol/Metadata.json"
        }
      }
    },
    "contracts/src/misc/MultiCaller.sol": {
      "lastModificationDate": 1678726101060,
      "contentHash": "5fab08bfd166cd00a0f04d0dea295851",
      "sourceName": "contracts/src/misc/MultiCaller.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "MultiCaller": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MultiCaller.sol/MultiCaller.json"
        }
      }
    },
    "contracts/src/misc/PrimarySale.sol": {
      "lastModificationDate": 1679005184361,
      "contentHash": "c1edf38bb43defb247319c9dc0b070f5",
      "sourceName": "contracts/src/misc/PrimarySale.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/misc/interfaces/IPrimarySale.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "PrimarySale": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PrimarySale.sol/PrimarySale.json"
        }
      }
    },
    "contracts/src/misc/Royalty.sol": {
      "lastModificationDate": 1679005184361,
      "contentHash": "03fd1fbc9a84737d9c12d210a7cbdd9e",
      "sourceName": "contracts/src/misc/Royalty.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.19",
      "artifacts": {
        "Royalty": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Royalty.sol/Royalty.json"
        }
      }
    },
    "contracts/src/misc/SignatureMintERC721.sol": {
      "lastModificationDate": 1679005184361,
      "contentHash": "3909a86a59075cca3af8e84479e58f71",
      "sourceName": "contracts/src/misc/SignatureMintERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/misc/interfaces/ISignatureMintERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "SignatureMintERC721": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SignatureMintERC721.sol/SignatureMintERC721.json"
        }
      }
    },
    "contracts/src/misc/SimpleProxy.sol": {
      "lastModificationDate": 1677560586602,
      "contentHash": "49a84c2f5ca33ebf2943ea107b88e6fb",
      "sourceName": "contracts/src/misc/SimpleProxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.3",
      "artifacts": {
        "SimpleProxy": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SimpleProxy.sol/SimpleProxy.json"
        }
      }
    },
    "contracts/src/misc/interfaces/IMetadata.sol": {
      "lastModificationDate": 1678802231356,
      "contentHash": "4244bee6e178a83adfb278cf6107da62",
      "sourceName": "contracts/src/misc/interfaces/IMetadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IMetadata": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IMetadata.sol/IMetadata.json"
        }
      }
    },
    "contracts/src/misc/interfaces/IPrimarySale.sol": {
      "lastModificationDate": 1679005184361,
      "contentHash": "b2608345c311d2c63769aac2c8f71699",
      "sourceName": "contracts/src/misc/interfaces/IPrimarySale.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IPrimarySale": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IPrimarySale.sol/IPrimarySale.json"
        }
      }
    },
    "contracts/src/misc/interfaces/IRoyalty.sol": {
      "lastModificationDate": 1679005184361,
      "contentHash": "9e30cb0cefa0e580d02203f588d3bc5e",
      "sourceName": "contracts/src/misc/interfaces/IRoyalty.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "IRoyalty": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IRoyalty.sol/IRoyalty.json"
        }
      }
    },
    "contracts/src/misc/interfaces/ISignatureMintERC721.sol": {
      "lastModificationDate": 1679005184361,
      "contentHash": "45dbcc44a69f48147fde0135c50b86ff",
      "sourceName": "contracts/src/misc/interfaces/ISignatureMintERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "ISignatureMintERC721": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ISignatureMintERC721.sol/ISignatureMintERC721.json"
        }
      }
    },
    "contracts/src/misc/interfaces/IWETH.sol": {
      "lastModificationDate": 1679005184361,
      "contentHash": "3d3d7da12aeab63d3000ee8aa8a2c857",
      "sourceName": "contracts/src/misc/interfaces/IWETH.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IWETH": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IWETH.sol/IWETH.json"
        }
      }
    },
    "contracts/src/misc/lib/CurrencyTransfer.sol": {
      "lastModificationDate": 1679005184362,
      "contentHash": "694239ead45f0dd7769b196829e5aef5",
      "sourceName": "contracts/src/misc/lib/CurrencyTransfer.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/misc/interfaces/IWETH.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "CurrencyTransfer": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "CurrencyTransfer.sol/CurrencyTransfer.json"
        }
      }
    },
    "contracts/src/mocks/MockERC20.sol": {
      "lastModificationDate": 1679005184362,
      "contentHash": "b2bd33e14c6eb7f730589fc06f2a9f1d",
      "sourceName": "contracts/src/mocks/MockERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC20Base.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "MockERC20": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MockERC20.sol/MockERC20.json"
        }
      }
    },
    "contracts/src/mocks/MockEntitlement.sol": {
      "lastModificationDate": 1678726101060,
      "contentHash": "0a6f5dff69e674a79d3e90c0469b9d65",
      "sourceName": "contracts/src/mocks/MockEntitlement.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/libraries/DataTypes.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "MockEntitlement": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MockEntitlement.sol/MockEntitlement.json"
        }
      }
    },
    "contracts/src/mocks/MockToken.sol": {
      "lastModificationDate": 1678726101060,
      "contentHash": "a14dd1396b44bc5679f3cc8045b6867a",
      "sourceName": "contracts/src/mocks/MockToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "Mock1155": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MockToken.sol/Mock1155.json"
        },
        "Mock721": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MockToken.sol/Mock721.json"
        },
        "MockERC20": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MockToken.sol/MockERC20.json"
        }
      }
    },
    "contracts/test/base/ERC20Base.t.sol": {
      "lastModificationDate": 1678802231356,
      "contentHash": "c7a741399d6c7ee4e78b2ef73b3740bf",
      "sourceName": "contracts/test/base/ERC20Base.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC20Base.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20BaseTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC20Base.t.sol/ERC20BaseTest.json"
        }
      }
    },
    "contracts/test/base/ERC721Base.t.sol": {
      "lastModificationDate": 1679005184362,
      "contentHash": "9786baf841a66208d58186a42af2c060",
      "sourceName": "contracts/test/base/ERC721Base.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721BaseTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC721Base.t.sol/ERC721BaseTest.json"
        }
      }
    },
    "contracts/test/base/ERC721SignatureMint.t.sol": {
      "lastModificationDate": 1679005184362,
      "contentHash": "d625b28136f2911e29977a491652068e",
      "sourceName": "contracts/test/base/ERC721SignatureMint.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC20Base.sol",
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/base/ERC721SignatureMint.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/PrimarySale.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/SignatureMintERC721.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IPrimarySale.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/src/misc/interfaces/ISignatureMintERC721.sol",
        "contracts/src/misc/interfaces/IWETH.sol",
        "contracts/src/misc/lib/CurrencyTransfer.sol",
        "contracts/src/mocks/MockERC20.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721SignatureMintTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC721SignatureMint.t.sol/ERC721SignatureMintTest.json"
        }
      }
    },
    "contracts/test/governance/DaoBaseSetup.sol": {
      "lastModificationDate": 1679005184362,
      "contentHash": "5e9df6468bc4c341b1e6609b6fb14f7b",
      "sourceName": "contracts/test/governance/DaoBaseSetup.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC20Base.sol",
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/governance/Council.sol",
        "contracts/src/core/governance/Dao.sol",
        "contracts/src/core/governance/base/CoreVoting.sol",
        "contracts/src/core/governance/base/DaoCoreVoting.sol",
        "contracts/src/core/governance/vaults/CouncilVault.sol",
        "contracts/src/core/governance/vaults/NFTVault.sol",
        "contracts/src/core/tokens/Member.sol",
        "contracts/src/core/tokens/Operator.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/core/tokens/Towns.sol",
        "contracts/src/interfaces/IMember.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/SimpleProxy.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/council/contracts/features/Timelock.sol",
        "lib/council/contracts/features/Treasury.sol",
        "lib/council/contracts/interfaces/ICoreVoting.sol",
        "lib/council/contracts/interfaces/IERC20.sol",
        "lib/council/contracts/interfaces/IVotingVault.sol",
        "lib/council/contracts/libraries/Authorizable.sol",
        "lib/council/contracts/libraries/ReentrancyBlock.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "DaoBaseSetup": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DaoBaseSetup.sol/DaoBaseSetup.json"
        }
      }
    },
    "contracts/test/governance/Pioneer.t.sol": {
      "lastModificationDate": 1677628377039,
      "contentHash": "29e7d0ca7286909825dc60b0d05853f0",
      "sourceName": "contracts/test/governance/Pioneer.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "PioneerTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Pioneer.t.sol/PioneerTest.json"
        }
      }
    },
    "contracts/test/governance/proposals/CouncilProposal.t.sol": {
      "lastModificationDate": 1678726101061,
      "contentHash": "d3ce8b3e5e4717ae0d40bec0e7349cb2",
      "sourceName": "contracts/test/governance/proposals/CouncilProposal.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC20Base.sol",
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/governance/Council.sol",
        "contracts/src/core/governance/Dao.sol",
        "contracts/src/core/governance/base/CoreVoting.sol",
        "contracts/src/core/governance/base/DaoCoreVoting.sol",
        "contracts/src/core/governance/vaults/CouncilVault.sol",
        "contracts/src/core/governance/vaults/NFTVault.sol",
        "contracts/src/core/tokens/Member.sol",
        "contracts/src/core/tokens/Operator.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/core/tokens/Towns.sol",
        "contracts/src/interfaces/IMember.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/SimpleProxy.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/governance/DaoBaseSetup.sol",
        "contracts/test/mocks/SimpleCounter.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/council/contracts/features/Timelock.sol",
        "lib/council/contracts/features/Treasury.sol",
        "lib/council/contracts/interfaces/ICoreVoting.sol",
        "lib/council/contracts/interfaces/IERC20.sol",
        "lib/council/contracts/interfaces/IVotingVault.sol",
        "lib/council/contracts/libraries/Authorizable.sol",
        "lib/council/contracts/libraries/ReentrancyBlock.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "CouncilProposalTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "CouncilProposal.t.sol/CouncilProposalTest.json"
        }
      }
    },
    "contracts/test/governance/vaults/ChangeVaultStatus.t.sol": {
      "lastModificationDate": 1678726101061,
      "contentHash": "db3c34671b42aceb8ae57aaf436aae5a",
      "sourceName": "contracts/test/governance/vaults/ChangeVaultStatus.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC20Base.sol",
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/governance/Council.sol",
        "contracts/src/core/governance/Dao.sol",
        "contracts/src/core/governance/base/CoreVoting.sol",
        "contracts/src/core/governance/base/DaoCoreVoting.sol",
        "contracts/src/core/governance/vaults/CouncilVault.sol",
        "contracts/src/core/governance/vaults/NFTVault.sol",
        "contracts/src/core/tokens/Member.sol",
        "contracts/src/core/tokens/Operator.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/core/tokens/Towns.sol",
        "contracts/src/interfaces/IMember.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/SimpleProxy.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/src/mocks/MockToken.sol",
        "contracts/test/governance/DaoBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/council/contracts/features/Timelock.sol",
        "lib/council/contracts/features/Treasury.sol",
        "lib/council/contracts/interfaces/ICoreVoting.sol",
        "lib/council/contracts/interfaces/IERC20.sol",
        "lib/council/contracts/interfaces/IVotingVault.sol",
        "lib/council/contracts/libraries/Authorizable.sol",
        "lib/council/contracts/libraries/ReentrancyBlock.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ChangeVaultStatusTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ChangeVaultStatus.t.sol/ChangeVaultStatusTest.json"
        }
      }
    },
    "contracts/test/mocks/SimpleCounter.sol": {
      "lastModificationDate": 1678726101061,
      "contentHash": "9527a7c71d73cf9ae1106f29f956437d",
      "sourceName": "contracts/test/mocks/SimpleCounter.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SimpleCounter": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SimpleCounter.sol/SimpleCounter.json"
        }
      }
    },
    "contracts/test/node-network/Operator.t.sol": {
      "lastModificationDate": 1679005184362,
      "contentHash": "48516d27ea76fe8af22727d8762f33e9",
      "sourceName": "contracts/test/node-network/Operator.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/tokens/Operator.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "OperatorTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Operator.t.sol/OperatorTest.json"
        }
      }
    },
    "contracts/test/spaces/SpaceBaseSetup.sol": {
      "lastModificationDate": 1679005184362,
      "contentHash": "f6584d3fc558d48f7e0ac09601ebd113",
      "sourceName": "contracts/test/spaces/SpaceBaseSetup.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SpaceBaseSetup": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SpaceBaseSetup.sol/SpaceBaseSetup.json"
        }
      }
    },
    "contracts/test/spaces/entitlements/TokenEntitlement.t.sol": {
      "lastModificationDate": 1679005184363,
      "contentHash": "d371d1155f0d1d9a78e1cbcf41e4d6d0",
      "sourceName": "contracts/test/spaces/entitlements/TokenEntitlement.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/src/mocks/MockToken.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "TokenEntitlementTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "TokenEntitlement.t.sol/TokenEntitlementTest.json"
        },
        "TokenEntitlementv2": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "TokenEntitlement.t.sol/TokenEntitlementv2.json"
        }
      }
    },
    "contracts/test/spaces/entitlements/UserEntitlement.t.sol": {
      "lastModificationDate": 1679005184363,
      "contentHash": "3024f1b512f356ee675d20eeb7eda425",
      "sourceName": "contracts/test/spaces/entitlements/UserEntitlement.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "UserEntitlementTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UserEntitlement.t.sol/UserEntitlementTest.json"
        },
        "UserEntitlementv2": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UserEntitlement.t.sol/UserEntitlementv2.json"
        }
      }
    },
    "contracts/test/spaces/space/AddPermissionRole.t.sol": {
      "lastModificationDate": 1677560586603,
      "contentHash": "7db6f287091e3e46d5c23324167a04ba",
      "sourceName": "contracts/test/spaces/space/AddPermissionRole.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AddPermissionRoleTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AddPermissionRole.t.sol/AddPermissionRoleTest.json"
        }
      }
    },
    "contracts/test/spaces/space/AddRoleToChannel.t.sol": {
      "lastModificationDate": 1677560586604,
      "contentHash": "23f25f68d08b071971cfbd084c51a53f",
      "sourceName": "contracts/test/spaces/space/AddRoleToChannel.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AddRoleToChannelTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AddRoleToChannel.t.sol/AddRoleToChannelTest.json"
        }
      }
    },
    "contracts/test/spaces/space/AddRoleToEntitlement.t.sol": {
      "lastModificationDate": 1677560586604,
      "contentHash": "f7a9b9e079c0ef945385b01bf182ccf9",
      "sourceName": "contracts/test/spaces/space/AddRoleToEntitlement.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AddRoleToEntitlementTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AddRoleToEntitlement.t.sol/AddRoleToEntitlementTest.json"
        }
      }
    },
    "contracts/test/spaces/space/CreateChannel.t.sol": {
      "lastModificationDate": 1677560586604,
      "contentHash": "17c5130a083088250ef3c27d06433f88",
      "sourceName": "contracts/test/spaces/space/CreateChannel.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "CreateChannelTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "CreateChannel.t.sol/CreateChannelTest.json"
        }
      }
    },
    "contracts/test/spaces/space/CreateRole.t.sol": {
      "lastModificationDate": 1677560586604,
      "contentHash": "39dce05cb9ab274601cab6b3c413767b",
      "sourceName": "contracts/test/spaces/space/CreateRole.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/src/mocks/MockEntitlement.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "CreateRoleTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "CreateRole.t.sol/CreateRoleTest.json"
        }
      }
    },
    "contracts/test/spaces/space/Multicaller.t.sol": {
      "lastModificationDate": 1677560586604,
      "contentHash": "ea510b0aef55f9f41bd72e193808f9d0",
      "sourceName": "contracts/test/spaces/space/Multicaller.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MultiCallerTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Multicaller.t.sol/MultiCallerTest.json"
        },
        "SimpleMultiCall": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Multicaller.t.sol/SimpleMultiCall.json"
        }
      }
    },
    "contracts/test/spaces/space/RemovePermissionRole.t.sol": {
      "lastModificationDate": 1677560586604,
      "contentHash": "514333c8584ebee2765e7b2f0be4784f",
      "sourceName": "contracts/test/spaces/space/RemovePermissionRole.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "RemovePermissionRoleTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "RemovePermissionRole.t.sol/RemovePermissionRoleTest.json"
        }
      }
    },
    "contracts/test/spaces/space/RemoveRole.t.sol": {
      "lastModificationDate": 1677560586604,
      "contentHash": "1778c9c95c504dddfa5a3effd4194720",
      "sourceName": "contracts/test/spaces/space/RemoveRole.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "RemoveRoleTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "RemoveRole.t.sol/RemoveRoleTest.json"
        }
      }
    },
    "contracts/test/spaces/space/RemoveRoleFromChannel.t.sol": {
      "lastModificationDate": 1677560586604,
      "contentHash": "b637d84d797482b9acb4bc9c88103730",
      "sourceName": "contracts/test/spaces/space/RemoveRoleFromChannel.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "RemoveRoleFromChannelTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "RemoveRoleFromChannel.t.sol/RemoveRoleFromChannelTest.json"
        }
      }
    },
    "contracts/test/spaces/space/RemoveRoleFromEntitlement.t.sol": {
      "lastModificationDate": 1677560586604,
      "contentHash": "c7b0d0a4dd91efac5785b2990bfa4761",
      "sourceName": "contracts/test/spaces/space/RemoveRoleFromEntitlement.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "RemoveRoleFromEntitlementTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "RemoveRoleFromEntitlement.t.sol/RemoveRoleFromEntitlementTest.json"
        }
      }
    },
    "contracts/test/spaces/space/SetChannelAccess.t.sol": {
      "lastModificationDate": 1677560586604,
      "contentHash": "cbb13b3a7b88aeb463ca11d7f6661e78",
      "sourceName": "contracts/test/spaces/space/SetChannelAccess.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SetChannelAccessTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SetChannelAccess.t.sol/SetChannelAccessTest.json"
        }
      }
    },
    "contracts/test/spaces/space/SetEntitlement.t.sol": {
      "lastModificationDate": 1677560586604,
      "contentHash": "eebbd49200cfe0b1a246efc70c784b94",
      "sourceName": "contracts/test/spaces/space/SetEntitlement.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/src/mocks/MockEntitlement.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SetEntitlementTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SetEntitlement.t.sol/SetEntitlementTest.json"
        },
        "UnsupportedEntitlement": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SetEntitlement.t.sol/UnsupportedEntitlement.json"
        }
      }
    },
    "contracts/test/spaces/space/SetOwnerRoleId.t.sol": {
      "lastModificationDate": 1677560586604,
      "contentHash": "0a5deb832e0301d7306e27f31dca6b16",
      "sourceName": "contracts/test/spaces/space/SetOwnerRoleId.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SetOwnerRoleIdTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SetOwnerRoleId.t.sol/SetOwnerRoleIdTest.json"
        }
      }
    },
    "contracts/test/spaces/space/SetSpaceAccess.t.sol": {
      "lastModificationDate": 1677560586605,
      "contentHash": "20e59c5216b7aea3b86fea8a64904597",
      "sourceName": "contracts/test/spaces/space/SetSpaceAccess.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SetSpaceAccessTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SetSpaceAccess.t.sol/SetSpaceAccessTest.json"
        }
      }
    },
    "contracts/test/spaces/space/UpdateChannel.t.sol": {
      "lastModificationDate": 1677560586605,
      "contentHash": "2ac51988c5caad4c25d9b0477e149817",
      "sourceName": "contracts/test/spaces/space/UpdateChannel.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "UpdateChannelTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UpdateChannel.t.sol/UpdateChannelTest.json"
        }
      }
    },
    "contracts/test/spaces/space/UpdateRole.t.sol": {
      "lastModificationDate": 1678726101061,
      "contentHash": "9bf3d2ebd76fb30f6b3e08ed69bd6fa4",
      "sourceName": "contracts/test/spaces/space/UpdateRole.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "UpdateRoleTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UpdateRole.t.sol/UpdateRoleTest.json"
        }
      }
    },
    "contracts/test/spaces/space/UpgradeTo.t.sol": {
      "lastModificationDate": 1677560586605,
      "contentHash": "2ee77c201e4276d9f9db6eb32af1345d",
      "sourceName": "contracts/test/spaces/space/UpgradeTo.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SpaceV2": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UpgradeTo.t.sol/SpaceV2.json"
        },
        "TokenV2": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UpgradeTo.t.sol/TokenV2.json"
        },
        "UpgradeToTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UpgradeTo.t.sol/UpgradeToTest.json"
        }
      }
    },
    "contracts/test/spaces/spaceFactory/SpaceFactoryTestAddInitialPermissions.t.sol": {
      "lastModificationDate": 1677560586605,
      "contentHash": "c5a87f1255fdeb22578d92fd6deb65d7",
      "sourceName": "contracts/test/spaces/spaceFactory/SpaceFactoryTestAddInitialPermissions.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SpaceFactoryTestAddPermissions": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SpaceFactoryTestAddInitialPermissions.t.sol/SpaceFactoryTestAddPermissions.json"
        }
      }
    },
    "contracts/test/spaces/spaceFactory/SpaceFactoryTestCreateSpace.t.sol": {
      "lastModificationDate": 1679005184363,
      "contentHash": "932530de102797dc96966b5fb17a28a6",
      "sourceName": "contracts/test/spaces/spaceFactory/SpaceFactoryTestCreateSpace.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/src/mocks/MockToken.sol",
        "contracts/test/spaces/SpaceBaseSetup.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SpaceFactoryTestCreateSpace": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SpaceFactoryTestCreateSpace.t.sol/SpaceFactoryTestCreateSpace.json"
        }
      }
    },
    "contracts/test/spaces/spaceFactory/SpaceFactoryTestInitialize.t.sol": {
      "lastModificationDate": 1679005184363,
      "contentHash": "a8aeac67067bdfb1a4977e36b6efdb40",
      "sourceName": "contracts/test/spaces/spaceFactory/SpaceFactoryTestInitialize.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/spaces/Space.sol",
        "contracts/src/core/spaces/SpaceFactory.sol",
        "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "contracts/src/core/tokens/Pioneer.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/interfaces/IEntitlement.sol",
        "contracts/src/interfaces/ISpace.sol",
        "contracts/src/interfaces/ISpaceFactory.sol",
        "contracts/src/libraries/DataTypes.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/libraries/Events.sol",
        "contracts/src/libraries/Permissions.sol",
        "contracts/src/libraries/Utils.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SpaceFactoryTestInitialize": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SpaceFactoryTestInitialize.t.sol/SpaceFactoryTestInitialize.json"
        },
        "SpaceFactoryV2": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SpaceFactoryTestInitialize.t.sol/SpaceFactoryV2.json"
        }
      }
    },
    "contracts/test/spaces/townOwner/TownOwnerTestMintTo.t.sol": {
      "lastModificationDate": 1679005184364,
      "contentHash": "ded4fb265fbe6a5e809037030a7effff",
      "sourceName": "contracts/test/spaces/townOwner/TownOwnerTestMintTo.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/base/ERC721Base.sol",
        "contracts/src/core/tokens/TownOwner.sol",
        "contracts/src/libraries/Errors.sol",
        "contracts/src/misc/BatchMintMetadata.sol",
        "contracts/src/misc/Metadata.sol",
        "contracts/src/misc/MultiCaller.sol",
        "contracts/src/misc/Royalty.sol",
        "contracts/src/misc/interfaces/IMetadata.sol",
        "contracts/src/misc/interfaces/IRoyalty.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ERC721A/contracts/ERC721A.sol",
        "lib/ERC721A/contracts/IERC721A.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "TownOwnerTestMintTo": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "TownOwnerTestMintTo.t.sol/TownOwnerTestMintTo.json"
        }
      }
    },
    "contracts/test/tokens/Member.t.sol": {
      "lastModificationDate": 1677628377039,
      "contentHash": "6c93d56057fd1680d7b4dc8f7f6e7c87",
      "sourceName": "contracts/test/tokens/Member.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "contracts/src/core/tokens/Member.sol",
        "contracts/src/interfaces/IMember.sol",
        "contracts/test/utils/MerkleTree.sol",
        "contracts/test/utils/TestUtils.sol",
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MemberTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Member.t.sol/MemberTest.json"
        },
        "Receiver": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Member.t.sol/Receiver.json"
        }
      }
    },
    "contracts/test/utils/MerkleTree.sol": {
      "lastModificationDate": 1674929464521,
      "contentHash": "e017a720ae723544b6a469517a9e52e6",
      "sourceName": "contracts/test/utils/MerkleTree.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MerkleTree": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MerkleTree.sol/MerkleTree.json"
        }
      }
    },
    "contracts/test/utils/TestUtils.sol": {
      "lastModificationDate": 1679005184364,
      "contentHash": "f5149023a7dcf7be8a50df29b35721b5",
      "sourceName": "contracts/test/utils/TestUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "TestUtils": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "TestUtils.sol/TestUtils.json"
        }
      }
    },
    "lib/ERC721A/contracts/ERC721A.sol": {
      "lastModificationDate": 1678805554656,
      "contentHash": "227e9db819fd61602f833edafcda7d4a",
      "sourceName": "lib/ERC721A/contracts/ERC721A.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ERC721A/contracts/IERC721A.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "ERC721A": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC721A.sol/ERC721A.json"
        },
        "ERC721A__IERC721Receiver": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC721A.sol/ERC721A__IERC721Receiver.json"
        }
      }
    },
    "lib/ERC721A/contracts/IERC721A.sol": {
      "lastModificationDate": 1678805554656,
      "contentHash": "c31a05698ddc2f109ba8723105d854c6",
      "sourceName": "lib/ERC721A/contracts/IERC721A.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "IERC721A": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC721A.sol/IERC721A.json"
        }
      }
    },
    "lib/council/contracts/features/Timelock.sol": {
      "lastModificationDate": 1669654004938,
      "contentHash": "4bfc8cc62afcdc6eba07c0b80e065663",
      "sourceName": "lib/council/contracts/features/Timelock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/council/contracts/libraries/Authorizable.sol",
        "lib/council/contracts/libraries/ReentrancyBlock.sol"
      ],
      "versionRequirement": "^0.8.3",
      "artifacts": {
        "Timelock": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Timelock.sol/Timelock.json"
        }
      }
    },
    "lib/council/contracts/features/Treasury.sol": {
      "lastModificationDate": 1669654004938,
      "contentHash": "89f0d6274a065aa6db68470cb238d192",
      "sourceName": "lib/council/contracts/features/Treasury.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/council/contracts/interfaces/IERC20.sol",
        "lib/council/contracts/libraries/Authorizable.sol"
      ],
      "versionRequirement": "^0.8.3",
      "artifacts": {
        "Treasury": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Treasury.sol/Treasury.json"
        }
      }
    },
    "lib/council/contracts/interfaces/ICoreVoting.sol": {
      "lastModificationDate": 1669654004938,
      "contentHash": "7b2d4c583f7d76366fb3f76ee1dde8ef",
      "sourceName": "lib/council/contracts/interfaces/ICoreVoting.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.3",
      "artifacts": {
        "ICoreVoting": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ICoreVoting.sol/ICoreVoting.json"
        }
      }
    },
    "lib/council/contracts/interfaces/IERC20.sol": {
      "lastModificationDate": 1669654004938,
      "contentHash": "647e4019e88f5ced381bb46b01748699",
      "sourceName": "lib/council/contracts/interfaces/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.3",
      "artifacts": {
        "IERC20": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC20.sol/IERC20.json"
        }
      }
    },
    "lib/council/contracts/interfaces/IVotingVault.sol": {
      "lastModificationDate": 1669654004939,
      "contentHash": "20c50efe7e12ee6ef6b121324b4dac38",
      "sourceName": "lib/council/contracts/interfaces/IVotingVault.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.3",
      "artifacts": {
        "IVotingVault": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IVotingVault.sol/IVotingVault.json"
        }
      }
    },
    "lib/council/contracts/libraries/Authorizable.sol": {
      "lastModificationDate": 1669654004939,
      "contentHash": "bd1824067b7a0f327ef9bc2588093f0d",
      "sourceName": "lib/council/contracts/libraries/Authorizable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.7.0",
      "artifacts": {
        "Authorizable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Authorizable.sol/Authorizable.json"
        }
      }
    },
    "lib/council/contracts/libraries/ReentrancyBlock.sol": {
      "lastModificationDate": 1669654004939,
      "contentHash": "c6c914cfb1e343de805e03248bc27feb",
      "sourceName": "lib/council/contracts/libraries/ReentrancyBlock.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.3",
      "artifacts": {
        "ReentrancyBlock": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ReentrancyBlock.sol/ReentrancyBlock.json"
        }
      }
    },
    "lib/ds-test/src/test.sol": {
      "lastModificationDate": 1667404356149,
      "contentHash": "962996f0e05d5218857a538a62d7c47e",
      "sourceName": "lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "test.sol/DSTest.json"
        }
      }
    },
    "lib/forge-std/src/Base.sol": {
      "lastModificationDate": 1675105350517,
      "contentHash": "8f04bbbb2c16f79e14fdc321695a8ec2",
      "sourceName": "lib/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Base.sol/CommonBase.json"
        },
        "ScriptBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Base.sol/ScriptBase.json"
        },
        "TestBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Base.sol/TestBase.json"
        }
      }
    },
    "lib/forge-std/src/Script.sol": {
      "lastModificationDate": 1675105350517,
      "contentHash": "83c39354c1e43190bce4dc43860dc786",
      "sourceName": "lib/forge-std/src/Script.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Script": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Script.sol/Script.json"
        }
      }
    },
    "lib/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1675105350517,
      "contentHash": "5bc6a90903a666d831370fa46838ed73",
      "sourceName": "lib/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdAssertions.sol/StdAssertions.json"
        }
      }
    },
    "lib/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1675105350517,
      "contentHash": "7e81ca873875f24995d81df8ccb66381",
      "sourceName": "lib/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdChains.sol/StdChains.json"
        }
      }
    },
    "lib/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1675105350518,
      "contentHash": "027b46591bff2397c69867fd06ddc0c1",
      "sourceName": "lib/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdCheats.sol/StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdCheats.sol/StdCheatsSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdError.sol": {
      "lastModificationDate": 1670196809999,
      "contentHash": "64c896e1276a291776e5ea5aecb3870a",
      "sourceName": "lib/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdError.sol/stdError.json"
        }
      }
    },
    "lib/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1675105350518,
      "contentHash": "016de2d7ee55960094cc97ec792025bb",
      "sourceName": "lib/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdJson.sol/stdJson.json"
        }
      }
    },
    "lib/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1670196809999,
      "contentHash": "9da8f453eba6bb98f3d75bc6822bfb29",
      "sourceName": "lib/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdMath.sol/stdMath.json"
        }
      }
    },
    "lib/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1675105350518,
      "contentHash": "3cb9868082df39a53927db09dbc21f23",
      "sourceName": "lib/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdStorage.sol/stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdStorage.sol/stdStorageSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1675105350518,
      "contentHash": "45fc08daaa17b7908fa5de7d758d8c86",
      "sourceName": "lib/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdUtils.sol/StdUtils.json"
        }
      }
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1675105350518,
      "contentHash": "9ca73393dbc2f8cde2aa628f8d05c5d5",
      "sourceName": "lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Test.sol/Test.json"
        }
      }
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1675105350518,
      "contentHash": "86d01713430fa0877970a6ed8f99dc78",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Vm.sol/Vm.json"
        },
        "VmSafe": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Vm.sol/VmSafe.json"
        }
      }
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1665088771900,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "console.sol/console.json"
        }
      }
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1675105350519,
      "contentHash": "2096b4e5f252c5df9909cccbe3d2da2e",
      "sourceName": "lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "console2.sol/console2.json"
        }
      }
    },
    "lib/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1675105350519,
      "contentHash": "7b131ca1ca32ef6378b7b9ad5488b901",
      "sourceName": "lib/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IMulticall3.sol/IMulticall3.json"
        }
      }
    },
    "lib/murky/src/Merkle.sol": {
      "lastModificationDate": 1665088772935,
      "contentHash": "d6ac199027d621d7a395af55df8a47f3",
      "sourceName": "lib/murky/src/Merkle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/murky/src/common/MurkyBase.sol"
      ],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "Merkle": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Merkle.sol/Merkle.json"
        }
      }
    },
    "lib/murky/src/common/MurkyBase.sol": {
      "lastModificationDate": 1665088772935,
      "contentHash": "ae7936b65dee6507cd285fc1f575b7c5",
      "sourceName": "lib/murky/src/common/MurkyBase.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.4",
      "artifacts": {
        "MurkyBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MurkyBase.sol/MurkyBase.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
      "lastModificationDate": 1675105350595,
      "contentHash": "10d65487f8dfb482f346cb4245d9321e",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AccessControl": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AccessControl.sol/AccessControl.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
      "lastModificationDate": 1665088851186,
      "contentHash": "57c84298234411cea19c7c284d86be8b",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IAccessControl": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IAccessControl.sol/IAccessControl.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "lastModificationDate": 1665088851186,
      "contentHash": "e436cea06129be2c73cda4b1acc848b5",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Ownable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Ownable.sol/Ownable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol": {
      "lastModificationDate": 1675105350598,
      "contentHash": "7daf4f3c28c1cafa96a1f61c603c44d8",
      "sourceName": "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC2981": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC2981.sol/IERC2981.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol": {
      "lastModificationDate": 1665088851190,
      "contentHash": "e6da7798a8c22c5043cc42d64a2a8f80",
      "sourceName": "lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "interfaces/IERC721.sol/IERC721.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
      "lastModificationDate": 1665088851191,
      "contentHash": "2858d98e74e67987ec81b39605230b74",
      "sourceName": "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1822Proxiable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "draft-IERC1822.sol/IERC1822Proxiable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
      "lastModificationDate": 1665088851198,
      "contentHash": "3fc3c7c0a2956f36e766691bb9473b06",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC1967Proxy": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC1967Proxy.sol/ERC1967Proxy.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
      "lastModificationDate": 1675105350604,
      "contentHash": "1d0e646d892752e1224291d22c6c1dea",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
        "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "ERC1967Upgrade": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC1967Upgrade.sol/ERC1967Upgrade.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
      "lastModificationDate": 1665088851198,
      "contentHash": "40b3d81a836d50ff47e03893dcaaf204",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Proxy": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Proxy.sol/Proxy.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
      "lastModificationDate": 1665088851198,
      "contentHash": "b6bd23bf19e90b771337037706470933",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IBeacon": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IBeacon.sol/IBeacon.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
      "lastModificationDate": 1670196810073,
      "contentHash": "ee1cd296e049da9a26bdb08e23a9036a",
      "sourceName": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ReentrancyGuard": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ReentrancyGuard.sol/ReentrancyGuard.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
      "lastModificationDate": 1675105350604,
      "contentHash": "4d3256019ba6ad31fae3e49ae65df1f5",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC1155": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC1155.sol/ERC1155.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
      "lastModificationDate": 1675105350605,
      "contentHash": "07f10ed1a8192bfafe9342017b3e7bf4",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1155": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC1155.sol/IERC1155.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
      "lastModificationDate": 1665088851199,
      "contentHash": "9f8822b72fe2702979e40160cb6d9636",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1155Receiver": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC1155Receiver.sol/IERC1155Receiver.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
      "lastModificationDate": 1665088851200,
      "contentHash": "9148c2e10c4efb12c71a7f080da5559b",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1155MetadataURI": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC1155MetadataURI.sol/IERC1155MetadataURI.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
      "lastModificationDate": 1675105350605,
      "contentHash": "6ed89860245df37c4ee9b36b18f2c301",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC20.sol/ERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
      "lastModificationDate": 1675105350605,
      "contentHash": "d3f395dc838796643e7a71419900ab23",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC20/IERC20.sol/IERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol": {
      "lastModificationDate": 1670196810074,
      "contentHash": "043fe66bed52c2b575a40bcae82bca2c",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20Permit": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC20Permit.sol/ERC20Permit.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
      "lastModificationDate": 1665088851201,
      "contentHash": "909ab67fc5c25033fe6cd364f8c056f9",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Metadata": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC20Metadata.sol/IERC20Metadata.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
      "lastModificationDate": 1670196810075,
      "contentHash": "e2c0f4f502e2fe75be0585737839ba9b",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Permit": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC20Permit.sol/IERC20Permit.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
      "lastModificationDate": 1675105350606,
      "contentHash": "422a9e1d0d93c6912af596faeb973a61",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeERC20": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SafeERC20.sol/SafeERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
      "lastModificationDate": 1675105350607,
      "contentHash": "ead6b9228efdd95babec9b29e1461a4b",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC721.sol/ERC721.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
      "lastModificationDate": 1675105350607,
      "contentHash": "486433785a00d0c478fb5025633ad7ae",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC721.sol/IERC721.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
      "lastModificationDate": 1665088851202,
      "contentHash": "c22d4395e33763de693fd440c6fd10e1",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Receiver": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC721Receiver.sol/IERC721Receiver.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
      "lastModificationDate": 1665088851203,
      "contentHash": "8af32effd0536e2971ff8496812a5016",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721URIStorage": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC721URIStorage.sol/ERC721URIStorage.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
      "lastModificationDate": 1665088851203,
      "contentHash": "efbc0d15b80a74e34dbe8da0f3e879bb",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Metadata": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC721Metadata.sol/IERC721Metadata.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
      "lastModificationDate": 1675105350607,
      "contentHash": "a61386e29a71a8fbed0556494a41e7a8",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721Holder": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC721Holder.sol/ERC721Holder.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
      "lastModificationDate": 1675105350608,
      "contentHash": "2c6fe5d06414fe4187c8ede16c92b102",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "Address": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Address.sol/Address.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "lastModificationDate": 1665088851205,
      "contentHash": "5f2c5c4b6af2dd4551027144797bc8be",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Context": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Context.sol/Context.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
      "lastModificationDate": 1665088851205,
      "contentHash": "74654e3ae5d7f39555055dfe244dab7a",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Counters": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Counters.sol/Counters.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
      "lastModificationDate": 1675105350609,
      "contentHash": "a1e571c5dfd1115a31f7ea904fcc6cb7",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StorageSlot": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StorageSlot.sol/StorageSlot.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "lastModificationDate": 1675105350609,
      "contentHash": "2f6e4b113762028699e08ee1b6093f0c",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Strings": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Strings.sol/Strings.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
      "lastModificationDate": 1675105350609,
      "contentHash": "851f58ceddb8336a953f55b9c08ddc3e",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ECDSA": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ECDSA.sol/ECDSA.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
      "lastModificationDate": 1670196810079,
      "contentHash": "7c33eaa0f6dc029429ed8b986694c3a4",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "EIP712": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "EIP712.sol/EIP712.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
      "lastModificationDate": 1675105350609,
      "contentHash": "c4dba5602511ca74161a10c960776289",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MerkleProof": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MerkleProof.sol/MerkleProof.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
      "lastModificationDate": 1665088851206,
      "contentHash": "0e7db055ce108f9da7bb6686a00287c0",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC165": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC165.sol/ERC165.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1665088851206,
      "contentHash": "03e6768535ac4da0e9756f1d8a4a018a",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC165.sol/IERC165.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1675105350610,
      "contentHash": "a3f54b5f791e71fcdde6fc1e8f562097",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Math": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Math.sol/Math.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
      "lastModificationDate": 1670196810080,
      "contentHash": "9488ebd4daacfee8ad04811600d7d061",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignedMath": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SignedMath.sol/SignedMath.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
      "lastModificationDate": 1665088851263,
      "contentHash": "1b75cef9b9daf022617c1363a931ea9a",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AccessControlUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AccessControlUpgradeable.sol/AccessControlUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
      "lastModificationDate": 1665088851263,
      "contentHash": "21b43d1337ebc77c11da3cbe3fd65316",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IAccessControlUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IAccessControlUpgradeable.sol/IAccessControlUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
      "lastModificationDate": 1665088851263,
      "contentHash": "403ce8273abde646bff81558ddf512ad",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "OwnableUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "OwnableUpgradeable.sol/OwnableUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
      "lastModificationDate": 1665088851269,
      "contentHash": "a6883cfd85607b16c121a02728369eb3",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1822ProxiableUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "draft-IERC1822Upgradeable.sol/IERC1822ProxiableUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
      "lastModificationDate": 1665088851278,
      "contentHash": "d1ceeaa35b60471b1c6e50d29d70354a",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "ERC1967UpgradeUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC1967UpgradeUpgradeable.sol/ERC1967UpgradeUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
      "lastModificationDate": 1665088851278,
      "contentHash": "21bffd733b4ca013e125a0ffe2e52254",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IBeaconUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IBeaconUpgradeable.sol/IBeaconUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
      "lastModificationDate": 1670196812332,
      "contentHash": "090dfbe3246b51b34aaeb0f434d99922",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "Initializable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Initializable.sol/Initializable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
      "lastModificationDate": 1665088851278,
      "contentHash": "e2b5655ccde8f88d058a175055195597",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "UUPSUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UUPSUpgradeable.sol/UUPSUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol": {
      "lastModificationDate": 1665088851278,
      "contentHash": "cbe53d6b803c1102081e00b3a0418ea3",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "PausableUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "PausableUpgradeable.sol/PausableUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
      "lastModificationDate": 1670196812333,
      "contentHash": "cc929a90456a03569225afcaad5a442d",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ReentrancyGuardUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ReentrancyGuardUpgradeable.sol/ReentrancyGuardUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
      "lastModificationDate": 1665088851284,
      "contentHash": "ba28cf60b52b00d2b3a190bcdf0952bd",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721ReceiverUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC721ReceiverUpgradeable.sol/IERC721ReceiverUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol": {
      "lastModificationDate": 1665088851286,
      "contentHash": "7c17712f64fafccaf270d4b39b0fe18a",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC721HolderUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC721HolderUpgradeable.sol/ERC721HolderUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
      "lastModificationDate": 1665088851287,
      "contentHash": "9b57aa3e6a7f0924e8fec5485de53e9d",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "AddressUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "AddressUpgradeable.sol/AddressUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
      "lastModificationDate": 1665088851287,
      "contentHash": "6200b84950eb05b4a92a39fd1d6e0f9b",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ContextUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ContextUpgradeable.sol/ContextUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
      "lastModificationDate": 1665088851288,
      "contentHash": "731fafe5fdaca6e0749253ab7ce7d3b9",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StorageSlotUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StorageSlotUpgradeable.sol/StorageSlotUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
      "lastModificationDate": 1665088851288,
      "contentHash": "0c08e1fdf9451dc923f200fb41fbfc47",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "StringsUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StringsUpgradeable.sol/StringsUpgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
      "lastModificationDate": 1665088851289,
      "contentHash": "5f2d8b81c0ff5bd2047b4846c20b998d",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol",
        "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC165Upgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC165Upgradeable.sol/ERC165Upgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
      "lastModificationDate": 1665088851289,
      "contentHash": "d6ecf203a5e72c845be9bbf2f304a289",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165Upgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC165Upgradeable.sol/IERC165Upgradeable.json"
        }
      }
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
      "lastModificationDate": 1670196812335,
      "contentHash": "e3a1735cd4b37c6c6fbd9d9264523264",
      "sourceName": "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "MathUpgradeable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MathUpgradeable.sol/MathUpgradeable.json"
        }
      }
    },
    "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol": {
      "lastModificationDate": 1678805554759,
      "contentHash": "550d544ce9f8aeb6c8e36f4668c4d4e5",
      "sourceName": "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/OperatorFilterer.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "DefaultOperatorFilterer": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "DefaultOperatorFilterer.sol/DefaultOperatorFilterer.json"
        }
      }
    },
    "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol": {
      "lastModificationDate": 1678805554759,
      "contentHash": "b94aae7a13345e7a6335c36449130f53",
      "sourceName": "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "IOperatorFilterRegistry": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IOperatorFilterRegistry.sol/IOperatorFilterRegistry.json"
        }
      }
    },
    "lib/operator-filter-registry/src/OperatorFilterer.sol": {
      "lastModificationDate": 1678805554760,
      "contentHash": "2ded61a996e511472250c700ca5e9484",
      "sourceName": "lib/operator-filter-registry/src/OperatorFilterer.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [
        "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol",
        "lib/operator-filter-registry/src/lib/Constants.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "OperatorFilterer": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "OperatorFilterer.sol/OperatorFilterer.json"
        }
      }
    },
    "lib/operator-filter-registry/src/lib/Constants.sol": {
      "lastModificationDate": 1678805554761,
      "contentHash": "876f88aa97e2dd0ad7d1fdccea191a00",
      "sourceName": "lib/operator-filter-registry/src/lib/Constants.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "london",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "Constants": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Constants.sol/Constants.json"
        }
      }
    }
  }
}
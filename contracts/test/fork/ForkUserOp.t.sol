// SPDX-License-Identifier: MIT
pragma solidity ^0.8.23;

// interfaces
import {IEntryPoint} from "account-abstraction/interfaces/IEntryPoint.sol";

// libraries

// contracts
import {SimpleAccountFactory} from "account-abstraction/samples/SimpleAccountFactory.sol";
import {SimpleAccount} from "account-abstraction/samples/SimpleAccount.sol";
import {TestUtils} from "contracts/test/utils/TestUtils.sol";

contract ForkUserOp is TestUtils {
  SimpleAccountFactory internal simpleAccountFactory;
  SimpleAccount internal simpleAccount;

  function setUp() public {
    simpleAccountFactory = new SimpleAccountFactory(
      IEntryPoint(0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789)
    );
  }

  function test_createSpace() public {
    SimpleAccount account = SimpleAccount(
      payable(0x3ae2671Accd11f83fB8b57eb6360921165bd3a4A)
    );

    vm.prank(address(0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789));
    (bool success, ) = address(account).call(
      hex"b61d27f6000000000000000000000000968696bc59431ef085441641f550c8e2eaca8bed000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000644cd55d94c0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000005c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000f7061696420746f776e20666978656400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002e00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000038d7ea4c6800000000000000000000000000000000000000000000000000000000000000027100000000000000000000000000000000000000000000000000000000001e133800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c5a61bf87c7040cd4e88c20374b21877a7a041700000000000000000000000000000000000000000000000000000000000000187061696420746f776e206669786564202d204d656d626572000000000000000000000000000000000000000000000000000000000000000000000000000000064d454d42455200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000004526561640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055772697465000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000552656163740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000767656e6572616c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    );
    require(success, "Failed to call createSpace");
  }

  function _createSimpleAccount(
    address owner
  ) internal returns (SimpleAccount) {
    return simpleAccountFactory.createAccount(owner, _randomUint256());
  }
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: protocol.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamKind int32

const (
	StreamKind_SK_UNSPECIFIED  StreamKind = 0
	StreamKind_SK_USER         StreamKind = 1
	StreamKind_SK_SPACE        StreamKind = 2
	StreamKind_SK_CHANNEL      StreamKind = 3
	StreamKind_SK_USER_SETTING StreamKind = 4
)

// Enum value maps for StreamKind.
var (
	StreamKind_name = map[int32]string{
		0: "SK_UNSPECIFIED",
		1: "SK_USER",
		2: "SK_SPACE",
		3: "SK_CHANNEL",
		4: "SK_USER_SETTING",
	}
	StreamKind_value = map[string]int32{
		"SK_UNSPECIFIED":  0,
		"SK_USER":         1,
		"SK_SPACE":        2,
		"SK_CHANNEL":      3,
		"SK_USER_SETTING": 4,
	}
)

func (x StreamKind) Enum() *StreamKind {
	p := new(StreamKind)
	*p = x
	return p
}

func (x StreamKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamKind) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[0].Descriptor()
}

func (StreamKind) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[0]
}

func (x StreamKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamKind.Descriptor instead.
func (StreamKind) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0}
}

type StreamOp int32

const (
	StreamOp_SO_UNSPECIFIED StreamOp = 0
	StreamOp_SO_INVITE      StreamOp = 1
	StreamOp_SO_JOIN        StreamOp = 2
	StreamOp_SO_LEAVE       StreamOp = 3
)

// Enum value maps for StreamOp.
var (
	StreamOp_name = map[int32]string{
		0: "SO_UNSPECIFIED",
		1: "SO_INVITE",
		2: "SO_JOIN",
		3: "SO_LEAVE",
	}
	StreamOp_value = map[string]int32{
		"SO_UNSPECIFIED": 0,
		"SO_INVITE":      1,
		"SO_JOIN":        2,
		"SO_LEAVE":       3,
	}
)

func (x StreamOp) Enum() *StreamOp {
	p := new(StreamOp)
	*p = x
	return p
}

func (x StreamOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamOp) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[1].Descriptor()
}

func (StreamOp) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[1]
}

func (x StreamOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamOp.Descriptor instead.
func (StreamOp) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{1}
}

type ChannelOp int32

const (
	ChannelOp_CO_UNSPECIFIED ChannelOp = 0
	ChannelOp_CO_CREATED     ChannelOp = 1
	ChannelOp_CO_DELETED     ChannelOp = 2
)

// Enum value maps for ChannelOp.
var (
	ChannelOp_name = map[int32]string{
		0: "CO_UNSPECIFIED",
		1: "CO_CREATED",
		2: "CO_DELETED",
	}
	ChannelOp_value = map[string]int32{
		"CO_UNSPECIFIED": 0,
		"CO_CREATED":     1,
		"CO_DELETED":     2,
	}
)

func (x ChannelOp) Enum() *ChannelOp {
	p := new(ChannelOp)
	*p = x
	return p
}

func (x ChannelOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChannelOp) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[2].Descriptor()
}

func (ChannelOp) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[2]
}

func (x ChannelOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChannelOp.Descriptor instead.
func (ChannelOp) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{2}
}

type UserSettingOp int32

const (
	UserSettingOp_USO_UNSPECIFIED UserSettingOp = 0
	UserSettingOp_USO_FULLY_READ  UserSettingOp = 1
)

// Enum value maps for UserSettingOp.
var (
	UserSettingOp_name = map[int32]string{
		0: "USO_UNSPECIFIED",
		1: "USO_FULLY_READ",
	}
	UserSettingOp_value = map[string]int32{
		"USO_UNSPECIFIED": 0,
		"USO_FULLY_READ":  1,
	}
)

func (x UserSettingOp) Enum() *UserSettingOp {
	p := new(UserSettingOp)
	*p = x
	return p
}

func (x UserSettingOp) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSettingOp) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[3].Descriptor()
}

func (UserSettingOp) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[3]
}

func (x UserSettingOp) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSettingOp.Descriptor instead.
func (UserSettingOp) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3}
}

type Err int32

const (
	Err_ERR_UNSPECIFIED            Err = 0
	Err_DEBUG_ERROR                Err = 1
	Err_BAD_STREAM_ID              Err = 2
	Err_BAD_STREAM_CREATION_PARAMS Err = 3
	Err_STREAM_ALREADY_EXISTS      Err = 4
	Err_INTERNAL_ERROR_SWITCH      Err = 5
	Err_BAD_EVENT_ID               Err = 6
	Err_BAD_EVENT_SIGNATURE        Err = 7
	Err_BAD_HASH_FORMAT            Err = 8
	Err_BAD_PREV_EVENTS            Err = 9
	Err_NO_EVENT_SPECIFIED         Err = 10
	Err_BAD_EVENT                  Err = 11
	Err_USER_CANT_POST             Err = 12
	Err_STREAM_NOT_FOUND           Err = 13
	Err_STREAM_BAD_HASHES          Err = 14
	Err_STREAM_EMPTY               Err = 15
	Err_STREAM_BAD_EVENT           Err = 16
	Err_BAD_DELEGATE_SIG           Err = 17
	Err_BAD_PUBLIC_KEY             Err = 18
	Err_BAD_PAYLOAD                Err = 19
	Err_BAD_HEX_STRING             Err = 20
)

// Enum value maps for Err.
var (
	Err_name = map[int32]string{
		0:  "ERR_UNSPECIFIED",
		1:  "DEBUG_ERROR",
		2:  "BAD_STREAM_ID",
		3:  "BAD_STREAM_CREATION_PARAMS",
		4:  "STREAM_ALREADY_EXISTS",
		5:  "INTERNAL_ERROR_SWITCH",
		6:  "BAD_EVENT_ID",
		7:  "BAD_EVENT_SIGNATURE",
		8:  "BAD_HASH_FORMAT",
		9:  "BAD_PREV_EVENTS",
		10: "NO_EVENT_SPECIFIED",
		11: "BAD_EVENT",
		12: "USER_CANT_POST",
		13: "STREAM_NOT_FOUND",
		14: "STREAM_BAD_HASHES",
		15: "STREAM_EMPTY",
		16: "STREAM_BAD_EVENT",
		17: "BAD_DELEGATE_SIG",
		18: "BAD_PUBLIC_KEY",
		19: "BAD_PAYLOAD",
		20: "BAD_HEX_STRING",
	}
	Err_value = map[string]int32{
		"ERR_UNSPECIFIED":            0,
		"DEBUG_ERROR":                1,
		"BAD_STREAM_ID":              2,
		"BAD_STREAM_CREATION_PARAMS": 3,
		"STREAM_ALREADY_EXISTS":      4,
		"INTERNAL_ERROR_SWITCH":      5,
		"BAD_EVENT_ID":               6,
		"BAD_EVENT_SIGNATURE":        7,
		"BAD_HASH_FORMAT":            8,
		"BAD_PREV_EVENTS":            9,
		"NO_EVENT_SPECIFIED":         10,
		"BAD_EVENT":                  11,
		"USER_CANT_POST":             12,
		"STREAM_NOT_FOUND":           13,
		"STREAM_BAD_HASHES":          14,
		"STREAM_EMPTY":               15,
		"STREAM_BAD_EVENT":           16,
		"BAD_DELEGATE_SIG":           17,
		"BAD_PUBLIC_KEY":             18,
		"BAD_PAYLOAD":                19,
		"BAD_HEX_STRING":             20,
	}
)

func (x Err) Enum() *Err {
	p := new(Err)
	*p = x
	return p
}

func (x Err) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Err) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[4].Descriptor()
}

func (Err) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[4]
}

func (x Err) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Err.Descriptor instead.
func (Err) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{4}
}

// *
// FullEvent is a hashed and signed event.
// hash is used as event id. Subsequent events reference this event by hash.
type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// *
	// Hash of BaseEvent formatted as 0x1234abcd
	// While hash can be recalculated from the BaseEvent, having it here explicitely
	// makes it easier to work with event.
	// For the event to be valid, must match hash of BaseEvent.
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// *
	// Signature in the form 0x1234
	// For the event to be valid, signature must match base.creatorAddress or
	// be signed by base.delegateSig.
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Event     []byte `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Envelope) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Envelope) GetEvent() []byte {
	if x != nil {
		return x.Event
	}
	return nil
}

type StreamEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// *
	// Address in the form 0xABcD...
	// Checksummed according to EIP-55.
	// Creator address can be recovered from the signature, but having
	// it explicitly in the event makes it easier to work with the event.
	// For the event to be valid:
	// If delegateSig is present, creatorAddress must match delegateSig.
	// If delegateSig is not present, creatorAddress must match event signature.
	CreatorAddress []byte `protobuf:"bytes,1,opt,name=creator_address,json=creatorAddress,proto3" json:"creator_address,omitempty"`
	// *
	// Signature that signs public key of the keypair that is used to sign the event.
	// If present, creatorAddress must match delegateSig and
	// FullEvent.signature's public key must be signed by delegateSig.
	//
	// delegateSig is used to delegate signing authority to another address.
	// Specifically, it is used to delegate signing authority to an app-managed
	// keypair from the user's wallet.
	//
	// Server nodes sign node-produced events with their own keypair and do not
	// need to use delegateSig.
	DelegageSig []byte `protobuf:"bytes,2,opt,name=delegage_sig,json=delegageSig,proto3" json:"delegage_sig,omitempty"`
	// * TODO: move salt to inception event
	Salt []byte `protobuf:"bytes,3,opt,name=salt,proto3" json:"salt,omitempty"`
	// * Hashes of the preceding leaf events in the stream. Empty array for the inception event.
	PrevEvents [][]byte `protobuf:"bytes,4,rep,name=prev_events,json=prevEvents,proto3" json:"prev_events,omitempty"`
	// * Variable-type payload.
	Payload *Payload `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *StreamEvent) Reset() {
	*x = StreamEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEvent) ProtoMessage() {}

func (x *StreamEvent) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEvent.ProtoReflect.Descriptor instead.
func (*StreamEvent) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *StreamEvent) GetCreatorAddress() []byte {
	if x != nil {
		return x.CreatorAddress
	}
	return nil
}

func (x *StreamEvent) GetDelegageSig() []byte {
	if x != nil {
		return x.DelegageSig
	}
	return nil
}

func (x *StreamEvent) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

func (x *StreamEvent) GetPrevEvents() [][]byte {
	if x != nil {
		return x.PrevEvents
	}
	return nil
}

func (x *StreamEvent) GetPayload() *Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// *
// Derived event is produces by server when there should be additional event to compliment
// received event. For example, when user joins a space through event in the space stream, server will produce a derived event
// in a user stream to indicate that user joined a particual space.
//
// EventRef is used to reference the event that caused the derived event to be produced.
type EventRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId  string `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Hash      []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *EventRef) Reset() {
	*x = EventRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRef) ProtoMessage() {}

func (x *EventRef) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRef.ProtoReflect.Descriptor instead.
func (*EventRef) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *EventRef) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *EventRef) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *EventRef) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*Payload_Inception_
	//	*Payload_UserStreamOp_
	//	*Payload_JoinableStream_
	//	*Payload_Channel_
	//	*Payload_Message_
	//	*Payload_UserSetting_
	Payload isPayload_Payload `protobuf_oneof:"payload"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3}
}

func (m *Payload) GetPayload() isPayload_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Payload) GetInception() *Payload_Inception {
	if x, ok := x.GetPayload().(*Payload_Inception_); ok {
		return x.Inception
	}
	return nil
}

func (x *Payload) GetUserStreamOp() *Payload_UserStreamOp {
	if x, ok := x.GetPayload().(*Payload_UserStreamOp_); ok {
		return x.UserStreamOp
	}
	return nil
}

func (x *Payload) GetJoinableStream() *Payload_JoinableStream {
	if x, ok := x.GetPayload().(*Payload_JoinableStream_); ok {
		return x.JoinableStream
	}
	return nil
}

func (x *Payload) GetChannel() *Payload_Channel {
	if x, ok := x.GetPayload().(*Payload_Channel_); ok {
		return x.Channel
	}
	return nil
}

func (x *Payload) GetMessage() *Payload_Message {
	if x, ok := x.GetPayload().(*Payload_Message_); ok {
		return x.Message
	}
	return nil
}

func (x *Payload) GetUserSetting() *Payload_UserSetting {
	if x, ok := x.GetPayload().(*Payload_UserSetting_); ok {
		return x.UserSetting
	}
	return nil
}

type isPayload_Payload interface {
	isPayload_Payload()
}

type Payload_Inception_ struct {
	Inception *Payload_Inception `protobuf:"bytes,1,opt,name=inception,proto3,oneof"`
}

type Payload_UserStreamOp_ struct {
	UserStreamOp *Payload_UserStreamOp `protobuf:"bytes,2,opt,name=user_stream_op,json=userStreamOp,proto3,oneof"`
}

type Payload_JoinableStream_ struct {
	JoinableStream *Payload_JoinableStream `protobuf:"bytes,3,opt,name=joinable_stream,json=joinableStream,proto3,oneof"`
}

type Payload_Channel_ struct {
	Channel *Payload_Channel `protobuf:"bytes,4,opt,name=channel,proto3,oneof"`
}

type Payload_Message_ struct {
	Message *Payload_Message `protobuf:"bytes,5,opt,name=message,proto3,oneof"`
}

type Payload_UserSetting_ struct {
	UserSetting *Payload_UserSetting `protobuf:"bytes,6,opt,name=user_setting,json=userSetting,proto3,oneof"`
}

func (*Payload_Inception_) isPayload_Payload() {}

func (*Payload_UserStreamOp_) isPayload_Payload() {}

func (*Payload_JoinableStream_) isPayload_Payload() {}

func (*Payload_Channel_) isPayload_Payload() {}

func (*Payload_Message_) isPayload_Payload() {}

func (*Payload_UserSetting_) isPayload_Payload() {}

type StreamAndCookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events             []*Envelope `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	NextSyncCookie     []byte      `protobuf:"bytes,2,opt,name=next_sync_cookie,json=nextSyncCookie,proto3" json:"next_sync_cookie,omitempty"`
	OriginalSyncCookie []byte      `protobuf:"bytes,3,opt,name=original_sync_cookie,json=originalSyncCookie,proto3" json:"original_sync_cookie,omitempty"`
	StreamId           string      `protobuf:"bytes,4,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
}

func (x *StreamAndCookie) Reset() {
	*x = StreamAndCookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamAndCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAndCookie) ProtoMessage() {}

func (x *StreamAndCookie) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAndCookie.ProtoReflect.Descriptor instead.
func (*StreamAndCookie) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *StreamAndCookie) GetEvents() []*Envelope {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *StreamAndCookie) GetNextSyncCookie() []byte {
	if x != nil {
		return x.NextSyncCookie
	}
	return nil
}

func (x *StreamAndCookie) GetOriginalSyncCookie() []byte {
	if x != nil {
		return x.OriginalSyncCookie
	}
	return nil
}

func (x *StreamAndCookie) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

type CreateStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Envelope `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *CreateStreamRequest) Reset() {
	*x = CreateStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamRequest) ProtoMessage() {}

func (x *CreateStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamRequest.ProtoReflect.Descriptor instead.
func (*CreateStreamRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *CreateStreamRequest) GetEvents() []*Envelope {
	if x != nil {
		return x.Events
	}
	return nil
}

type CreateStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncCookie []byte `protobuf:"bytes,1,opt,name=sync_cookie,json=syncCookie,proto3" json:"sync_cookie,omitempty"`
}

func (x *CreateStreamResponse) Reset() {
	*x = CreateStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStreamResponse) ProtoMessage() {}

func (x *CreateStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStreamResponse.ProtoReflect.Descriptor instead.
func (*CreateStreamResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *CreateStreamResponse) GetSyncCookie() []byte {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

type GetStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
}

func (x *GetStreamRequest) Reset() {
	*x = GetStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamRequest) ProtoMessage() {}

func (x *GetStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamRequest.ProtoReflect.Descriptor instead.
func (*GetStreamRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{7}
}

func (x *GetStreamRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

type GetStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stream *StreamAndCookie `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
}

func (x *GetStreamResponse) Reset() {
	*x = GetStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStreamResponse) ProtoMessage() {}

func (x *GetStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStreamResponse.ProtoReflect.Descriptor instead.
func (*GetStreamResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{8}
}

func (x *GetStreamResponse) GetStream() *StreamAndCookie {
	if x != nil {
		return x.Stream
	}
	return nil
}

type AddEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId string    `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Event    *Envelope `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *AddEventRequest) Reset() {
	*x = AddEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEventRequest) ProtoMessage() {}

func (x *AddEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEventRequest.ProtoReflect.Descriptor instead.
func (*AddEventRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{9}
}

func (x *AddEventRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *AddEventRequest) GetEvent() *Envelope {
	if x != nil {
		return x.Event
	}
	return nil
}

type AddEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddEventResponse) Reset() {
	*x = AddEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEventResponse) ProtoMessage() {}

func (x *AddEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEventResponse.ProtoReflect.Descriptor instead.
func (*AddEventResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{10}
}

type SyncPos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId   string `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	SyncCookie []byte `protobuf:"bytes,2,opt,name=sync_cookie,json=syncCookie,proto3" json:"sync_cookie,omitempty"`
}

func (x *SyncPos) Reset() {
	*x = SyncPos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPos) ProtoMessage() {}

func (x *SyncPos) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPos.ProtoReflect.Descriptor instead.
func (*SyncPos) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{11}
}

func (x *SyncPos) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *SyncPos) GetSyncCookie() []byte {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

type SyncStreamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncPos   []*SyncPos `protobuf:"bytes,1,rep,name=sync_pos,json=syncPos,proto3" json:"sync_pos,omitempty"`
	TimeoutMs uint32     `protobuf:"varint,2,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`
}

func (x *SyncStreamsRequest) Reset() {
	*x = SyncStreamsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStreamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStreamsRequest) ProtoMessage() {}

func (x *SyncStreamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStreamsRequest.ProtoReflect.Descriptor instead.
func (*SyncStreamsRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{12}
}

func (x *SyncStreamsRequest) GetSyncPos() []*SyncPos {
	if x != nil {
		return x.SyncPos
	}
	return nil
}

func (x *SyncStreamsRequest) GetTimeoutMs() uint32 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

type SyncStreamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Streams []*StreamAndCookie `protobuf:"bytes,1,rep,name=streams,proto3" json:"streams,omitempty"`
}

func (x *SyncStreamsResponse) Reset() {
	*x = SyncStreamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStreamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStreamsResponse) ProtoMessage() {}

func (x *SyncStreamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStreamsResponse.ProtoReflect.Descriptor instead.
func (*SyncStreamsResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{13}
}

func (x *SyncStreamsResponse) GetStreams() []*StreamAndCookie {
	if x != nil {
		return x.Streams
	}
	return nil
}

type InfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Debug string `protobuf:"bytes,1,opt,name=debug,proto3" json:"debug,omitempty"`
}

func (x *InfoRequest) Reset() {
	*x = InfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoRequest) ProtoMessage() {}

func (x *InfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoRequest.ProtoReflect.Descriptor instead.
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{14}
}

func (x *InfoRequest) GetDebug() string {
	if x != nil {
		return x.Debug
	}
	return ""
}

type InfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Graffiti string `protobuf:"bytes,1,opt,name=graffiti,proto3" json:"graffiti,omitempty"`
}

func (x *InfoResponse) Reset() {
	*x = InfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoResponse) ProtoMessage() {}

func (x *InfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoResponse.ProtoReflect.Descriptor instead.
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{15}
}

func (x *InfoResponse) GetGraffiti() string {
	if x != nil {
		return x.Graffiti
	}
	return ""
}

type Payload_Inception struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamId   string     `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	StreamKind StreamKind `protobuf:"varint,2,opt,name=stream_kind,json=streamKind,proto3,enum=casablanca.StreamKind" json:"stream_kind,omitempty"`
	SpaceId    string     `protobuf:"bytes,3,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
}

func (x *Payload_Inception) Reset() {
	*x = Payload_Inception{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload_Inception) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_Inception) ProtoMessage() {}

func (x *Payload_Inception) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_Inception.ProtoReflect.Descriptor instead.
func (*Payload_Inception) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Payload_Inception) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *Payload_Inception) GetStreamKind() StreamKind {
	if x != nil {
		return x.StreamKind
	}
	return StreamKind_SK_UNSPECIFIED
}

func (x *Payload_Inception) GetSpaceId() string {
	if x != nil {
		return x.SpaceId
	}
	return ""
}

type Payload_UserStreamOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op          StreamOp  `protobuf:"varint,1,opt,name=op,proto3,enum=casablanca.StreamOp" json:"op,omitempty"`
	StreamId    string    `protobuf:"bytes,2,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	InviterId   string    `protobuf:"bytes,3,opt,name=inviter_id,json=inviterId,proto3" json:"inviter_id,omitempty"`
	OriginEvent *EventRef `protobuf:"bytes,4,opt,name=origin_event,json=originEvent,proto3" json:"origin_event,omitempty"`
}

func (x *Payload_UserStreamOp) Reset() {
	*x = Payload_UserStreamOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload_UserStreamOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_UserStreamOp) ProtoMessage() {}

func (x *Payload_UserStreamOp) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_UserStreamOp.ProtoReflect.Descriptor instead.
func (*Payload_UserStreamOp) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3, 1}
}

func (x *Payload_UserStreamOp) GetOp() StreamOp {
	if x != nil {
		return x.Op
	}
	return StreamOp_SO_UNSPECIFIED
}

func (x *Payload_UserStreamOp) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *Payload_UserStreamOp) GetInviterId() string {
	if x != nil {
		return x.InviterId
	}
	return ""
}

func (x *Payload_UserStreamOp) GetOriginEvent() *EventRef {
	if x != nil {
		return x.OriginEvent
	}
	return nil
}

type Payload_JoinableStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op     StreamOp `protobuf:"varint,1,opt,name=op,proto3,enum=casablanca.StreamOp" json:"op,omitempty"`
	UserId string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *Payload_JoinableStream) Reset() {
	*x = Payload_JoinableStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload_JoinableStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_JoinableStream) ProtoMessage() {}

func (x *Payload_JoinableStream) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_JoinableStream.ProtoReflect.Descriptor instead.
func (*Payload_JoinableStream) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3, 2}
}

func (x *Payload_JoinableStream) GetOp() StreamOp {
	if x != nil {
		return x.Op
	}
	return StreamOp_SO_UNSPECIFIED
}

func (x *Payload_JoinableStream) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Payload_Channel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op          ChannelOp `protobuf:"varint,1,opt,name=op,proto3,enum=casablanca.ChannelOp" json:"op,omitempty"`
	ChannelId   string    `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	OriginEvent *EventRef `protobuf:"bytes,3,opt,name=origin_event,json=originEvent,proto3" json:"origin_event,omitempty"`
}

func (x *Payload_Channel) Reset() {
	*x = Payload_Channel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload_Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_Channel) ProtoMessage() {}

func (x *Payload_Channel) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_Channel.ProtoReflect.Descriptor instead.
func (*Payload_Channel) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3, 3}
}

func (x *Payload_Channel) GetOp() ChannelOp {
	if x != nil {
		return x.Op
	}
	return ChannelOp_CO_UNSPECIFIED
}

func (x *Payload_Channel) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *Payload_Channel) GetOriginEvent() *EventRef {
	if x != nil {
		return x.OriginEvent
	}
	return nil
}

type Payload_UserSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op          UserSettingOp `protobuf:"varint,1,opt,name=op,proto3,enum=casablanca.UserSettingOp" json:"op,omitempty"`
	Value       []byte        `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ChannelId   *string       `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3,oneof" json:"channel_id,omitempty"`
	OriginEvent *EventRef     `protobuf:"bytes,4,opt,name=origin_event,json=originEvent,proto3,oneof" json:"origin_event,omitempty"`
}

func (x *Payload_UserSetting) Reset() {
	*x = Payload_UserSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload_UserSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_UserSetting) ProtoMessage() {}

func (x *Payload_UserSetting) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_UserSetting.ProtoReflect.Descriptor instead.
func (*Payload_UserSetting) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3, 4}
}

func (x *Payload_UserSetting) GetOp() UserSettingOp {
	if x != nil {
		return x.Op
	}
	return UserSettingOp_USO_UNSPECIFIED
}

func (x *Payload_UserSetting) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Payload_UserSetting) GetChannelId() string {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return ""
}

func (x *Payload_UserSetting) GetOriginEvent() *EventRef {
	if x != nil {
		return x.OriginEvent
	}
	return nil
}

type Payload_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Payload_Message) Reset() {
	*x = Payload_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_Message) ProtoMessage() {}

func (x *Payload_Message) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_Message.ProtoReflect.Descriptor instead.
func (*Payload_Message) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3, 5}
}

func (x *Payload_Message) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_protocol_proto protoreflect.FileDescriptor

var file_protocol_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x22, 0x52, 0x0a, 0x08,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0xbd, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x67, 0x65, 0x53, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x61, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x59, 0x0a, 0x08, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x9c, 0x09, 0x0a, 0x07,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3d, 0x0a, 0x09, 0x69, 0x6e, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x61, 0x73,
	0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e,
	0x49, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09, 0x69, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70,
	0x48, 0x00, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70,
	0x12, 0x4d, 0x0a, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x61, 0x73, 0x61,
	0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x48, 0x00, 0x52,
	0x0e, 0x6a, 0x6f, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x37, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x37, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x61, 0x73, 0x61,
	0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x44, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c,
	0x61, 0x6e, 0x63, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x7c, 0x0a, 0x09, 0x49, 0x6e, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61,
	0x6e, 0x63, 0x61, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x0a,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xa9, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x12, 0x24, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x66, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x1a, 0x4f, 0x0a, 0x0e, 0x4a, 0x6f, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x24, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x1a, 0x88, 0x01, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x25,
	0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x61, 0x73,
	0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f,
	0x70, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x61, 0x73,
	0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66,
	0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0xd0, 0x01,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a,
	0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x63, 0x61, 0x73, 0x61,
	0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x4f, 0x70, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62,
	0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x48, 0x01,
	0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x1a, 0x1d, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x0f, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x2c,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x45, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x10,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x79, 0x6e, 0x63,
	0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x37, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x61, 0x73, 0x61,
	0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6e, 0x64,
	0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x5a,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x64,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47,
	0x0a, 0x07, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x79, 0x6e,
	0x63, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x22, 0x63, 0x0a, 0x12, 0x53, 0x79, 0x6e, 0x63, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x08, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x50, 0x6f, 0x73, 0x52, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x4d, 0x73, 0x22, 0x4c, 0x0a, 0x13,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63,
	0x61, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x52, 0x07, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x22, 0x23, 0x0a, 0x0b, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x65, 0x62, 0x75, 0x67, 0x22,
	0x2a, 0x0a, 0x0c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x66, 0x66, 0x69, 0x74, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x72, 0x61, 0x66, 0x66, 0x69, 0x74, 0x69, 0x2a, 0x60, 0x0a, 0x0a, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x4b, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x4b, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4b,
	0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x4b, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x4b, 0x5f, 0x55,
	0x53, 0x45, 0x52, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x2a, 0x48, 0x0a,
	0x08, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x70, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x4f, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x4f, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x4f, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4f, 0x5f,
	0x4c, 0x45, 0x41, 0x56, 0x45, 0x10, 0x03, 0x2a, 0x3f, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4f, 0x70, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x5f, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x5f, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x38, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x12, 0x13, 0x0a, 0x0f, 0x55, 0x53, 0x4f,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x55, 0x53, 0x4f, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x59, 0x5f, 0x52, 0x45, 0x41, 0x44,
	0x10, 0x01, 0x2a, 0xc8, 0x03, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x52,
	0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0f, 0x0a, 0x0b, 0x44, 0x45, 0x42, 0x55, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x42, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x49,
	0x44, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x42, 0x41, 0x44, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x41,
	0x4d, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d,
	0x53, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x41, 0x4c,
	0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x04, 0x12, 0x19,
	0x0a, 0x15, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x41, 0x44,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x44, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x42,
	0x41, 0x44, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55,
	0x52, 0x45, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x41, 0x44, 0x5f, 0x48, 0x41, 0x53, 0x48,
	0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x41, 0x44,
	0x5f, 0x50, 0x52, 0x45, 0x56, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x53, 0x10, 0x09, 0x12, 0x16,
	0x0a, 0x12, 0x4e, 0x4f, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x41, 0x44, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x10, 0x0b, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x43, 0x41,
	0x4e, 0x54, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x0c, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x52,
	0x45, 0x41, 0x4d, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x0d, 0x12,
	0x15, 0x0a, 0x11, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x48, 0x41,
	0x53, 0x48, 0x45, 0x53, 0x10, 0x0e, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4d,
	0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x0f, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x52, 0x45,
	0x41, 0x4d, 0x5f, 0x42, 0x41, 0x44, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x10, 0x12, 0x14,
	0x0a, 0x10, 0x42, 0x41, 0x44, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x47, 0x41, 0x54, 0x45, 0x5f, 0x53,
	0x49, 0x47, 0x10, 0x11, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x41, 0x44, 0x5f, 0x50, 0x55, 0x42, 0x4c,
	0x49, 0x43, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x12, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x44, 0x5f,
	0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x10, 0x13, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x41, 0x44,
	0x5f, 0x48, 0x45, 0x58, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x14, 0x32, 0xfe, 0x02,
	0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x51, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x1f, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x1c, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62,
	0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e,
	0x63, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x63, 0x61,
	0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63,
	0x61, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1a,
	0x5a, 0x18, 0x63, 0x61, 0x73, 0x61, 0x62, 0x6c, 0x61, 0x6e, 0x63, 0x61, 0x2f, 0x6e, 0x6f, 0x64,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_protocol_proto_rawDescOnce sync.Once
	file_protocol_proto_rawDescData = file_protocol_proto_rawDesc
)

func file_protocol_proto_rawDescGZIP() []byte {
	file_protocol_proto_rawDescOnce.Do(func() {
		file_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_proto_rawDescData)
	})
	return file_protocol_proto_rawDescData
}

var file_protocol_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_protocol_proto_goTypes = []interface{}{
	(StreamKind)(0),                // 0: casablanca.StreamKind
	(StreamOp)(0),                  // 1: casablanca.StreamOp
	(ChannelOp)(0),                 // 2: casablanca.ChannelOp
	(UserSettingOp)(0),             // 3: casablanca.UserSettingOp
	(Err)(0),                       // 4: casablanca.Err
	(*Envelope)(nil),               // 5: casablanca.Envelope
	(*StreamEvent)(nil),            // 6: casablanca.StreamEvent
	(*EventRef)(nil),               // 7: casablanca.EventRef
	(*Payload)(nil),                // 8: casablanca.Payload
	(*StreamAndCookie)(nil),        // 9: casablanca.StreamAndCookie
	(*CreateStreamRequest)(nil),    // 10: casablanca.CreateStreamRequest
	(*CreateStreamResponse)(nil),   // 11: casablanca.CreateStreamResponse
	(*GetStreamRequest)(nil),       // 12: casablanca.GetStreamRequest
	(*GetStreamResponse)(nil),      // 13: casablanca.GetStreamResponse
	(*AddEventRequest)(nil),        // 14: casablanca.AddEventRequest
	(*AddEventResponse)(nil),       // 15: casablanca.AddEventResponse
	(*SyncPos)(nil),                // 16: casablanca.SyncPos
	(*SyncStreamsRequest)(nil),     // 17: casablanca.SyncStreamsRequest
	(*SyncStreamsResponse)(nil),    // 18: casablanca.SyncStreamsResponse
	(*InfoRequest)(nil),            // 19: casablanca.InfoRequest
	(*InfoResponse)(nil),           // 20: casablanca.InfoResponse
	(*Payload_Inception)(nil),      // 21: casablanca.Payload.Inception
	(*Payload_UserStreamOp)(nil),   // 22: casablanca.Payload.UserStreamOp
	(*Payload_JoinableStream)(nil), // 23: casablanca.Payload.JoinableStream
	(*Payload_Channel)(nil),        // 24: casablanca.Payload.Channel
	(*Payload_UserSetting)(nil),    // 25: casablanca.Payload.UserSetting
	(*Payload_Message)(nil),        // 26: casablanca.Payload.Message
}
var file_protocol_proto_depIdxs = []int32{
	8,  // 0: casablanca.StreamEvent.payload:type_name -> casablanca.Payload
	21, // 1: casablanca.Payload.inception:type_name -> casablanca.Payload.Inception
	22, // 2: casablanca.Payload.user_stream_op:type_name -> casablanca.Payload.UserStreamOp
	23, // 3: casablanca.Payload.joinable_stream:type_name -> casablanca.Payload.JoinableStream
	24, // 4: casablanca.Payload.channel:type_name -> casablanca.Payload.Channel
	26, // 5: casablanca.Payload.message:type_name -> casablanca.Payload.Message
	25, // 6: casablanca.Payload.user_setting:type_name -> casablanca.Payload.UserSetting
	5,  // 7: casablanca.StreamAndCookie.events:type_name -> casablanca.Envelope
	5,  // 8: casablanca.CreateStreamRequest.events:type_name -> casablanca.Envelope
	9,  // 9: casablanca.GetStreamResponse.stream:type_name -> casablanca.StreamAndCookie
	5,  // 10: casablanca.AddEventRequest.event:type_name -> casablanca.Envelope
	16, // 11: casablanca.SyncStreamsRequest.sync_pos:type_name -> casablanca.SyncPos
	9,  // 12: casablanca.SyncStreamsResponse.streams:type_name -> casablanca.StreamAndCookie
	0,  // 13: casablanca.Payload.Inception.stream_kind:type_name -> casablanca.StreamKind
	1,  // 14: casablanca.Payload.UserStreamOp.op:type_name -> casablanca.StreamOp
	7,  // 15: casablanca.Payload.UserStreamOp.origin_event:type_name -> casablanca.EventRef
	1,  // 16: casablanca.Payload.JoinableStream.op:type_name -> casablanca.StreamOp
	2,  // 17: casablanca.Payload.Channel.op:type_name -> casablanca.ChannelOp
	7,  // 18: casablanca.Payload.Channel.origin_event:type_name -> casablanca.EventRef
	3,  // 19: casablanca.Payload.UserSetting.op:type_name -> casablanca.UserSettingOp
	7,  // 20: casablanca.Payload.UserSetting.origin_event:type_name -> casablanca.EventRef
	10, // 21: casablanca.StreamService.CreateStream:input_type -> casablanca.CreateStreamRequest
	12, // 22: casablanca.StreamService.GetStream:input_type -> casablanca.GetStreamRequest
	14, // 23: casablanca.StreamService.AddEvent:input_type -> casablanca.AddEventRequest
	17, // 24: casablanca.StreamService.SyncStreams:input_type -> casablanca.SyncStreamsRequest
	19, // 25: casablanca.StreamService.Info:input_type -> casablanca.InfoRequest
	11, // 26: casablanca.StreamService.CreateStream:output_type -> casablanca.CreateStreamResponse
	13, // 27: casablanca.StreamService.GetStream:output_type -> casablanca.GetStreamResponse
	15, // 28: casablanca.StreamService.AddEvent:output_type -> casablanca.AddEventResponse
	18, // 29: casablanca.StreamService.SyncStreams:output_type -> casablanca.SyncStreamsResponse
	20, // 30: casablanca.StreamService.Info:output_type -> casablanca.InfoResponse
	26, // [26:31] is the sub-list for method output_type
	21, // [21:26] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_protocol_proto_init() }
func file_protocol_proto_init() {
	if File_protocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Envelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamAndCookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncStreamsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncStreamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload_Inception); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload_UserStreamOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload_JoinableStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload_Channel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload_UserSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protocol_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Payload_Inception_)(nil),
		(*Payload_UserStreamOp_)(nil),
		(*Payload_JoinableStream_)(nil),
		(*Payload_Channel_)(nil),
		(*Payload_Message_)(nil),
		(*Payload_UserSetting_)(nil),
	}
	file_protocol_proto_msgTypes[20].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocol_proto_goTypes,
		DependencyIndexes: file_protocol_proto_depIdxs,
		EnumInfos:         file_protocol_proto_enumTypes,
		MessageInfos:      file_protocol_proto_msgTypes,
	}.Build()
	File_protocol_proto = out.File
	file_protocol_proto_rawDesc = nil
	file_protocol_proto_goTypes = nil
	file_protocol_proto_depIdxs = nil
}

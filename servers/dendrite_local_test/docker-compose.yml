version: "3.4"
services:

  postgres-dendrite:
    container_name: postgres-dendrite
    image: postgres:14
    restart: always
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_PASSWORD: itsasecret
      POSTGRES_USER: dendrite
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dendrite"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - internal

  dendrite:
    ##### COMMON CONFIGURATION #####
    command:
        [
            '--tls-cert=server.crt',
            '--tls-key=server.key',
            '--really-enable-open-registration',
            '--config=/usr/config/dendrite-zion.yaml',
        ]
    ports:
        - 8008:8008
        - 8448:8448
    volumes:
      - ./volumes/dendrite/config:/etc/dendrite
      - ./volumes/dendrite/media:/var/dendrite/media
    depends_on:
        - postgres-dendrite
    networks:
        - internal
    restart: unless-stopped

    
    ##### LOCAL DEV CONFIGURATION #####

    build:
      context: ../dendrite
      dockerfile: build/docker/Dockerfile.monolith 
    
    environment:
        BLOCKCHAIN_PROVIDER_URL: https://goerli.infura.io/v3/888e72a42bbd4ae996b3707864dd8c88
        CHAIN_ID: 31337
        DATABASE_CONNECTION_STRING: postgresql://dendrite:itsasecret@host.docker.internal:5432/dendrite?sslmode=disable
        SERVER_NAME: localhost

    ##### PROD-LIKE CONFIGURATION #####

    # image: docker.io/herenotthere/dendrite-monolith:f33fe64
    # environment:
    #     BLOCKCHAIN_PROVIDER_URL: https://goerli.infura.io/v3/888e72a42bbd4ae996b3707864dd8c88
    #     CHAIN_ID: 5
    #     DATABASE_CONNECTION_STRING: postgresql://dendrite:itsasecret@postgres-dendrite:5432/dendrite?sslmode=disable
    #     SERVER_NAME: node1.towns.com

networks:
  internal:
    attachable: true
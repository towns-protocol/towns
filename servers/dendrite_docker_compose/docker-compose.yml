version: "3.4"
services:
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "root"
    ports:
      - "5050:80"

  postgres:
    hostname: postgres
    image: postgres:14
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres/create_db.sh:/docker-entrypoint-initdb.d/20-create_db.sh
      # To persist your PostgreSQL databases outside of the Docker image, 
      # to prevent data loss, modify the following ./path_to path:
      - ./volumes/postgres/data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: itsasecret
      POSTGRES_USER: dendrite
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dendrite"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - internal

  monolith:
    hostname: monolith
    image: herenotthere/dendrite-monolith:latest
    command: [
      "--tls-cert=server.crt",
      "--tls-key=server.key",
      "--really-enable-open-registration" # TODO: let's get back to this as a team when we want to clean up security-wise
    ]
    ports:
      - 8008:8008
      - 8448:8448
    volumes:
      - ./volumes/dendrite/config:/etc/dendrite
      - ./volumes/dendrite/media:/var/dendrite/media
    depends_on:
      - postgres
    networks:
      - internal
    restart: unless-stopped

networks:
  internal:
    attachable: true

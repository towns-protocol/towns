main = "./src/index.ts"
name = "token-worker"
compatibility_date = "2023-01-18"
# wrangler should be source of truth https://developers.cloudflare.com/workers/wrangler/configuration/#source-of-truth, so defining custom_domain here even though it causes issue in our use case:
# We are using a custom domain which is a subdomain of a zone that has no content, yet (zion.xyz). 
# This causes `wrangler dev` to fail https://github.com/cloudflare/wrangler2/issues/2149
# But `wrangler dev --local` (which is what our VSCode task uses) and publishing work fine. 
# If you really need `wrangler dev` for some reason, remove the following line temporarily
# keeping zone_id for reference
account_id="9840f8a36a817b103e00e29a0e2bad6f"
minify=true

# this is for tests, so it gets used even though wrangler CLI says otherwise
[miniflare]
cache_persist = false

[dev]
ip = "localhost"
port = 8006
local_protocol = "http"

[vars]
# VAR_NAME = "some_value"


# The necessary secrets are: 
# ALCHEMY_API_KEY
# AUTH_SECRET 
# for local development, you can add these in .dev.vars
# 
# For production, you can add these in the Cloudflare dashboard or run
# `echo <VALUE> | wrangler secret put <NAME>` for each of these

# staging routes
# yarn publish:stage
[env.staging]
routes = [{ pattern = "token-worker-staging.towns.com", custom_domain = true }]
workers_dev = true
vars = { ENVIRONMENT = "staging" }

# production routes
# yarn publish:prod
[env.production]
routes = [{ pattern = "token-worker.towns.com", custom_domain = true }]
vars = { ENVIRONMENT = "production" }

# test routes
# yarn publish:test
[env.test]
routes = [{ pattern = "token-worker-test.towns.com", custom_domain = true }]
vars = { ENVIRONMENT = "test" }

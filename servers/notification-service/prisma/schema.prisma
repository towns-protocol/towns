generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
  previewFeatures = ["metrics"]
}

datasource db {
  provider = "postgresql"
  url      = env("NOTIFICATION_DATABASE_URL")
}

model NotificationTag {
  SpaceId   String?
  ChannelId String
  ThreadId  String?
  UserId    String
  Tag       String

  @@id([ChannelId, UserId])
}

model PushSubscription {
  PushType         String @default("web-push")
  UserId           String
  PushSubscription String @id

  @@index([UserId], map: "idx_user_id")
}

model UserSettings {
  UserId              String                @id
  ReplyTo             Boolean               @default(true)
  Mention             Boolean               @default(true)
  DirectMessage       Boolean               @default(true)
  UserSettingsChannel UserSettingsChannel[]
  UserSettingsSpace   UserSettingsSpace[]
  BlockedUsers        String[]              @default([])
}

model UserSettingsChannel {
  SpaceId      String
  ChannelId    String
  UserId       String
  ChannelMute  Mute         @default(default)
  UserSettings UserSettings @relation(fields: [UserId], references: [UserId], onDelete: Cascade, onUpdate: NoAction)

  @@id([ChannelId, UserId])
}

model UserSettingsSpace {
  SpaceId      String
  UserId       String
  SpaceMute    Mute         @default(default)
  UserSettings UserSettings @relation(fields: [UserId], references: [UserId], onDelete: Cascade, onUpdate: NoAction)

  @@id([SpaceId, UserId])
}

enum Mute {
  default
  unmuted
  muted
}

model SyncedStream {
  StreamId   String     @id
  UserIds    String[]
  Kind       StreamKind
  SyncCookie String
}

enum StreamKind {
  DM
  GDM
  Channel
}

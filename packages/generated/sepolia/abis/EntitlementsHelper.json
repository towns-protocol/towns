{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Diamond_UnsupportedFunction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "facet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializer",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IDiamond.FacetCutAction",
          "name": "action",
          "type": "uint8"
        }
      ],
      "name": "makeCut",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamond.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamond.FacetCut",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "facetAddress",
          "type": "address"
        },
        {
          "internalType": "enum IDiamond.FacetCutAction",
          "name": "action",
          "type": "uint8"
        }
      ],
      "name": "makeCut",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamond.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamond.FacetCut",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "makeInitData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "selectors",
      "outputs": [
        {
          "internalType": "bytes4[]",
          "name": "",
          "type": "bytes4[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b039290921691909117905561006c565b6112288061196683390190565b6118eb8061007b6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063775c300c1161005b578063775c300c146100d35780639ce110d7146100f3578063ac99462614610102578063b6010cab1461014157600080fd5b8063019ea76a14610082578063346450a1146100ab5780636e25b978146100be575b600080fd5b610095610090366004610438565b610152565b6040516100a29190610470565b60405180910390f35b6100956100b9366004610508565b6101c0565b6100c661021e565b6040516100a29190610549565b6100db6103c8565b6040516001600160a01b0390911681526020016100a2565b604051600081526020016100a2565b6101346101103660046105ad565b506040805160048152602481019091526020810180516001600160e01b0316905290565b6040516100a2919061065e565b6000546001600160a01b03166100db565b60408051606080820183526000808352602083015291810191909152604051806060016040528061018b6000546001600160a01b031690565b6001600160a01b031681526020018360028111156101ab576101ab61045a565b81526020016101b861021e565b905292915050565b604080516060808201835260008083526020830152918101919091526040518060600160405280846001600160a01b031681526020018360028111156102085761020861045a565b815260200161021561021e565b90529392505050565b6040805160078082526101008201909252606091600091906020820160e080368337019050509050638bfc820f60e01b81600081518110610261576102616106ac565b6001600160e01b0319909216602092830291909101909101528051634ff8eb7160e01b9082906001908110610298576102986106ac565b6001600160e01b03199092166020928302919091019091015280516333a98caf60e21b90829060029081106102cf576102cf6106ac565b6001600160e01b031990921660209283029190910190910152805162b242a160e61b9082906003908110610305576103056106ac565b6001600160e01b031990921660209283029190910190910152805163c9b968cd60e01b908290600490811061033c5761033c6106ac565b6001600160e01b031990921660209283029190910190910152805163fba4ff9d60e01b9082906005908110610373576103736106ac565b6001600160e01b031990921660209283029190910190910152805163121f70e360e21b90829060069081106103aa576103aa6106ac565b6001600160e01b031990921660209283029190910190910152919050565b60006040516103d690610417565b604051809103906000f0801580156103f2573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b03929092169182179055919050565b611228806106c383390190565b80356003811061043357600080fd5b919050565b60006020828403121561044a57600080fd5b61045382610424565b9392505050565b634e487b7160e01b600052602160045260246000fd5b602080825282516001600160a01b03168282015282810151600091906080840190600381106104af57634e487b7160e01b600052602160045260246000fd5b60408581019190915285015160608086015280519182905282019060009060a08601905b808310156104fd5783516001600160e01b03191682529284019260019290920191908401906104d3565b509695505050505050565b6000806040838503121561051b57600080fd5b82356001600160a01b038116811461053257600080fd5b915061054060208401610424565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561058b5783516001600160e01b03191683529284019291840191600101610565565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156105bf57600080fd5b813567ffffffffffffffff808211156105d757600080fd5b818401915084601f8301126105eb57600080fd5b8135818111156105fd576105fd610597565b604051601f8201601f19908116603f0116810190838211818310171561062557610625610597565b8160405282815287602084870101111561063e57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b8181101561068b5785810183015185820160400152820161066f565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052603260045260246000fdfe608060405234801561001057600080fd5b50611208806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638bfc820f1161005b5780638bfc820f146100d8578063c9b968cd146100eb578063cea632bc146100fe578063fba4ff9d1461011157600080fd5b80632c90a84014610082578063487dc38c146100975780634ff8eb71146100b5575b600080fd5b610095610090366004610cea565b610131565b005b61009f61017d565b6040516100ac9190610db0565b60405180910390f35b6100c86100c3366004610e5b565b61018c565b60405190151581526020016100ac565b6100956100e6366004610ef7565b6101a3565b6100956100f9366004610cea565b6101e7565b6100c861010c366004610fa9565b61022b565b61012461011f366004610cea565b61027b565b6040516100ac919061102e565b610139610292565b6001600160a01b0316336001600160a01b031614610171576040516365f4906560e01b81523360048201526024015b60405180910390fd5b61017a8161035c565b50565b6060610187610370565b905090565b6000610199848484610475565b90505b9392505050565b6101ab610292565b6001600160a01b0316336001600160a01b0316146101de576040516365f4906560e01b8152336004820152602401610168565b61017a816104bb565b6101ef610292565b6001600160a01b0316336001600160a01b031614610222576040516365f4906560e01b8152336004820152602401610168565b61017a81610523565b600061027186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250879150869050610535565b9695505050505050565b610283610ca2565b61028c82610558565b92915050565b6040805180820182527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d0546001600160a01b03168082527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d154602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190611041565b91505090565b610365816105aa565b61017a816000610673565b6060600061037c610721565b9050805167ffffffffffffffff81111561039857610398610eb0565b6040519080825280602002602001820160405280156103d157816020015b6103be610ca2565b8152602001906001900390816103b65790505b50915060005b8151811015610470576000806000806104088686815181106103fb576103fb61105e565b602002602001015161074c565b93509350935093506040518060800160405280858152602001846001600160a01b0316815260200183815260200182151581525087868151811061044e5761044e61105e565b60200260200101819052505050505080806104689061108a565b9150506103d7565b505090565b60006101996040518060200160405280600081525085858560405160200161049e9291906110a3565b6040516020818303038152906040526104b6906110b3565b6108b3565b60005b815181101561051f576104e98282815181106104dc576104dc61105e565b60200260200101516105aa565b61050d8282815181106104fe576104fe61105e565b60200260200101516001610673565b806105178161108a565b9150506104be565b5050565b61052c816105aa565b61017a816109ca565b600061054f8585858560405160200161049e9291906110a3565b95945050505050565b610560610ca2565b610569826105aa565b6000806000806105788661074c565b604080516080810182529485526001600160a01b03909316602085015291830152151560608201529695505050505050565b6001600160a01b0381166105d157604051630706e15760e51b815260040160405180910390fd5b6040516301ffc9a760e01b815263df76a3d360e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa925050508015610638575060408051601f3d908101601f19168201909252610635918101906110da565b60015b6106555760405163f58a5f2760e01b815260040160405180910390fd5b8061051f5760405163f58a5f2760e01b815260040160405180910390fd5b6001600160a01b0382811660009081526000805160206111e88339815191526020819052604090912054909116156106be57604051632406020960e01b815260040160405180910390fd5b6106cb6001820184610a8d565b506040805180820182526001600160a01b03948516808252931515602080830191825260009586529390935292209151825491511515600160a01b026001600160a81b0319909216931692909217919091179055565b60606101877f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aa2565b606060008181806000805160206111e88339815191526001600160a01b038781166000908152602083905260409020549192501661079d5760405163017ab33760e71b815260040160405180910390fd5b856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261080391908101906110fc565b6001600160a01b03808816600081815260208590526040808220548151636465e69f60e01b81529151941693636465e69f926004808401939192918290030181865afa158015610857573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261087f91908101906110fc565b6001600160a01b03989098166000908152602093909352604090922054909791969550600160a01b900460ff169350915050565b60006108bd610292565b6001600160a01b0316836001600160a01b0316036108dd5750600161019c565b6000805160206111e883398151915260006109177f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aaf565b905060005b818110156109c0576109316001840182610ab9565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b815260040161095f93929190611190565b602060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a091906110da565b156109ae57600193506109c0565b806109b88161108a565b91505061091c565b5050509392505050565b6001600160a01b0381811660009081526000805160206111e88339815191526020819052604090912054909116610a145760405163017ab33760e71b815260040160405180910390fd5b6001600160a01b038216600090815260208290526040902054600160a01b900460ff1615610a5557604051636045809760e11b815260040160405180910390fd5b610a626001820183610ac5565b506001600160a01b0390911660009081526020919091526040902080546001600160a81b0319169055565b600061019c836001600160a01b038416610ada565b6060600061019c83610b29565b600061028c825490565b600061019c8383610b85565b600061019c836001600160a01b038416610baf565b6000818152600183016020526040812054610b215750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561028c565b50600061028c565b606081600001805480602002602001604051908101604052809291908181526020018280548015610b7957602002820191906000526020600020905b815481526020019060010190808311610b65575b50505050509050919050565b6000826000018281548110610b9c57610b9c61105e565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610c98576000610bd36001836111be565b8554909150600090610be7906001906111be565b9050818114610c4c576000866000018281548110610c0757610c0761105e565b9060005260206000200154905080876000018481548110610c2a57610c2a61105e565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610c5d57610c5d6111d1565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061028c565b600091505061028c565b60405180608001604052806060815260200160006001600160a01b03168152602001606081526020016000151581525090565b6001600160a01b038116811461017a57600080fd5b600060208284031215610cfc57600080fd5b813561019c81610cd5565b60005b83811015610d22578181015183820152602001610d0a565b50506000910152565b60008151808452610d43816020860160208601610d07565b601f01601f19169290920160200192915050565b6000815160808452610d6c6080850182610d2b565b905060018060a01b03602084015116602085015260408301518482036040860152610d978282610d2b565b9150506060830151151560608501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e0557603f19888603018452610df3858351610d57565b94509285019290850190600101610dd7565b5092979650505050505050565b60008083601f840112610e2457600080fd5b50813567ffffffffffffffff811115610e3c57600080fd5b602083019150836020828501011115610e5457600080fd5b9250929050565b600080600060408486031215610e7057600080fd5b8335610e7b81610cd5565b9250602084013567ffffffffffffffff811115610e9757600080fd5b610ea386828701610e12565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610eef57610eef610eb0565b604052919050565b60006020808385031215610f0a57600080fd5b823567ffffffffffffffff80821115610f2257600080fd5b818501915085601f830112610f3657600080fd5b813581811115610f4857610f48610eb0565b8060051b9150610f59848301610ec6565b8181529183018401918481019088841115610f7357600080fd5b938501935b83851015610f9d5784359250610f8d83610cd5565b8282529385019390850190610f78565b98975050505050505050565b600080600080600060608688031215610fc157600080fd5b853567ffffffffffffffff80821115610fd957600080fd5b610fe589838a01610e12565b909750955060208801359150610ffa82610cd5565b9093506040870135908082111561101057600080fd5b5061101d88828901610e12565b969995985093965092949392505050565b60208152600061019c6020830184610d57565b60006020828403121561105357600080fd5b815161019c81610cd5565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161109c5761109c611074565b5060010190565b8183823760009101908152919050565b805160208083015191908110156110d4576000198160200360031b1b821691505b50919050565b6000602082840312156110ec57600080fd5b8151801515811461019c57600080fd5b60006020828403121561110e57600080fd5b815167ffffffffffffffff8082111561112657600080fd5b818401915084601f83011261113a57600080fd5b81518181111561114c5761114c610eb0565b61115f601f8201601f1916602001610ec6565b915080825285602082850101111561117657600080fd5b611187816020840160208601610d07565b50949350505050565b6060815260006111a36060830186610d2b565b6001600160a01b039490941660208301525060400152919050565b8181038181111561028c5761028c611074565b634e487b7160e01b600052603160045260246000fdfe2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8558608060405234801561001057600080fd5b50611208806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638bfc820f1161005b5780638bfc820f146100d8578063c9b968cd146100eb578063cea632bc146100fe578063fba4ff9d1461011157600080fd5b80632c90a84014610082578063487dc38c146100975780634ff8eb71146100b5575b600080fd5b610095610090366004610cea565b610131565b005b61009f61017d565b6040516100ac9190610db0565b60405180910390f35b6100c86100c3366004610e5b565b61018c565b60405190151581526020016100ac565b6100956100e6366004610ef7565b6101a3565b6100956100f9366004610cea565b6101e7565b6100c861010c366004610fa9565b61022b565b61012461011f366004610cea565b61027b565b6040516100ac919061102e565b610139610292565b6001600160a01b0316336001600160a01b031614610171576040516365f4906560e01b81523360048201526024015b60405180910390fd5b61017a8161035c565b50565b6060610187610370565b905090565b6000610199848484610475565b90505b9392505050565b6101ab610292565b6001600160a01b0316336001600160a01b0316146101de576040516365f4906560e01b8152336004820152602401610168565b61017a816104bb565b6101ef610292565b6001600160a01b0316336001600160a01b031614610222576040516365f4906560e01b8152336004820152602401610168565b61017a81610523565b600061027186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250879150869050610535565b9695505050505050565b610283610ca2565b61028c82610558565b92915050565b6040805180820182527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d0546001600160a01b03168082527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d154602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190611041565b91505090565b610365816105aa565b61017a816000610673565b6060600061037c610721565b9050805167ffffffffffffffff81111561039857610398610eb0565b6040519080825280602002602001820160405280156103d157816020015b6103be610ca2565b8152602001906001900390816103b65790505b50915060005b8151811015610470576000806000806104088686815181106103fb576103fb61105e565b602002602001015161074c565b93509350935093506040518060800160405280858152602001846001600160a01b0316815260200183815260200182151581525087868151811061044e5761044e61105e565b60200260200101819052505050505080806104689061108a565b9150506103d7565b505090565b60006101996040518060200160405280600081525085858560405160200161049e9291906110a3565b6040516020818303038152906040526104b6906110b3565b6108b3565b60005b815181101561051f576104e98282815181106104dc576104dc61105e565b60200260200101516105aa565b61050d8282815181106104fe576104fe61105e565b60200260200101516001610673565b806105178161108a565b9150506104be565b5050565b61052c816105aa565b61017a816109ca565b600061054f8585858560405160200161049e9291906110a3565b95945050505050565b610560610ca2565b610569826105aa565b6000806000806105788661074c565b604080516080810182529485526001600160a01b03909316602085015291830152151560608201529695505050505050565b6001600160a01b0381166105d157604051630706e15760e51b815260040160405180910390fd5b6040516301ffc9a760e01b815263df76a3d360e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa925050508015610638575060408051601f3d908101601f19168201909252610635918101906110da565b60015b6106555760405163f58a5f2760e01b815260040160405180910390fd5b8061051f5760405163f58a5f2760e01b815260040160405180910390fd5b6001600160a01b0382811660009081526000805160206111e88339815191526020819052604090912054909116156106be57604051632406020960e01b815260040160405180910390fd5b6106cb6001820184610a8d565b506040805180820182526001600160a01b03948516808252931515602080830191825260009586529390935292209151825491511515600160a01b026001600160a81b0319909216931692909217919091179055565b60606101877f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aa2565b606060008181806000805160206111e88339815191526001600160a01b038781166000908152602083905260409020549192501661079d5760405163017ab33760e71b815260040160405180910390fd5b856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261080391908101906110fc565b6001600160a01b03808816600081815260208590526040808220548151636465e69f60e01b81529151941693636465e69f926004808401939192918290030181865afa158015610857573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261087f91908101906110fc565b6001600160a01b03989098166000908152602093909352604090922054909791969550600160a01b900460ff169350915050565b60006108bd610292565b6001600160a01b0316836001600160a01b0316036108dd5750600161019c565b6000805160206111e883398151915260006109177f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aaf565b905060005b818110156109c0576109316001840182610ab9565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b815260040161095f93929190611190565b602060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a091906110da565b156109ae57600193506109c0565b806109b88161108a565b91505061091c565b5050509392505050565b6001600160a01b0381811660009081526000805160206111e88339815191526020819052604090912054909116610a145760405163017ab33760e71b815260040160405180910390fd5b6001600160a01b038216600090815260208290526040902054600160a01b900460ff1615610a5557604051636045809760e11b815260040160405180910390fd5b610a626001820183610ac5565b506001600160a01b0390911660009081526020919091526040902080546001600160a81b0319169055565b600061019c836001600160a01b038416610ada565b6060600061019c83610b29565b600061028c825490565b600061019c8383610b85565b600061019c836001600160a01b038416610baf565b6000818152600183016020526040812054610b215750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561028c565b50600061028c565b606081600001805480602002602001604051908101604052809291908181526020018280548015610b7957602002820191906000526020600020905b815481526020019060010190808311610b65575b50505050509050919050565b6000826000018281548110610b9c57610b9c61105e565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610c98576000610bd36001836111be565b8554909150600090610be7906001906111be565b9050818114610c4c576000866000018281548110610c0757610c0761105e565b9060005260206000200154905080876000018481548110610c2a57610c2a61105e565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610c5d57610c5d6111d1565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061028c565b600091505061028c565b60405180608001604052806060815260200160006001600160a01b03168152602001606081526020016000151581525090565b6001600160a01b038116811461017a57600080fd5b600060208284031215610cfc57600080fd5b813561019c81610cd5565b60005b83811015610d22578181015183820152602001610d0a565b50506000910152565b60008151808452610d43816020860160208601610d07565b601f01601f19169290920160200192915050565b6000815160808452610d6c6080850182610d2b565b905060018060a01b03602084015116602085015260408301518482036040860152610d978282610d2b565b9150506060830151151560608501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e0557603f19888603018452610df3858351610d57565b94509285019290850190600101610dd7565b5092979650505050505050565b60008083601f840112610e2457600080fd5b50813567ffffffffffffffff811115610e3c57600080fd5b602083019150836020828501011115610e5457600080fd5b9250929050565b600080600060408486031215610e7057600080fd5b8335610e7b81610cd5565b9250602084013567ffffffffffffffff811115610e9757600080fd5b610ea386828701610e12565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610eef57610eef610eb0565b604052919050565b60006020808385031215610f0a57600080fd5b823567ffffffffffffffff80821115610f2257600080fd5b818501915085601f830112610f3657600080fd5b813581811115610f4857610f48610eb0565b8060051b9150610f59848301610ec6565b8181529183018401918481019088841115610f7357600080fd5b938501935b83851015610f9d5784359250610f8d83610cd5565b8282529385019390850190610f78565b98975050505050505050565b600080600080600060608688031215610fc157600080fd5b853567ffffffffffffffff80821115610fd957600080fd5b610fe589838a01610e12565b909750955060208801359150610ffa82610cd5565b9093506040870135908082111561101057600080fd5b5061101d88828901610e12565b969995985093965092949392505050565b60208152600061019c6020830184610d57565b60006020828403121561105357600080fd5b815161019c81610cd5565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161109c5761109c611074565b5060010190565b8183823760009101908152919050565b805160208083015191908110156110d4576000198160200360031b1b821691505b50919050565b6000602082840312156110ec57600080fd5b8151801515811461019c57600080fd5b60006020828403121561110e57600080fd5b815167ffffffffffffffff8082111561112657600080fd5b818401915084601f83011261113a57600080fd5b81518181111561114c5761114c610eb0565b61115f601f8201601f1916602001610ec6565b915080825285602082850101111561117657600080fd5b611187816020840160208601610d07565b50949350505050565b6060815260006111a36060830186610d2b565b6001600160a01b039490941660208301525060400152919050565b8181038181111561028c5761028c611074565b634e487b7160e01b600052603160045260246000fdfe2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8558",
    "sourceMap": "2509:1039:295:-:0;;;2595:58;;;;;;;;;;2630:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2615:12:295;:33;;-1:-1:-1;;;;;;2615:33:295;-1:-1:-1;;;;;2615:33:295;;;;;;;;;;2509:1039;;;;;;;;;;:::o;:::-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063775c300c1161005b578063775c300c146100d35780639ce110d7146100f3578063ac99462614610102578063b6010cab1461014157600080fd5b8063019ea76a14610082578063346450a1146100ab5780636e25b978146100be575b600080fd5b610095610090366004610438565b610152565b6040516100a29190610470565b60405180910390f35b6100956100b9366004610508565b6101c0565b6100c661021e565b6040516100a29190610549565b6100db6103c8565b6040516001600160a01b0390911681526020016100a2565b604051600081526020016100a2565b6101346101103660046105ad565b506040805160048152602481019091526020810180516001600160e01b0316905290565b6040516100a2919061065e565b6000546001600160a01b03166100db565b60408051606080820183526000808352602083015291810191909152604051806060016040528061018b6000546001600160a01b031690565b6001600160a01b031681526020018360028111156101ab576101ab61045a565b81526020016101b861021e565b905292915050565b604080516060808201835260008083526020830152918101919091526040518060600160405280846001600160a01b031681526020018360028111156102085761020861045a565b815260200161021561021e565b90529392505050565b6040805160078082526101008201909252606091600091906020820160e080368337019050509050638bfc820f60e01b81600081518110610261576102616106ac565b6001600160e01b0319909216602092830291909101909101528051634ff8eb7160e01b9082906001908110610298576102986106ac565b6001600160e01b03199092166020928302919091019091015280516333a98caf60e21b90829060029081106102cf576102cf6106ac565b6001600160e01b031990921660209283029190910190910152805162b242a160e61b9082906003908110610305576103056106ac565b6001600160e01b031990921660209283029190910190910152805163c9b968cd60e01b908290600490811061033c5761033c6106ac565b6001600160e01b031990921660209283029190910190910152805163fba4ff9d60e01b9082906005908110610373576103736106ac565b6001600160e01b031990921660209283029190910190910152805163121f70e360e21b90829060069081106103aa576103aa6106ac565b6001600160e01b031990921660209283029190910190910152919050565b60006040516103d690610417565b604051809103906000f0801580156103f2573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b03929092169182179055919050565b611228806106c383390190565b80356003811061043357600080fd5b919050565b60006020828403121561044a57600080fd5b61045382610424565b9392505050565b634e487b7160e01b600052602160045260246000fd5b602080825282516001600160a01b03168282015282810151600091906080840190600381106104af57634e487b7160e01b600052602160045260246000fd5b60408581019190915285015160608086015280519182905282019060009060a08601905b808310156104fd5783516001600160e01b03191682529284019260019290920191908401906104d3565b509695505050505050565b6000806040838503121561051b57600080fd5b82356001600160a01b038116811461053257600080fd5b915061054060208401610424565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561058b5783516001600160e01b03191683529284019291840191600101610565565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156105bf57600080fd5b813567ffffffffffffffff808211156105d757600080fd5b818401915084601f8301126105eb57600080fd5b8135818111156105fd576105fd610597565b604051601f8201601f19908116603f0116810190838211818310171561062557610625610597565b8160405282815287602084870101111561063e57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b8181101561068b5785810183015185820160400152820161066f565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052603260045260246000fdfe608060405234801561001057600080fd5b50611208806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638bfc820f1161005b5780638bfc820f146100d8578063c9b968cd146100eb578063cea632bc146100fe578063fba4ff9d1461011157600080fd5b80632c90a84014610082578063487dc38c146100975780634ff8eb71146100b5575b600080fd5b610095610090366004610cea565b610131565b005b61009f61017d565b6040516100ac9190610db0565b60405180910390f35b6100c86100c3366004610e5b565b61018c565b60405190151581526020016100ac565b6100956100e6366004610ef7565b6101a3565b6100956100f9366004610cea565b6101e7565b6100c861010c366004610fa9565b61022b565b61012461011f366004610cea565b61027b565b6040516100ac919061102e565b610139610292565b6001600160a01b0316336001600160a01b031614610171576040516365f4906560e01b81523360048201526024015b60405180910390fd5b61017a8161035c565b50565b6060610187610370565b905090565b6000610199848484610475565b90505b9392505050565b6101ab610292565b6001600160a01b0316336001600160a01b0316146101de576040516365f4906560e01b8152336004820152602401610168565b61017a816104bb565b6101ef610292565b6001600160a01b0316336001600160a01b031614610222576040516365f4906560e01b8152336004820152602401610168565b61017a81610523565b600061027186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250879150869050610535565b9695505050505050565b610283610ca2565b61028c82610558565b92915050565b6040805180820182527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d0546001600160a01b03168082527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d154602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190611041565b91505090565b610365816105aa565b61017a816000610673565b6060600061037c610721565b9050805167ffffffffffffffff81111561039857610398610eb0565b6040519080825280602002602001820160405280156103d157816020015b6103be610ca2565b8152602001906001900390816103b65790505b50915060005b8151811015610470576000806000806104088686815181106103fb576103fb61105e565b602002602001015161074c565b93509350935093506040518060800160405280858152602001846001600160a01b0316815260200183815260200182151581525087868151811061044e5761044e61105e565b60200260200101819052505050505080806104689061108a565b9150506103d7565b505090565b60006101996040518060200160405280600081525085858560405160200161049e9291906110a3565b6040516020818303038152906040526104b6906110b3565b6108b3565b60005b815181101561051f576104e98282815181106104dc576104dc61105e565b60200260200101516105aa565b61050d8282815181106104fe576104fe61105e565b60200260200101516001610673565b806105178161108a565b9150506104be565b5050565b61052c816105aa565b61017a816109ca565b600061054f8585858560405160200161049e9291906110a3565b95945050505050565b610560610ca2565b610569826105aa565b6000806000806105788661074c565b604080516080810182529485526001600160a01b03909316602085015291830152151560608201529695505050505050565b6001600160a01b0381166105d157604051630706e15760e51b815260040160405180910390fd5b6040516301ffc9a760e01b815263df76a3d360e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa925050508015610638575060408051601f3d908101601f19168201909252610635918101906110da565b60015b6106555760405163f58a5f2760e01b815260040160405180910390fd5b8061051f5760405163f58a5f2760e01b815260040160405180910390fd5b6001600160a01b0382811660009081526000805160206111e88339815191526020819052604090912054909116156106be57604051632406020960e01b815260040160405180910390fd5b6106cb6001820184610a8d565b506040805180820182526001600160a01b03948516808252931515602080830191825260009586529390935292209151825491511515600160a01b026001600160a81b0319909216931692909217919091179055565b60606101877f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aa2565b606060008181806000805160206111e88339815191526001600160a01b038781166000908152602083905260409020549192501661079d5760405163017ab33760e71b815260040160405180910390fd5b856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261080391908101906110fc565b6001600160a01b03808816600081815260208590526040808220548151636465e69f60e01b81529151941693636465e69f926004808401939192918290030181865afa158015610857573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261087f91908101906110fc565b6001600160a01b03989098166000908152602093909352604090922054909791969550600160a01b900460ff169350915050565b60006108bd610292565b6001600160a01b0316836001600160a01b0316036108dd5750600161019c565b6000805160206111e883398151915260006109177f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aaf565b905060005b818110156109c0576109316001840182610ab9565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b815260040161095f93929190611190565b602060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a091906110da565b156109ae57600193506109c0565b806109b88161108a565b91505061091c565b5050509392505050565b6001600160a01b0381811660009081526000805160206111e88339815191526020819052604090912054909116610a145760405163017ab33760e71b815260040160405180910390fd5b6001600160a01b038216600090815260208290526040902054600160a01b900460ff1615610a5557604051636045809760e11b815260040160405180910390fd5b610a626001820183610ac5565b506001600160a01b0390911660009081526020919091526040902080546001600160a81b0319169055565b600061019c836001600160a01b038416610ada565b6060600061019c83610b29565b600061028c825490565b600061019c8383610b85565b600061019c836001600160a01b038416610baf565b6000818152600183016020526040812054610b215750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561028c565b50600061028c565b606081600001805480602002602001604051908101604052809291908181526020018280548015610b7957602002820191906000526020600020905b815481526020019060010190808311610b65575b50505050509050919050565b6000826000018281548110610b9c57610b9c61105e565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610c98576000610bd36001836111be565b8554909150600090610be7906001906111be565b9050818114610c4c576000866000018281548110610c0757610c0761105e565b9060005260206000200154905080876000018481548110610c2a57610c2a61105e565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610c5d57610c5d6111d1565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061028c565b600091505061028c565b60405180608001604052806060815260200160006001600160a01b03168152602001606081526020016000151581525090565b6001600160a01b038116811461017a57600080fd5b600060208284031215610cfc57600080fd5b813561019c81610cd5565b60005b83811015610d22578181015183820152602001610d0a565b50506000910152565b60008151808452610d43816020860160208601610d07565b601f01601f19169290920160200192915050565b6000815160808452610d6c6080850182610d2b565b905060018060a01b03602084015116602085015260408301518482036040860152610d978282610d2b565b9150506060830151151560608501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e0557603f19888603018452610df3858351610d57565b94509285019290850190600101610dd7565b5092979650505050505050565b60008083601f840112610e2457600080fd5b50813567ffffffffffffffff811115610e3c57600080fd5b602083019150836020828501011115610e5457600080fd5b9250929050565b600080600060408486031215610e7057600080fd5b8335610e7b81610cd5565b9250602084013567ffffffffffffffff811115610e9757600080fd5b610ea386828701610e12565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610eef57610eef610eb0565b604052919050565b60006020808385031215610f0a57600080fd5b823567ffffffffffffffff80821115610f2257600080fd5b818501915085601f830112610f3657600080fd5b813581811115610f4857610f48610eb0565b8060051b9150610f59848301610ec6565b8181529183018401918481019088841115610f7357600080fd5b938501935b83851015610f9d5784359250610f8d83610cd5565b8282529385019390850190610f78565b98975050505050505050565b600080600080600060608688031215610fc157600080fd5b853567ffffffffffffffff80821115610fd957600080fd5b610fe589838a01610e12565b909750955060208801359150610ffa82610cd5565b9093506040870135908082111561101057600080fd5b5061101d88828901610e12565b969995985093965092949392505050565b60208152600061019c6020830184610d57565b60006020828403121561105357600080fd5b815161019c81610cd5565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161109c5761109c611074565b5060010190565b8183823760009101908152919050565b805160208083015191908110156110d4576000198160200360031b1b821691505b50919050565b6000602082840312156110ec57600080fd5b8151801515811461019c57600080fd5b60006020828403121561110e57600080fd5b815167ffffffffffffffff8082111561112657600080fd5b818401915084601f83011261113a57600080fd5b81518181111561114c5761114c610eb0565b61115f601f8201601f1916602001610ec6565b915080825285602082850101111561117657600080fd5b611187816020840160208601610d07565b50949350505050565b6060815260006111a36060830186610d2b565b6001600160a01b039490941660208301525060400152919050565b8181038181111561028c5761028c611074565b634e487b7160e01b600052603160045260246000fdfe2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8558",
    "sourceMap": "2509:1039:295:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1006:210:203;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1220:249;;;;;;:::i;:::-;;:::i;2881:580:295:-;;;:::i;:::-;;;;;;;:::i;2657:121::-;;;:::i;:::-;;;-1:-1:-1;;;;;2865:32:411;;;2847:51;;2835:2;2820:18;2657:121:295;2701:203:411;3465:81:295;;;3518:6;3053:52:411;;3041:2;3026:18;3465:81:295;2909:202:411;1473:147:203;;;;;;:::i;:::-;-1:-1:-1;1578:37:203;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1578:37:203;;;;1473:147;;;;;;;;:::i;2782:95:295:-;2829:7;2859:12;-1:-1:-1;;;;;2859:12:295;2782:95;;1006:210:203;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1098:113:203;;;;;;;;1155:7;2829::295;2859:12;-1:-1:-1;;;;;2859:12:295;;2782:95;1155:7:203;-1:-1:-1;;;;;1098:113:203;;;;;1125:6;1098:113;;;;;;;;:::i;:::-;;;;;1191:11;:9;:11::i;:::-;1098:113;;1085:126;1006:210;-1:-1:-1;;1006:210:203:o;1220:249::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1346:118:203;;;;;;;;1403:12;-1:-1:-1;;;;;1346:118:203;;;;;1373:6;1346:118;;;;;;;;:::i;:::-;;;;;1444:11;:9;:11::i;:::-;1346:118;;1333:131;1220:249;-1:-1:-1;;;1220:249:203:o;2881:580:295:-;2984:15;;;2997:1;2984:15;;;;;;;;;2932;;2955:26;;2984:15;;;;;;;;;;;-1:-1:-1;2984:15:295;2955:44;;3021:47;;;3005:10;3016:1;3005:13;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3005:63:295;;;:13;;;;;;;;;;;:63;3074:13;;-1:-1:-1;;;3090:39:295;3074:10;;3085:1;;3074:13;;;;;;:::i;:::-;-1:-1:-1;;;;;;3074:55:295;;;:13;;;;;;;;;;;:55;3135:13;;-1:-1:-1;;;3151:42:295;3135:10;;3146:1;;3135:13;;;;;;:::i;:::-;-1:-1:-1;;;;;;3135:58:295;;;:13;;;;;;;;;;;:58;3199:13;;-1:-1:-1;;;3215:37:295;3199:10;;3210:1;;3199:13;;;;;;:::i;:::-;-1:-1:-1;;;;;;3199:53:295;;;:13;;;;;;;;;;;:53;3258:13;;-1:-1:-1;;;3274:40:295;3258:10;;3269:1;;3258:13;;;;;;:::i;:::-;-1:-1:-1;;;;;;3258:56:295;;;:13;;;;;;;;;;;:56;3320:13;;-1:-1:-1;;;3336:37:295;3320:10;;3331:1;;3320:13;;;;;;:::i;:::-;-1:-1:-1;;;;;;3320:53:295;;;:13;;;;;;;;;;;:53;3379:13;;-1:-1:-1;;;3395:38:295;3379:10;;3390:1;;3379:13;;;;;;:::i;:::-;-1:-1:-1;;;;;;3379:54:295;;;:13;;;;;;;;;;;:54;3446:10;2881:580;-1:-1:-1;2881:580:295:o;2657:121::-;2691:7;2721:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2706:12:295;:33;;-1:-1:-1;;;;;;2706:33:295;-1:-1:-1;;;;;2706:33:295;;;;;;;;;;;-1:-1:-1;2657:121:295:o;-1:-1:-1:-;;;;;;;;:::o;14:155:411:-;94:20;;143:1;133:12;;123:40;;159:1;156;149:12;123:40;14:155;;;:::o;174:217::-;252:6;305:2;293:9;284:7;280:23;276:32;273:52;;;321:1;318;311:12;273:52;344:41;375:9;344:41;:::i;:::-;334:51;174:217;-1:-1:-1;;;174:217:411:o;396:127::-;457:10;452:3;448:20;445:1;438:31;488:4;485:1;478:15;512:4;509:1;502:15;528:1110;701:2;712:21;;;815:13;;-1:-1:-1;;;;;811:39:411;791:18;;;784:67;886:15;;;880:22;672:4;;701:2;771:3;756:19;;;938:1;921:19;;911:150;;983:10;978:3;974:20;971:1;964:31;1018:4;1015:1;1008:15;1046:4;1043:1;1036:15;911:150;1092:2;1077:18;;;1070:40;;;;1147:15;;1141:22;1201:4;1179:20;;;1172:34;1255:21;;1285:22;;;;1365:23;;;-1:-1:-1;;1338:3:411;1323:19;;;1416:196;1430:6;1427:1;1424:13;1416:196;;;1495:13;;-1:-1:-1;;;;;;1491:40:411;1479:53;;1587:15;;;;1452:1;1445:9;;;;;1552:12;;;;1416:196;;;-1:-1:-1;1629:3:411;528:1110;-1:-1:-1;;;;;;528:1110:411:o;1643:391::-;1730:6;1738;1791:2;1779:9;1770:7;1766:23;1762:32;1759:52;;;1807:1;1804;1797:12;1759:52;1833:23;;-1:-1:-1;;;;;1885:31:411;;1875:42;;1865:70;;1931:1;1928;1921:12;1865:70;1954:5;-1:-1:-1;1978:50:411;2024:2;2009:18;;1978:50;:::i;:::-;1968:60;;1643:391;;;;;:::o;2039:657::-;2208:2;2260:21;;;2330:13;;2233:18;;;2352:22;;;2179:4;;2208:2;2431:15;;;;2405:2;2390:18;;;2179:4;2474:196;2488:6;2485:1;2482:13;2474:196;;;2553:13;;-1:-1:-1;;;;;;2549:40:411;2537:53;;2645:15;;;;2610:12;;;;2510:1;2503:9;2474:196;;;-1:-1:-1;2687:3:411;;2039:657;-1:-1:-1;;;;;;2039:657:411:o;3116:127::-;3177:10;3172:3;3168:20;3165:1;3158:31;3208:4;3205:1;3198:15;3232:4;3229:1;3222:15;3248:921;3316:6;3369:2;3357:9;3348:7;3344:23;3340:32;3337:52;;;3385:1;3382;3375:12;3337:52;3425:9;3412:23;3454:18;3495:2;3487:6;3484:14;3481:34;;;3511:1;3508;3501:12;3481:34;3549:6;3538:9;3534:22;3524:32;;3594:7;3587:4;3583:2;3579:13;3575:27;3565:55;;3616:1;3613;3606:12;3565:55;3652:2;3639:16;3674:2;3670;3667:10;3664:36;;;3680:18;;:::i;:::-;3755:2;3749:9;3723:2;3809:13;;-1:-1:-1;;3805:22:411;;;3829:2;3801:31;3797:40;3785:53;;;3853:18;;;3873:22;;;3850:46;3847:72;;;3899:18;;:::i;:::-;3939:10;3935:2;3928:22;3974:2;3966:6;3959:18;4014:7;4009:2;4004;4000;3996:11;3992:20;3989:33;3986:53;;;4035:1;4032;4025:12;3986:53;4091:2;4086;4082;4078:11;4073:2;4065:6;4061:15;4048:46;4136:1;4114:15;;;4131:2;4110:24;4103:35;;;;-1:-1:-1;4118:6:411;3248:921;-1:-1:-1;;;;;3248:921:411:o;4174:546::-;4284:4;4313:2;4342;4331:9;4324:21;4374:6;4368:13;4417:6;4412:2;4401:9;4397:18;4390:34;4442:1;4452:140;4466:6;4463:1;4460:13;4452:140;;;4561:14;;;4557:23;;4551:30;4527:17;;;4546:2;4523:26;4516:66;4481:10;;4452:140;;;4456:3;4641:1;4636:2;4627:6;4616:9;4612:22;4608:31;4601:42;4711:2;4704;4700:7;4695:2;4687:6;4683:15;4679:29;4668:9;4664:45;4660:54;4652:62;;;;4174:546;;;;:::o;4725:127::-;4786:10;4781:3;4777:20;4774:1;4767:31;4817:4;4814:1;4807:15;4841:4;4838:1;4831:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deploy()": "775c300c",
    "facet()": "b6010cab",
    "initializer()": "9ce110d7",
    "makeCut(address,uint8)": "346450a1",
    "makeCut(uint8)": "019ea76a",
    "makeInitData(bytes)": "ac994626",
    "selectors()": "6e25b978"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Diamond_UnsupportedFunction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializer\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"}],\"name\":\"makeCut\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamond.FacetCut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"}],\"name\":\"makeCut\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamond.FacetCut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"makeInitData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"selectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"facet()\":{\"details\":\"Deploy facet contract in constructor and return address for testing.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"Diamond_UnsupportedFunction()\":[{\"notice\":\"Thrown when calling a function that was not registered in the diamond.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/towns/entitlements/EntitlementsSetup.sol\":\"EntitlementsHelper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC721A/=lib/ERC721A/contracts/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=lib/operator-filter-registry/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"contracts/src/diamond/Diamond.sol\":{\"keccak256\":\"0x8788c4adf69122542b2b108de311c6b092db9229c678505af5cd6c37e6c89748\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cf42f45b20fc8bbf19ac1c7922d67ff2016910204567ea5f15745f38e17c0981\",\"dweb:/ipfs/QmdQ8ftGRQKcfS9ZdkyWDAMxAPRVyJ6hRibNjweankVgAx\"]},\"contracts/src/diamond/IDiamond.sol\":{\"keccak256\":\"0x229b4689e28257d9cbf4812e2bf2e42467107ce1922ffc1c167b72fe8b8e4532\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9b1684fd3ebcb86d611495cad57d01002c3a9564975cc4d8d5d3a3afa2e3110e\",\"dweb:/ipfs/QmVFTX38enoWRiDkU6LVutRoFSsSuaoNuzz6ZVKajQK5VB\"]},\"contracts/src/diamond/facets/Facet.sol\":{\"keccak256\":\"0x8213b85d1271bc3c2aa9842979c8ad825066c4c9addc55296d53b6747e5198ba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b4e88e869c99e65f0caeb9d03938e78c578a869783b9f20c05f4ba52e7ca493d\",\"dweb:/ipfs/QmRqPmg8BYD1V6Cd8kfihCQ7nn2DAsgRjGW2MJvc7Evnjt\"]},\"contracts/src/diamond/facets/cut/DiamondCutBase.sol\":{\"keccak256\":\"0x3c7b30a0c0198f7c6f482103ebbcd07a51537b8fda0fdc9aa0c2fa94b7d56381\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d4aa75bea783571945fc0f4fd2565ab603884e40c2b8046971bea647ced77058\",\"dweb:/ipfs/QmWWvTmzSGAD5exYYdJL4EC721nCHw6nH4VS8ns641moX7\"]},\"contracts/src/diamond/facets/cut/DiamondCutStorage.sol\":{\"keccak256\":\"0x66979c2a475d398e3c1800eac068e386283d59a035e61b036aac5aab8800a0a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f16a69b5b620f7c7c03539ba4273af399b16635a7e0ccfa1ecd3916c2d443a11\",\"dweb:/ipfs/QmZUg2JrVqUg2Jz7nNnvnSYmkKutzAUm7199EL9xoJt8i6\"]},\"contracts/src/diamond/facets/cut/IDiamondCut.sol\":{\"keccak256\":\"0xcdd725c5691ccc750bf8f5fb14bafa525377ed3bad72d94d0abe633c09e8b2aa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://024d0f05aef75094de7d104360b68128f48a5ad69e76d79923c71bbddb8eda49\",\"dweb:/ipfs/QmWRhDE7rZQSAbahYXBnJZZrvo7R2huE6oqRhaPECWGGcw\"]},\"contracts/src/diamond/facets/initializable/Initializable.sol\":{\"keccak256\":\"0x2a4f3a99b3b3ac6c2c18431cea80b40774c1d8265ddefac21b26da561e069096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36dbba730942b1fd345f242051ea7f33e979f70392fbd929d8522c0c9c6dd367\",\"dweb:/ipfs/QmYMvYnvg9zQJpDQX9yMHZ1AET9Vx7UXtDenXAs1JhfPpd\"]},\"contracts/src/diamond/facets/initializable/InitializableStorage.sol\":{\"keccak256\":\"0x99dfe047dbb8df48a7490f63939420dd990fb5fd3b3a03c42d0cb9c6f4f9eefa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e8f6d4bff257324e4544cacadd9fee42bada459f457fb707fef90bcfe0e895a\",\"dweb:/ipfs/QmYWEam5VcMt5ViNMKRkaxoD84MK2MewS5iWwSES589Vma\"]},\"contracts/src/diamond/facets/introspection/IERC165.sol\":{\"keccak256\":\"0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2\",\"dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV\"]},\"contracts/src/diamond/facets/introspection/IntrospectionBase.sol\":{\"keccak256\":\"0x503b6ce030f8a760e9a877545b35307d05bbb704b501095795ab2168fe40db59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://769658fed18c26f67dec9bf4ca18dd595c0343bc8ea21bb3e50595eca3401265\",\"dweb:/ipfs/QmVuqWH5eKqBJbNEtXzybgZ7ahtjTraMew8CMb4TuVUyo6\"]},\"contracts/src/diamond/facets/introspection/IntrospectionStorage.sol\":{\"keccak256\":\"0xd2ec3bbe4d15f9232006b41e0a80a5127006243ee596754af77bd3926045782a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8c47e18bfd34a687ce9ec75dc1f1fa5bca088e97e59aad2ac3fdb0989d06d7e6\",\"dweb:/ipfs/QmdktQXV7PKABzh43SZqemdTG25RxMaMsgpXTTUvZUxmfU\"]},\"contracts/src/diamond/facets/loupe/DiamondLoupeBase.sol\":{\"keccak256\":\"0x8db2619bcc4b0c7e920bbd603d8790168a6fed3e687780304fc76278ae0b9cf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cef388e76684f823fc6ab718a18bdaec3cc9b002c1cc12b8f6fc1ff07b8f929e\",\"dweb:/ipfs/QmVaUuM1nSTgoSv6Na3fZHcAgCX2XFDuVEek5caFA5iWvx\"]},\"contracts/src/diamond/facets/loupe/IDiamondLoupe.sol\":{\"keccak256\":\"0x83141e0a7e8f1e9a592ca00bb6365aae7296f61d06080024546350594f076618\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f0917399449ea9830cff570d958d28b37b3c83af3a38c5f0a58241264aaf8290\",\"dweb:/ipfs/QmUbJD4U8Fpf7BiXJWExejkd54vUjiXJrjnxxARUDzrGa8\"]},\"contracts/src/diamond/facets/ownable/IERC173.sol\":{\"keccak256\":\"0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620\",\"dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol\":{\"keccak256\":\"0x6fd8ef9c81c98db01284b7b6874e47d36bb14af1011f8055e8f29384710472e4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d5fe0f5d5b5ee6889c9dddb02895605f3fe72b930d56c19a1705f5b036b5aed2\",\"dweb:/ipfs/QmR5AErtoePrJhUbuFAhxioPYWJ5cjBX71E4nD84xvw45k\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableFacet.sol\":{\"keccak256\":\"0xa9d6102ee28ca3f0c5de747023173cd85fa5e4b2947fc2285fd40be0a69856e4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d8bcbaea16b5e356904189dfe2112b15379a00486fef46e9167e28b62c9e5b5\",\"dweb:/ipfs/QmUPLR6FJfMGC5RGaQWFuzZK8o8Z3D9wDsLa26ZhWZG4dM\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol\":{\"keccak256\":\"0xea4323b3cc8794cb9008bf79180555b0dc248c52e0b030024d6b4ac9fdd6af0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dce6d6130309fce1126b8a4b493cc14666c59d1f7685107f07fb685d2cf31773\",\"dweb:/ipfs/QmVrC5tmJWZYgZ7ruKW6uDU8QDeZgbh3QcZD9aWHrX2Duh\"]},\"contracts/src/diamond/facets/pausable/IPausable.sol\":{\"keccak256\":\"0x51faf4ca7fa88bc4bf2699bab34692f0a43a316d0b3f95a8d7271935ef243a78\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e4ff1050ba7ec1bc7de90f562d8ccf7875f4faea0f12ca5101f22619f2dd6de2\",\"dweb:/ipfs/QmeczRzWavYXmirfEbwGg5uLeLdXaENtFAzmxxFsggUHsW\"]},\"contracts/src/diamond/facets/pausable/PausableBase.sol\":{\"keccak256\":\"0xfdeeba59a9f9b6a31203aa45f9244767b5d790dbcf36c920cc0ec5471505e47f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72d6eb74b90e658834c9b9f6a9e391722c3eb3992aef2d4694c1a91473b291a1\",\"dweb:/ipfs/QmXVV8mTt8LmFDhzn3Lm3BMLXNdJTzUMbMrpBjnUaMzm5F\"]},\"contracts/src/diamond/facets/pausable/PausableStorage.sol\":{\"keccak256\":\"0x7aaa1baa71b080cf67876cb383b505be55ff2661b4bafc7f01428d509c201296\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://68231325f3a66baf6b96cb34d1432a675ff1d36fc15500cec97de12fc823bcd1\",\"dweb:/ipfs/QmVQb23iSSbYQJqk3EB9vT5fjSp6J8Uj2AwgEaHMSkF6wa\"]},\"contracts/src/diamond/proxy/IProxy.sol\":{\"keccak256\":\"0x56c8fafe5e06a8ad2a80f19d0eb8ac68c8cd42fc00d8501cb65201849fb62799\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2767795c4790a270e44e882e237ceb68afbcb75d811a94a5f9c32c7e16cf8e4d\",\"dweb:/ipfs/QmSWLUpnNk2G7x1PscxecJD3mWbnXo2R7kAkF2qjjquW91\"]},\"contracts/src/diamond/proxy/Proxy.sol\":{\"keccak256\":\"0x633c279137c71720b2134030c8c9843adb5b34c90587c8c29b60d32ec9ba5353\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d73f89f3198fe2a65890d28648d64377ecee50caf2cd62a787c00aafe5b21708\",\"dweb:/ipfs/QmZnHjDoZBnmCqod18WPSm7jdREwy1f7yhuq7Z3RJmE6Jh\"]},\"contracts/src/spaces/libraries/Errors.sol\":{\"keccak256\":\"0xb0a9a538c142afb52002a9ed67fe15f71263406b905ab854f58d0c4bbb168f79\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9a27883f35eee16c86c768b5084a1552058f996f72457e7ef624a20e731f4f7\",\"dweb:/ipfs/QmWNJYmVeNmsbq8Q6DAfa5ciBzXg61ARKteprhxFsAF289\"]},\"contracts/src/towns/entitlements/IEntitlement.sol\":{\"keccak256\":\"0x3c3733f40dcf373c19ea564ec9cbf49b33e96c27a80012e9be6f8d6d24e76c46\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ba0686e15bc8bfac66d59f62e59832eaf6d4c1b636080f9b2367386d5dc72ecb\",\"dweb:/ipfs/QmemW17L8TkGWG9RHKWTpjq9WBtYX3dmZsiTtzDmYNNXwE\"]},\"contracts/src/towns/facets/Entitled.sol\":{\"keccak256\":\"0x9a4a44f9b7829dda47a0beb43076f2382bda72333571001eb8a6fb69d723b2c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2d9ae9e5668e5f1efa28dff702ee50eec69df427c6eaee3321859cbad206bc82\",\"dweb:/ipfs/QmaMQsyVzREskdSfarp6eVWPmttJY2zTh2Xr37zCfwX6QP\"]},\"contracts/src/towns/facets/Permissions.sol\":{\"keccak256\":\"0x88d13ea9a9d2243a3950b4694a5030db6f1546c6c0b26d90c3cbc9af929f678d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6e07ce7de38b1fd52a4db1ed51bc298bc618f559e067b5060a60ad7bdf3a9b1d\",\"dweb:/ipfs/QmS4zCFdVJwj26ef8rtU8QejEVoi5XfCrDZjxq1N2AhGaK\"]},\"contracts/src/towns/facets/channels/ChannelBase.sol\":{\"keccak256\":\"0x15f7fade035e399ce7ce71c8dc614cb5d11354d29901f134386b168fae2f1063\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5bee322adde2ce1807bf8a5dbda483ac5864a43a3c1c8bccb37a65cd757e88ee\",\"dweb:/ipfs/QmVXKhxK2SgUsJ2RQRzWbku1JqQMxuE5KJ9gZBj9Q88GTU\"]},\"contracts/src/towns/facets/channels/ChannelService.sol\":{\"keccak256\":\"0xf6385db2da94e6650ef50c4286d2dca3aec269d6dec2a9979eea6c5b481431af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d52a6973b5309af1f93bd986fc73ca411f14bb30666e628830c4534b4d7be86b\",\"dweb:/ipfs/QmWB3drETz9dg4n7Yijhc9KVLWTCy339Df59jcaHNN3F8H\"]},\"contracts/src/towns/facets/channels/ChannelStorage.sol\":{\"keccak256\":\"0x6a77c72a6390013ccdf52e7174c397bdfd67d7c1ed48ee0ce660c54f58a86fc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8507829be0ce8f69985f40fbd7ff53e287e150d792f706c265a553085040ddcd\",\"dweb:/ipfs/QmbZfwRDkLX3fypMYKrrE1wsxKTqVh6oyZG2Yd8ZijiE8f\"]},\"contracts/src/towns/facets/channels/Channels.sol\":{\"keccak256\":\"0x9c2c2ba6a901c7aeef398f4226b4e12144e3ff6ccc84c0f8760a7dd131f57bc1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e5be0a55d2cef78a281e331ded93b057bc1793b2810576f7c848b2e4c04b4275\",\"dweb:/ipfs/QmT1sS9za3bTfmdmtEJGKdf6qFE3tcYDDmU5BmnUQ1Wb64\"]},\"contracts/src/towns/facets/channels/IChannel.sol\":{\"keccak256\":\"0xad2a848fd582f0e648d14c6271100bfdbcc238c293f1d99c9a514987ba223e9b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0485777d5ee61dd66929b9dc191bb2b3ae13288b9b6bdc87f6fd29a0bf249570\",\"dweb:/ipfs/QmcwXjVTwYJHirEktW1UgjntZYSFdHihMqVUNyhdGDwpZ4\"]},\"contracts/src/towns/facets/entitlements/Entitlements.sol\":{\"keccak256\":\"0xd6ed8b3d289cade3214d00022aa2138f466b157c1349ce16638010c824ecca46\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b212bcf31a7ef43890e07f75a321291e9592b4fe99b0c8fa6e1615faf2288a03\",\"dweb:/ipfs/QmWcJ4bas5cuwD6fu8Jsh92TaNqeM78URJjNCnDeUMiR7p\"]},\"contracts/src/towns/facets/entitlements/EntitlementsBase.sol\":{\"keccak256\":\"0x5800e907c403e6eacc28911a54c6558247bf00d1223e1f8397849624f53bbc2b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://34973c8bcc43be6168161898c9d942dd7357e33a5417fe949e401db7dd79a140\",\"dweb:/ipfs/QmUCn4x21VW5JjJK8msFTkj8FRtzswZH3MrLUCGfR1e5CA\"]},\"contracts/src/towns/facets/entitlements/EntitlementsService.sol\":{\"keccak256\":\"0x312b81aee24b5974d794ee9e60e1accb9b53e1f1ab7a931354523a388d9fd449\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b43ebad51a275a24244bcec1e9ab4c452d0ff1694802e0f8abe62b9133642037\",\"dweb:/ipfs/QmWJsMsoQfGKrzSUN3AP1eGGr9v5by2KE4EpoYMDRS4V89\"]},\"contracts/src/towns/facets/entitlements/EntitlementsStorage.sol\":{\"keccak256\":\"0x6a8cd3a19ff1c836849d48be28f94b08f2864b4f26823a3af3e5741ff106a2a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3950f0448e01b6dbe94b4e3ea84ff8c5bc5d3da4966c1e848da5d40738b0a647\",\"dweb:/ipfs/QmbTtp8PdYYZbsuuseRVJeUVQHUKJwfwDXWqtFQRDz9yDp\"]},\"contracts/src/towns/facets/entitlements/IEntitlements.sol\":{\"keccak256\":\"0xb466a5f375df71e1db46a8358504688b3a0da95cd93dd63c3a72111b55fd1b18\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8da3d044976e09322b31c4bd9aace156e149dd395052430f69b29b2f38ae1811\",\"dweb:/ipfs/QmS6deT8YZkTe1CDqdZqnfHw3S1JgumFLNic7GjS3FUZHW\"]},\"contracts/src/towns/facets/roles/IRoles.sol\":{\"keccak256\":\"0xfec96325feceb563e53a45890d5ded1d1cc3618e6e85f940f23d932bd4c8540d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f0d02b124125e9da152639212cea23451f3e133488dedcb122bc1fbbefeec1e5\",\"dweb:/ipfs/QmcZT6KsTTJcAwknCBAMWFBZAV1bn7ntD9jHnWvdGDDKMG\"]},\"contracts/src/towns/facets/roles/Roles.sol\":{\"keccak256\":\"0x9debad8208efe119a89b26c5a8e8a700f10af3e892c0cfc21b4edd35e5946138\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7b29e67e38d5427523c271a0d289db058712d230cafb00a2a6cb0130062fa62e\",\"dweb:/ipfs/QmezxhD5FgQDbQHyUPgTYQmdgbVzRmJU6bHjJ4ntaSGjTW\"]},\"contracts/src/towns/facets/roles/RolesBase.sol\":{\"keccak256\":\"0x17197a759ee7ccf5bd4478f3be83223362947f81f00c7e6c1f0396dad21551b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5c0da14f1848000adc83c27a4ea52deec9122a88bca364f0009390ef27b91c4e\",\"dweb:/ipfs/QmaUzQ6qrEGLHqnDFjgY9E6AcKyn7WAfbx4Pr9WW8jtMzw\"]},\"contracts/src/towns/facets/roles/RolesService.sol\":{\"keccak256\":\"0x58e110d4c31f26d1b2415394fbcc74ece827ea77b3d506189de6bb19074e7058\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://be4e82940a7cec4e40460c7e0e7b43a25baea01efb57ef1d9bb7b0e941163b95\",\"dweb:/ipfs/QmerAf6LKNZ1xygqMvP4oB7zuQH3c7BiJvr34Pg8EkQD5m\"]},\"contracts/src/towns/facets/roles/RolesStorage.sol\":{\"keccak256\":\"0x60fa9d7e4bad4a6e62101c9ded37978d045b596d7f287ce8456542a8645d6b48\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b412e190e309d5f5604d84b565f3bfe90011525f912ca17ff30b639d34f6d378\",\"dweb:/ipfs/QmcULfFuig7HD3MYHR3QkGMDtBCCzCq2ZBemfcA8iqceEq\"]},\"contracts/src/utils/StringSet.sol\":{\"keccak256\":\"0x47235bcc7b60e9d244156cdd2d0defe4c1a8eb6d078f4426b4fb8c094dd41781\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://07d0eee74639221183100bb2aedaea7d6e8b0ebe31608e6cb86b135a89240c66\",\"dweb:/ipfs/QmbSLb1uhWVz7bVrBJTiTk9dWjD7xBmUiRJECdnaGWVVcR\"]},\"contracts/src/utils/Validator.sol\":{\"keccak256\":\"0x51ec816c6e6dda4973556e0446a1dfcec872e73352838315a1140683c4cb4001\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b747e47602719190bd080f69913233de5a39a2b6afa4c7c9ebd591e93282de93\",\"dweb:/ipfs/QmTc74S4UBYrmHEDc7Z17ohc2MC6hfxfRWSqk1qkE1S3b1\"]},\"contracts/test/diamond/Facet.t.sol\":{\"keccak256\":\"0x6d2704184b1ebc9633b41af2a7bf0984e36e53fc3621335453f9bed5a172d5dc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3b127697407e511a54a45b149a6352caa2f8a6dd6f406f2b966fe55e9623691f\",\"dweb:/ipfs/QmcekAxbsntg8J79bqyHfxV8bnYA53YkZcaJokd6eoFRBf\"]},\"contracts/test/diamond/ownable/token/TokenOwnableSetup.sol\":{\"keccak256\":\"0x319c5d1d22a2a05dcf966ad86a52b2a2ee5370de6d1d7d690f05cf0a76ef7fc4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02dcbaddff1d67ededd148ca8ad83674954dbbb329a8a5a5e801daba711dc4c0\",\"dweb:/ipfs/QmeXLUL44XSE7QYQSnGNaNdBTyhigUyu3m5qC6pP3ypneN\"]},\"contracts/test/mocks/MockERC721.sol\":{\"keccak256\":\"0x8cf07b7b91e2da1b9aad346cc5e998f3cdd87bf186659ee3cb26910ac6a3f149\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02c71f956e6669518393f47c0a5711f5cf5eb5e2a826e11656f3346284a1f150\",\"dweb:/ipfs/QmUjvy3BAtX7zpufjc3M52EqLyYE9VXzowxYZxsmfPsWFA\"]},\"contracts/test/mocks/MockUserEntitlement.sol\":{\"keccak256\":\"0xf4f82b634de8877d0507ae97a0d4bfe55ab65c2bed6d1fd8453628498b76c0ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417129df54a76a726e43bda137bfdb9efc977cd65fe9fb1ec62265a5f4778569\",\"dweb:/ipfs/QmWRe3eCQvj2sThn8jUraNjxe1bhbxXzUvbTGgNWQzN88t\"]},\"contracts/test/mocks/MockUserEntitlementStorage.sol\":{\"keccak256\":\"0x9b1a73766dac80947f10700901c39d71b9fb088c0cf87e084497d31584eac9a7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fe6e7d7444c073fb5f88f2c0e5462f0370e48d40ee4cbfd00ba05a1cd8e6fc8b\",\"dweb:/ipfs/QmbZnBzZkFZ7dMgDUkQ6n6XZvLHt52kCGZjrSPWUUnmkCH\"]},\"contracts/test/towns/channels/ChannelsSetup.sol\":{\"keccak256\":\"0xe8ac556a1911ccb91c0da389ac94438fe4f1faabc2d148213aaf80f0df3b69a2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d546d5ce0fc490b0794b052e9fdd1fd128d9d93bcabd575316911776875c9845\",\"dweb:/ipfs/QmRy7CE41uWsjjByE32u5CJB9wxg6BaWcawQYj3MBFZKwr\"]},\"contracts/test/towns/entitlements/EntitlementsSetup.sol\":{\"keccak256\":\"0x92963ccd2734b249117304bac84e0a693132b0f6b8b4964b6da01819b1a0a8af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2db96902c90899c92348003451180fcb7610f442b07fc57cb42215debf2b914d\",\"dweb:/ipfs/Qmd5g9YYKahhRTAfUqzaaUp9MvEFDcMpsoVm8gN1oBTmfo\"]},\"contracts/test/towns/roles/RolesSetup.sol\":{\"keccak256\":\"0xe71c37ae590a681d69f85c66c4a2d7d9de0e29f5e1429aca2b467869b890a1a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dfd85904889009dc618bb526e3b7094928e3393dbc78088068a720c44d9af427\",\"dweb:/ipfs/QmS9EuFk7QfXDo6rUicb2F3xYMqpWpzXH2GcH16VGEuotv\"]},\"contracts/test/utils/TestUtils.sol\":{\"keccak256\":\"0xc9d1e208a42d002aceb99f2dd2e593fc3f7bf7c326eaef14e70f58c6c6c0a5cd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bbf728a738ef1f3d79d4798400c4d2c2ac6df7a4e6c7fc939db2b28cbb43125a\",\"dweb:/ipfs/QmV2nUeDrPHSHesN1dxaFPr8fWDH15vZQzEzoEen2rowvH\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"lib/prb-test/src/Helpers.sol\":{\"keccak256\":\"0x4ab5888920e97cb50dff6a7093fd01d830aa8b7f1e3d5313f73e46f812360705\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ecaffd6d742a3c47c3785e9816d1d459d45cb6bf34a353884d333b87d52fa60\",\"dweb:/ipfs/QmYjsof64dPbxxw4i95S9bqDvTF4V2DA35bSwYAvXxxXYp\"]},\"lib/prb-test/src/PRBTest.sol\":{\"keccak256\":\"0xed6d9f8c7fd5ca380a47a6de7c631d48a96cbc777632d030a52bf9216aea0bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcf663e0c2e2d3eabdaa1c9e7ff4df2a3b046e1279de1e0d2ce24a87a86e37fb\",\"dweb:/ipfs/QmRnar3CcN2JMYqrDYkUqEya6A3vBWUrD2HSL8aP7FC4vK\"]},\"lib/prb-test/src/Vm.sol\":{\"keccak256\":\"0xecae57742478cd465460cc2ec5fd9174a41e5b93549c1d4456ff26cf97356fee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fdf31f7f585bebfde82af93eb295e18196362704e69338e0626c2d8015d00e9d\",\"dweb:/ipfs/Qme1oLTN5CxRRiuVw48oN5buYotdaKNnio7a9W4hAus9Ry\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Diamond_UnsupportedFunction"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deploy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "facet",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "initializer",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IDiamond.FacetCutAction",
              "name": "action",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeCut",
          "outputs": [
            {
              "internalType": "struct IDiamond.FacetCut",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamond.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamond.FacetCutAction",
              "name": "action",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeCut",
          "outputs": [
            {
              "internalType": "struct IDiamond.FacetCut",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamond.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "makeInitData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "selectors",
          "outputs": [
            {
              "internalType": "bytes4[]",
              "name": "",
              "type": "bytes4[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "facet()": {
            "details": "Deploy facet contract in constructor and return address for testing."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC721A/=lib/ERC721A/contracts/",
        "council/=lib/council/contracts/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "operator-filter-registry/=lib/operator-filter-registry/",
        "prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "contracts/test/towns/entitlements/EntitlementsSetup.sol": "EntitlementsHelper"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/diamond/Diamond.sol": {
        "keccak256": "0x8788c4adf69122542b2b108de311c6b092db9229c678505af5cd6c37e6c89748",
        "urls": [
          "bzz-raw://cf42f45b20fc8bbf19ac1c7922d67ff2016910204567ea5f15745f38e17c0981",
          "dweb:/ipfs/QmdQ8ftGRQKcfS9ZdkyWDAMxAPRVyJ6hRibNjweankVgAx"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/IDiamond.sol": {
        "keccak256": "0x229b4689e28257d9cbf4812e2bf2e42467107ce1922ffc1c167b72fe8b8e4532",
        "urls": [
          "bzz-raw://9b1684fd3ebcb86d611495cad57d01002c3a9564975cc4d8d5d3a3afa2e3110e",
          "dweb:/ipfs/QmVFTX38enoWRiDkU6LVutRoFSsSuaoNuzz6ZVKajQK5VB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/Facet.sol": {
        "keccak256": "0x8213b85d1271bc3c2aa9842979c8ad825066c4c9addc55296d53b6747e5198ba",
        "urls": [
          "bzz-raw://b4e88e869c99e65f0caeb9d03938e78c578a869783b9f20c05f4ba52e7ca493d",
          "dweb:/ipfs/QmRqPmg8BYD1V6Cd8kfihCQ7nn2DAsgRjGW2MJvc7Evnjt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/cut/DiamondCutBase.sol": {
        "keccak256": "0x3c7b30a0c0198f7c6f482103ebbcd07a51537b8fda0fdc9aa0c2fa94b7d56381",
        "urls": [
          "bzz-raw://d4aa75bea783571945fc0f4fd2565ab603884e40c2b8046971bea647ced77058",
          "dweb:/ipfs/QmWWvTmzSGAD5exYYdJL4EC721nCHw6nH4VS8ns641moX7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/cut/DiamondCutStorage.sol": {
        "keccak256": "0x66979c2a475d398e3c1800eac068e386283d59a035e61b036aac5aab8800a0a6",
        "urls": [
          "bzz-raw://f16a69b5b620f7c7c03539ba4273af399b16635a7e0ccfa1ecd3916c2d443a11",
          "dweb:/ipfs/QmZUg2JrVqUg2Jz7nNnvnSYmkKutzAUm7199EL9xoJt8i6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/cut/IDiamondCut.sol": {
        "keccak256": "0xcdd725c5691ccc750bf8f5fb14bafa525377ed3bad72d94d0abe633c09e8b2aa",
        "urls": [
          "bzz-raw://024d0f05aef75094de7d104360b68128f48a5ad69e76d79923c71bbddb8eda49",
          "dweb:/ipfs/QmWRhDE7rZQSAbahYXBnJZZrvo7R2huE6oqRhaPECWGGcw"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/initializable/Initializable.sol": {
        "keccak256": "0x2a4f3a99b3b3ac6c2c18431cea80b40774c1d8265ddefac21b26da561e069096",
        "urls": [
          "bzz-raw://36dbba730942b1fd345f242051ea7f33e979f70392fbd929d8522c0c9c6dd367",
          "dweb:/ipfs/QmYMvYnvg9zQJpDQX9yMHZ1AET9Vx7UXtDenXAs1JhfPpd"
        ],
        "license": "MIT"
      },
      "contracts/src/diamond/facets/initializable/InitializableStorage.sol": {
        "keccak256": "0x99dfe047dbb8df48a7490f63939420dd990fb5fd3b3a03c42d0cb9c6f4f9eefa",
        "urls": [
          "bzz-raw://5e8f6d4bff257324e4544cacadd9fee42bada459f457fb707fef90bcfe0e895a",
          "dweb:/ipfs/QmYWEam5VcMt5ViNMKRkaxoD84MK2MewS5iWwSES589Vma"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IERC165.sol": {
        "keccak256": "0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816",
        "urls": [
          "bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2",
          "dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IntrospectionBase.sol": {
        "keccak256": "0x503b6ce030f8a760e9a877545b35307d05bbb704b501095795ab2168fe40db59",
        "urls": [
          "bzz-raw://769658fed18c26f67dec9bf4ca18dd595c0343bc8ea21bb3e50595eca3401265",
          "dweb:/ipfs/QmVuqWH5eKqBJbNEtXzybgZ7ahtjTraMew8CMb4TuVUyo6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IntrospectionStorage.sol": {
        "keccak256": "0xd2ec3bbe4d15f9232006b41e0a80a5127006243ee596754af77bd3926045782a",
        "urls": [
          "bzz-raw://8c47e18bfd34a687ce9ec75dc1f1fa5bca088e97e59aad2ac3fdb0989d06d7e6",
          "dweb:/ipfs/QmdktQXV7PKABzh43SZqemdTG25RxMaMsgpXTTUvZUxmfU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/loupe/DiamondLoupeBase.sol": {
        "keccak256": "0x8db2619bcc4b0c7e920bbd603d8790168a6fed3e687780304fc76278ae0b9cf3",
        "urls": [
          "bzz-raw://cef388e76684f823fc6ab718a18bdaec3cc9b002c1cc12b8f6fc1ff07b8f929e",
          "dweb:/ipfs/QmVaUuM1nSTgoSv6Na3fZHcAgCX2XFDuVEek5caFA5iWvx"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/loupe/IDiamondLoupe.sol": {
        "keccak256": "0x83141e0a7e8f1e9a592ca00bb6365aae7296f61d06080024546350594f076618",
        "urls": [
          "bzz-raw://f0917399449ea9830cff570d958d28b37b3c83af3a38c5f0a58241264aaf8290",
          "dweb:/ipfs/QmUbJD4U8Fpf7BiXJWExejkd54vUjiXJrjnxxARUDzrGa8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/IERC173.sol": {
        "keccak256": "0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe",
        "urls": [
          "bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620",
          "dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol": {
        "keccak256": "0x6fd8ef9c81c98db01284b7b6874e47d36bb14af1011f8055e8f29384710472e4",
        "urls": [
          "bzz-raw://d5fe0f5d5b5ee6889c9dddb02895605f3fe72b930d56c19a1705f5b036b5aed2",
          "dweb:/ipfs/QmR5AErtoePrJhUbuFAhxioPYWJ5cjBX71E4nD84xvw45k"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableFacet.sol": {
        "keccak256": "0xa9d6102ee28ca3f0c5de747023173cd85fa5e4b2947fc2285fd40be0a69856e4",
        "urls": [
          "bzz-raw://1d8bcbaea16b5e356904189dfe2112b15379a00486fef46e9167e28b62c9e5b5",
          "dweb:/ipfs/QmUPLR6FJfMGC5RGaQWFuzZK8o8Z3D9wDsLa26ZhWZG4dM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol": {
        "keccak256": "0xea4323b3cc8794cb9008bf79180555b0dc248c52e0b030024d6b4ac9fdd6af0b",
        "urls": [
          "bzz-raw://dce6d6130309fce1126b8a4b493cc14666c59d1f7685107f07fb685d2cf31773",
          "dweb:/ipfs/QmVrC5tmJWZYgZ7ruKW6uDU8QDeZgbh3QcZD9aWHrX2Duh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/IPausable.sol": {
        "keccak256": "0x51faf4ca7fa88bc4bf2699bab34692f0a43a316d0b3f95a8d7271935ef243a78",
        "urls": [
          "bzz-raw://e4ff1050ba7ec1bc7de90f562d8ccf7875f4faea0f12ca5101f22619f2dd6de2",
          "dweb:/ipfs/QmeczRzWavYXmirfEbwGg5uLeLdXaENtFAzmxxFsggUHsW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/PausableBase.sol": {
        "keccak256": "0xfdeeba59a9f9b6a31203aa45f9244767b5d790dbcf36c920cc0ec5471505e47f",
        "urls": [
          "bzz-raw://72d6eb74b90e658834c9b9f6a9e391722c3eb3992aef2d4694c1a91473b291a1",
          "dweb:/ipfs/QmXVV8mTt8LmFDhzn3Lm3BMLXNdJTzUMbMrpBjnUaMzm5F"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/PausableStorage.sol": {
        "keccak256": "0x7aaa1baa71b080cf67876cb383b505be55ff2661b4bafc7f01428d509c201296",
        "urls": [
          "bzz-raw://68231325f3a66baf6b96cb34d1432a675ff1d36fc15500cec97de12fc823bcd1",
          "dweb:/ipfs/QmVQb23iSSbYQJqk3EB9vT5fjSp6J8Uj2AwgEaHMSkF6wa"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/proxy/IProxy.sol": {
        "keccak256": "0x56c8fafe5e06a8ad2a80f19d0eb8ac68c8cd42fc00d8501cb65201849fb62799",
        "urls": [
          "bzz-raw://2767795c4790a270e44e882e237ceb68afbcb75d811a94a5f9c32c7e16cf8e4d",
          "dweb:/ipfs/QmSWLUpnNk2G7x1PscxecJD3mWbnXo2R7kAkF2qjjquW91"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/proxy/Proxy.sol": {
        "keccak256": "0x633c279137c71720b2134030c8c9843adb5b34c90587c8c29b60d32ec9ba5353",
        "urls": [
          "bzz-raw://d73f89f3198fe2a65890d28648d64377ecee50caf2cd62a787c00aafe5b21708",
          "dweb:/ipfs/QmZnHjDoZBnmCqod18WPSm7jdREwy1f7yhuq7Z3RJmE6Jh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/spaces/libraries/Errors.sol": {
        "keccak256": "0xb0a9a538c142afb52002a9ed67fe15f71263406b905ab854f58d0c4bbb168f79",
        "urls": [
          "bzz-raw://f9a27883f35eee16c86c768b5084a1552058f996f72457e7ef624a20e731f4f7",
          "dweb:/ipfs/QmWNJYmVeNmsbq8Q6DAfa5ciBzXg61ARKteprhxFsAF289"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/entitlements/IEntitlement.sol": {
        "keccak256": "0x3c3733f40dcf373c19ea564ec9cbf49b33e96c27a80012e9be6f8d6d24e76c46",
        "urls": [
          "bzz-raw://ba0686e15bc8bfac66d59f62e59832eaf6d4c1b636080f9b2367386d5dc72ecb",
          "dweb:/ipfs/QmemW17L8TkGWG9RHKWTpjq9WBtYX3dmZsiTtzDmYNNXwE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/Entitled.sol": {
        "keccak256": "0x9a4a44f9b7829dda47a0beb43076f2382bda72333571001eb8a6fb69d723b2c2",
        "urls": [
          "bzz-raw://2d9ae9e5668e5f1efa28dff702ee50eec69df427c6eaee3321859cbad206bc82",
          "dweb:/ipfs/QmaMQsyVzREskdSfarp6eVWPmttJY2zTh2Xr37zCfwX6QP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/Permissions.sol": {
        "keccak256": "0x88d13ea9a9d2243a3950b4694a5030db6f1546c6c0b26d90c3cbc9af929f678d",
        "urls": [
          "bzz-raw://6e07ce7de38b1fd52a4db1ed51bc298bc618f559e067b5060a60ad7bdf3a9b1d",
          "dweb:/ipfs/QmS4zCFdVJwj26ef8rtU8QejEVoi5XfCrDZjxq1N2AhGaK"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/channels/ChannelBase.sol": {
        "keccak256": "0x15f7fade035e399ce7ce71c8dc614cb5d11354d29901f134386b168fae2f1063",
        "urls": [
          "bzz-raw://5bee322adde2ce1807bf8a5dbda483ac5864a43a3c1c8bccb37a65cd757e88ee",
          "dweb:/ipfs/QmVXKhxK2SgUsJ2RQRzWbku1JqQMxuE5KJ9gZBj9Q88GTU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/channels/ChannelService.sol": {
        "keccak256": "0xf6385db2da94e6650ef50c4286d2dca3aec269d6dec2a9979eea6c5b481431af",
        "urls": [
          "bzz-raw://d52a6973b5309af1f93bd986fc73ca411f14bb30666e628830c4534b4d7be86b",
          "dweb:/ipfs/QmWB3drETz9dg4n7Yijhc9KVLWTCy339Df59jcaHNN3F8H"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/channels/ChannelStorage.sol": {
        "keccak256": "0x6a77c72a6390013ccdf52e7174c397bdfd67d7c1ed48ee0ce660c54f58a86fc3",
        "urls": [
          "bzz-raw://8507829be0ce8f69985f40fbd7ff53e287e150d792f706c265a553085040ddcd",
          "dweb:/ipfs/QmbZfwRDkLX3fypMYKrrE1wsxKTqVh6oyZG2Yd8ZijiE8f"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/channels/Channels.sol": {
        "keccak256": "0x9c2c2ba6a901c7aeef398f4226b4e12144e3ff6ccc84c0f8760a7dd131f57bc1",
        "urls": [
          "bzz-raw://e5be0a55d2cef78a281e331ded93b057bc1793b2810576f7c848b2e4c04b4275",
          "dweb:/ipfs/QmT1sS9za3bTfmdmtEJGKdf6qFE3tcYDDmU5BmnUQ1Wb64"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/channels/IChannel.sol": {
        "keccak256": "0xad2a848fd582f0e648d14c6271100bfdbcc238c293f1d99c9a514987ba223e9b",
        "urls": [
          "bzz-raw://0485777d5ee61dd66929b9dc191bb2b3ae13288b9b6bdc87f6fd29a0bf249570",
          "dweb:/ipfs/QmcwXjVTwYJHirEktW1UgjntZYSFdHihMqVUNyhdGDwpZ4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/Entitlements.sol": {
        "keccak256": "0xd6ed8b3d289cade3214d00022aa2138f466b157c1349ce16638010c824ecca46",
        "urls": [
          "bzz-raw://b212bcf31a7ef43890e07f75a321291e9592b4fe99b0c8fa6e1615faf2288a03",
          "dweb:/ipfs/QmWcJ4bas5cuwD6fu8Jsh92TaNqeM78URJjNCnDeUMiR7p"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsBase.sol": {
        "keccak256": "0x5800e907c403e6eacc28911a54c6558247bf00d1223e1f8397849624f53bbc2b",
        "urls": [
          "bzz-raw://34973c8bcc43be6168161898c9d942dd7357e33a5417fe949e401db7dd79a140",
          "dweb:/ipfs/QmUCn4x21VW5JjJK8msFTkj8FRtzswZH3MrLUCGfR1e5CA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsService.sol": {
        "keccak256": "0x312b81aee24b5974d794ee9e60e1accb9b53e1f1ab7a931354523a388d9fd449",
        "urls": [
          "bzz-raw://b43ebad51a275a24244bcec1e9ab4c452d0ff1694802e0f8abe62b9133642037",
          "dweb:/ipfs/QmWJsMsoQfGKrzSUN3AP1eGGr9v5by2KE4EpoYMDRS4V89"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsStorage.sol": {
        "keccak256": "0x6a8cd3a19ff1c836849d48be28f94b08f2864b4f26823a3af3e5741ff106a2a1",
        "urls": [
          "bzz-raw://3950f0448e01b6dbe94b4e3ea84ff8c5bc5d3da4966c1e848da5d40738b0a647",
          "dweb:/ipfs/QmbTtp8PdYYZbsuuseRVJeUVQHUKJwfwDXWqtFQRDz9yDp"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/IEntitlements.sol": {
        "keccak256": "0xb466a5f375df71e1db46a8358504688b3a0da95cd93dd63c3a72111b55fd1b18",
        "urls": [
          "bzz-raw://8da3d044976e09322b31c4bd9aace156e149dd395052430f69b29b2f38ae1811",
          "dweb:/ipfs/QmS6deT8YZkTe1CDqdZqnfHw3S1JgumFLNic7GjS3FUZHW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/roles/IRoles.sol": {
        "keccak256": "0xfec96325feceb563e53a45890d5ded1d1cc3618e6e85f940f23d932bd4c8540d",
        "urls": [
          "bzz-raw://f0d02b124125e9da152639212cea23451f3e133488dedcb122bc1fbbefeec1e5",
          "dweb:/ipfs/QmcZT6KsTTJcAwknCBAMWFBZAV1bn7ntD9jHnWvdGDDKMG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/roles/Roles.sol": {
        "keccak256": "0x9debad8208efe119a89b26c5a8e8a700f10af3e892c0cfc21b4edd35e5946138",
        "urls": [
          "bzz-raw://7b29e67e38d5427523c271a0d289db058712d230cafb00a2a6cb0130062fa62e",
          "dweb:/ipfs/QmezxhD5FgQDbQHyUPgTYQmdgbVzRmJU6bHjJ4ntaSGjTW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/roles/RolesBase.sol": {
        "keccak256": "0x17197a759ee7ccf5bd4478f3be83223362947f81f00c7e6c1f0396dad21551b9",
        "urls": [
          "bzz-raw://5c0da14f1848000adc83c27a4ea52deec9122a88bca364f0009390ef27b91c4e",
          "dweb:/ipfs/QmaUzQ6qrEGLHqnDFjgY9E6AcKyn7WAfbx4Pr9WW8jtMzw"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/roles/RolesService.sol": {
        "keccak256": "0x58e110d4c31f26d1b2415394fbcc74ece827ea77b3d506189de6bb19074e7058",
        "urls": [
          "bzz-raw://be4e82940a7cec4e40460c7e0e7b43a25baea01efb57ef1d9bb7b0e941163b95",
          "dweb:/ipfs/QmerAf6LKNZ1xygqMvP4oB7zuQH3c7BiJvr34Pg8EkQD5m"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/roles/RolesStorage.sol": {
        "keccak256": "0x60fa9d7e4bad4a6e62101c9ded37978d045b596d7f287ce8456542a8645d6b48",
        "urls": [
          "bzz-raw://b412e190e309d5f5604d84b565f3bfe90011525f912ca17ff30b639d34f6d378",
          "dweb:/ipfs/QmcULfFuig7HD3MYHR3QkGMDtBCCzCq2ZBemfcA8iqceEq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/utils/StringSet.sol": {
        "keccak256": "0x47235bcc7b60e9d244156cdd2d0defe4c1a8eb6d078f4426b4fb8c094dd41781",
        "urls": [
          "bzz-raw://07d0eee74639221183100bb2aedaea7d6e8b0ebe31608e6cb86b135a89240c66",
          "dweb:/ipfs/QmbSLb1uhWVz7bVrBJTiTk9dWjD7xBmUiRJECdnaGWVVcR"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/utils/Validator.sol": {
        "keccak256": "0x51ec816c6e6dda4973556e0446a1dfcec872e73352838315a1140683c4cb4001",
        "urls": [
          "bzz-raw://b747e47602719190bd080f69913233de5a39a2b6afa4c7c9ebd591e93282de93",
          "dweb:/ipfs/QmTc74S4UBYrmHEDc7Z17ohc2MC6hfxfRWSqk1qkE1S3b1"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/diamond/Facet.t.sol": {
        "keccak256": "0x6d2704184b1ebc9633b41af2a7bf0984e36e53fc3621335453f9bed5a172d5dc",
        "urls": [
          "bzz-raw://3b127697407e511a54a45b149a6352caa2f8a6dd6f406f2b966fe55e9623691f",
          "dweb:/ipfs/QmcekAxbsntg8J79bqyHfxV8bnYA53YkZcaJokd6eoFRBf"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/diamond/ownable/token/TokenOwnableSetup.sol": {
        "keccak256": "0x319c5d1d22a2a05dcf966ad86a52b2a2ee5370de6d1d7d690f05cf0a76ef7fc4",
        "urls": [
          "bzz-raw://02dcbaddff1d67ededd148ca8ad83674954dbbb329a8a5a5e801daba711dc4c0",
          "dweb:/ipfs/QmeXLUL44XSE7QYQSnGNaNdBTyhigUyu3m5qC6pP3ypneN"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/mocks/MockERC721.sol": {
        "keccak256": "0x8cf07b7b91e2da1b9aad346cc5e998f3cdd87bf186659ee3cb26910ac6a3f149",
        "urls": [
          "bzz-raw://02c71f956e6669518393f47c0a5711f5cf5eb5e2a826e11656f3346284a1f150",
          "dweb:/ipfs/QmUjvy3BAtX7zpufjc3M52EqLyYE9VXzowxYZxsmfPsWFA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/mocks/MockUserEntitlement.sol": {
        "keccak256": "0xf4f82b634de8877d0507ae97a0d4bfe55ab65c2bed6d1fd8453628498b76c0ca",
        "urls": [
          "bzz-raw://417129df54a76a726e43bda137bfdb9efc977cd65fe9fb1ec62265a5f4778569",
          "dweb:/ipfs/QmWRe3eCQvj2sThn8jUraNjxe1bhbxXzUvbTGgNWQzN88t"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/mocks/MockUserEntitlementStorage.sol": {
        "keccak256": "0x9b1a73766dac80947f10700901c39d71b9fb088c0cf87e084497d31584eac9a7",
        "urls": [
          "bzz-raw://fe6e7d7444c073fb5f88f2c0e5462f0370e48d40ee4cbfd00ba05a1cd8e6fc8b",
          "dweb:/ipfs/QmbZnBzZkFZ7dMgDUkQ6n6XZvLHt52kCGZjrSPWUUnmkCH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/towns/channels/ChannelsSetup.sol": {
        "keccak256": "0xe8ac556a1911ccb91c0da389ac94438fe4f1faabc2d148213aaf80f0df3b69a2",
        "urls": [
          "bzz-raw://d546d5ce0fc490b0794b052e9fdd1fd128d9d93bcabd575316911776875c9845",
          "dweb:/ipfs/QmRy7CE41uWsjjByE32u5CJB9wxg6BaWcawQYj3MBFZKwr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/towns/entitlements/EntitlementsSetup.sol": {
        "keccak256": "0x92963ccd2734b249117304bac84e0a693132b0f6b8b4964b6da01819b1a0a8af",
        "urls": [
          "bzz-raw://2db96902c90899c92348003451180fcb7610f442b07fc57cb42215debf2b914d",
          "dweb:/ipfs/Qmd5g9YYKahhRTAfUqzaaUp9MvEFDcMpsoVm8gN1oBTmfo"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/towns/roles/RolesSetup.sol": {
        "keccak256": "0xe71c37ae590a681d69f85c66c4a2d7d9de0e29f5e1429aca2b467869b890a1a1",
        "urls": [
          "bzz-raw://dfd85904889009dc618bb526e3b7094928e3393dbc78088068a720c44d9af427",
          "dweb:/ipfs/QmS9EuFk7QfXDo6rUicb2F3xYMqpWpzXH2GcH16VGEuotv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/utils/TestUtils.sol": {
        "keccak256": "0xc9d1e208a42d002aceb99f2dd2e593fc3f7bf7c326eaef14e70f58c6c6c0a5cd",
        "urls": [
          "bzz-raw://bbf728a738ef1f3d79d4798400c4d2c2ac6df7a4e6c7fc939db2b28cbb43125a",
          "dweb:/ipfs/QmV2nUeDrPHSHesN1dxaFPr8fWDH15vZQzEzoEen2rowvH"
        ],
        "license": "Apache-2.0"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823",
        "urls": [
          "bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2",
          "dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778",
        "urls": [
          "bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1",
          "dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a",
        "urls": [
          "bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3",
          "dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      },
      "lib/prb-test/src/Helpers.sol": {
        "keccak256": "0x4ab5888920e97cb50dff6a7093fd01d830aa8b7f1e3d5313f73e46f812360705",
        "urls": [
          "bzz-raw://0ecaffd6d742a3c47c3785e9816d1d459d45cb6bf34a353884d333b87d52fa60",
          "dweb:/ipfs/QmYjsof64dPbxxw4i95S9bqDvTF4V2DA35bSwYAvXxxXYp"
        ],
        "license": "MIT"
      },
      "lib/prb-test/src/PRBTest.sol": {
        "keccak256": "0xed6d9f8c7fd5ca380a47a6de7c631d48a96cbc777632d030a52bf9216aea0bf1",
        "urls": [
          "bzz-raw://dcf663e0c2e2d3eabdaa1c9e7ff4df2a3b046e1279de1e0d2ce24a87a86e37fb",
          "dweb:/ipfs/QmRnar3CcN2JMYqrDYkUqEya6A3vBWUrD2HSL8aP7FC4vK"
        ],
        "license": "MIT"
      },
      "lib/prb-test/src/Vm.sol": {
        "keccak256": "0xecae57742478cd465460cc2ec5fd9174a41e5b93549c1d4456ff26cf97356fee",
        "urls": [
          "bzz-raw://fdf31f7f585bebfde82af93eb295e18196362704e69338e0626c2d8015d00e9d",
          "dweb:/ipfs/Qme1oLTN5CxRRiuVw48oN5buYotdaKNnio7a9W4hAus9Ry"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/towns/entitlements/EntitlementsSetup.sol",
    "id": 74987,
    "exportedSymbols": {
      "ChannelsHelper": [
        73987
      ],
      "Diamond": [
        6185
      ],
      "Entitlements": [
        32022
      ],
      "EntitlementsHelper": [
        74986
      ],
      "EntitlementsSetup": [
        74853
      ],
      "FacetHelper": [
        41985
      ],
      "FacetTest": [
        41914
      ],
      "IDiamond": [
        6206
      ],
      "IEntitlements": [
        32676
      ],
      "MockERC721": [
        50801
      ],
      "MockUserEntitlement": [
        52130
      ],
      "RolesHelper": [
        83145
      ],
      "TokenOwnableHelper": [
        47073
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3510:295",
    "nodes": [
      {
        "id": 74635,
        "nodeType": "PragmaDirective",
        "src": "39:24:295",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 74638,
        "nodeType": "ImportDirective",
        "src": "79:68:295",
        "nodes": [],
        "absolutePath": "contracts/src/diamond/Diamond.sol",
        "file": "contracts/src/diamond/Diamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74987,
        "sourceUnit": 6186,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74636,
              "name": "IDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6206,
              "src": "87:8:295",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 74637,
              "name": "Diamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6185,
              "src": "97:7:295",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74640,
        "nodeType": "ImportDirective",
        "src": "148:88:295",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/entitlements/IEntitlements.sol",
        "file": "contracts/src/towns/facets/entitlements/IEntitlements.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74987,
        "sourceUnit": 32677,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74639,
              "name": "IEntitlements",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32676,
              "src": "156:13:295",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74643,
        "nodeType": "ImportDirective",
        "src": "265:74:295",
        "nodes": [],
        "absolutePath": "contracts/test/diamond/Facet.t.sol",
        "file": "contracts/test/diamond/Facet.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74987,
        "sourceUnit": 41986,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74641,
              "name": "FacetHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41985,
              "src": "273:11:295",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 74642,
              "name": "FacetTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41914,
              "src": "286:9:295",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74645,
        "nodeType": "ImportDirective",
        "src": "340:86:295",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/entitlements/Entitlements.sol",
        "file": "contracts/src/towns/facets/entitlements/Entitlements.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74987,
        "sourceUnit": 32023,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74644,
              "name": "Entitlements",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32022,
              "src": "348:12:295",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74647,
        "nodeType": "ImportDirective",
        "src": "439:94:295",
        "nodes": [],
        "absolutePath": "contracts/test/diamond/ownable/token/TokenOwnableSetup.sol",
        "file": "contracts/test/diamond/ownable/token/TokenOwnableSetup.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74987,
        "sourceUnit": 47074,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74646,
              "name": "TokenOwnableHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47073,
              "src": "447:18:295",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74649,
        "nodeType": "ImportDirective",
        "src": "534:79:295",
        "nodes": [],
        "absolutePath": "contracts/test/towns/channels/ChannelsSetup.sol",
        "file": "contracts/test/towns/channels/ChannelsSetup.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74987,
        "sourceUnit": 73988,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74648,
              "name": "ChannelsHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 73987,
              "src": "542:14:295",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74651,
        "nodeType": "ImportDirective",
        "src": "614:70:295",
        "nodes": [],
        "absolutePath": "contracts/test/towns/roles/RolesSetup.sol",
        "file": "contracts/test/towns/roles/RolesSetup.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74987,
        "sourceUnit": 83146,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74650,
              "name": "RolesHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 83145,
              "src": "622:11:295",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74653,
        "nodeType": "ImportDirective",
        "src": "695:63:295",
        "nodes": [],
        "absolutePath": "contracts/test/mocks/MockERC721.sol",
        "file": "contracts/test/mocks/MockERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74987,
        "sourceUnit": 50802,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74652,
              "name": "MockERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50801,
              "src": "703:10:295",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74655,
        "nodeType": "ImportDirective",
        "src": "759:81:295",
        "nodes": [],
        "absolutePath": "contracts/test/mocks/MockUserEntitlement.sol",
        "file": "contracts/test/mocks/MockUserEntitlement.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74987,
        "sourceUnit": 52131,
        "symbolAliases": [
          {
            "foreign": {
              "id": 74654,
              "name": "MockUserEntitlement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52130,
              "src": "767:19:295",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74853,
        "nodeType": "ContractDefinition",
        "src": "842:1665:295",
        "nodes": [
          {
            "id": 74660,
            "nodeType": "VariableDeclaration",
            "src": "895:34:295",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "entitlements",
            "nameLocation": "917:12:295",
            "scope": 74853,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Entitlements_$32022",
              "typeString": "contract Entitlements"
            },
            "typeName": {
              "id": 74659,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 74658,
                "name": "Entitlements",
                "nameLocations": [
                  "895:12:295"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 32022,
                "src": "895:12:295"
              },
              "referencedDeclaration": 32022,
              "src": "895:12:295",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Entitlements_$32022",
                "typeString": "contract Entitlements"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 74663,
            "nodeType": "VariableDeclaration",
            "src": "933:25:295",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "953:5:295",
            "scope": 74853,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC721_$50801",
              "typeString": "contract MockERC721"
            },
            "typeName": {
              "id": 74662,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 74661,
                "name": "MockERC721",
                "nameLocations": [
                  "933:10:295"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 50801,
                "src": "933:10:295"
              },
              "referencedDeclaration": 50801,
              "src": "933:10:295",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC721_$50801",
                "typeString": "contract MockERC721"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 74666,
            "nodeType": "VariableDeclaration",
            "src": "962:53:295",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mockImmutableEntitlement",
            "nameLocation": "991:24:295",
            "scope": 74853,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
              "typeString": "contract MockUserEntitlement"
            },
            "typeName": {
              "id": 74665,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 74664,
                "name": "MockUserEntitlement",
                "nameLocations": [
                  "962:19:295"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52130,
                "src": "962:19:295"
              },
              "referencedDeclaration": 52130,
              "src": "962:19:295",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
                "typeString": "contract MockUserEntitlement"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 74669,
            "nodeType": "VariableDeclaration",
            "src": "1019:44:295",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mockEntitlement",
            "nameLocation": "1048:15:295",
            "scope": 74853,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
              "typeString": "contract MockUserEntitlement"
            },
            "typeName": {
              "id": 74668,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 74667,
                "name": "MockUserEntitlement",
                "nameLocations": [
                  "1019:19:295"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52130,
                "src": "1019:19:295"
              },
              "referencedDeclaration": 52130,
              "src": "1019:19:295",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
                "typeString": "contract MockUserEntitlement"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 74671,
            "nodeType": "VariableDeclaration",
            "src": "1068:24:295",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "founder",
            "nameLocation": "1085:7:295",
            "scope": 74853,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 74670,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1068:7:295",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 74674,
            "nodeType": "VariableDeclaration",
            "src": "1096:40:295",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "immutableEntitlements",
            "nameLocation": "1115:21:295",
            "scope": 74853,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 74672,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1096:7:295",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 74673,
              "nodeType": "ArrayTypeName",
              "src": "1096:9:295",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 74713,
            "nodeType": "FunctionDefinition",
            "src": "1141:273:295",
            "nodes": [],
            "body": {
              "id": 74712,
              "nodeType": "Block",
              "src": "1174:240:295",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 74678,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1180:5:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EntitlementsSetup_$74853_$",
                          "typeString": "type(contract super EntitlementsSetup)"
                        }
                      },
                      "id": 74680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1186:5:295",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41907,
                      "src": "1180:11:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 74681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1180:13:295",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74682,
                  "nodeType": "ExpressionStatement",
                  "src": "1180:13:295"
                },
                {
                  "expression": {
                    "id": 74687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74683,
                      "name": "entitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74660,
                      "src": "1199:12:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Entitlements_$32022",
                        "typeString": "contract Entitlements"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 74685,
                          "name": "diamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41880,
                          "src": "1227:7:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 74684,
                        "name": "Entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32022,
                        "src": "1214:12:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Entitlements_$32022_$",
                          "typeString": "type(contract Entitlements)"
                        }
                      },
                      "id": 74686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1214:21:295",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Entitlements_$32022",
                        "typeString": "contract Entitlements"
                      }
                    },
                    "src": "1199:36:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Entitlements_$32022",
                      "typeString": "contract Entitlements"
                    }
                  },
                  "id": 74688,
                  "nodeType": "ExpressionStatement",
                  "src": "1199:36:295"
                },
                {
                  "expression": {
                    "id": 74694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74689,
                      "name": "mockImmutableEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74666,
                      "src": "1241:24:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
                        "typeString": "contract MockUserEntitlement"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 74692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1268:23:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockUserEntitlement_$52130_$",
                          "typeString": "function () returns (contract MockUserEntitlement)"
                        },
                        "typeName": {
                          "id": 74691,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 74690,
                            "name": "MockUserEntitlement",
                            "nameLocations": [
                              "1272:19:295"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52130,
                            "src": "1272:19:295"
                          },
                          "referencedDeclaration": 52130,
                          "src": "1272:19:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
                            "typeString": "contract MockUserEntitlement"
                          }
                        }
                      },
                      "id": 74693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1268:25:295",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
                        "typeString": "contract MockUserEntitlement"
                      }
                    },
                    "src": "1241:52:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
                      "typeString": "contract MockUserEntitlement"
                    }
                  },
                  "id": 74695,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:52:295"
                },
                {
                  "expression": {
                    "id": 74701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74696,
                      "name": "mockEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74669,
                      "src": "1299:15:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
                        "typeString": "contract MockUserEntitlement"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 74699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1317:23:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockUserEntitlement_$52130_$",
                          "typeString": "function () returns (contract MockUserEntitlement)"
                        },
                        "typeName": {
                          "id": 74698,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 74697,
                            "name": "MockUserEntitlement",
                            "nameLocations": [
                              "1321:19:295"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 52130,
                            "src": "1321:19:295"
                          },
                          "referencedDeclaration": 52130,
                          "src": "1321:19:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
                            "typeString": "contract MockUserEntitlement"
                          }
                        }
                      },
                      "id": 74700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1317:25:295",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
                        "typeString": "contract MockUserEntitlement"
                      }
                    },
                    "src": "1299:43:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
                      "typeString": "contract MockUserEntitlement"
                    }
                  },
                  "id": 74702,
                  "nodeType": "ExpressionStatement",
                  "src": "1299:43:295"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74708,
                            "name": "mockImmutableEntitlement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74666,
                            "src": "1383:24:295",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
                              "typeString": "contract MockUserEntitlement"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUserEntitlement_$52130",
                              "typeString": "contract MockUserEntitlement"
                            }
                          ],
                          "id": 74707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1375:7:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74706,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1375:7:295",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 74709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1375:33:295",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74703,
                        "name": "immutableEntitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74674,
                        "src": "1348:21:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 74705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1370:4:295",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1348:26:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 74710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1348:61:295",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74711,
                  "nodeType": "ExpressionStatement",
                  "src": "1348:61:295"
                }
              ]
            },
            "baseFunctions": [
              41907
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1150:5:295",
            "overrides": {
              "id": 74676,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1165:8:295"
            },
            "parameters": {
              "id": 74675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:2:295"
            },
            "returnParameters": {
              "id": 74677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1174:0:295"
            },
            "scope": 74853,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74852,
            "nodeType": "FunctionDefinition",
            "src": "1418:1087:295",
            "nodes": [],
            "body": {
              "id": 74851,
              "nodeType": "Block",
              "src": "1513:992:295",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    74722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74722,
                      "mutability": "mutable",
                      "name": "tokenOwnableHelper",
                      "nameLocation": "1538:18:295",
                      "nodeType": "VariableDeclaration",
                      "scope": 74851,
                      "src": "1519:37:295",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenOwnableHelper_$47073",
                        "typeString": "contract TokenOwnableHelper"
                      },
                      "typeName": {
                        "id": 74721,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 74720,
                          "name": "TokenOwnableHelper",
                          "nameLocations": [
                            "1519:18:295"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47073,
                          "src": "1519:18:295"
                        },
                        "referencedDeclaration": 47073,
                        "src": "1519:18:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenOwnableHelper_$47073",
                          "typeString": "contract TokenOwnableHelper"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74727,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 74725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1559:22:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenOwnableHelper_$47073_$",
                        "typeString": "function () returns (contract TokenOwnableHelper)"
                      },
                      "typeName": {
                        "id": 74724,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 74723,
                          "name": "TokenOwnableHelper",
                          "nameLocations": [
                            "1563:18:295"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47073,
                          "src": "1563:18:295"
                        },
                        "referencedDeclaration": 47073,
                        "src": "1563:18:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenOwnableHelper_$47073",
                          "typeString": "contract TokenOwnableHelper"
                        }
                      }
                    },
                    "id": 74726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1559:24:295",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenOwnableHelper_$47073",
                      "typeString": "contract TokenOwnableHelper"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1519:64:295"
                },
                {
                  "assignments": [
                    74730
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74730,
                      "mutability": "mutable",
                      "name": "channelsHelper",
                      "nameLocation": "1604:14:295",
                      "nodeType": "VariableDeclaration",
                      "scope": 74851,
                      "src": "1589:29:295",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ChannelsHelper_$73987",
                        "typeString": "contract ChannelsHelper"
                      },
                      "typeName": {
                        "id": 74729,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 74728,
                          "name": "ChannelsHelper",
                          "nameLocations": [
                            "1589:14:295"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 73987,
                          "src": "1589:14:295"
                        },
                        "referencedDeclaration": 73987,
                        "src": "1589:14:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChannelsHelper_$73987",
                          "typeString": "contract ChannelsHelper"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74735,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 74733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1621:18:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ChannelsHelper_$73987_$",
                        "typeString": "function () returns (contract ChannelsHelper)"
                      },
                      "typeName": {
                        "id": 74732,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 74731,
                          "name": "ChannelsHelper",
                          "nameLocations": [
                            "1625:14:295"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 73987,
                          "src": "1625:14:295"
                        },
                        "referencedDeclaration": 73987,
                        "src": "1625:14:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChannelsHelper_$73987",
                          "typeString": "contract ChannelsHelper"
                        }
                      }
                    },
                    "id": 74734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1621:20:295",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ChannelsHelper_$73987",
                      "typeString": "contract ChannelsHelper"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1589:52:295"
                },
                {
                  "assignments": [
                    74738
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74738,
                      "mutability": "mutable",
                      "name": "rolesHelper",
                      "nameLocation": "1659:11:295",
                      "nodeType": "VariableDeclaration",
                      "scope": 74851,
                      "src": "1647:23:295",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RolesHelper_$83145",
                        "typeString": "contract RolesHelper"
                      },
                      "typeName": {
                        "id": 74737,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 74736,
                          "name": "RolesHelper",
                          "nameLocations": [
                            "1647:11:295"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 83145,
                          "src": "1647:11:295"
                        },
                        "referencedDeclaration": 83145,
                        "src": "1647:11:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesHelper_$83145",
                          "typeString": "contract RolesHelper"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74743,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 74741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1673:15:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_RolesHelper_$83145_$",
                        "typeString": "function () returns (contract RolesHelper)"
                      },
                      "typeName": {
                        "id": 74740,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 74739,
                          "name": "RolesHelper",
                          "nameLocations": [
                            "1677:11:295"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 83145,
                          "src": "1677:11:295"
                        },
                        "referencedDeclaration": 83145,
                        "src": "1677:11:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesHelper_$83145",
                          "typeString": "contract RolesHelper"
                        }
                      }
                    },
                    "id": 74742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1673:17:295",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RolesHelper_$83145",
                      "typeString": "contract RolesHelper"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1647:43:295"
                },
                {
                  "assignments": [
                    74746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74746,
                      "mutability": "mutable",
                      "name": "entitlementsHelper",
                      "nameLocation": "1715:18:295",
                      "nodeType": "VariableDeclaration",
                      "scope": 74851,
                      "src": "1696:37:295",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EntitlementsHelper_$74986",
                        "typeString": "contract EntitlementsHelper"
                      },
                      "typeName": {
                        "id": 74745,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 74744,
                          "name": "EntitlementsHelper",
                          "nameLocations": [
                            "1696:18:295"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 74986,
                          "src": "1696:18:295"
                        },
                        "referencedDeclaration": 74986,
                        "src": "1696:18:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EntitlementsHelper_$74986",
                          "typeString": "contract EntitlementsHelper"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74751,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 74749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1736:22:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_EntitlementsHelper_$74986_$",
                        "typeString": "function () returns (contract EntitlementsHelper)"
                      },
                      "typeName": {
                        "id": 74748,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 74747,
                          "name": "EntitlementsHelper",
                          "nameLocations": [
                            "1740:18:295"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 74986,
                          "src": "1740:18:295"
                        },
                        "referencedDeclaration": 74986,
                        "src": "1740:18:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EntitlementsHelper_$74986",
                          "typeString": "contract EntitlementsHelper"
                        }
                      }
                    },
                    "id": 74750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1736:24:295",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EntitlementsHelper_$74986",
                      "typeString": "contract EntitlementsHelper"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1696:64:295"
                },
                {
                  "expression": {
                    "id": 74757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74752,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74663,
                      "src": "1767:5:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC721_$50801",
                        "typeString": "contract MockERC721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 74755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1775:14:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC721_$50801_$",
                          "typeString": "function () returns (contract MockERC721)"
                        },
                        "typeName": {
                          "id": 74754,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 74753,
                            "name": "MockERC721",
                            "nameLocations": [
                              "1779:10:295"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 50801,
                            "src": "1779:10:295"
                          },
                          "referencedDeclaration": 50801,
                          "src": "1779:10:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC721_$50801",
                            "typeString": "contract MockERC721"
                          }
                        }
                      },
                      "id": 74756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1775:16:295",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC721_$50801",
                        "typeString": "contract MockERC721"
                      }
                    },
                    "src": "1767:24:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC721_$50801",
                      "typeString": "contract MockERC721"
                    }
                  },
                  "id": 74758,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:24:295"
                },
                {
                  "assignments": [
                    74760
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74760,
                      "mutability": "mutable",
                      "name": "cutCount",
                      "nameLocation": "1806:8:295",
                      "nodeType": "VariableDeclaration",
                      "scope": 74851,
                      "src": "1798:16:295",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74759,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1798:7:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74762,
                  "initialValue": {
                    "hexValue": "34",
                    "id": 74761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1817:1:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    },
                    "value": "4"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1798:20:295"
                },
                {
                  "assignments": [
                    74768
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74768,
                      "mutability": "mutable",
                      "name": "cuts",
                      "nameLocation": "1852:4:295",
                      "nodeType": "VariableDeclaration",
                      "scope": 74851,
                      "src": "1825:31:295",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FacetCut_$6205_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 74766,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 74765,
                            "name": "IDiamond.FacetCut",
                            "nameLocations": [
                              "1825:8:295",
                              "1834:8:295"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6205,
                            "src": "1825:17:295"
                          },
                          "referencedDeclaration": 6205,
                          "src": "1825:17:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$6205_storage_ptr",
                            "typeString": "struct IDiamond.FacetCut"
                          }
                        },
                        "id": 74767,
                        "nodeType": "ArrayTypeName",
                        "src": "1825:19:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6205_storage_$dyn_storage_ptr",
                          "typeString": "struct IDiamond.FacetCut[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74775,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 74773,
                        "name": "cutCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74760,
                        "src": "1883:8:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 74772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1859:23:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FacetCut_$6205_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct IDiamond.FacetCut memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 74770,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 74769,
                            "name": "IDiamond.FacetCut",
                            "nameLocations": [
                              "1863:8:295",
                              "1872:8:295"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6205,
                            "src": "1863:17:295"
                          },
                          "referencedDeclaration": 6205,
                          "src": "1863:17:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$6205_storage_ptr",
                            "typeString": "struct IDiamond.FacetCut"
                          }
                        },
                        "id": 74771,
                        "nodeType": "ArrayTypeName",
                        "src": "1863:19:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6205_storage_$dyn_storage_ptr",
                          "typeString": "struct IDiamond.FacetCut[]"
                        }
                      }
                    },
                    "id": 74774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1859:33:295",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$6205_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IDiamond.FacetCut memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1825:67:295"
                },
                {
                  "expression": {
                    "id": 74785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74776,
                        "name": "cuts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74768,
                        "src": "1898:4:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6205_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        }
                      },
                      "id": 74778,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 74777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1903:1:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1898:7:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6205_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 74781,
                              "name": "IDiamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6206,
                              "src": "1935:8:295",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamond_$6206_$",
                                "typeString": "type(contract IDiamond)"
                              }
                            },
                            "id": 74782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1944:14:295",
                            "memberName": "FacetCutAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6195,
                            "src": "1935:23:295",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$6195_$",
                              "typeString": "type(enum IDiamond.FacetCutAction)"
                            }
                          },
                          "id": 74783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1959:3:295",
                          "memberName": "Add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6192,
                          "src": "1935:27:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6195",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6195",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        ],
                        "expression": {
                          "id": 74779,
                          "name": "tokenOwnableHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74722,
                          "src": "1908:18:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenOwnableHelper_$47073",
                            "typeString": "contract TokenOwnableHelper"
                          }
                        },
                        "id": 74780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1927:7:295",
                        "memberName": "makeCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41951,
                        "src": "1908:26:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_enum$_FacetCutAction_$6195_$returns$_t_struct$_FacetCut_$6205_memory_ptr_$",
                          "typeString": "function (enum IDiamond.FacetCutAction) external returns (struct IDiamond.FacetCut memory)"
                        }
                      },
                      "id": 74784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1908:55:295",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6205_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "src": "1898:65:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$6205_memory_ptr",
                      "typeString": "struct IDiamond.FacetCut memory"
                    }
                  },
                  "id": 74786,
                  "nodeType": "ExpressionStatement",
                  "src": "1898:65:295"
                },
                {
                  "expression": {
                    "id": 74796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74787,
                        "name": "cuts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74768,
                        "src": "1969:4:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6205_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        }
                      },
                      "id": 74789,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 74788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1974:1:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1969:7:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6205_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 74792,
                              "name": "IDiamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6206,
                              "src": "2002:8:295",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamond_$6206_$",
                                "typeString": "type(contract IDiamond)"
                              }
                            },
                            "id": 74793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2011:14:295",
                            "memberName": "FacetCutAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6195,
                            "src": "2002:23:295",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$6195_$",
                              "typeString": "type(enum IDiamond.FacetCutAction)"
                            }
                          },
                          "id": 74794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2026:3:295",
                          "memberName": "Add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6192,
                          "src": "2002:27:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6195",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6195",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        ],
                        "expression": {
                          "id": 74790,
                          "name": "channelsHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74730,
                          "src": "1979:14:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ChannelsHelper_$73987",
                            "typeString": "contract ChannelsHelper"
                          }
                        },
                        "id": 74791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1994:7:295",
                        "memberName": "makeCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41951,
                        "src": "1979:22:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_enum$_FacetCutAction_$6195_$returns$_t_struct$_FacetCut_$6205_memory_ptr_$",
                          "typeString": "function (enum IDiamond.FacetCutAction) external returns (struct IDiamond.FacetCut memory)"
                        }
                      },
                      "id": 74795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1979:51:295",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6205_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "src": "1969:61:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$6205_memory_ptr",
                      "typeString": "struct IDiamond.FacetCut memory"
                    }
                  },
                  "id": 74797,
                  "nodeType": "ExpressionStatement",
                  "src": "1969:61:295"
                },
                {
                  "expression": {
                    "id": 74807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74798,
                        "name": "cuts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74768,
                        "src": "2036:4:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6205_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        }
                      },
                      "id": 74800,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 74799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2041:1:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2036:7:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6205_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 74803,
                              "name": "IDiamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6206,
                              "src": "2066:8:295",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamond_$6206_$",
                                "typeString": "type(contract IDiamond)"
                              }
                            },
                            "id": 74804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2075:14:295",
                            "memberName": "FacetCutAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6195,
                            "src": "2066:23:295",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$6195_$",
                              "typeString": "type(enum IDiamond.FacetCutAction)"
                            }
                          },
                          "id": 74805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2090:3:295",
                          "memberName": "Add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6192,
                          "src": "2066:27:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6195",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6195",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        ],
                        "expression": {
                          "id": 74801,
                          "name": "rolesHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74738,
                          "src": "2046:11:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesHelper_$83145",
                            "typeString": "contract RolesHelper"
                          }
                        },
                        "id": 74802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2058:7:295",
                        "memberName": "makeCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41951,
                        "src": "2046:19:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_enum$_FacetCutAction_$6195_$returns$_t_struct$_FacetCut_$6205_memory_ptr_$",
                          "typeString": "function (enum IDiamond.FacetCutAction) external returns (struct IDiamond.FacetCut memory)"
                        }
                      },
                      "id": 74806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2046:48:295",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6205_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "src": "2036:58:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$6205_memory_ptr",
                      "typeString": "struct IDiamond.FacetCut memory"
                    }
                  },
                  "id": 74808,
                  "nodeType": "ExpressionStatement",
                  "src": "2036:58:295"
                },
                {
                  "expression": {
                    "id": 74818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74809,
                        "name": "cuts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74768,
                        "src": "2100:4:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6205_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        }
                      },
                      "id": 74811,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 74810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2105:1:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2100:7:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6205_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 74814,
                              "name": "IDiamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6206,
                              "src": "2137:8:295",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamond_$6206_$",
                                "typeString": "type(contract IDiamond)"
                              }
                            },
                            "id": 74815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2146:14:295",
                            "memberName": "FacetCutAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6195,
                            "src": "2137:23:295",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$6195_$",
                              "typeString": "type(enum IDiamond.FacetCutAction)"
                            }
                          },
                          "id": 74816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2161:3:295",
                          "memberName": "Add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6192,
                          "src": "2137:27:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6195",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6195",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        ],
                        "expression": {
                          "id": 74812,
                          "name": "entitlementsHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74746,
                          "src": "2110:18:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EntitlementsHelper_$74986",
                            "typeString": "contract EntitlementsHelper"
                          }
                        },
                        "id": 74813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2129:7:295",
                        "memberName": "makeCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41951,
                        "src": "2110:26:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_enum$_FacetCutAction_$6195_$returns$_t_struct$_FacetCut_$6205_memory_ptr_$",
                          "typeString": "function (enum IDiamond.FacetCutAction) external returns (struct IDiamond.FacetCut memory)"
                        }
                      },
                      "id": 74817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2110:55:295",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6205_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "src": "2100:65:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$6205_memory_ptr",
                      "typeString": "struct IDiamond.FacetCut memory"
                    }
                  },
                  "id": 74819,
                  "nodeType": "ExpressionStatement",
                  "src": "2100:65:295"
                },
                {
                  "expression": {
                    "id": 74823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74820,
                      "name": "founder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74671,
                      "src": "2172:7:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 74821,
                        "name": "_randomAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84075,
                        "src": "2182:14:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 74822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2182:16:295",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2172:26:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 74824,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:26:295"
                },
                {
                  "assignments": [
                    74826
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74826,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "2212:7:295",
                      "nodeType": "VariableDeclaration",
                      "scope": 74851,
                      "src": "2204:15:295",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 74825,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2204:7:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74831,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 74829,
                        "name": "founder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74671,
                        "src": "2235:7:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 74827,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74663,
                        "src": "2222:5:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC721_$50801",
                          "typeString": "contract MockERC721"
                        }
                      },
                      "id": 74828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2228:6:295",
                      "memberName": "mintTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50762,
                      "src": "2222:12:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256)"
                      }
                    },
                    "id": 74830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2222:21:295",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2204:39:295"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74834,
                        "name": "cuts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74768,
                        "src": "2304:4:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6205_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 74835,
                            "name": "tokenOwnableHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74722,
                            "src": "2324:18:295",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenOwnableHelper_$47073",
                              "typeString": "contract TokenOwnableHelper"
                            }
                          },
                          "id": 74836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2343:5:295",
                          "memberName": "facet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47024,
                          "src": "2324:24:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 74837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2324:26:295",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 74840,
                                "name": "tokenOwnableHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74722,
                                "src": "2404:18:295",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenOwnableHelper_$47073",
                                  "typeString": "contract TokenOwnableHelper"
                                }
                              },
                              "id": 74841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2423:11:295",
                              "memberName": "initializer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47072,
                              "src": "2404:30:295",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_bytes4_$",
                                "typeString": "function () pure external returns (bytes4)"
                              }
                            },
                            "id": 74842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2404:32:295",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 74845,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74663,
                                "src": "2456:5:295",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC721_$50801",
                                  "typeString": "contract MockERC721"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC721_$50801",
                                  "typeString": "contract MockERC721"
                                }
                              ],
                              "id": 74844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2448:7:295",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 74843,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2448:7:295",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 74846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2448:14:295",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 74847,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74826,
                            "src": "2474:7:295",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 74838,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2370:3:295",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 74839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2374:18:295",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "2370:22:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 74848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2370:121:295",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6205_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 74832,
                        "name": "Diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6185,
                        "src": "2263:7:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Diamond_$6185_$",
                          "typeString": "type(contract Diamond)"
                        }
                      },
                      "id": 74833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2271:10:295",
                      "memberName": "InitParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6142,
                      "src": "2263:18:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_InitParams_$6142_storage_ptr_$",
                        "typeString": "type(struct Diamond.InitParams storage pointer)"
                      }
                    },
                    "id": 74849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "2292:10:295",
                      "2318:4:295",
                      "2360:8:295"
                    ],
                    "names": [
                      "baseFacets",
                      "init",
                      "initData"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2263:237:295",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InitParams_$6142_memory_ptr",
                      "typeString": "struct Diamond.InitParams memory"
                    }
                  },
                  "functionReturnParameters": 74719,
                  "id": 74850,
                  "nodeType": "Return",
                  "src": "2250:250:295"
                }
              ]
            },
            "baseFunctions": [
              41913
            ],
            "functionSelector": "77bd3cc0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "diamondInitParams",
            "nameLocation": "1427:17:295",
            "overrides": {
              "id": 74715,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1462:8:295"
            },
            "parameters": {
              "id": 74714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1444:2:295"
            },
            "returnParameters": {
              "id": 74719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74718,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74852,
                  "src": "1484:25:295",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InitParams_$6142_memory_ptr",
                    "typeString": "struct Diamond.InitParams"
                  },
                  "typeName": {
                    "id": 74717,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 74716,
                      "name": "Diamond.InitParams",
                      "nameLocations": [
                        "1484:7:295",
                        "1492:10:295"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6142,
                      "src": "1484:18:295"
                    },
                    "referencedDeclaration": 6142,
                    "src": "1484:18:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InitParams_$6142_storage_ptr",
                      "typeString": "struct Diamond.InitParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1483:27:295"
            },
            "scope": 74853,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 74656,
              "name": "FacetTest",
              "nameLocations": [
                "881:9:295"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41914,
              "src": "881:9:295"
            },
            "id": 74657,
            "nodeType": "InheritanceSpecifier",
            "src": "881:9:295"
          }
        ],
        "canonicalName": "EntitlementsSetup",
        "contractDependencies": [
          6185,
          47073,
          50801,
          52130,
          73987,
          74986,
          83145
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          74853,
          41914,
          84245,
          93418,
          92739,
          131218,
          6206
        ],
        "name": "EntitlementsSetup",
        "nameLocation": "860:17:295",
        "scope": 74987,
        "usedErrors": [
          6190
        ],
        "usedEvents": [
          128251,
          128255,
          128260,
          128265,
          128270,
          128275,
          128280,
          128285,
          128289,
          128293,
          128297,
          128301,
          128305,
          128311,
          128318,
          128325,
          128332,
          128339,
          128346,
          128353,
          128359,
          128365,
          128371,
          128377,
          128383
        ]
      },
      {
        "id": 74986,
        "nodeType": "ContractDefinition",
        "src": "2509:1039:295",
        "nodes": [
          {
            "id": 74858,
            "nodeType": "VariableDeclaration",
            "src": "2556:34:295",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "entitlements",
            "nameLocation": "2578:12:295",
            "scope": 74986,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Entitlements_$32022",
              "typeString": "contract Entitlements"
            },
            "typeName": {
              "id": 74857,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 74856,
                "name": "Entitlements",
                "nameLocations": [
                  "2556:12:295"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 32022,
                "src": "2556:12:295"
              },
              "referencedDeclaration": 32022,
              "src": "2556:12:295",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Entitlements_$32022",
                "typeString": "contract Entitlements"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 74869,
            "nodeType": "FunctionDefinition",
            "src": "2595:58:295",
            "nodes": [],
            "body": {
              "id": 74868,
              "nodeType": "Block",
              "src": "2609:44:295",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 74866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74861,
                      "name": "entitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74858,
                      "src": "2615:12:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Entitlements_$32022",
                        "typeString": "contract Entitlements"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 74864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2630:16:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Entitlements_$32022_$",
                          "typeString": "function () returns (contract Entitlements)"
                        },
                        "typeName": {
                          "id": 74863,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 74862,
                            "name": "Entitlements",
                            "nameLocations": [
                              "2634:12:295"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 32022,
                            "src": "2634:12:295"
                          },
                          "referencedDeclaration": 32022,
                          "src": "2634:12:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Entitlements_$32022",
                            "typeString": "contract Entitlements"
                          }
                        }
                      },
                      "id": 74865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2630:18:295",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Entitlements_$32022",
                        "typeString": "contract Entitlements"
                      }
                    },
                    "src": "2615:33:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Entitlements_$32022",
                      "typeString": "contract Entitlements"
                    }
                  },
                  "id": 74867,
                  "nodeType": "ExpressionStatement",
                  "src": "2615:33:295"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 74859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2606:2:295"
            },
            "returnParameters": {
              "id": 74860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2609:0:295"
            },
            "scope": 74986,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74887,
            "nodeType": "FunctionDefinition",
            "src": "2657:121:295",
            "nodes": [],
            "body": {
              "id": 74886,
              "nodeType": "Block",
              "src": "2700:78:295",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 74879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74874,
                      "name": "entitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74858,
                      "src": "2706:12:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Entitlements_$32022",
                        "typeString": "contract Entitlements"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 74877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2721:16:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Entitlements_$32022_$",
                          "typeString": "function () returns (contract Entitlements)"
                        },
                        "typeName": {
                          "id": 74876,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 74875,
                            "name": "Entitlements",
                            "nameLocations": [
                              "2725:12:295"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 32022,
                            "src": "2725:12:295"
                          },
                          "referencedDeclaration": 32022,
                          "src": "2725:12:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Entitlements_$32022",
                            "typeString": "contract Entitlements"
                          }
                        }
                      },
                      "id": 74878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2721:18:295",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Entitlements_$32022",
                        "typeString": "contract Entitlements"
                      }
                    },
                    "src": "2706:33:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Entitlements_$32022",
                      "typeString": "contract Entitlements"
                    }
                  },
                  "id": 74880,
                  "nodeType": "ExpressionStatement",
                  "src": "2706:33:295"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74883,
                        "name": "entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74858,
                        "src": "2760:12:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Entitlements_$32022",
                          "typeString": "contract Entitlements"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Entitlements_$32022",
                          "typeString": "contract Entitlements"
                        }
                      ],
                      "id": 74882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2752:7:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 74881,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2752:7:295",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 74884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2752:21:295",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 74873,
                  "id": 74885,
                  "nodeType": "Return",
                  "src": "2745:28:295"
                }
              ]
            },
            "functionSelector": "775c300c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nameLocation": "2666:6:295",
            "parameters": {
              "id": 74870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2672:2:295"
            },
            "returnParameters": {
              "id": 74873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74872,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74887,
                  "src": "2691:7:295",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:7:295",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2690:9:295"
            },
            "scope": 74986,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74899,
            "nodeType": "FunctionDefinition",
            "src": "2782:95:295",
            "nodes": [],
            "body": {
              "id": 74898,
              "nodeType": "Block",
              "src": "2838:39:295",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 74895,
                        "name": "entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74858,
                        "src": "2859:12:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Entitlements_$32022",
                          "typeString": "contract Entitlements"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Entitlements_$32022",
                          "typeString": "contract Entitlements"
                        }
                      ],
                      "id": 74894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2851:7:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 74893,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2851:7:295",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 74896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2851:21:295",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 74892,
                  "id": 74897,
                  "nodeType": "Return",
                  "src": "2844:28:295"
                }
              ]
            },
            "baseFunctions": [
              41922
            ],
            "functionSelector": "b6010cab",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "facet",
            "nameLocation": "2791:5:295",
            "overrides": {
              "id": 74889,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2811:8:295"
            },
            "parameters": {
              "id": 74888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2796:2:295"
            },
            "returnParameters": {
              "id": 74892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74891,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74899,
                  "src": "2829:7:295",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2829:7:295",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2828:9:295"
            },
            "scope": 74986,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74976,
            "nodeType": "FunctionDefinition",
            "src": "2881:580:295",
            "nodes": [],
            "body": {
              "id": 74975,
              "nodeType": "Block",
              "src": "2949:512:295",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    74910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74910,
                      "mutability": "mutable",
                      "name": "selectors_",
                      "nameLocation": "2971:10:295",
                      "nodeType": "VariableDeclaration",
                      "scope": 74975,
                      "src": "2955:26:295",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                        "typeString": "bytes4[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 74908,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2955:6:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 74909,
                        "nodeType": "ArrayTypeName",
                        "src": "2955:8:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 74916,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "37",
                        "id": 74914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2997:1:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        }
                      ],
                      "id": 74913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2984:12:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes4[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 74911,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2988:6:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 74912,
                        "nodeType": "ArrayTypeName",
                        "src": "2988:8:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      }
                    },
                    "id": 74915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2984:15:295",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2955:44:295"
                },
                {
                  "expression": {
                    "id": 74923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74917,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74910,
                        "src": "3005:10:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 74919,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 74918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3016:1:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3005:13:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 74920,
                          "name": "IEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32676,
                          "src": "3021:13:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlements_$32676_$",
                            "typeString": "type(contract IEntitlements)"
                          }
                        },
                        "id": 74921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3035:24:295",
                        "memberName": "addImmutableEntitlements",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32624,
                        "src": "3021:38:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                          "typeString": "function IEntitlements.addImmutableEntitlements(address[] memory)"
                        }
                      },
                      "id": 74922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3060:8:295",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3021:47:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3005:63:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 74924,
                  "nodeType": "ExpressionStatement",
                  "src": "3005:63:295"
                },
                {
                  "expression": {
                    "id": 74931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74925,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74910,
                        "src": "3074:10:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 74927,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 74926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3085:1:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3074:13:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 74928,
                          "name": "IEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32676,
                          "src": "3090:13:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlements_$32676_$",
                            "typeString": "type(contract IEntitlements)"
                          }
                        },
                        "id": 74929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3104:16:295",
                        "memberName": "isEntitledToTown",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32634,
                        "src": "3090:30:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_view$_t_address_$_t_string_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function IEntitlements.isEntitledToTown(address,string calldata) view returns (bool)"
                        }
                      },
                      "id": 74930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3121:8:295",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3090:39:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3074:55:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 74932,
                  "nodeType": "ExpressionStatement",
                  "src": "3074:55:295"
                },
                {
                  "expression": {
                    "id": 74939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74933,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74910,
                        "src": "3135:10:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 74935,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 74934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3146:1:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3135:13:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 74936,
                          "name": "IEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32676,
                          "src": "3151:13:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlements_$32676_$",
                            "typeString": "type(contract IEntitlements)"
                          }
                        },
                        "id": 74937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3165:19:295",
                        "memberName": "isEntitledToChannel",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32646,
                        "src": "3151:33:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_view$_t_string_calldata_ptr_$_t_address_$_t_string_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function IEntitlements.isEntitledToChannel(string calldata,address,string calldata) view returns (bool)"
                        }
                      },
                      "id": 74938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3185:8:295",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3151:42:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3135:58:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 74940,
                  "nodeType": "ExpressionStatement",
                  "src": "3135:58:295"
                },
                {
                  "expression": {
                    "id": 74947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74941,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74910,
                        "src": "3199:10:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 74943,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 74942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3210:1:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3199:13:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 74944,
                          "name": "IEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32676,
                          "src": "3215:13:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlements_$32676_$",
                            "typeString": "type(contract IEntitlements)"
                          }
                        },
                        "id": 74945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3229:14:295",
                        "memberName": "addEntitlement",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32652,
                        "src": "3215:28:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                          "typeString": "function IEntitlements.addEntitlement(address)"
                        }
                      },
                      "id": 74946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3244:8:295",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3215:37:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3199:53:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 74948,
                  "nodeType": "ExpressionStatement",
                  "src": "3199:53:295"
                },
                {
                  "expression": {
                    "id": 74955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74949,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74910,
                        "src": "3258:10:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 74951,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 74950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3269:1:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3258:13:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 74952,
                          "name": "IEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32676,
                          "src": "3274:13:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlements_$32676_$",
                            "typeString": "type(contract IEntitlements)"
                          }
                        },
                        "id": 74953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3288:17:295",
                        "memberName": "removeEntitlement",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32658,
                        "src": "3274:31:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                          "typeString": "function IEntitlements.removeEntitlement(address)"
                        }
                      },
                      "id": 74954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3306:8:295",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3274:40:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3258:56:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 74956,
                  "nodeType": "ExpressionStatement",
                  "src": "3258:56:295"
                },
                {
                  "expression": {
                    "id": 74963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74957,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74910,
                        "src": "3320:10:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 74959,
                      "indexExpression": {
                        "hexValue": "35",
                        "id": 74958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3331:1:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3320:13:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 74960,
                          "name": "IEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32676,
                          "src": "3336:13:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlements_$32676_$",
                            "typeString": "type(contract IEntitlements)"
                          }
                        },
                        "id": 74961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3350:14:295",
                        "memberName": "getEntitlement",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32667,
                        "src": "3336:28:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_struct$_Entitlement_$32614_memory_ptr_$",
                          "typeString": "function IEntitlements.getEntitlement(address) view returns (struct IEntitlementsBase.Entitlement memory)"
                        }
                      },
                      "id": 74962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3365:8:295",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3336:37:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3320:53:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 74964,
                  "nodeType": "ExpressionStatement",
                  "src": "3320:53:295"
                },
                {
                  "expression": {
                    "id": 74971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 74965,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74910,
                        "src": "3379:10:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 74967,
                      "indexExpression": {
                        "hexValue": "36",
                        "id": 74966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3390:1:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3379:13:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 74968,
                          "name": "IEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32676,
                          "src": "3395:13:295",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlements_$32676_$",
                            "typeString": "type(contract IEntitlements)"
                          }
                        },
                        "id": 74969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3409:15:295",
                        "memberName": "getEntitlements",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32675,
                        "src": "3395:29:295",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_view$__$returns$_t_array$_t_struct$_Entitlement_$32614_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function IEntitlements.getEntitlements() view returns (struct IEntitlementsBase.Entitlement memory[] memory)"
                        }
                      },
                      "id": 74970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3425:8:295",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3395:38:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3379:54:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 74972,
                  "nodeType": "ExpressionStatement",
                  "src": "3379:54:295"
                },
                {
                  "expression": {
                    "id": 74973,
                    "name": "selectors_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 74910,
                    "src": "3446:10:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "functionReturnParameters": 74905,
                  "id": 74974,
                  "nodeType": "Return",
                  "src": "3439:17:295"
                }
              ]
            },
            "baseFunctions": [
              41928
            ],
            "functionSelector": "6e25b978",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selectors",
            "nameLocation": "2890:9:295",
            "overrides": {
              "id": 74901,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2914:8:295"
            },
            "parameters": {
              "id": 74900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2899:2:295"
            },
            "returnParameters": {
              "id": 74905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74976,
                  "src": "2932:15:295",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 74902,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "2932:6:295",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 74903,
                    "nodeType": "ArrayTypeName",
                    "src": "2932:8:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2931:17:295"
            },
            "scope": 74986,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74985,
            "nodeType": "FunctionDefinition",
            "src": "3465:81:295",
            "nodes": [],
            "body": {
              "id": 74984,
              "nodeType": "Block",
              "src": "3526:20:295",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 74982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3539:2:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 74981,
                  "id": 74983,
                  "nodeType": "Return",
                  "src": "3532:9:295"
                }
              ]
            },
            "baseFunctions": [
              41933
            ],
            "functionSelector": "9ce110d7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializer",
            "nameLocation": "3474:11:295",
            "overrides": {
              "id": 74978,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3500:8:295"
            },
            "parameters": {
              "id": 74977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3485:2:295"
            },
            "returnParameters": {
              "id": 74981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74980,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74985,
                  "src": "3518:6:295",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 74979,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3518:6:295",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3517:8:295"
            },
            "scope": 74986,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 74854,
              "name": "FacetHelper",
              "nameLocations": [
                "2540:11:295"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41985,
              "src": "2540:11:295"
            },
            "id": 74855,
            "nodeType": "InheritanceSpecifier",
            "src": "2540:11:295"
          }
        ],
        "canonicalName": "EntitlementsHelper",
        "contractDependencies": [
          32022
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          74986,
          41985,
          6206
        ],
        "name": "EntitlementsHelper",
        "nameLocation": "2518:18:295",
        "scope": 74987,
        "usedErrors": [
          6190
        ],
        "usedEvents": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 295
}
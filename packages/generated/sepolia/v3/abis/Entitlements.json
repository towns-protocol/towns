{
  "abi": [
    {
      "inputs": [],
      "name": "Entitlement__InvalidValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Entitlement__NotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Entitlement__ValueAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__EntitlementAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__EntitlementDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__ImmutableEntitlement",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__InvalidEntitlementAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__InvalidEntitlementInterface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Pausable__NotPaused",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Pausable__Paused",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entitlement",
          "type": "address"
        }
      ],
      "name": "addEntitlement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "entitlements",
          "type": "address[]"
        }
      ],
      "name": "addImmutableEntitlements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entitlement",
          "type": "address"
        }
      ],
      "name": "getEntitlement",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "moduleType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isImmutable",
              "type": "bool"
            }
          ],
          "internalType": "struct IEntitlementsBase.Entitlement",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntitlements",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "moduleType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isImmutable",
              "type": "bool"
            }
          ],
          "internalType": "struct IEntitlementsBase.Entitlement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "channelId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "permission",
          "type": "string"
        }
      ],
      "name": "isEntitledToChannel",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "permission",
          "type": "string"
        }
      ],
      "name": "isEntitledToTown",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entitlement",
          "type": "address"
        }
      ],
      "name": "removeEntitlement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611208806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638bfc820f1161005b5780638bfc820f146100d8578063c9b968cd146100eb578063cea632bc146100fe578063fba4ff9d1461011157600080fd5b80632c90a84014610082578063487dc38c146100975780634ff8eb71146100b5575b600080fd5b610095610090366004610cea565b610131565b005b61009f61017d565b6040516100ac9190610db0565b60405180910390f35b6100c86100c3366004610e5b565b61018c565b60405190151581526020016100ac565b6100956100e6366004610ef7565b6101a3565b6100956100f9366004610cea565b6101e7565b6100c861010c366004610fa9565b61022b565b61012461011f366004610cea565b61027b565b6040516100ac919061102e565b610139610292565b6001600160a01b0316336001600160a01b031614610171576040516365f4906560e01b81523360048201526024015b60405180910390fd5b61017a8161035c565b50565b6060610187610370565b905090565b6000610199848484610475565b90505b9392505050565b6101ab610292565b6001600160a01b0316336001600160a01b0316146101de576040516365f4906560e01b8152336004820152602401610168565b61017a816104bb565b6101ef610292565b6001600160a01b0316336001600160a01b031614610222576040516365f4906560e01b8152336004820152602401610168565b61017a81610523565b600061027186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250879150869050610535565b9695505050505050565b610283610ca2565b61028c82610558565b92915050565b6040805180820182527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d0546001600160a01b03168082527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d154602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190611041565b91505090565b610365816105aa565b61017a816000610673565b6060600061037c610721565b9050805167ffffffffffffffff81111561039857610398610eb0565b6040519080825280602002602001820160405280156103d157816020015b6103be610ca2565b8152602001906001900390816103b65790505b50915060005b8151811015610470576000806000806104088686815181106103fb576103fb61105e565b602002602001015161074c565b93509350935093506040518060800160405280858152602001846001600160a01b0316815260200183815260200182151581525087868151811061044e5761044e61105e565b60200260200101819052505050505080806104689061108a565b9150506103d7565b505090565b60006101996040518060200160405280600081525085858560405160200161049e9291906110a3565b6040516020818303038152906040526104b6906110b3565b6108b3565b60005b815181101561051f576104e98282815181106104dc576104dc61105e565b60200260200101516105aa565b61050d8282815181106104fe576104fe61105e565b60200260200101516001610673565b806105178161108a565b9150506104be565b5050565b61052c816105aa565b61017a816109ca565b600061054f8585858560405160200161049e9291906110a3565b95945050505050565b610560610ca2565b610569826105aa565b6000806000806105788661074c565b604080516080810182529485526001600160a01b03909316602085015291830152151560608201529695505050505050565b6001600160a01b0381166105d157604051630706e15760e51b815260040160405180910390fd5b6040516301ffc9a760e01b815263df76a3d360e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa925050508015610638575060408051601f3d908101601f19168201909252610635918101906110da565b60015b6106555760405163f58a5f2760e01b815260040160405180910390fd5b8061051f5760405163f58a5f2760e01b815260040160405180910390fd5b6001600160a01b0382811660009081526000805160206111e88339815191526020819052604090912054909116156106be57604051632406020960e01b815260040160405180910390fd5b6106cb6001820184610a8d565b506040805180820182526001600160a01b03948516808252931515602080830191825260009586529390935292209151825491511515600160a01b026001600160a81b0319909216931692909217919091179055565b60606101877f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aa2565b606060008181806000805160206111e88339815191526001600160a01b038781166000908152602083905260409020549192501661079d5760405163017ab33760e71b815260040160405180910390fd5b856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261080391908101906110fc565b6001600160a01b03808816600081815260208590526040808220548151636465e69f60e01b81529151941693636465e69f926004808401939192918290030181865afa158015610857573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261087f91908101906110fc565b6001600160a01b03989098166000908152602093909352604090922054909791969550600160a01b900460ff169350915050565b60006108bd610292565b6001600160a01b0316836001600160a01b0316036108dd5750600161019c565b6000805160206111e883398151915260006109177f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aaf565b905060005b818110156109c0576109316001840182610ab9565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b815260040161095f93929190611190565b602060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a091906110da565b156109ae57600193506109c0565b806109b88161108a565b91505061091c565b5050509392505050565b6001600160a01b0381811660009081526000805160206111e88339815191526020819052604090912054909116610a145760405163017ab33760e71b815260040160405180910390fd5b6001600160a01b038216600090815260208290526040902054600160a01b900460ff1615610a5557604051636045809760e11b815260040160405180910390fd5b610a626001820183610ac5565b506001600160a01b0390911660009081526020919091526040902080546001600160a81b0319169055565b600061019c836001600160a01b038416610ada565b6060600061019c83610b29565b600061028c825490565b600061019c8383610b85565b600061019c836001600160a01b038416610baf565b6000818152600183016020526040812054610b215750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561028c565b50600061028c565b606081600001805480602002602001604051908101604052809291908181526020018280548015610b7957602002820191906000526020600020905b815481526020019060010190808311610b65575b50505050509050919050565b6000826000018281548110610b9c57610b9c61105e565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610c98576000610bd36001836111be565b8554909150600090610be7906001906111be565b9050818114610c4c576000866000018281548110610c0757610c0761105e565b9060005260206000200154905080876000018481548110610c2a57610c2a61105e565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610c5d57610c5d6111d1565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061028c565b600091505061028c565b60405180608001604052806060815260200160006001600160a01b03168152602001606081526020016000151581525090565b6001600160a01b038116811461017a57600080fd5b600060208284031215610cfc57600080fd5b813561019c81610cd5565b60005b83811015610d22578181015183820152602001610d0a565b50506000910152565b60008151808452610d43816020860160208601610d07565b601f01601f19169290920160200192915050565b6000815160808452610d6c6080850182610d2b565b905060018060a01b03602084015116602085015260408301518482036040860152610d978282610d2b565b9150506060830151151560608501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e0557603f19888603018452610df3858351610d57565b94509285019290850190600101610dd7565b5092979650505050505050565b60008083601f840112610e2457600080fd5b50813567ffffffffffffffff811115610e3c57600080fd5b602083019150836020828501011115610e5457600080fd5b9250929050565b600080600060408486031215610e7057600080fd5b8335610e7b81610cd5565b9250602084013567ffffffffffffffff811115610e9757600080fd5b610ea386828701610e12565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610eef57610eef610eb0565b604052919050565b60006020808385031215610f0a57600080fd5b823567ffffffffffffffff80821115610f2257600080fd5b818501915085601f830112610f3657600080fd5b813581811115610f4857610f48610eb0565b8060051b9150610f59848301610ec6565b8181529183018401918481019088841115610f7357600080fd5b938501935b83851015610f9d5784359250610f8d83610cd5565b8282529385019390850190610f78565b98975050505050505050565b600080600080600060608688031215610fc157600080fd5b853567ffffffffffffffff80821115610fd957600080fd5b610fe589838a01610e12565b909750955060208801359150610ffa82610cd5565b9093506040870135908082111561101057600080fd5b5061101d88828901610e12565b969995985093965092949392505050565b60208152600061019c6020830184610d57565b60006020828403121561105357600080fd5b815161019c81610cd5565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161109c5761109c611074565b5060010190565b8183823760009101908152919050565b805160208083015191908110156110d4576000198160200360031b1b821691505b50919050565b6000602082840312156110ec57600080fd5b8151801515811461019c57600080fd5b60006020828403121561110e57600080fd5b815167ffffffffffffffff8082111561112657600080fd5b818401915084601f83011261113a57600080fd5b81518181111561114c5761114c610eb0565b61115f601f8201601f1916602001610ec6565b915080825285602082850101111561117657600080fd5b611187816020840160208601610d07565b50949350505050565b6060815260006111a36060830186610d2b565b6001600160a01b039490941660208301525060400152919050565b8181038181111561028c5761028c611074565b634e487b7160e01b600052603160045260246000fdfe2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8558",
    "sourceMap": "258:1073:136:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638bfc820f1161005b5780638bfc820f146100d8578063c9b968cd146100eb578063cea632bc146100fe578063fba4ff9d1461011157600080fd5b80632c90a84014610082578063487dc38c146100975780634ff8eb71146100b5575b600080fd5b610095610090366004610cea565b610131565b005b61009f61017d565b6040516100ac9190610db0565b60405180910390f35b6100c86100c3366004610e5b565b61018c565b60405190151581526020016100ac565b6100956100e6366004610ef7565b6101a3565b6100956100f9366004610cea565b6101e7565b6100c861010c366004610fa9565b61022b565b61012461011f366004610cea565b61027b565b6040516100ac919061102e565b610139610292565b6001600160a01b0316336001600160a01b031614610171576040516365f4906560e01b81523360048201526024015b60405180910390fd5b61017a8161035c565b50565b6060610187610370565b905090565b6000610199848484610475565b90505b9392505050565b6101ab610292565b6001600160a01b0316336001600160a01b0316146101de576040516365f4906560e01b8152336004820152602401610168565b61017a816104bb565b6101ef610292565b6001600160a01b0316336001600160a01b031614610222576040516365f4906560e01b8152336004820152602401610168565b61017a81610523565b600061027186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250879150869050610535565b9695505050505050565b610283610ca2565b61028c82610558565b92915050565b6040805180820182527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d0546001600160a01b03168082527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d154602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190611041565b91505090565b610365816105aa565b61017a816000610673565b6060600061037c610721565b9050805167ffffffffffffffff81111561039857610398610eb0565b6040519080825280602002602001820160405280156103d157816020015b6103be610ca2565b8152602001906001900390816103b65790505b50915060005b8151811015610470576000806000806104088686815181106103fb576103fb61105e565b602002602001015161074c565b93509350935093506040518060800160405280858152602001846001600160a01b0316815260200183815260200182151581525087868151811061044e5761044e61105e565b60200260200101819052505050505080806104689061108a565b9150506103d7565b505090565b60006101996040518060200160405280600081525085858560405160200161049e9291906110a3565b6040516020818303038152906040526104b6906110b3565b6108b3565b60005b815181101561051f576104e98282815181106104dc576104dc61105e565b60200260200101516105aa565b61050d8282815181106104fe576104fe61105e565b60200260200101516001610673565b806105178161108a565b9150506104be565b5050565b61052c816105aa565b61017a816109ca565b600061054f8585858560405160200161049e9291906110a3565b95945050505050565b610560610ca2565b610569826105aa565b6000806000806105788661074c565b604080516080810182529485526001600160a01b03909316602085015291830152151560608201529695505050505050565b6001600160a01b0381166105d157604051630706e15760e51b815260040160405180910390fd5b6040516301ffc9a760e01b815263df76a3d360e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa925050508015610638575060408051601f3d908101601f19168201909252610635918101906110da565b60015b6106555760405163f58a5f2760e01b815260040160405180910390fd5b8061051f5760405163f58a5f2760e01b815260040160405180910390fd5b6001600160a01b0382811660009081526000805160206111e88339815191526020819052604090912054909116156106be57604051632406020960e01b815260040160405180910390fd5b6106cb6001820184610a8d565b506040805180820182526001600160a01b03948516808252931515602080830191825260009586529390935292209151825491511515600160a01b026001600160a81b0319909216931692909217919091179055565b60606101877f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aa2565b606060008181806000805160206111e88339815191526001600160a01b038781166000908152602083905260409020549192501661079d5760405163017ab33760e71b815260040160405180910390fd5b856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261080391908101906110fc565b6001600160a01b03808816600081815260208590526040808220548151636465e69f60e01b81529151941693636465e69f926004808401939192918290030181865afa158015610857573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261087f91908101906110fc565b6001600160a01b03989098166000908152602093909352604090922054909791969550600160a01b900460ff169350915050565b60006108bd610292565b6001600160a01b0316836001600160a01b0316036108dd5750600161019c565b6000805160206111e883398151915260006109177f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aaf565b905060005b818110156109c0576109316001840182610ab9565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b815260040161095f93929190611190565b602060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a091906110da565b156109ae57600193506109c0565b806109b88161108a565b91505061091c565b5050509392505050565b6001600160a01b0381811660009081526000805160206111e88339815191526020819052604090912054909116610a145760405163017ab33760e71b815260040160405180910390fd5b6001600160a01b038216600090815260208290526040902054600160a01b900460ff1615610a5557604051636045809760e11b815260040160405180910390fd5b610a626001820183610ac5565b506001600160a01b0390911660009081526020919091526040902080546001600160a81b0319169055565b600061019c836001600160a01b038416610ada565b6060600061019c83610b29565b600061028c825490565b600061019c8383610b85565b600061019c836001600160a01b038416610baf565b6000818152600183016020526040812054610b215750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561028c565b50600061028c565b606081600001805480602002602001604051908101604052809291908181526020018280548015610b7957602002820191906000526020600020905b815481526020019060010190808311610b65575b50505050509050919050565b6000826000018281548110610b9c57610b9c61105e565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610c98576000610bd36001836111be565b8554909150600090610be7906001906111be565b9050818114610c4c576000866000018281548110610c0757610c0761105e565b9060005260206000200154905080876000018481548110610c2a57610c2a61105e565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610c5d57610c5d6111d1565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061028c565b600091505061028c565b60405180608001604052806060815260200160006001600160a01b03168152602001606081526020016000151581525090565b6001600160a01b038116811461017a57600080fd5b600060208284031215610cfc57600080fd5b813561019c81610cd5565b60005b83811015610d22578181015183820152602001610d0a565b50506000910152565b60008151808452610d43816020860160208601610d07565b601f01601f19169290920160200192915050565b6000815160808452610d6c6080850182610d2b565b905060018060a01b03602084015116602085015260408301518482036040860152610d978282610d2b565b9150506060830151151560608501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e0557603f19888603018452610df3858351610d57565b94509285019290850190600101610dd7565b5092979650505050505050565b60008083601f840112610e2457600080fd5b50813567ffffffffffffffff811115610e3c57600080fd5b602083019150836020828501011115610e5457600080fd5b9250929050565b600080600060408486031215610e7057600080fd5b8335610e7b81610cd5565b9250602084013567ffffffffffffffff811115610e9757600080fd5b610ea386828701610e12565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610eef57610eef610eb0565b604052919050565b60006020808385031215610f0a57600080fd5b823567ffffffffffffffff80821115610f2257600080fd5b818501915085601f830112610f3657600080fd5b813581811115610f4857610f48610eb0565b8060051b9150610f59848301610ec6565b8181529183018401918481019088841115610f7357600080fd5b938501935b83851015610f9d5784359250610f8d83610cd5565b8282529385019390850190610f78565b98975050505050505050565b600080600080600060608688031215610fc157600080fd5b853567ffffffffffffffff80821115610fd957600080fd5b610fe589838a01610e12565b909750955060208801359150610ffa82610cd5565b9093506040870135908082111561101057600080fd5b5061101d88828901610e12565b969995985093965092949392505050565b60208152600061019c6020830184610d57565b60006020828403121561105357600080fd5b815161019c81610cd5565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161109c5761109c611074565b5060010190565b8183823760009101908152919050565b805160208083015191908110156110d4576000198160200360031b1b821691505b50919050565b6000602082840312156110ec57600080fd5b8151801515811461019c57600080fd5b60006020828403121561110e57600080fd5b815167ffffffffffffffff8082111561112657600080fd5b818401915084601f83011261113a57600080fd5b81518181111561114c5761114c610eb0565b61115f601f8201601f1916602001610ec6565b915080825285602082850101111561117657600080fd5b611187816020840160208601610d07565b50949350505050565b6060815260006111a36060830186610d2b565b6001600160a01b039490941660208301525060400152919050565b8181038181111561028c5761028c611074565b634e487b7160e01b600052603160045260246000fdfe2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8558",
    "sourceMap": "258:1073:136:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;475:103;;;;;;:::i;:::-;;:::i;:::-;;695:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;953:162;;;;;;:::i;:::-;;:::i;:::-;;;3410:14:387;;3403:22;3385:41;;3373:2;3358:18;953:162:136;3245:187:387;329:142:136;;;;;;:::i;:::-;;:::i;582:109::-;;;;;;:::i;:::-;;:::i;1119:210::-;;;;;;:::i;:::-;;:::i;807:142::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;475:103::-;600:8:43;:6;:8::i;:::-;-1:-1:-1;;;;;586:22:43;:10;-1:-1:-1;;;;;586:22:43;;582:79;;625:29;;-1:-1:-1;;;625:29:43;;643:10;625:29;;;6159:51:387;6132:18;;625:29:43;;;;;;;;582:79;545:28:136::1;561:11;545:15;:28::i;:::-;475:103:::0;:::o;695:108::-;745:20;780:18;:16;:18::i;:::-;773:25;;695:108;:::o;953:162::-;1056:4;1075:35;1093:4;1099:10;;1075:17;:35::i;:::-;1068:42;;953:162;;;;;;:::o;329:142::-;600:8:43;:6;:8::i;:::-;-1:-1:-1;;;;;586:22:43;:10;-1:-1:-1;;;;;586:22:43;;582:79;;625:29;;-1:-1:-1;;;625:29:43;;643:10;625:29;;;6159:51:387;6132:18;;625:29:43;6013:203:387;582:79:43;427:39:136::1;453:12;427:25;:39::i;582:109::-:0;600:8:43;:6;:8::i;:::-;-1:-1:-1;;;;;586:22:43;:10;-1:-1:-1;;;;;586:22:43;;582:79;;625:29;;-1:-1:-1;;;625:29:43;;643:10;625:29;;;6159:51:387;6132:18;;625:29:43;6013:203:387;582:79:43;655:31:136::1;674:11;655:18;:31::i;1119:210::-:0;1256:4;1275:49;1296:9;;1275:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1307:4:136;;-1:-1:-1;1313:10:136;;-1:-1:-1;1313:10:136;;-1:-1:-1;1275:20:136;:49::i;:::-;1268:56;1119:210;-1:-1:-1;;;;;;1119:210:136:o;807:142::-;883:18;;:::i;:::-;916:28;932:11;916:15;:28::i;:::-;909:35;807:142;-1:-1:-1;;807:142:136:o;676:189:43:-;738:67;;;;;;;;185::45;738::43;-1:-1:-1;;;;;738:67:43;;;;;;;;;;;;;818:42;;-1:-1:-1;;;818:42:43;;;;;6367:25:387;;;;818:42:43;;717:13;;818:30;;6340:18:387;;;;;818:42:43;;;;;;738:67;818:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;811:49;;;676:189;:::o;590:258:137:-;707:52;747:11;707:39;:52::i;:::-;789:54;824:11;837:5;789:34;:54::i;1619:659::-;1682:28;1720:29;1752:37;:35;:37::i;:::-;1720:69;;1824:12;:19;1806:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1796:48;;1856:9;1851:423;1875:12;:19;1871:1;:23;1851:423;;;1919:18;1947:26;1983:24;2017:16;2044:51;2079:12;2092:1;2079:15;;;;;;;;:::i;:::-;;;;;;;2044:34;:51::i;:::-;1909:186;;;;;;;;2117:150;;;;;;;;2145:4;2117:150;;;;2174:18;-1:-1:-1;;;;;2117:150:137;;;;;2214:10;2117:150;;;;2247:11;2117:150;;;;;2104:7;2112:1;2104:10;;;;;;;;:::i;:::-;;;;;;:163;;;;1901:373;;;;1896:3;;;;;:::i;:::-;;;;1851:423;;;;1714:564;1619:659;:::o;1398:193:120:-;1502:4;1521:65;1533:7;;;;;;;;;;;;1542:4;1573:10;;1556:28;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1548:37;;;:::i;:::-;1521:11;:65::i;315:271:137:-;401:9;396:186;420:12;:19;416:1;:23;396:186;;;454:56;494:12;507:1;494:15;;;;;;;;:::i;:::-;;;;;;;454:39;:56::i;:::-;518:57;553:12;566:1;553:15;;;;;;;;:::i;:::-;;;;;;;570:4;518:34;:57::i;:::-;441:3;;;;:::i;:::-;;;;396:186;;;;315:271;:::o;852:257::-;972:52;1012:11;972:39;:52::i;:::-;1054:50;1092:11;1054:37;:50::i;1595:227:120:-;1731:4;1750:67;1762:9;1773:4;1804:10;;1787:28;;;;;;;;;:::i;1750:67::-;1743:74;1595:227;-1:-1:-1;;;;;1595:227:120:o;1113:502:137:-;1190:25;;:::i;:::-;1223:52;1263:11;1223:39;:52::i;:::-;1290:18;1316:26;1350:24;1382:16;1407:47;1442:11;1407:34;:47::i;:::-;1470:140;;;;;;;;;;;-1:-1:-1;;;;;1470:140:137;;;;;;;;;;;;;;;;;;1113:502;-1:-1:-1;;;;;;1113:502:137:o;3213:476:138:-;-1:-1:-1;;;;;3287:25:138;;3283:101;;3329:48;;-1:-1:-1;;;3329:48:138;;;;;;;;;;;3283:101;3400:70;;-1:-1:-1;;;3400:70:138;;-1:-1:-1;;;3400:70:138;;;7787:52:387;-1:-1:-1;;;;;3400:38:138;;;;;7760:18:387;;3400:70:138;;;;;;;;;;;;;;;;;;-1:-1:-1;3400:70:138;;;;;;;;-1:-1:-1;;3400:70:138;;;;;;;;;;;;:::i;:::-;;;3390:295;;3628:50;;-1:-1:-1;;;3628:50:138;;;;;;;;;;;3390:295;3513:9;3508:92;;3541:50;;-1:-1:-1;;;3541:50:138;;;;;;;;;;;1175:481;-1:-1:-1;;;;;1332:36:138;;;1253:37;1332:36;;;-1:-1:-1;;;;;;;;;;;1332:36:138;;;;;;;;:48;281::139;;1332::138;:62;1328:137;;1411:47;;-1:-1:-1;;;1411:47:138;;;;;;;;;;;1328:137;1471:32;:15;;;1491:11;1471:19;:32::i;:::-;-1:-1:-1;1548:103:138;;;;;;;;-1:-1:-1;;;;;1548:103:138;;;;;;;;;;;;;;;;-1:-1:-1;1509:36:138;;;;;;;;;:142;;;;;;;;-1:-1:-1;;;1509:142:138;-1:-1:-1;;;;;;1509:142:138;;;;;;;;;;;;;;;1175:481::o;2869:163::-;2931:29;2977:50;:41;:48;:50::i;2219:646::-;2314:18;2340:21;2314:18;2340:21;;-1:-1:-1;;;;;;;;;;;;;;;;2511:36:138;;;2571:1;2511:36;;;;;;;;;;:48;2432:68;;-1:-1:-1;2511:48:138;2507:136;;2590:46;;-1:-1:-1;;;2590:46:138;;;;;;;;;;;2507:136;2677:11;-1:-1:-1;;;;;2664:30:138;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2664:32:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2704:36:138;;;:23;:36;;;;;;;;;;;:48;2760:38;;-1:-1:-1;;;2760:38:138;;;;2704:48;;;2760:36;;:38;;;;;2704:23;;2760:38;;;;;;2704:36;2760:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2760:38:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2806:36:138;;;;:23;:36;;;;;;;;;;;;:48;2649:211;;;;2806:36;-1:-1:-1;;;;2806:48:138;;;;;-1:-1:-1;2219:646:138;-1:-1:-1;;2219:646:138:o;830:564:120:-;949:13;982:8;:6;:8::i;:::-;-1:-1:-1;;;;;974:16:120;:4;-1:-1:-1;;;;;974:16:120;;970:33;;-1:-1:-1;999:4:120;992:11;;970:33;-1:-1:-1;;;;;;;;;;;1010:37:120;1112:24;:15;:22;:24::i;:::-;1085:51;;1148:9;1143:247;1167:16;1163:1;:20;1143:247;;;1224:21;:15;;;1243:1;1224:18;:21::i;:::-;-1:-1:-1;;;;;1211:46:120;;1269:9;1290:4;1306:10;1211:115;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1198:186;;;1356:4;1345:15;;1370:5;;1198:186;1185:3;;;;:::i;:::-;;;;1143:247;;;;964:430;;830:564;;;;;:::o;1660:555:138:-;-1:-1:-1;;;;;1802:36:138;;;1723:37;1802:36;;;-1:-1:-1;;;;;;;;;;;1802:36:138;;;;;;;;:48;281::139;;1802::138;1798:136;;1881:46;;-1:-1:-1;;;1881:46:138;;;;;;;;;;;1798:136;-1:-1:-1;;;;;1944:36:138;;:23;:36;;;;;;;;;;:48;-1:-1:-1;;;1944:48:138;;;;1940:119;;;2009:43;;-1:-1:-1;;;2009:43:138;;;;;;;;;;;1940:119;2065:35;:15;;;2088:11;2065:22;:35::i;:::-;-1:-1:-1;;;;;;2113:36:138;;;:23;:36;;;;;;;;;;;2106:55;;-1:-1:-1;;;;;;2167:43:138;;;1660:555::o;8297:150:379:-;8367:4;8390:50;8395:3;-1:-1:-1;;;;;8415:23:379;;8390:4;:50::i;10251:300::-;10314:16;10342:22;10367:19;10375:3;10367:7;:19::i;9098:115::-;9161:7;9187:19;9195:3;4537:18;;4455:107;9555:156;9629:7;9679:22;9683:3;9695:5;9679:3;:22::i;8615:156::-;8688:4;8711:53;8719:3;-1:-1:-1;;;;;8739:23:379;;8711:7;:53::i;2206:404::-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:379;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:379;2581:12;;5562:109;5618:16;5653:3;:11;;5646:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5562:109;;;:::o;4904:118::-;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;2778:1388::-;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:379;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:387:-;-1:-1:-1;;;;;89:31:387;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;402:250::-;487:1;497:113;511:6;508:1;505:13;497:113;;;587:11;;;581:18;568:11;;;561:39;533:2;526:10;497:113;;;-1:-1:-1;;644:1:387;626:16;;619:27;402:250::o;657:271::-;699:3;737:5;731:12;764:6;759:3;752:19;780:76;849:6;842:4;837:3;833:14;826:4;819:5;815:16;780:76;:::i;:::-;910:2;889:15;-1:-1:-1;;885:29:387;876:39;;;;917:4;872:50;;657:271;-1:-1:-1;;657:271:387:o;933:543::-;987:3;1031:5;1025:12;1058:4;1053:3;1046:17;1084:47;1125:4;1120:3;1116:14;1102:12;1084:47;:::i;:::-;1072:59;;1209:1;1205;1200:3;1196:11;1192:19;1184:4;1177:5;1173:16;1167:23;1163:49;1156:4;1151:3;1147:14;1140:73;1261:4;1254:5;1250:16;1244:23;1309:3;1303:4;1299:14;1292:4;1287:3;1283:14;1276:38;1337:39;1371:4;1355:14;1337:39;:::i;:::-;1323:53;;;1439:4;1432:5;1428:16;1422:23;1415:31;1408:39;1401:4;1396:3;1392:14;1385:63;1464:6;1457:13;;;933:543;;;;:::o;1481:855::-;1683:4;1712:2;1752;1741:9;1737:18;1782:2;1771:9;1764:21;1805:6;1840;1834:13;1871:6;1863;1856:22;1909:2;1898:9;1894:18;1887:25;;1971:2;1961:6;1958:1;1954:14;1943:9;1939:30;1935:39;1921:53;;2009:2;2001:6;1997:15;2030:1;2040:267;2054:6;2051:1;2048:13;2040:267;;;2147:2;2143:7;2131:9;2123:6;2119:22;2115:36;2110:3;2103:49;2175:52;2220:6;2211;2205:13;2175:52;:::i;:::-;2165:62;-1:-1:-1;2285:12:387;;;;2250:15;;;;2076:1;2069:9;2040:267;;;-1:-1:-1;2324:6:387;;1481:855;-1:-1:-1;;;;;;;1481:855:387:o;2341:348::-;2393:8;2403:6;2457:3;2450:4;2442:6;2438:17;2434:27;2424:55;;2475:1;2472;2465:12;2424:55;-1:-1:-1;2498:20:387;;2541:18;2530:30;;2527:50;;;2573:1;2570;2563:12;2527:50;2610:4;2602:6;2598:17;2586:29;;2662:3;2655:4;2646:6;2638;2634:19;2630:30;2627:39;2624:59;;;2679:1;2676;2669:12;2624:59;2341:348;;;;;:::o;2694:546::-;2774:6;2782;2790;2843:2;2831:9;2822:7;2818:23;2814:32;2811:52;;;2859:1;2856;2849:12;2811:52;2898:9;2885:23;2917:31;2942:5;2917:31;:::i;:::-;2967:5;-1:-1:-1;3023:2:387;3008:18;;2995:32;3050:18;3039:30;;3036:50;;;3082:1;3079;3072:12;3036:50;3121:59;3172:7;3163:6;3152:9;3148:22;3121:59;:::i;:::-;2694:546;;3199:8;;-1:-1:-1;3095:85:387;;-1:-1:-1;;;;2694:546:387:o;3437:127::-;3498:10;3493:3;3489:20;3486:1;3479:31;3529:4;3526:1;3519:15;3553:4;3550:1;3543:15;3569:275;3640:2;3634:9;3705:2;3686:13;;-1:-1:-1;;3682:27:387;3670:40;;3740:18;3725:34;;3761:22;;;3722:62;3719:88;;;3787:18;;:::i;:::-;3823:2;3816:22;3569:275;;-1:-1:-1;3569:275:387:o;3849:1021::-;3933:6;3964:2;4007;3995:9;3986:7;3982:23;3978:32;3975:52;;;4023:1;4020;4013:12;3975:52;4063:9;4050:23;4092:18;4133:2;4125:6;4122:14;4119:34;;;4149:1;4146;4139:12;4119:34;4187:6;4176:9;4172:22;4162:32;;4232:7;4225:4;4221:2;4217:13;4213:27;4203:55;;4254:1;4251;4244:12;4203:55;4290:2;4277:16;4312:2;4308;4305:10;4302:36;;;4318:18;;:::i;:::-;4364:2;4361:1;4357:10;4347:20;;4387:28;4411:2;4407;4403:11;4387:28;:::i;:::-;4449:15;;;4519:11;;;4515:20;;;4480:12;;;;4547:19;;;4544:39;;;4579:1;4576;4569:12;4544:39;4603:11;;;;4623:217;4639:6;4634:3;4631:15;4623:217;;;4719:3;4706:17;4693:30;;4736:31;4761:5;4736:31;:::i;:::-;4780:18;;;4656:12;;;;4818;;;;4623:217;;;4859:5;3849:1021;-1:-1:-1;;;;;;;;3849:1021:387:o;4875:856::-;4976:6;4984;4992;5000;5008;5061:2;5049:9;5040:7;5036:23;5032:32;5029:52;;;5077:1;5074;5067:12;5029:52;5117:9;5104:23;5146:18;5187:2;5179:6;5176:14;5173:34;;;5203:1;5200;5193:12;5173:34;5242:59;5293:7;5284:6;5273:9;5269:22;5242:59;:::i;:::-;5320:8;;-1:-1:-1;5216:85:387;-1:-1:-1;5405:2:387;5390:18;;5377:32;;-1:-1:-1;5418:31:387;5377:32;5418:31;:::i;:::-;5468:5;;-1:-1:-1;5526:2:387;5511:18;;5498:32;;5542:16;;;5539:36;;;5571:1;5568;5561:12;5539:36;;5610:61;5663:7;5652:8;5641:9;5637:24;5610:61;:::i;:::-;4875:856;;;;-1:-1:-1;4875:856:387;;-1:-1:-1;5690:8:387;;5584:87;4875:856;-1:-1:-1;;;4875:856:387:o;5736:272::-;5925:2;5914:9;5907:21;5888:4;5945:57;5998:2;5987:9;5983:18;5975:6;5945:57;:::i;6403:251::-;6473:6;6526:2;6514:9;6505:7;6501:23;6497:32;6494:52;;;6542:1;6539;6532:12;6494:52;6574:9;6568:16;6593:31;6618:5;6593:31;:::i;6659:127::-;6720:10;6715:3;6711:20;6708:1;6701:31;6751:4;6748:1;6741:15;6775:4;6772:1;6765:15;6791:127;6852:10;6847:3;6843:20;6840:1;6833:31;6883:4;6880:1;6873:15;6907:4;6904:1;6897:15;6923:135;6962:3;6983:17;;;6980:43;;7003:18;;:::i;:::-;-1:-1:-1;7050:1:387;7039:13;;6923:135::o;7063:273::-;7248:6;7240;7235:3;7222:33;7204:3;7274:16;;7299:13;;;7274:16;7063:273;-1:-1:-1;7063:273:387:o;7341:297::-;7459:12;;7506:4;7495:16;;;7489:23;;7459:12;7524:16;;7521:111;;;7618:1;7614:6;7604;7598:4;7594:17;7591:1;7587:25;7583:38;7576:5;7572:50;7563:59;;7521:111;;7341:297;;;:::o;7850:277::-;7917:6;7970:2;7958:9;7949:7;7945:23;7941:32;7938:52;;;7986:1;7983;7976:12;7938:52;8018:9;8012:16;8071:5;8064:13;8057:21;8050:5;8047:32;8037:60;;8093:1;8090;8083:12;8132:719;8212:6;8265:2;8253:9;8244:7;8240:23;8236:32;8233:52;;;8281:1;8278;8271:12;8233:52;8314:9;8308:16;8343:18;8384:2;8376:6;8373:14;8370:34;;;8400:1;8397;8390:12;8370:34;8438:6;8427:9;8423:22;8413:32;;8483:7;8476:4;8472:2;8468:13;8464:27;8454:55;;8505:1;8502;8495:12;8454:55;8534:2;8528:9;8556:2;8552;8549:10;8546:36;;;8562:18;;:::i;:::-;8604:53;8647:2;8628:13;;-1:-1:-1;;8624:27:387;8653:2;8620:36;8604:53;:::i;:::-;8591:66;;8680:2;8673:5;8666:17;8720:7;8715:2;8710;8706;8702:11;8698:20;8695:33;8692:53;;;8741:1;8738;8731:12;8692:53;8754:67;8818:2;8813;8806:5;8802:14;8797:2;8793;8789:11;8754:67;:::i;:::-;-1:-1:-1;8840:5:387;8132:719;-1:-1:-1;;;;8132:719:387:o;8856:388::-;9061:2;9050:9;9043:21;9024:4;9081:45;9122:2;9111:9;9107:18;9099:6;9081:45;:::i;:::-;-1:-1:-1;;;;;9162:32:387;;;;9157:2;9142:18;;9135:60;-1:-1:-1;9226:2:387;9211:18;9204:34;9073:53;8856:388;-1:-1:-1;8856:388:387:o;9249:128::-;9316:9;;;9337:11;;;9334:37;;;9351:18;;:::i;9382:127::-;9443:10;9438:3;9434:20;9431:1;9424:31;9474:4;9471:1;9464:15;9498:4;9495:1;9488:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addEntitlement(address)": "2c90a840",
    "addImmutableEntitlements(address[])": "8bfc820f",
    "getEntitlement(address)": "fba4ff9d",
    "getEntitlements()": "487dc38c",
    "isEntitledToChannel(string,address,string)": "cea632bc",
    "isEntitledToTown(address,string)": "4ff8eb71",
    "removeEntitlement(address)": "c9b968cd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Entitlement__InvalidValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Entitlement__NotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Entitlement__ValueAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__EntitlementAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__EntitlementDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__ImmutableEntitlement\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__InvalidEntitlementAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__InvalidEntitlementInterface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Pausable__NotPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Pausable__Paused\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entitlement\",\"type\":\"address\"}],\"name\":\"addEntitlement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"entitlements\",\"type\":\"address[]\"}],\"name\":\"addImmutableEntitlements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entitlement\",\"type\":\"address\"}],\"name\":\"getEntitlement\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"moduleType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isImmutable\",\"type\":\"bool\"}],\"internalType\":\"struct IEntitlementsBase.Entitlement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntitlements\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"moduleType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isImmutable\",\"type\":\"bool\"}],\"internalType\":\"struct IEntitlementsBase.Entitlement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"channelId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"permission\",\"type\":\"string\"}],\"name\":\"isEntitledToChannel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"permission\",\"type\":\"string\"}],\"name\":\"isEntitledToTown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entitlement\",\"type\":\"address\"}],\"name\":\"removeEntitlement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OwnershipTransferred(address,address)\":{\"details\":\"This emits when ownership of a contract changes.\"}},\"kind\":\"dev\",\"methods\":{\"addEntitlement(address)\":{\"params\":{\"entitlement\":\"The entitlement to add\"}},\"addImmutableEntitlements(address[])\":{\"params\":{\"entitlements\":\"The entitlements to add\"}},\"getEntitlement(address)\":{\"params\":{\"entitlement\":\"The entitlement to get\"},\"returns\":{\"_0\":\"The entitlement module address\"}},\"getEntitlements()\":{\"returns\":{\"_0\":\"The entitlement modules\"}},\"isEntitledToChannel(string,address,string)\":{\"params\":{\"channelId\":\"The channel to check\",\"permission\":\"The permission to check\",\"user\":\"The user to check\"},\"returns\":{\"_0\":\"True if the user is entitled to the permission, false otherwise\"}},\"isEntitledToTown(address,string)\":{\"params\":{\"permission\":\"The permission to check\",\"user\":\"The user to check\"},\"returns\":{\"_0\":\"True if the user is entitled to the permission, false otherwise\"}},\"removeEntitlement(address)\":{\"params\":{\"entitlement\":\"The entitlement to remove\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addEntitlement(address)\":{\"notice\":\"Adds an entitlement to the town\"},\"addImmutableEntitlements(address[])\":{\"notice\":\"Allows the town owner to add immutable entitlements to the town\"},\"getEntitlement(address)\":{\"notice\":\"Gets an entitlement from the town\"},\"getEntitlements()\":{\"notice\":\"Gets all entitlements from the town\"},\"isEntitledToChannel(string,address,string)\":{\"notice\":\"Checks if a user is entitled to a permission in a channel\"},\"isEntitledToTown(address,string)\":{\"notice\":\"Checks if a user is entitled to a permission in the town\"},\"removeEntitlement(address)\":{\"notice\":\"Removes an entitlement from the town\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/towns/facets/entitlements/Entitlements.sol\":\"Entitlements\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC721A/=lib/ERC721A/contracts/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=lib/operator-filter-registry/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"contracts/src/diamond/facets/introspection/IERC165.sol\":{\"keccak256\":\"0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2\",\"dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV\"]},\"contracts/src/diamond/facets/ownable/IERC173.sol\":{\"keccak256\":\"0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620\",\"dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol\":{\"keccak256\":\"0x6fd8ef9c81c98db01284b7b6874e47d36bb14af1011f8055e8f29384710472e4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d5fe0f5d5b5ee6889c9dddb02895605f3fe72b930d56c19a1705f5b036b5aed2\",\"dweb:/ipfs/QmR5AErtoePrJhUbuFAhxioPYWJ5cjBX71E4nD84xvw45k\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol\":{\"keccak256\":\"0xea4323b3cc8794cb9008bf79180555b0dc248c52e0b030024d6b4ac9fdd6af0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dce6d6130309fce1126b8a4b493cc14666c59d1f7685107f07fb685d2cf31773\",\"dweb:/ipfs/QmVrC5tmJWZYgZ7ruKW6uDU8QDeZgbh3QcZD9aWHrX2Duh\"]},\"contracts/src/diamond/facets/pausable/IPausable.sol\":{\"keccak256\":\"0x51faf4ca7fa88bc4bf2699bab34692f0a43a316d0b3f95a8d7271935ef243a78\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e4ff1050ba7ec1bc7de90f562d8ccf7875f4faea0f12ca5101f22619f2dd6de2\",\"dweb:/ipfs/QmeczRzWavYXmirfEbwGg5uLeLdXaENtFAzmxxFsggUHsW\"]},\"contracts/src/diamond/facets/pausable/PausableBase.sol\":{\"keccak256\":\"0xfdeeba59a9f9b6a31203aa45f9244767b5d790dbcf36c920cc0ec5471505e47f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72d6eb74b90e658834c9b9f6a9e391722c3eb3992aef2d4694c1a91473b291a1\",\"dweb:/ipfs/QmXVV8mTt8LmFDhzn3Lm3BMLXNdJTzUMbMrpBjnUaMzm5F\"]},\"contracts/src/diamond/facets/pausable/PausableStorage.sol\":{\"keccak256\":\"0x7aaa1baa71b080cf67876cb383b505be55ff2661b4bafc7f01428d509c201296\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://68231325f3a66baf6b96cb34d1432a675ff1d36fc15500cec97de12fc823bcd1\",\"dweb:/ipfs/QmVQb23iSSbYQJqk3EB9vT5fjSp6J8Uj2AwgEaHMSkF6wa\"]},\"contracts/src/towns/entitlements/IEntitlement.sol\":{\"keccak256\":\"0x3c3733f40dcf373c19ea564ec9cbf49b33e96c27a80012e9be6f8d6d24e76c46\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ba0686e15bc8bfac66d59f62e59832eaf6d4c1b636080f9b2367386d5dc72ecb\",\"dweb:/ipfs/QmemW17L8TkGWG9RHKWTpjq9WBtYX3dmZsiTtzDmYNNXwE\"]},\"contracts/src/towns/facets/Entitled.sol\":{\"keccak256\":\"0x9a4a44f9b7829dda47a0beb43076f2382bda72333571001eb8a6fb69d723b2c2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2d9ae9e5668e5f1efa28dff702ee50eec69df427c6eaee3321859cbad206bc82\",\"dweb:/ipfs/QmaMQsyVzREskdSfarp6eVWPmttJY2zTh2Xr37zCfwX6QP\"]},\"contracts/src/towns/facets/entitlements/Entitlements.sol\":{\"keccak256\":\"0xd6ed8b3d289cade3214d00022aa2138f466b157c1349ce16638010c824ecca46\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b212bcf31a7ef43890e07f75a321291e9592b4fe99b0c8fa6e1615faf2288a03\",\"dweb:/ipfs/QmWcJ4bas5cuwD6fu8Jsh92TaNqeM78URJjNCnDeUMiR7p\"]},\"contracts/src/towns/facets/entitlements/EntitlementsBase.sol\":{\"keccak256\":\"0x5800e907c403e6eacc28911a54c6558247bf00d1223e1f8397849624f53bbc2b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://34973c8bcc43be6168161898c9d942dd7357e33a5417fe949e401db7dd79a140\",\"dweb:/ipfs/QmUCn4x21VW5JjJK8msFTkj8FRtzswZH3MrLUCGfR1e5CA\"]},\"contracts/src/towns/facets/entitlements/EntitlementsService.sol\":{\"keccak256\":\"0x312b81aee24b5974d794ee9e60e1accb9b53e1f1ab7a931354523a388d9fd449\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b43ebad51a275a24244bcec1e9ab4c452d0ff1694802e0f8abe62b9133642037\",\"dweb:/ipfs/QmWJsMsoQfGKrzSUN3AP1eGGr9v5by2KE4EpoYMDRS4V89\"]},\"contracts/src/towns/facets/entitlements/EntitlementsStorage.sol\":{\"keccak256\":\"0x6a8cd3a19ff1c836849d48be28f94b08f2864b4f26823a3af3e5741ff106a2a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3950f0448e01b6dbe94b4e3ea84ff8c5bc5d3da4966c1e848da5d40738b0a647\",\"dweb:/ipfs/QmbTtp8PdYYZbsuuseRVJeUVQHUKJwfwDXWqtFQRDz9yDp\"]},\"contracts/src/towns/facets/entitlements/IEntitlements.sol\":{\"keccak256\":\"0xb466a5f375df71e1db46a8358504688b3a0da95cd93dd63c3a72111b55fd1b18\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8da3d044976e09322b31c4bd9aace156e149dd395052430f69b29b2f38ae1811\",\"dweb:/ipfs/QmS6deT8YZkTe1CDqdZqnfHw3S1JgumFLNic7GjS3FUZHW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "Entitlement__InvalidValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Entitlement__NotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Entitlement__ValueAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__EntitlementAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__EntitlementDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__ImmutableEntitlement"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__InvalidEntitlementAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__InvalidEntitlementInterface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__ZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Pausable__NotPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Pausable__Paused"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "entitlement",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addEntitlement"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "entitlements",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addImmutableEntitlements"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "entitlement",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitlement",
          "outputs": [
            {
              "internalType": "struct IEntitlementsBase.Entitlement",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "moduleType",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "isImmutable",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitlements",
          "outputs": [
            {
              "internalType": "struct IEntitlementsBase.Entitlement[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "moduleType",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "isImmutable",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "channelId",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "permission",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEntitledToChannel",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "permission",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEntitledToTown",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "entitlement",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeEntitlement"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addEntitlement(address)": {
            "params": {
              "entitlement": "The entitlement to add"
            }
          },
          "addImmutableEntitlements(address[])": {
            "params": {
              "entitlements": "The entitlements to add"
            }
          },
          "getEntitlement(address)": {
            "params": {
              "entitlement": "The entitlement to get"
            },
            "returns": {
              "_0": "The entitlement module address"
            }
          },
          "getEntitlements()": {
            "returns": {
              "_0": "The entitlement modules"
            }
          },
          "isEntitledToChannel(string,address,string)": {
            "params": {
              "channelId": "The channel to check",
              "permission": "The permission to check",
              "user": "The user to check"
            },
            "returns": {
              "_0": "True if the user is entitled to the permission, false otherwise"
            }
          },
          "isEntitledToTown(address,string)": {
            "params": {
              "permission": "The permission to check",
              "user": "The user to check"
            },
            "returns": {
              "_0": "True if the user is entitled to the permission, false otherwise"
            }
          },
          "removeEntitlement(address)": {
            "params": {
              "entitlement": "The entitlement to remove"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addEntitlement(address)": {
            "notice": "Adds an entitlement to the town"
          },
          "addImmutableEntitlements(address[])": {
            "notice": "Allows the town owner to add immutable entitlements to the town"
          },
          "getEntitlement(address)": {
            "notice": "Gets an entitlement from the town"
          },
          "getEntitlements()": {
            "notice": "Gets all entitlements from the town"
          },
          "isEntitledToChannel(string,address,string)": {
            "notice": "Checks if a user is entitled to a permission in a channel"
          },
          "isEntitledToTown(address,string)": {
            "notice": "Checks if a user is entitled to a permission in the town"
          },
          "removeEntitlement(address)": {
            "notice": "Removes an entitlement from the town"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC721A/=lib/ERC721A/contracts/",
        "council/=lib/council/contracts/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "operator-filter-registry/=lib/operator-filter-registry/",
        "prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "contracts/src/towns/facets/entitlements/Entitlements.sol": "Entitlements"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/diamond/facets/introspection/IERC165.sol": {
        "keccak256": "0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816",
        "urls": [
          "bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2",
          "dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/IERC173.sol": {
        "keccak256": "0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe",
        "urls": [
          "bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620",
          "dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol": {
        "keccak256": "0x6fd8ef9c81c98db01284b7b6874e47d36bb14af1011f8055e8f29384710472e4",
        "urls": [
          "bzz-raw://d5fe0f5d5b5ee6889c9dddb02895605f3fe72b930d56c19a1705f5b036b5aed2",
          "dweb:/ipfs/QmR5AErtoePrJhUbuFAhxioPYWJ5cjBX71E4nD84xvw45k"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol": {
        "keccak256": "0xea4323b3cc8794cb9008bf79180555b0dc248c52e0b030024d6b4ac9fdd6af0b",
        "urls": [
          "bzz-raw://dce6d6130309fce1126b8a4b493cc14666c59d1f7685107f07fb685d2cf31773",
          "dweb:/ipfs/QmVrC5tmJWZYgZ7ruKW6uDU8QDeZgbh3QcZD9aWHrX2Duh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/IPausable.sol": {
        "keccak256": "0x51faf4ca7fa88bc4bf2699bab34692f0a43a316d0b3f95a8d7271935ef243a78",
        "urls": [
          "bzz-raw://e4ff1050ba7ec1bc7de90f562d8ccf7875f4faea0f12ca5101f22619f2dd6de2",
          "dweb:/ipfs/QmeczRzWavYXmirfEbwGg5uLeLdXaENtFAzmxxFsggUHsW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/PausableBase.sol": {
        "keccak256": "0xfdeeba59a9f9b6a31203aa45f9244767b5d790dbcf36c920cc0ec5471505e47f",
        "urls": [
          "bzz-raw://72d6eb74b90e658834c9b9f6a9e391722c3eb3992aef2d4694c1a91473b291a1",
          "dweb:/ipfs/QmXVV8mTt8LmFDhzn3Lm3BMLXNdJTzUMbMrpBjnUaMzm5F"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/PausableStorage.sol": {
        "keccak256": "0x7aaa1baa71b080cf67876cb383b505be55ff2661b4bafc7f01428d509c201296",
        "urls": [
          "bzz-raw://68231325f3a66baf6b96cb34d1432a675ff1d36fc15500cec97de12fc823bcd1",
          "dweb:/ipfs/QmVQb23iSSbYQJqk3EB9vT5fjSp6J8Uj2AwgEaHMSkF6wa"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/entitlements/IEntitlement.sol": {
        "keccak256": "0x3c3733f40dcf373c19ea564ec9cbf49b33e96c27a80012e9be6f8d6d24e76c46",
        "urls": [
          "bzz-raw://ba0686e15bc8bfac66d59f62e59832eaf6d4c1b636080f9b2367386d5dc72ecb",
          "dweb:/ipfs/QmemW17L8TkGWG9RHKWTpjq9WBtYX3dmZsiTtzDmYNNXwE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/Entitled.sol": {
        "keccak256": "0x9a4a44f9b7829dda47a0beb43076f2382bda72333571001eb8a6fb69d723b2c2",
        "urls": [
          "bzz-raw://2d9ae9e5668e5f1efa28dff702ee50eec69df427c6eaee3321859cbad206bc82",
          "dweb:/ipfs/QmaMQsyVzREskdSfarp6eVWPmttJY2zTh2Xr37zCfwX6QP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/Entitlements.sol": {
        "keccak256": "0xd6ed8b3d289cade3214d00022aa2138f466b157c1349ce16638010c824ecca46",
        "urls": [
          "bzz-raw://b212bcf31a7ef43890e07f75a321291e9592b4fe99b0c8fa6e1615faf2288a03",
          "dweb:/ipfs/QmWcJ4bas5cuwD6fu8Jsh92TaNqeM78URJjNCnDeUMiR7p"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsBase.sol": {
        "keccak256": "0x5800e907c403e6eacc28911a54c6558247bf00d1223e1f8397849624f53bbc2b",
        "urls": [
          "bzz-raw://34973c8bcc43be6168161898c9d942dd7357e33a5417fe949e401db7dd79a140",
          "dweb:/ipfs/QmUCn4x21VW5JjJK8msFTkj8FRtzswZH3MrLUCGfR1e5CA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsService.sol": {
        "keccak256": "0x312b81aee24b5974d794ee9e60e1accb9b53e1f1ab7a931354523a388d9fd449",
        "urls": [
          "bzz-raw://b43ebad51a275a24244bcec1e9ab4c452d0ff1694802e0f8abe62b9133642037",
          "dweb:/ipfs/QmWJsMsoQfGKrzSUN3AP1eGGr9v5by2KE4EpoYMDRS4V89"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsStorage.sol": {
        "keccak256": "0x6a8cd3a19ff1c836849d48be28f94b08f2864b4f26823a3af3e5741ff106a2a1",
        "urls": [
          "bzz-raw://3950f0448e01b6dbe94b4e3ea84ff8c5bc5d3da4966c1e848da5d40738b0a647",
          "dweb:/ipfs/QmbTtp8PdYYZbsuuseRVJeUVQHUKJwfwDXWqtFQRDz9yDp"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/IEntitlements.sol": {
        "keccak256": "0xb466a5f375df71e1db46a8358504688b3a0da95cd93dd63c3a72111b55fd1b18",
        "urls": [
          "bzz-raw://8da3d044976e09322b31c4bd9aace156e149dd395052430f69b29b2f38ae1811",
          "dweb:/ipfs/QmS6deT8YZkTe1CDqdZqnfHw3S1JgumFLNic7GjS3FUZHW"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/towns/facets/entitlements/Entitlements.sol",
    "id": 30377,
    "exportedSymbols": {
      "Entitled": [
        27107
      ],
      "Entitlements": [
        30376
      ],
      "EntitlementsBase": [
        30562
      ],
      "IEntitlements": [
        31030
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1293:136",
    "nodes": [
      {
        "id": 30269,
        "nodeType": "PragmaDirective",
        "src": "39:24:136",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 30271,
        "nodeType": "ImportDirective",
        "src": "79:50:136",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/entitlements/IEntitlements.sol",
        "file": "./IEntitlements.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30377,
        "sourceUnit": 31031,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30270,
              "name": "IEntitlements",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31030,
              "src": "87:13:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30273,
        "nodeType": "ImportDirective",
        "src": "158:56:136",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/entitlements/EntitlementsBase.sol",
        "file": "./EntitlementsBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30377,
        "sourceUnit": 30563,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30272,
              "name": "EntitlementsBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30562,
              "src": "166:16:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30275,
        "nodeType": "ImportDirective",
        "src": "215:41:136",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/Entitled.sol",
        "file": "../Entitled.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30377,
        "sourceUnit": 27108,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30274,
              "name": "Entitled",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 27107,
              "src": "223:8:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30376,
        "nodeType": "ContractDefinition",
        "src": "258:1073:136",
        "nodes": [
          {
            "id": 30294,
            "nodeType": "FunctionDefinition",
            "src": "329:142:136",
            "nodes": [],
            "body": {
              "id": 30293,
              "nodeType": "Block",
              "src": "421:50:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30290,
                        "name": "entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30284,
                        "src": "453:12:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 30289,
                      "name": "_addImmutableEntitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30421,
                      "src": "427:25:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 30291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "427:39:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30292,
                  "nodeType": "ExpressionStatement",
                  "src": "427:39:136"
                }
              ]
            },
            "baseFunctions": [
              30978
            ],
            "functionSelector": "8bfc820f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30287,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30286,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "411:9:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6563,
                  "src": "411:9:136"
                },
                "nodeType": "ModifierInvocation",
                "src": "411:9:136"
              }
            ],
            "name": "addImmutableEntitlements",
            "nameLocation": "338:24:136",
            "parameters": {
              "id": 30285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30284,
                  "mutability": "mutable",
                  "name": "entitlements",
                  "nameLocation": "385:12:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 30294,
                  "src": "368:29:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30282,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "368:7:136",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 30283,
                    "nodeType": "ArrayTypeName",
                    "src": "368:9:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "362:39:136"
            },
            "returnParameters": {
              "id": 30288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:0:136"
            },
            "scope": 30376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30306,
            "nodeType": "FunctionDefinition",
            "src": "475:103:136",
            "nodes": [],
            "body": {
              "id": 30305,
              "nodeType": "Block",
              "src": "539:39:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30302,
                        "name": "entitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30296,
                        "src": "561:11:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30301,
                      "name": "_addEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30440,
                      "src": "545:15:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "545:28:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30304,
                  "nodeType": "ExpressionStatement",
                  "src": "545:28:136"
                }
              ]
            },
            "baseFunctions": [
              31006
            ],
            "functionSelector": "2c90a840",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30299,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30298,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "529:9:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6563,
                  "src": "529:9:136"
                },
                "nodeType": "ModifierInvocation",
                "src": "529:9:136"
              }
            ],
            "name": "addEntitlement",
            "nameLocation": "484:14:136",
            "parameters": {
              "id": 30297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30296,
                  "mutability": "mutable",
                  "name": "entitlement",
                  "nameLocation": "507:11:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 30306,
                  "src": "499:19:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30295,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "499:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "498:21:136"
            },
            "returnParameters": {
              "id": 30300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "539:0:136"
            },
            "scope": 30376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30318,
            "nodeType": "FunctionDefinition",
            "src": "582:109:136",
            "nodes": [],
            "body": {
              "id": 30317,
              "nodeType": "Block",
              "src": "649:42:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30314,
                        "name": "entitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30308,
                        "src": "674:11:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30313,
                      "name": "_removeEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30458,
                      "src": "655:18:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "655:31:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30316,
                  "nodeType": "ExpressionStatement",
                  "src": "655:31:136"
                }
              ]
            },
            "baseFunctions": [
              31012
            ],
            "functionSelector": "c9b968cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 30311,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30310,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "639:9:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6563,
                  "src": "639:9:136"
                },
                "nodeType": "ModifierInvocation",
                "src": "639:9:136"
              }
            ],
            "name": "removeEntitlement",
            "nameLocation": "591:17:136",
            "parameters": {
              "id": 30309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30308,
                  "mutability": "mutable",
                  "name": "entitlement",
                  "nameLocation": "617:11:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 30318,
                  "src": "609:19:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "608:21:136"
            },
            "returnParameters": {
              "id": 30312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "649:0:136"
            },
            "scope": 30376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30329,
            "nodeType": "FunctionDefinition",
            "src": "695:108:136",
            "nodes": [],
            "body": {
              "id": 30328,
              "nodeType": "Block",
              "src": "767:36:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30325,
                      "name": "_getEntitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30561,
                      "src": "780:16:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_struct$_Entitlement_$30968_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (struct IEntitlementsBase.Entitlement memory[] memory)"
                      }
                    },
                    "id": 30326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "780:18:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Entitlement_$30968_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IEntitlementsBase.Entitlement memory[] memory"
                    }
                  },
                  "functionReturnParameters": 30324,
                  "id": 30327,
                  "nodeType": "Return",
                  "src": "773:25:136"
                }
              ]
            },
            "baseFunctions": [
              31029
            ],
            "functionSelector": "487dc38c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntitlements",
            "nameLocation": "704:15:136",
            "parameters": {
              "id": 30319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:2:136"
            },
            "returnParameters": {
              "id": 30324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30323,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30329,
                  "src": "745:20:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Entitlement_$30968_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IEntitlementsBase.Entitlement[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30321,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 30320,
                        "name": "Entitlement",
                        "nameLocations": [
                          "745:11:136"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 30968,
                        "src": "745:11:136"
                      },
                      "referencedDeclaration": 30968,
                      "src": "745:11:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Entitlement_$30968_storage_ptr",
                        "typeString": "struct IEntitlementsBase.Entitlement"
                      }
                    },
                    "id": 30322,
                    "nodeType": "ArrayTypeName",
                    "src": "745:13:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Entitlement_$30968_storage_$dyn_storage_ptr",
                      "typeString": "struct IEntitlementsBase.Entitlement[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "744:22:136"
            },
            "scope": 30376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30342,
            "nodeType": "FunctionDefinition",
            "src": "807:142:136",
            "nodes": [],
            "body": {
              "id": 30341,
              "nodeType": "Block",
              "src": "903:46:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30338,
                        "name": "entitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30331,
                        "src": "932:11:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30337,
                      "name": "_getEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30495,
                      "src": "916:15:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_Entitlement_$30968_memory_ptr_$",
                        "typeString": "function (address) view returns (struct IEntitlementsBase.Entitlement memory)"
                      }
                    },
                    "id": 30339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "916:28:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Entitlement_$30968_memory_ptr",
                      "typeString": "struct IEntitlementsBase.Entitlement memory"
                    }
                  },
                  "functionReturnParameters": 30336,
                  "id": 30340,
                  "nodeType": "Return",
                  "src": "909:35:136"
                }
              ]
            },
            "baseFunctions": [
              31021
            ],
            "functionSelector": "fba4ff9d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntitlement",
            "nameLocation": "816:14:136",
            "parameters": {
              "id": 30332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30331,
                  "mutability": "mutable",
                  "name": "entitlement",
                  "nameLocation": "844:11:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 30342,
                  "src": "836:19:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "830:29:136"
            },
            "returnParameters": {
              "id": 30336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30335,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30342,
                  "src": "883:18:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Entitlement_$30968_memory_ptr",
                    "typeString": "struct IEntitlementsBase.Entitlement"
                  },
                  "typeName": {
                    "id": 30334,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30333,
                      "name": "Entitlement",
                      "nameLocations": [
                        "883:11:136"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30968,
                      "src": "883:11:136"
                    },
                    "referencedDeclaration": 30968,
                    "src": "883:11:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Entitlement_$30968_storage_ptr",
                      "typeString": "struct IEntitlementsBase.Entitlement"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "882:20:136"
            },
            "scope": 30376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30357,
            "nodeType": "FunctionDefinition",
            "src": "953:162:136",
            "nodes": [],
            "body": {
              "id": 30356,
              "nodeType": "Block",
              "src": "1062:53:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30352,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30344,
                        "src": "1093:4:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30353,
                        "name": "permission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30346,
                        "src": "1099:10:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 30351,
                      "name": "_isEntitledToTown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27014,
                      "src": "1075:17:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_string_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,string calldata) view returns (bool)"
                      }
                    },
                    "id": 30354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1075:35:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 30350,
                  "id": 30355,
                  "nodeType": "Return",
                  "src": "1068:42:136"
                }
              ]
            },
            "baseFunctions": [
              30988
            ],
            "functionSelector": "4ff8eb71",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isEntitledToTown",
            "nameLocation": "962:16:136",
            "parameters": {
              "id": 30347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30344,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "992:4:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 30357,
                  "src": "984:12:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30346,
                  "mutability": "mutable",
                  "name": "permission",
                  "nameLocation": "1018:10:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 30357,
                  "src": "1002:26:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30345,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "978:54:136"
            },
            "returnParameters": {
              "id": 30350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30357,
                  "src": "1056:4:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 30348,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:4:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1055:6:136"
            },
            "scope": 30376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30375,
            "nodeType": "FunctionDefinition",
            "src": "1119:210:136",
            "nodes": [],
            "body": {
              "id": 30374,
              "nodeType": "Block",
              "src": "1262:67:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30369,
                        "name": "channelId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30359,
                        "src": "1296:9:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 30370,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "1307:4:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30371,
                        "name": "permission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30363,
                        "src": "1313:10:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 30368,
                      "name": "_isEntitledToChannel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27038,
                      "src": "1275:20:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_string_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,string calldata) view returns (bool)"
                      }
                    },
                    "id": 30372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1275:49:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 30367,
                  "id": 30373,
                  "nodeType": "Return",
                  "src": "1268:56:136"
                }
              ]
            },
            "baseFunctions": [
              31000
            ],
            "functionSelector": "cea632bc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isEntitledToChannel",
            "nameLocation": "1128:19:136",
            "parameters": {
              "id": 30364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30359,
                  "mutability": "mutable",
                  "name": "channelId",
                  "nameLocation": "1169:9:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 30375,
                  "src": "1153:25:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30358,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30361,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1192:4:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 30375,
                  "src": "1184:12:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30363,
                  "mutability": "mutable",
                  "name": "permission",
                  "nameLocation": "1218:10:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 30375,
                  "src": "1202:26:136",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30362,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1147:85:136"
            },
            "returnParameters": {
              "id": 30367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30366,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30375,
                  "src": "1256:4:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 30365,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:4:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1255:6:136"
            },
            "scope": 30376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30276,
              "name": "IEntitlements",
              "nameLocations": [
                "283:13:136"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31030,
              "src": "283:13:136"
            },
            "id": 30277,
            "nodeType": "InheritanceSpecifier",
            "src": "283:13:136"
          },
          {
            "baseName": {
              "id": 30278,
              "name": "EntitlementsBase",
              "nameLocations": [
                "298:16:136"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30562,
              "src": "298:16:136"
            },
            "id": 30279,
            "nodeType": "InheritanceSpecifier",
            "src": "298:16:136"
          },
          {
            "baseName": {
              "id": 30280,
              "name": "Entitled",
              "nameLocations": [
                "316:8:136"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27107,
              "src": "316:8:136"
            },
            "id": 30281,
            "nodeType": "InheritanceSpecifier",
            "src": "316:8:136"
          }
        ],
        "canonicalName": "Entitlements",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30376,
          27107,
          6826,
          6735,
          6635,
          6092,
          24985,
          30562,
          31030,
          30969
        ],
        "name": "Entitlements",
        "nameLocation": "267:12:136",
        "scope": 30377,
        "usedErrors": [
          6080,
          6084,
          6724,
          6726,
          24980,
          24982,
          24984,
          30574,
          30576,
          30578,
          30580,
          30582
        ],
        "usedEvents": [
          6091,
          6730,
          6734
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 136
}
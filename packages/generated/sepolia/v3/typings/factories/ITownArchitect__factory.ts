/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ITownArchitect,
  ITownArchitectInterface,
} from "../ITownArchitect";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "town",
        type: "address",
      },
    ],
    name: "TownCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "townId",
        type: "string",
      },
    ],
    name: "computeTown",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string[]",
                name: "permissions",
                type: "string[]",
              },
            ],
            internalType: "struct ITownArchitectBase.RoleInfo",
            name: "everyoneEntitlement",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "string",
                    name: "name",
                    type: "string",
                  },
                  {
                    internalType: "string[]",
                    name: "permissions",
                    type: "string[]",
                  },
                ],
                internalType: "struct ITownArchitectBase.RoleInfo",
                name: "role",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "contractAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "quantity",
                    type: "uint256",
                  },
                  {
                    internalType: "bool",
                    name: "isSingleToken",
                    type: "bool",
                  },
                  {
                    internalType: "uint256[]",
                    name: "tokenIds",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct ITokenEntitlement.ExternalToken[]",
                name: "tokens",
                type: "tuple[]",
              },
              {
                internalType: "address[]",
                name: "users",
                type: "address[]",
              },
            ],
            internalType: "struct ITownArchitectBase.MemberEntitlement",
            name: "memberEntitlement",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "id",
                type: "string",
              },
              {
                internalType: "string",
                name: "metadata",
                type: "string",
              },
            ],
            internalType: "struct ITownArchitectBase.ChannelInfo",
            name: "channel",
            type: "tuple",
          },
        ],
        internalType: "struct ITownArchitectBase.TownInfo",
        name: "townInfo",
        type: "tuple",
      },
    ],
    name: "createTown",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "gateByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "townId",
        type: "string",
      },
    ],
    name: "getTokenIdByTownId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTownArchitectImplementations",
    outputs: [
      {
        internalType: "address",
        name: "townToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "userEntitlementImplementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenEntitlementImplementation",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "townId",
        type: "string",
      },
    ],
    name: "getTownById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "isTokenGated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "townToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "userEntitlementImplementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenEntitlementImplementation",
        type: "address",
      },
    ],
    name: "setTownArchitectImplementations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "ungateByToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ITownArchitect__factory {
  static readonly abi = _abi;
  static createInterface(): ITownArchitectInterface {
    return new utils.Interface(_abi) as ITownArchitectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITownArchitect {
    return new Contract(address, _abi, signerOrProvider) as ITownArchitect;
  }
}

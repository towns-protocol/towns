/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IEntitlementGated,
  IEntitlementGatedInterface,
} from "../IEntitlementGated";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
    ],
    name: "deleteTransaction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        internalType: "enum IEntitlementCheckerEvents.NodeVoteStatus",
        name: "result",
        type: "uint8",
      },
    ],
    name: "postEntitlementCheckResult",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestEntitlementCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IEntitlementGated__factory {
  static readonly abi = _abi;
  static createInterface(): IEntitlementGatedInterface {
    return new utils.Interface(_abi) as IEntitlementGatedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEntitlementGated {
    return new Contract(address, _abi, signerOrProvider) as IEntitlementGated;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UserEntitlement,
  UserEntitlementInterface,
} from "../UserEntitlement";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Entitlement__InvalidValue",
    type: "error",
  },
  {
    inputs: [],
    name: "Entitlement__NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "Entitlement__ValueAlreadyExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "TOWN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roleId",
        type: "uint256",
      },
    ],
    name: "getEntitlementDataByRoleId",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_space",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "channelId",
        type: "string",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "permission",
        type: "bytes32",
      },
    ],
    name: "isEntitled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "moduleType",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roleId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "entitlementData",
        type: "bytes",
      },
    ],
    name: "removeEntitlement",
    outputs: [
      {
        internalType: "bytes32",
        name: "entitlementId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "roleId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "entitlementData",
        type: "bytes",
      },
    ],
    name: "setEntitlement",
    outputs: [
      {
        internalType: "bytes32",
        name: "entitlementId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516121146200011a6000396000818161046d015281816104b60152818161055501528181610595015261062801526121146000f3fe6080604052600436106100c15760003560e01c806352d1902d1161007f578063c4d66de811610059578063c4d66de814610265578063cc786b3614610285578063ef8be574146102bd578063fa6d1adf146102dd57600080fd5b806352d1902d146101c65780636465e69f146101e95780637284e4161461022457600080fd5b8062b4eaa8146100c657806301ffc9a7146100fb57806306fdde031461011b5780631eee07b2146101645780633659cfe6146101915780634f1ef286146101b3575b600080fd5b3480156100d257600080fd5b506100e66100e13660046118ef565b6102fd565b60405190151581526020015b60405180910390f35b34801561010757600080fd5b506100e661011636600461194a565b61032a565b34801561012757600080fd5b506101576040518060400160405280601081526020016f155cd95c88115b9d1a5d1b195b595b9d60821b81525081565b6040516100f291906119c4565b34801561017057600080fd5b5061018461017f3660046119d7565b610361565b6040516100f291906119f0565b34801561019d57600080fd5b506101b16101ac366004611a52565b610463565b005b6101b16101c1366004611b02565b61054b565b3480156101d257600080fd5b506101db61061b565b6040519081526020016100f2565b3480156101f557600080fd5b506101576040518060400160405280600f81526020016e155cd95c915b9d1a5d1b195b595b9d608a1b81525081565b34801561023057600080fd5b5061015760405180604001604052806015815260200174456e7469746c656d656e7420666f7220757365727360581b81525081565b34801561027157600080fd5b506101b1610280366004611a52565b6106ce565b34801561029157600080fd5b5060c9546102a5906001600160a01b031681565b6040516001600160a01b0390911681526020016100f2565b3480156102c957600080fd5b506101db6102d8366004611b92565b61080a565b3480156102e957600080fd5b506101db6102f8366004611b92565b6109e2565b600083156103185761031185858585610bee565b9050610322565b6103118383610d5f565b949350505050565b60006001600160e01b0319821663df76a3d360e01b148061035b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600081815260cb602052604081206060919061037c90610df1565b80519091506000816001600160401b0381111561039b5761039b611a6d565b6040519080825280602002602001820160405280156103ce57816020015b60608152602001906001900390816103b95790505b50905060005b8281101561045a5760ca60008583815181106103f2576103f2611bdd565b6020026020010151815260200190815260200160002060030160405160200161041b9190611bf3565b60405160208183030381529060405282828151811061043c5761043c611bdd565b6020026020010181905250808061045290611c59565b9150506103d4565b50949350505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104b45760405162461bcd60e51b81526004016104ab90611c72565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104fd6000805160206120cd833981519152546001600160a01b031690565b6001600160a01b0316146105235760405162461bcd60e51b81526004016104ab90611cbe565b61052c81610e05565b6040805160008082526020820190925261054891839190610e39565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105935760405162461bcd60e51b81526004016104ab90611c72565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105dc6000805160206120cd833981519152546001600160a01b031690565b6001600160a01b0316146106025760405162461bcd60e51b81526004016104ab90611cbe565b61060b82610e05565b61061782826001610e39565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106bb5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016104ab565b506000805160206120cd83398151915290565b600054610100900460ff16158080156106ee5750600054600160ff909116105b806107085750303b158015610708575060005460ff166001145b61076b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104ab565b6000805460ff19166001179055801561078e576000805461ff0019166101001790555b610796610fa9565b61079e610fa9565b6107a6610fa9565b60c980546001600160a01b0319166001600160a01b0384161790558015610617576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60c9546000906001600160a01b0316336001600160a01b03161461084157604051630ce39a4b60e21b815260040160405180910390fd5b83838360405160200161085693929190611d0a565b60408051601f1981840301815291905280516020909101209050600061087e83850185611d47565b905080516000036108a2576040516372bbc80f60e11b815260040160405180910390fd5b60005b81518110156109365760008282815181106108c2576108c2611bdd565b6020026020010151905060006001600160a01b0316816001600160a01b0316036108ff576040516372bbc80f60e11b815260040160405180910390fd5b6001600160a01b038116600090815260cc602052604090206109219085611016565b5050808061092e90611c59565b9150506108a5565b50604051806080016040528086815260200161094f3390565b6001600160a01b039081168252426020808401919091526040928301859052600086815260ca825283902084518155848201516001820180546001600160a01b03191691909416179092559183015160028201556060830151805191926109be926003850192909101906117f7565b505050600085815260cb602052604090206109d99083611016565b50509392505050565b60c9546000906001600160a01b0316336001600160a01b031614610a1957604051630ce39a4b60e21b815260040160405180910390fd5b838383604051602001610a2e93929190611d0a565b60408051601f198184030181528282528051602091820120600081815260ca83528381206080860185528054865260018101546001600160a01b0316868501526002810154868601526003810180548651818702810187019097528087529397509195949093606086019391929190830182828015610ad657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ab8575b505050505081525050905080606001515160001480610af457508051155b15610b12576040516372bbc80f60e11b815260040160405180910390fd5b8051600090815260cb60205260409020610b2c9083611022565b5060005b816060015151811015610bab57600082606001518281518110610b5557610b55611bdd565b60200260200101519050610b968460cc6000846001600160a01b03166001600160a01b0316815260200190815260200160002061102290919063ffffffff16565b50508080610ba390611c59565b915050610b30565b50600082815260ca602052604081208181556001810180546001600160a01b03191690556002810182905590610be4600383018261185c565b5050509392505050565b60c954604051637cd7ee3d60e01b815260009182916001600160a01b0390911690637cd7ee3d90610c259089908990600401611dde565b600060405180830381865afa158015610c42573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c6a9190810190611eb8565b90506000610c78600161102e565b90506000610c858661102e565b90506000610c9383836111d8565b905060005b846060015151811015610d5257600085606001518281518110610cbd57610cbd611bdd565b6020026020010151905060005b8351811015610d3d5781848281518110610ce657610ce6611bdd565b602002602001015160000151148015610d215750610d21848281518110610d0f57610d0f611bdd565b6020026020010151600001518a611328565b15610d2b57600197505b80610d3581611c59565b915050610cca565b50508080610d4a90611c59565b915050610c98565b5050505050949350505050565b600080610d6c600161102e565b90506000610d798561102e565b90506000610d8783836111d8565b805190915060005b81811015610de357610dbe838281518110610dac57610dac611bdd565b60200260200101516000015188611328565b15610dd15760019550505050505061035b565b80610ddb81611c59565b915050610d8f565b506000979650505050505050565b60606000610dfe83611420565b9392505050565b60c9546001600160a01b0316336001600160a01b03161461054857604051630ce39a4b60e21b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e7157610e6c8361147c565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ecb575060408051601f3d908101601f19168201909252610ec891810190611f84565b60015b610f2e5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016104ab565b6000805160206120cd8339815191528114610f9d5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016104ab565b50610e6c838383611518565b600054610100900460ff166110145760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016104ab565b565b6000610dfe8383611543565b6000610dfe8383611592565b6001600160a01b038116600090815260cc602052604081206060919061105390610df1565b8051909150806001600160401b0381111561107057611070611a6d565b6040519080825280602002602001820160405280156110d557816020015b6110c260405180608001604052806000815260200160006001600160a01b0316815260200160008152602001606081525090565b81526020019060019003908161108e5790505b50925060005b818110156111d05760ca60008483815181106110f9576110f9611bdd565b602090810291909101810151825281810192909252604090810160002081516080810183528154815260018201546001600160a01b03168185015260028201548184015260038201805484518187028101870190955280855291949293606086019390929083018282801561119757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611179575b5050505050815250508482815181106111b2576111b2611bdd565b602002602001018190525080806111c890611c59565b9150506110db565b505050919050565b60606000825184516111ea9190611f9d565b6001600160401b0381111561120157611201611a6d565b60405190808252806020026020018201604052801561126657816020015b61125360405180608001604052806000815260200160006001600160a01b0316815260200160008152602001606081525090565b81526020019060019003908161121f5790505b50905060005b84518110156112bf5784818151811061128757611287611bdd565b60200260200101518282815181106112a1576112a1611bdd565b602002602001018190525080806112b790611c59565b91505061126c565b60005b845181101561131e5784816112d681611c59565b9250815181106112e8576112e8611bdd565b60200260200101518383806112fc90611c59565b94508151811061130e5761130e611bdd565b60200260200101819052506112c2565b5090949350505050565b60c95460405163b426423360e01b81526004810184905260009182916001600160a01b039091169063b426423390602401600060405180830381865afa158015611376573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261139e9190810190611fb0565b805190915060005b8181101561141457848382815181106113c1576113c1611bdd565b60200260200101516040516020016113d99190612060565b6040516020818303038152906040526113f19061207c565b03611402576001935050505061035b565b8061140c81611c59565b9150506113a6565b50600095945050505050565b60608160000180548060200260200160405190810160405280929190818152602001828054801561147057602002820191906000526020600020905b81548152602001906001019080831161145c575b50505050509050919050565b6001600160a01b0381163b6114e95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016104ab565b6000805160206120cd83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61152183611685565b60008251118061152e5750805b15610e6c5761153d83836116c5565b50505050565b600081815260018301602052604081205461158a5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561035b565b50600061035b565b6000818152600183016020526040812054801561167b5760006115b66001836120a3565b85549091506000906115ca906001906120a3565b905081811461162f5760008660000182815481106115ea576115ea611bdd565b906000526020600020015490508087600001848154811061160d5761160d611bdd565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611640576116406120b6565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061035b565b600091505061035b565b61168e8161147c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61172d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016104ab565b600080846001600160a01b0316846040516117489190612060565b600060405180830381855af49150503d8060008114611783576040519150601f19603f3d011682016040523d82523d6000602084013e611788565b606091505b50915091506117b082826040518060600160405280602781526020016120ed602791396117b9565b95945050505050565b606083156117c8575081610dfe565b610dfe83838151156117dd5781518083602001fd5b8060405162461bcd60e51b81526004016104ab91906119c4565b82805482825590600052602060002090810192821561184c579160200282015b8281111561184c57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611817565b50611858929150611876565b5090565b508054600082559060005260206000209081019061054891905b5b808211156118585760008155600101611877565b60008083601f84011261189d57600080fd5b5081356001600160401b038111156118b457600080fd5b6020830191508360208285010111156118cc57600080fd5b9250929050565b80356001600160a01b03811681146118ea57600080fd5b919050565b6000806000806060858703121561190557600080fd5b84356001600160401b0381111561191b57600080fd5b6119278782880161188b565b909550935061193a9050602086016118d3565b9396929550929360400135925050565b60006020828403121561195c57600080fd5b81356001600160e01b031981168114610dfe57600080fd5b60005b8381101561198f578181015183820152602001611977565b50506000910152565b600081518084526119b0816020860160208601611974565b601f01601f19169290920160200192915050565b602081526000610dfe6020830184611998565b6000602082840312156119e957600080fd5b5035919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611a4557603f19888603018452611a33858351611998565b94509285019290850190600101611a17565b5092979650505050505050565b600060208284031215611a6457600080fd5b610dfe826118d3565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715611aa557611aa5611a6d565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611ad357611ad3611a6d565b604052919050565b60006001600160401b03821115611af457611af4611a6d565b50601f01601f191660200190565b60008060408385031215611b1557600080fd5b611b1e836118d3565b915060208301356001600160401b03811115611b3957600080fd5b8301601f81018513611b4a57600080fd5b8035611b5d611b5882611adb565b611aab565b818152866020838501011115611b7257600080fd5b816020840160208301376000602083830101528093505050509250929050565b600080600060408486031215611ba757600080fd5b8335925060208401356001600160401b03811115611bc457600080fd5b611bd08682870161188b565b9497909650939450505050565b634e487b7160e01b600052603260045260246000fd5b6020808252825482820181905260008481528281209092916040850190845b81811015611c375783546001600160a01b031683526001938401939285019201611c12565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201611c6b57611c6b611c43565b5060010190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b838152818360208301376000910160200190815292915050565b60006001600160401b03821115611d3d57611d3d611a6d565b5060051b60200190565b60006020808385031215611d5a57600080fd5b82356001600160401b03811115611d7057600080fd5b8301601f81018513611d8157600080fd5b8035611d8f611b5882611d24565b81815260059190911b82018301908381019087831115611dae57600080fd5b928401925b82841015611dd357611dc4846118d3565b82529284019290840190611db3565b979650505050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b600082601f830112611e1e57600080fd5b8151611e2c611b5882611adb565b818152846020838601011115611e4157600080fd5b610322826020830160208701611974565b600082601f830112611e6357600080fd5b81516020611e73611b5883611d24565b82815260059290921b84018101918181019086841115611e9257600080fd5b8286015b84811015611ead5780518352918301918301611e96565b509695505050505050565b600060208284031215611eca57600080fd5b81516001600160401b0380821115611ee157600080fd5b9083019060808286031215611ef557600080fd5b611efd611a83565b825182811115611f0c57600080fd5b611f1887828601611e0d565b82525060208301518015158114611f2e57600080fd5b6020820152604083015182811115611f4557600080fd5b611f5187828601611e0d565b604083015250606083015182811115611f6957600080fd5b611f7587828601611e52565b60608301525095945050505050565b600060208284031215611f9657600080fd5b5051919050565b8082018082111561035b5761035b611c43565b60006020808385031215611fc357600080fd5b82516001600160401b0380821115611fda57600080fd5b818501915085601f830112611fee57600080fd5b8151611ffc611b5882611d24565b81815260059190911b8301840190848101908883111561201b57600080fd5b8585015b83811015612053578051858111156120375760008081fd5b6120458b89838a0101611e0d565b84525091860191860161201f565b5098975050505050505050565b60008251612072818460208701611974565b9190910192915050565b8051602080830151919081101561209d576000198160200360031b1b821691505b50919050565b8181038181111561035b5761035b611c43565b634e487b7160e01b600052603160045260246000fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type UserEntitlementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserEntitlementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserEntitlement__factory extends ContractFactory {
  constructor(...args: UserEntitlementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UserEntitlement> {
    return super.deploy(overrides || {}) as Promise<UserEntitlement>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UserEntitlement {
    return super.attach(address) as UserEntitlement;
  }
  override connect(signer: Signer): UserEntitlement__factory {
    return super.connect(signer) as UserEntitlement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserEntitlementInterface {
    return new utils.Interface(_abi) as UserEntitlementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserEntitlement {
    return new Contract(address, _abi, signerOrProvider) as UserEntitlement;
  }
}

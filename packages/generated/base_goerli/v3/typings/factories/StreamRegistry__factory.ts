/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  StreamRegistry,
  StreamRegistryInterface,
} from "../StreamRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "streamIdHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "newNodeId",
        type: "string",
      },
    ],
    name: "addNodeToStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "streamIdHash",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "newNodeIds",
        type: "string[]",
      },
    ],
    name: "addNodesToStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "streamIdHash",
        type: "string",
      },
    ],
    name: "getStreamNodes",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "streamIdHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "nodeId",
        type: "string",
      },
    ],
    name: "removeNodeFromStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "streamIdHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "nodeId",
        type: "string",
      },
    ],
    name: "valueExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b3c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634bb7481b1461005c5780637446921414610085578063a21c12521461009a578063d0481c6c146100ad578063ef7eb93e146100c0575b600080fd5b61006f61006a3660046105e0565b6100e3565b60405161007c9190610641565b60405180910390f35b6100986100933660046106bb565b6101da565b005b6100986100a83660046106bb565b610276565b6100986100bb36600461071f565b6103fb565b6100d36100ce3660046106bb565b61043c565b604051901515815260200161007c565b60606000826040516100f59190610806565b9081526020016040518091039020805480602002602001604051908101604052809291908181526020016000905b828210156101cf57838290600052602060002001805461014290610822565b80601f016020809104026020016040519081016040528092919081815260200182805461016e90610822565b80156101bb5780601f10610190576101008083540402835291602001916101bb565b820191906000526020600020905b81548152906001019060200180831161019e57829003601f168201915b505050505081526020019060010190610123565b505050509050919050565b6101e4828261043c565b156102365760405162461bcd60e51b815260206004820152601f60248201527f56616c756520616c72656164792065786973747320696e20746865207365740060448201526064015b60405180910390fd5b6000826040516102469190610806565b90815260405160209181900382019020805460018101825560009182529190200161027182826108aa565b505050565b610280828261043c565b6102cc5760405162461bcd60e51b815260206004820152601f60248201527f56616c756520646f6573206e6f7420657869737420696e207468652073657400604482015260640161022d565b600080836040516102dd9190610806565b9081526020016040518091039020905060005b81548110156103f55782805190602001208282815481106103135761031361096a565b9060005260206000200160405161032a9190610980565b6040518091039020036103e357805b825461034790600190610a0c565b8110156103af578261035a826001610a1f565b8154811061036a5761036a61096a565b906000526020600020018382815481106103865761038661096a565b90600052602060002001908161039c9190610a32565b50806103a781610b0d565b915050610339565b50818054806103c0576103c0610b26565b6001900381819060005260206000200160006103dc91906104d3565b90556103f5565b806103ed81610b0d565b9150506102f0565b50505050565b60005b81518110156102715761042a8383838151811061041d5761041d61096a565b60200260200101516101da565b8061043481610b0d565b9150506103fe565b60008060008460405161044f9190610806565b9081526020016040518091039020905060005b81548110156104c65783805190602001208282815481106104855761048561096a565b9060005260206000200160405161049c9190610980565b6040518091039020036104b4576001925050506104cd565b806104be81610b0d565b915050610462565b5060009150505b92915050565b5080546104df90610822565b6000825580601f106104ef575050565b601f01602090049060005260206000209081019061050d9190610510565b50565b5b808211156105255760008155600101610511565b5090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561056857610568610529565b604052919050565b600082601f83011261058157600080fd5b813567ffffffffffffffff81111561059b5761059b610529565b6105ae601f8201601f191660200161053f565b8181528460208386010111156105c357600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156105f257600080fd5b813567ffffffffffffffff81111561060957600080fd5b61061584828501610570565b949350505050565b60005b83811015610638578181015183820152602001610620565b50506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156106ae57878503603f190184528151805180875261068f818989018a850161061d565b601f01601f191695909501860194509285019290850190600101610668565b5092979650505050505050565b600080604083850312156106ce57600080fd5b823567ffffffffffffffff808211156106e657600080fd5b6106f286838701610570565b9350602085013591508082111561070857600080fd5b5061071585828601610570565b9150509250929050565b6000806040838503121561073257600080fd5b823567ffffffffffffffff8082111561074a57600080fd5b61075686838701610570565b935060209150818501358181111561076d57600080fd5b8501601f8101871361077e57600080fd5b80358281111561079057610790610529565b8060051b61079f85820161053f565b918252828101850191858101908a8411156107b957600080fd5b86850192505b838310156107f5578235868111156107d75760008081fd5b6107e58c8983890101610570565b83525091860191908601906107bf565b809750505050505050509250929050565b6000825161081881846020870161061d565b9190910192915050565b600181811c9082168061083657607f821691505b60208210810361085657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561027157600081815260208120601f850160051c810160208610156108835750805b601f850160051c820191505b818110156108a25782815560010161088f565b505050505050565b815167ffffffffffffffff8111156108c4576108c4610529565b6108d8816108d28454610822565b8461085c565b602080601f83116001811461090d57600084156108f55750858301515b600019600386901b1c1916600185901b1785556108a2565b600085815260208120601f198616915b8281101561093c5788860151825594840194600190910190840161091d565b508582101561095a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b600080835461098e81610822565b600182811680156109a657600181146109bb576109ea565b60ff19841687528215158302870194506109ea565b8760005260208060002060005b858110156109e15781548a8201529084019082016109c8565b50505082870194505b50929695505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104cd576104cd6109f6565b808201808211156104cd576104cd6109f6565b818103610a3d575050565b610a478254610822565b67ffffffffffffffff811115610a5f57610a5f610529565b610a6d816108d28454610822565b6000601f821160018114610aa15760008315610a895750848201545b600019600385901b1c1916600184901b178455610b06565b600085815260209020601f19841690600086815260209020845b83811015610adb5782860154825560019586019590910190602001610abb565b5085831015610af95781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b600060018201610b1f57610b1f6109f6565b5060010190565b634e487b7160e01b600052603160045260246000fd";

type StreamRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StreamRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StreamRegistry__factory extends ContractFactory {
  constructor(...args: StreamRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StreamRegistry> {
    return super.deploy(overrides || {}) as Promise<StreamRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StreamRegistry {
    return super.attach(address) as StreamRegistry;
  }
  override connect(signer: Signer): StreamRegistry__factory {
    return super.connect(signer) as StreamRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StreamRegistryInterface {
    return new utils.Interface(_abi) as StreamRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StreamRegistry {
    return new Contract(address, _abi, signerOrProvider) as StreamRegistry;
  }
}

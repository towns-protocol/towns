{
  "compiler": {
    "version": "0.8.20+commit.a1b79de6"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "selector",
            "type": "bytes4"
          }
        ],
        "name": "DiamondCut_FunctionAlreadyExists",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          }
        ],
        "name": "DiamondCut_FunctionDoesNotExist",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "selector",
            "type": "bytes4"
          }
        ],
        "name": "DiamondCut_FunctionFromSameFacetAlreadyExists",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "DiamondCut_ImmutableFacet",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "init",
            "type": "address"
          }
        ],
        "name": "DiamondCut_InvalidContract",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          }
        ],
        "name": "DiamondCut_InvalidFacet",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "DiamondCut_InvalidFacetCutAction",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "DiamondCut_InvalidFacetCutLength",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          },
          {
            "internalType": "bytes4",
            "name": "selector",
            "type": "bytes4"
          }
        ],
        "name": "DiamondCut_InvalidFacetRemoval",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          }
        ],
        "name": "DiamondCut_InvalidFacetSelectors",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "DiamondCut_InvalidSelector",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Ownable__NotOwner",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "components": [
              {
                "internalType": "address",
                "name": "facetAddress",
                "type": "address"
              },
              {
                "internalType": "enum IDiamond.FacetCutAction",
                "name": "action",
                "type": "uint8"
              },
              {
                "internalType": "bytes4[]",
                "name": "functionSelectors",
                "type": "bytes4[]"
              }
            ],
            "indexed": false,
            "internalType": "struct IDiamond.FacetCut[]",
            "name": "facetCuts",
            "type": "tuple[]"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "init",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bytes",
            "name": "initPayload",
            "type": "bytes"
          }
        ],
        "name": "DiamondCut",
        "type": "event"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "address",
                "name": "facetAddress",
                "type": "address"
              },
              {
                "internalType": "enum IDiamond.FacetCutAction",
                "name": "action",
                "type": "uint8"
              },
              {
                "internalType": "bytes4[]",
                "name": "functionSelectors",
                "type": "bytes4[]"
              }
            ],
            "internalType": "struct IDiamond.FacetCut[]",
            "name": "facetCuts",
            "type": "tuple[]"
          },
          {
            "internalType": "address",
            "name": "init",
            "type": "address"
          },
          {
            "internalType": "bytes",
            "name": "initPayload",
            "type": "bytes"
          }
        ],
        "name": "diamondCut",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "events": {
        "DiamondCut((address,uint8,bytes4[])[],address,bytes)": {
          "params": {
            "facetCuts": "Facet addresses and function selectors.",
            "init": "Address of contract or facet to execute initPayload.",
            "initPayload": "A function call, including function selector and arguments."
          }
        }
      },
      "kind": "dev",
      "methods": {
        "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
          "params": {
            "facetCuts": "Facet addresses and function selectors.",
            "init": "Address of contract or facet to execute initPayload.",
            "initPayload": "A function call, including function selector and arguments. Executed with delegatecall on init address."
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "events": {
        "DiamondCut((address,uint8,bytes4[])[],address,bytes)": {
          "notice": "Event emitted when facets are added/removed/replaced"
        }
      },
      "kind": "user",
      "methods": {
        "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
          "notice": "Add/replace/remove any number of functions and optionally execute a function with delegatecall"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "packages/contracts/src/diamond/facets/cut/DiamondCut.sol": "DiamondCut"
    },
    "evmVersion": "paris",
    "libraries": {},
    "metadata": {
      "appendCBOR": false,
      "bytecodeHash": "none"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@openzeppelin/=lib/openzeppelin-contracts/",
      ":@prb/test/=lib/prb-test/src/",
      ":@towns/=node_modules/@towns/",
      ":ERC721A/=lib/ERC721A/contracts/",
      ":contracts/=packages/contracts/",
      ":council/=lib/council/contracts/",
      ":ds-test/=lib/ds-test/src/",
      ":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
      ":forge-std/=lib/forge-std/src/",
      ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
      ":operator-filter-registry/=lib/operator-filter-registry/",
      ":prb-test/=lib/prb-test/src/"
    ]
  },
  "sources": {
    "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
      "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
      "license": "MIT",
      "urls": [
        "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
        "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
      "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
      "license": "MIT",
      "urls": [
        "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
        "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
      ]
    },
    "packages/contracts/src/diamond/IDiamond.sol": {
      "keccak256": "0x0c42a7a49bd97b80da729467d943c19a3f859068f38504ab6acb7e90fc88be64",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://c7417201588ddb0c7682a3d46e972a8fdb433f792484e042cd1ffe1268ddca2a",
        "dweb:/ipfs/QmRrpJX1PiGm214AhocX8C4fGQA9po9pUzrdHwDEJSWp9T"
      ]
    },
    "packages/contracts/src/diamond/facets/cut/DiamondCut.sol": {
      "keccak256": "0xf20dcad9c44dd05172617b1ca70b5c48528a5b75a950ce5579efebafc55034f9",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://39c93c9ab065ac67655a699f20db41d5934c93039929207539dc87dac1d8a7d6",
        "dweb:/ipfs/QmWzM3FDLF4u45hyME3sBHRzGHKoggo4RBqTaiQHVK8A3k"
      ]
    },
    "packages/contracts/src/diamond/facets/cut/DiamondCutBase.sol": {
      "keccak256": "0x7de925593fcf9cc691e173ba7cc6657734278805c42a38b03cab113b7265b425",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://2ca0e8cd7cb727ebf50c835b83d215fc11fbd30878ec1cf0748b4bd59e990011",
        "dweb:/ipfs/QmeZJx3yeKDnxVmVhcvVS59FQWDyvNev6gMhvz3w1ytmeF"
      ]
    },
    "packages/contracts/src/diamond/facets/cut/DiamondCutService.sol": {
      "keccak256": "0x7b29f14ee2aef63e35bee47cf99f81caff05f9bf0d20a05c9e8a18ce66c7faf1",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://fddf8fa31f3f3365f62184ace7e7ef4701aa7c0ae330688b676743f48a1eedf8",
        "dweb:/ipfs/QmXHcAjrKsuiswyDbrGMDSLd69bgMLeB6iFFu5uDhHMuPR"
      ]
    },
    "packages/contracts/src/diamond/facets/cut/DiamondCutStorage.sol": {
      "keccak256": "0x3cf36b6969ab8d7e6d5e5c1a8f3c11e11e816e33c613d7348688905978696038",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://721c6299b843700935a816ffb8683e4c229a031fec4f2080d8329088f16f6b19",
        "dweb:/ipfs/QmU24KkiiZEk9o6WaSABLcrvrSxS96yZyHjGpwWr1jy5bU"
      ]
    },
    "packages/contracts/src/diamond/facets/cut/IDiamondCut.sol": {
      "keccak256": "0xa021842fac782d0a630ce55190bd623a3c1c590ec7495530539505e390002717",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://6273de44f89673c53a1c8a7bb97aafb0bb68a3b2752c973e1511fe937f0a32b6",
        "dweb:/ipfs/QmPfJx17gye1NLHgJnKBKN5LEnZs7mhfBkyQ9H8xayfvcw"
      ]
    },
    "packages/contracts/src/diamond/facets/ownable/OwnableService.sol": {
      "keccak256": "0xc96ea2c75519d986a75fb86a1c3ec08794fee823c5303da8c03869bfb505185d",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://b19857cd8fe0c892052300a78ba670ae98048a42fc69f0d2da946c03dc671900",
        "dweb:/ipfs/QmVecFwkx6zhcn6MiCFoisMVWs6Y6t94n4H4Xwf5tSgdto"
      ]
    },
    "packages/contracts/src/diamond/facets/ownable/OwnableStorage.sol": {
      "keccak256": "0xf37c305730d5f4c38242252303efcf273a4e81554637e2346db593e45d6cd551",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://b78ac1b163b9d8a9f39d47f86f3ec562398038c1ea217bdece38dbcd90b07a22",
        "dweb:/ipfs/QmQB25TBF1VSNtpfHBzfs8FLANeGoGfj7Zz5hQmzaE7zFH"
      ]
    }
  },
  "version": 1
}
{
  "compiler": {
    "version": "0.8.20+commit.a1b79de6"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "callerAddress",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "transactionId",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "address[]",
            "name": "selectedNodes",
            "type": "address[]"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "contractAddress",
            "type": "address"
          }
        ],
        "name": "EntitlementCheckRequested",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "transactionId",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "enum IEntitlementCheckerEvents.NodeVoteStatus",
            "name": "result",
            "type": "uint8"
          }
        ],
        "name": "EntitlementCheckResultPosted",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "name": "log",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "log_address",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256[]",
            "name": "val",
            "type": "uint256[]"
          }
        ],
        "name": "log_array",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "int256[]",
            "name": "val",
            "type": "int256[]"
          }
        ],
        "name": "log_array",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address[]",
            "name": "val",
            "type": "address[]"
          }
        ],
        "name": "log_array",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "bytes",
            "name": "",
            "type": "bytes"
          }
        ],
        "name": "log_bytes",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "name": "log_bytes32",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "int256",
            "name": "",
            "type": "int256"
          }
        ],
        "name": "log_int",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "val",
            "type": "address"
          }
        ],
        "name": "log_named_address",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "uint256[]",
            "name": "val",
            "type": "uint256[]"
          }
        ],
        "name": "log_named_array",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "int256[]",
            "name": "val",
            "type": "int256[]"
          }
        ],
        "name": "log_named_array",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address[]",
            "name": "val",
            "type": "address[]"
          }
        ],
        "name": "log_named_array",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "bytes",
            "name": "val",
            "type": "bytes"
          }
        ],
        "name": "log_named_bytes",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "val",
            "type": "bytes32"
          }
        ],
        "name": "log_named_bytes32",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "int256",
            "name": "val",
            "type": "int256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "decimals",
            "type": "uint256"
          }
        ],
        "name": "log_named_decimal_int",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "val",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "decimals",
            "type": "uint256"
          }
        ],
        "name": "log_named_decimal_uint",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "int256",
            "name": "val",
            "type": "int256"
          }
        ],
        "name": "log_named_int",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "val",
            "type": "string"
          }
        ],
        "name": "log_named_string",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "val",
            "type": "uint256"
          }
        ],
        "name": "log_named_uint",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "name": "log_string",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "log_uint",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "bytes",
            "name": "",
            "type": "bytes"
          }
        ],
        "name": "logs",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "IS_TEST",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "checker",
        "outputs": [
          {
            "internalType": "contract IEntitlementChecker",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "excludeArtifacts",
        "outputs": [
          {
            "internalType": "string[]",
            "name": "excludedArtifacts_",
            "type": "string[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "excludeContracts",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "excludedContracts_",
            "type": "address[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "excludeSenders",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "excludedSenders_",
            "type": "address[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "failed",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "gated",
        "outputs": [
          {
            "internalType": "contract IEntitlementGated",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "nodeKeys",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "setUp",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "targetArtifactSelectors",
        "outputs": [
          {
            "components": [
              {
                "internalType": "address",
                "name": "addr",
                "type": "address"
              },
              {
                "internalType": "bytes4[]",
                "name": "selectors",
                "type": "bytes4[]"
              }
            ],
            "internalType": "struct StdInvariant.FuzzSelector[]",
            "name": "targetedArtifactSelectors_",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "targetArtifacts",
        "outputs": [
          {
            "internalType": "string[]",
            "name": "targetedArtifacts_",
            "type": "string[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "targetContracts",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "targetedContracts_",
            "type": "address[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "targetSelectors",
        "outputs": [
          {
            "components": [
              {
                "internalType": "address",
                "name": "addr",
                "type": "address"
              },
              {
                "internalType": "bytes4[]",
                "name": "selectors",
                "type": "bytes4[]"
              }
            ],
            "internalType": "struct StdInvariant.FuzzSelector[]",
            "name": "targetedSelectors_",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "targetSenders",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "targetedSenders_",
            "type": "address[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "testGetTooManyNodes",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "testPostDuplicateEntitlementResult",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "testPostEntitlementResult",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "testPostEntitlementResultFromNonElectedNode",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "testPostInvalidEntitlementResult",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "testPostNonExistantEntitlementResult",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "testRegisterAndUnregister",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "testRequestEntitlementCheckEmits",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "testRequestEntitlementCheckFailsOnDoubleCall",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "testRequestGetRandomNodes",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/test/crosschain/EntitlementChecker.t.sol": "EntitlementCheckerTest"
    },
    "evmVersion": "paris",
    "libraries": {},
    "metadata": {
      "appendCBOR": false,
      "bytecodeHash": "none"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@openzeppelin/=lib/openzeppelin-contracts/",
      ":@prb/test/=lib/prb-test/src/",
      ":ERC721A/=lib/ERC721A/contracts/",
      ":council/=lib/council/contracts/",
      ":ds-test/=lib/ds-test/src/",
      ":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
      ":forge-std/=lib/forge-std/src/",
      ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
      ":operator-filter-registry/=lib/operator-filter-registry/",
      ":prb-test/=lib/prb-test/src/"
    ]
  },
  "sources": {
    "contracts/src/crosschain/EntitlementChecker.sol": {
      "keccak256": "0x28c2b265d3e69376f7f97cf601c0899325d5baba27dbc8a067e3b4fda6ba87b6",
      "license": "MIT",
      "urls": [
        "bzz-raw://ed82e8e2caf2ac39bfe8d5030efb0425702a85ef59a7470f912fe99798694879",
        "dweb:/ipfs/QmXXoAYdQXGCMcZdUDKmNeH5xhNWZ8b1NNWuiHwEXbwmEh"
      ]
    },
    "contracts/src/crosschain/EntitlementGated.sol": {
      "keccak256": "0x7a537f1134cf87f78ba74adf95687a7d56200fb1cbc7a8bcbd5e500e1634d7bc",
      "license": "MIT",
      "urls": [
        "bzz-raw://4f8a67bba65b49abb15f307f771782a8a0d90e2526a5319a8d7bc19306801a65",
        "dweb:/ipfs/QmcziosZLLMotBuFi5cFP2KM6DwCYiYiHpimLNfXfaPfqf"
      ]
    },
    "contracts/src/crosschain/IEntitlementChecker.sol": {
      "keccak256": "0x94de9de695e3d670312dfba784bd2cb8b61610aec17891074fe530bbb5e459c0",
      "license": "MIT",
      "urls": [
        "bzz-raw://d62403df2139ddd4e26bb4987d02db0c4b0ffff06aa76508c88fab69c7f570c2",
        "dweb:/ipfs/QmatDTSs82dr6LFifooZqe91YiEpFf2on19h6QNza1zJwg"
      ]
    },
    "contracts/src/crosschain/IEntitlementCheckerEvents.sol": {
      "keccak256": "0xd92c50c58665221673b0c680b1b1ab35ed4d217de192b190f5f4388defcec1e8",
      "license": "MIT",
      "urls": [
        "bzz-raw://7ca7990018f8fec37c7cf5139ef94c427c2dd3bb873861658c664d62f85e80f2",
        "dweb:/ipfs/QmWTNTbjD5PWEVva82NqCUqrQWWem9y9F6wXEdVz1dc3hJ"
      ]
    },
    "contracts/src/crosschain/IEntitlementGated.sol": {
      "keccak256": "0xcac848143574a746bd1468827ec3fe216d9e29daf29c737281e5659a414c8b6e",
      "license": "MIT",
      "urls": [
        "bzz-raw://966f6a08ec37834a40c658238460da6d89102d22ef464f30733d3f9a938a8b26",
        "dweb:/ipfs/QmVk8eYbZWZcAimbKDxAVVVmMxDeMWEhazswWHLpsRDDbV"
      ]
    },
    "contracts/src/crosschain/example/EntitlementGatedExample.sol": {
      "keccak256": "0x4645b678b61b5cae3479c638971439181f8cf3faae1700c97aa0ca9a7542c394",
      "license": "MIT",
      "urls": [
        "bzz-raw://df71bfce473d645bacdd5fa92c40bbe5ea56a1e498d6f2a46e36cf4f3379d995",
        "dweb:/ipfs/QmVZBbbi3EuRd2ckav2BCUqmdxE8PqH9vmwwha3xiqCjPq"
      ]
    },
    "contracts/src/utils/Bytes32ToHexString.sol": {
      "keccak256": "0xe86c086b5e433b519b54b1a13042a5ab079934db48146d9ce90ee624f6a30a45",
      "license": "MIT",
      "urls": [
        "bzz-raw://46034bc59a2bb0c3890f4bf0fc7d12652239ea87445cabfd32969abbb9417575",
        "dweb:/ipfs/QmQjKfCvBStVFg3NqK4WZtp8ENLzN2SGHgusQbSqyJAbQU"
      ]
    },
    "contracts/test/crosschain/EntitlementChecker.t.sol": {
      "keccak256": "0xb9534caa5b3349071c985b748e22052cdba2bef97103fd0d7ebb26f64fe5a587",
      "license": "MIT",
      "urls": [
        "bzz-raw://deae4c1505f19fe0b98dfba71e7a3307e0d526ef7e6a9eb7790c87ef8257cdee",
        "dweb:/ipfs/QmUrJZUE5RgmUWDd18i3BnQAh8jAngCuTx6LCTm28gqDHL"
      ]
    },
    "lib/ds-test/src/test.sol": {
      "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
      "license": "GPL-3.0-or-later",
      "urls": [
        "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
        "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
      ]
    },
    "lib/forge-std/src/Base.sol": {
      "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
      "license": "MIT",
      "urls": [
        "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
        "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
      ]
    },
    "lib/forge-std/src/StdAssertions.sol": {
      "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
      "license": "MIT",
      "urls": [
        "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
        "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
      ]
    },
    "lib/forge-std/src/StdChains.sol": {
      "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
      "license": "MIT",
      "urls": [
        "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
        "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
      ]
    },
    "lib/forge-std/src/StdCheats.sol": {
      "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
      "license": "MIT",
      "urls": [
        "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
        "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
      ]
    },
    "lib/forge-std/src/StdError.sol": {
      "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
      "license": "MIT",
      "urls": [
        "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
        "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
      ]
    },
    "lib/forge-std/src/StdInvariant.sol": {
      "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
      "license": "MIT",
      "urls": [
        "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
        "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
      ]
    },
    "lib/forge-std/src/StdJson.sol": {
      "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
      "license": "MIT",
      "urls": [
        "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
        "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
      ]
    },
    "lib/forge-std/src/StdMath.sol": {
      "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
      "license": "MIT",
      "urls": [
        "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
        "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
      ]
    },
    "lib/forge-std/src/StdStorage.sol": {
      "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
      "license": "MIT",
      "urls": [
        "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
        "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
      ]
    },
    "lib/forge-std/src/StdStyle.sol": {
      "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
      "license": "MIT",
      "urls": [
        "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
        "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
      ]
    },
    "lib/forge-std/src/StdUtils.sol": {
      "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
      "license": "MIT",
      "urls": [
        "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
        "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
      ]
    },
    "lib/forge-std/src/Test.sol": {
      "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
      "license": "MIT",
      "urls": [
        "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
        "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
      ]
    },
    "lib/forge-std/src/Vm.sol": {
      "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
      "license": "MIT",
      "urls": [
        "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
        "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
      ]
    },
    "lib/forge-std/src/console.sol": {
      "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
      "license": "MIT",
      "urls": [
        "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
        "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
      ]
    },
    "lib/forge-std/src/console2.sol": {
      "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
      "license": "MIT",
      "urls": [
        "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
        "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
      ]
    },
    "lib/forge-std/src/interfaces/IMulticall3.sol": {
      "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
      "license": "MIT",
      "urls": [
        "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
        "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
      "license": "MIT",
      "urls": [
        "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
        "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
      "license": "MIT",
      "urls": [
        "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
        "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
      ]
    }
  },
  "version": 1
}
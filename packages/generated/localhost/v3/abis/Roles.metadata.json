{
  "compiler": {
    "version": "0.8.20+commit.a1b79de6"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "name": "ChannelService__ChannelDisabled",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "ChannelService__ChannelDoesNotExist",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "ChannelService__RoleDoesNotExist",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Entitlement__InvalidValue",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Entitlement__NotAllowed",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Entitlement__ValueAlreadyExists",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "EntitlementsService__EntitlementDoesNotExist",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "EntitlementsService__InvalidEntitlementAddress",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "EntitlementsService__InvalidEntitlementInterface",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Ownable__NotOwner",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Ownable__ZeroAddress",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Pausable__NotPaused",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Pausable__Paused",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Roles__EntitlementAlreadyExists",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Roles__EntitlementDoesNotExist",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Roles__InvalidEntitlementAddress",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Roles__InvalidPermission",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Roles__PermissionAlreadyExists",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Roles__PermissionDoesNotExist",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Roles__RoleDoesNotExist",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Validator__InvalidByteLength",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Validator__InvalidStringLength",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Paused",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "creator",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "RoleCreated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "remover",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "RoleRemoved",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "updater",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "RoleUpdated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Unpaused",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "string[]",
            "name": "permissions",
            "type": "string[]"
          }
        ],
        "name": "addPermissionsToRole",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "module",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "internalType": "struct IRolesBase.CreateEntitlement",
            "name": "entitlement",
            "type": "tuple"
          }
        ],
        "name": "addRoleToEntitlement",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "roleName",
            "type": "string"
          },
          {
            "internalType": "string[]",
            "name": "permissions",
            "type": "string[]"
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "module",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "internalType": "struct IRolesBase.CreateEntitlement[]",
            "name": "entitlements",
            "type": "tuple[]"
          }
        ],
        "name": "createRole",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "getPermissionsByRoleId",
        "outputs": [
          {
            "internalType": "string[]",
            "name": "permissions",
            "type": "string[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "getRoleById",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              },
              {
                "internalType": "bool",
                "name": "disabled",
                "type": "bool"
              },
              {
                "internalType": "string[]",
                "name": "permissions",
                "type": "string[]"
              },
              {
                "internalType": "address[]",
                "name": "entitlements",
                "type": "address[]"
              }
            ],
            "internalType": "struct IRolesBase.Role",
            "name": "",
            "type": "tuple"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getRoles",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "id",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              },
              {
                "internalType": "bool",
                "name": "disabled",
                "type": "bool"
              },
              {
                "internalType": "string[]",
                "name": "permissions",
                "type": "string[]"
              },
              {
                "internalType": "address[]",
                "name": "entitlements",
                "type": "address[]"
              }
            ],
            "internalType": "struct IRolesBase.Role[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "string[]",
            "name": "permissions",
            "type": "string[]"
          }
        ],
        "name": "removePermissionsFromRole",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "removeRole",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "module",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "internalType": "struct IRolesBase.CreateEntitlement",
            "name": "entitlement",
            "type": "tuple"
          }
        ],
        "name": "removeRoleFromEntitlement",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "roleName",
            "type": "string"
          },
          {
            "internalType": "string[]",
            "name": "permissions",
            "type": "string[]"
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "module",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "internalType": "struct IRolesBase.CreateEntitlement[]",
            "name": "entitlements",
            "type": "tuple[]"
          }
        ],
        "name": "updateRole",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "events": {
        "OwnershipTransferred(address,address)": {
          "details": "This emits when ownership of a contract changes."
        }
      },
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/src/towns/facets/roles/Roles.sol": "Roles"
    },
    "evmVersion": "paris",
    "libraries": {},
    "metadata": {
      "appendCBOR": false,
      "bytecodeHash": "none"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@openzeppelin/=lib/openzeppelin-contracts/",
      ":@prb/test/=lib/prb-test/src/",
      ":ERC721A/=lib/ERC721A/contracts/",
      ":council/=lib/council/contracts/",
      ":ds-test/=lib/ds-test/src/",
      ":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
      ":forge-std/=lib/forge-std/src/",
      ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
      ":operator-filter-registry/=lib/operator-filter-registry/",
      ":prb-test/=lib/prb-test/src/"
    ]
  },
  "sources": {
    "contracts/src/diamond/facets/introspection/IERC165.sol": {
      "keccak256": "0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2",
        "dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV"
      ]
    },
    "contracts/src/diamond/facets/ownable/IERC173.sol": {
      "keccak256": "0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620",
        "dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD"
      ]
    },
    "contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol": {
      "keccak256": "0x61304bf241c1d14017416d3cc1742960f6157411d90a1464b8bde23bd322da89",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://ac41ce2830e16be806340ea576a1885db9ecd02cc4f5002bfdeb4dfd4ac0115e",
        "dweb:/ipfs/QmXqE8xZjwkFA2YgfV3eExFVEMqHizVSBTxyNDhM9WVrEZ"
      ]
    },
    "contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol": {
      "keccak256": "0xea4323b3cc8794cb9008bf79180555b0dc248c52e0b030024d6b4ac9fdd6af0b",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://dce6d6130309fce1126b8a4b493cc14666c59d1f7685107f07fb685d2cf31773",
        "dweb:/ipfs/QmVrC5tmJWZYgZ7ruKW6uDU8QDeZgbh3QcZD9aWHrX2Duh"
      ]
    },
    "contracts/src/diamond/facets/pausable/IPausable.sol": {
      "keccak256": "0x51faf4ca7fa88bc4bf2699bab34692f0a43a316d0b3f95a8d7271935ef243a78",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://e4ff1050ba7ec1bc7de90f562d8ccf7875f4faea0f12ca5101f22619f2dd6de2",
        "dweb:/ipfs/QmeczRzWavYXmirfEbwGg5uLeLdXaENtFAzmxxFsggUHsW"
      ]
    },
    "contracts/src/diamond/facets/pausable/PausableBase.sol": {
      "keccak256": "0xfdeeba59a9f9b6a31203aa45f9244767b5d790dbcf36c920cc0ec5471505e47f",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://72d6eb74b90e658834c9b9f6a9e391722c3eb3992aef2d4694c1a91473b291a1",
        "dweb:/ipfs/QmXVV8mTt8LmFDhzn3Lm3BMLXNdJTzUMbMrpBjnUaMzm5F"
      ]
    },
    "contracts/src/diamond/facets/pausable/PausableStorage.sol": {
      "keccak256": "0x7aaa1baa71b080cf67876cb383b505be55ff2661b4bafc7f01428d509c201296",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://68231325f3a66baf6b96cb34d1432a675ff1d36fc15500cec97de12fc823bcd1",
        "dweb:/ipfs/QmVQb23iSSbYQJqk3EB9vT5fjSp6J8Uj2AwgEaHMSkF6wa"
      ]
    },
    "contracts/src/towns/entitlements/IEntitlement.sol": {
      "keccak256": "0x3c3733f40dcf373c19ea564ec9cbf49b33e96c27a80012e9be6f8d6d24e76c46",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://ba0686e15bc8bfac66d59f62e59832eaf6d4c1b636080f9b2367386d5dc72ecb",
        "dweb:/ipfs/QmemW17L8TkGWG9RHKWTpjq9WBtYX3dmZsiTtzDmYNNXwE"
      ]
    },
    "contracts/src/towns/facets/Entitled.sol": {
      "keccak256": "0x9a4a44f9b7829dda47a0beb43076f2382bda72333571001eb8a6fb69d723b2c2",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://2d9ae9e5668e5f1efa28dff702ee50eec69df427c6eaee3321859cbad206bc82",
        "dweb:/ipfs/QmaMQsyVzREskdSfarp6eVWPmttJY2zTh2Xr37zCfwX6QP"
      ]
    },
    "contracts/src/towns/facets/Permissions.sol": {
      "keccak256": "0x88d13ea9a9d2243a3950b4694a5030db6f1546c6c0b26d90c3cbc9af929f678d",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://6e07ce7de38b1fd52a4db1ed51bc298bc618f559e067b5060a60ad7bdf3a9b1d",
        "dweb:/ipfs/QmS4zCFdVJwj26ef8rtU8QejEVoi5XfCrDZjxq1N2AhGaK"
      ]
    },
    "contracts/src/towns/facets/channels/ChannelService.sol": {
      "keccak256": "0xf6385db2da94e6650ef50c4286d2dca3aec269d6dec2a9979eea6c5b481431af",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://d52a6973b5309af1f93bd986fc73ca411f14bb30666e628830c4534b4d7be86b",
        "dweb:/ipfs/QmWB3drETz9dg4n7Yijhc9KVLWTCy339Df59jcaHNN3F8H"
      ]
    },
    "contracts/src/towns/facets/channels/ChannelStorage.sol": {
      "keccak256": "0x6a77c72a6390013ccdf52e7174c397bdfd67d7c1ed48ee0ce660c54f58a86fc3",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://8507829be0ce8f69985f40fbd7ff53e287e150d792f706c265a553085040ddcd",
        "dweb:/ipfs/QmbZfwRDkLX3fypMYKrrE1wsxKTqVh6oyZG2Yd8ZijiE8f"
      ]
    },
    "contracts/src/towns/facets/entitlements/EntitlementsService.sol": {
      "keccak256": "0x312b81aee24b5974d794ee9e60e1accb9b53e1f1ab7a931354523a388d9fd449",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://b43ebad51a275a24244bcec1e9ab4c452d0ff1694802e0f8abe62b9133642037",
        "dweb:/ipfs/QmWJsMsoQfGKrzSUN3AP1eGGr9v5by2KE4EpoYMDRS4V89"
      ]
    },
    "contracts/src/towns/facets/entitlements/EntitlementsStorage.sol": {
      "keccak256": "0x6a8cd3a19ff1c836849d48be28f94b08f2864b4f26823a3af3e5741ff106a2a1",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://3950f0448e01b6dbe94b4e3ea84ff8c5bc5d3da4966c1e848da5d40738b0a647",
        "dweb:/ipfs/QmbTtp8PdYYZbsuuseRVJeUVQHUKJwfwDXWqtFQRDz9yDp"
      ]
    },
    "contracts/src/towns/facets/roles/IRoles.sol": {
      "keccak256": "0x630c61d3be65a9e5b0d7318d58d733806e41f101050fceb9eb6065f32b2addc3",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://a23a5ce51675208f8184df63a69347e45fe5a70cc7b708ffff0527eebfdd14f9",
        "dweb:/ipfs/QmYc28XoZ6L1cdJutzo3qcoUvsn3Vq1Pfz56V1AyEZftri"
      ]
    },
    "contracts/src/towns/facets/roles/Roles.sol": {
      "keccak256": "0x674d4681f6e87d887172635307e0c83c085c9b757565a9ae5aad09c32b663463",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://b27fc0c1a4f4869ebe28459dc05ff92a622bb46b5597e9ec8c94835ff9c1b7ef",
        "dweb:/ipfs/QmQpf4HGG6itRpDppJHtux81Mi357csuh5NTjP2cLCQEwE"
      ]
    },
    "contracts/src/towns/facets/roles/RolesBase.sol": {
      "keccak256": "0x9925b6d3e39286300fc743c7596209681627ac1c371798e108051773426c7a71",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://d0d7dddace0aff2071e9f480ae9527d73fba8b7b9961d9eb207528a7f4cba7bb",
        "dweb:/ipfs/QmPqJuR8cmn6ZsJyT9rkhwwb2RYcUoiN5nxokiUVcjVJKh"
      ]
    },
    "contracts/src/towns/facets/roles/RolesStorage.sol": {
      "keccak256": "0x60fa9d7e4bad4a6e62101c9ded37978d045b596d7f287ce8456542a8645d6b48",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://b412e190e309d5f5604d84b565f3bfe90011525f912ca17ff30b639d34f6d378",
        "dweb:/ipfs/QmcULfFuig7HD3MYHR3QkGMDtBCCzCq2ZBemfcA8iqceEq"
      ]
    },
    "contracts/src/utils/StringSet.sol": {
      "keccak256": "0x47235bcc7b60e9d244156cdd2d0defe4c1a8eb6d078f4426b4fb8c094dd41781",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://07d0eee74639221183100bb2aedaea7d6e8b0ebe31608e6cb86b135a89240c66",
        "dweb:/ipfs/QmbSLb1uhWVz7bVrBJTiTk9dWjD7xBmUiRJECdnaGWVVcR"
      ]
    },
    "contracts/src/utils/Validator.sol": {
      "keccak256": "0x51ec816c6e6dda4973556e0446a1dfcec872e73352838315a1140683c4cb4001",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://b747e47602719190bd080f69913233de5a39a2b6afa4c7c9ebd591e93282de93",
        "dweb:/ipfs/QmTc74S4UBYrmHEDc7Z17ohc2MC6hfxfRWSqk1qkE1S3b1"
      ]
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
      "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
      "license": "MIT",
      "urls": [
        "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
        "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
      "license": "MIT",
      "urls": [
        "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
        "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
      "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
      "license": "MIT",
      "urls": [
        "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
        "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
      ]
    }
  },
  "version": 1
}
{
  "abi": [
    {
      "inputs": [],
      "name": "Entitlement__InvalidValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Entitlement__NotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Entitlement__ValueAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__EntitlementAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__EntitlementDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__ImmutableEntitlement",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__InvalidEntitlementAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__InvalidEntitlementInterface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Pausable__NotPaused",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Pausable__Paused",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entitlement",
          "type": "address"
        }
      ],
      "name": "addEntitlementModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "entitlements",
          "type": "address[]"
        }
      ],
      "name": "addImmutableEntitlements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entitlement",
          "type": "address"
        }
      ],
      "name": "getEntitlement",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "moduleType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isImmutable",
              "type": "bool"
            }
          ],
          "internalType": "struct IEntitlementsManagerBase.Entitlement",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntitlements",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "moduleType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isImmutable",
              "type": "bool"
            }
          ],
          "internalType": "struct IEntitlementsManagerBase.Entitlement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "channelId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "permission",
          "type": "string"
        }
      ],
      "name": "isEntitledToChannel",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "permission",
          "type": "string"
        }
      ],
      "name": "isEntitledToTown",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entitlement",
          "type": "address"
        }
      ],
      "name": "removeEntitlementModule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611208806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638bfc820f1161005b5780638bfc820f146100d8578063be24138d146100eb578063cea632bc146100fe578063fba4ff9d1461011157600080fd5b8063070b9c3f14610082578063487dc38c146100975780634ff8eb71146100b5575b600080fd5b610095610090366004610cea565b610131565b005b61009f61017d565b6040516100ac9190610db0565b60405180910390f35b6100c86100c3366004610e5b565b61018c565b60405190151581526020016100ac565b6100956100e6366004610ef7565b6101a3565b6100956100f9366004610cea565b6101e7565b6100c861010c366004610fa9565b61022b565b61012461011f366004610cea565b61027b565b6040516100ac919061102e565b610139610292565b6001600160a01b0316336001600160a01b031614610171576040516365f4906560e01b81523360048201526024015b60405180910390fd5b61017a8161035c565b50565b6060610187610370565b905090565b6000610199848484610475565b90505b9392505050565b6101ab610292565b6001600160a01b0316336001600160a01b0316146101de576040516365f4906560e01b8152336004820152602401610168565b61017a816104bb565b6101ef610292565b6001600160a01b0316336001600160a01b031614610222576040516365f4906560e01b8152336004820152602401610168565b61017a81610523565b600061027186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250879150869050610535565b9695505050505050565b610283610ca2565b61028c82610558565b92915050565b6040805180820182527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d0546001600160a01b03168082527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d154602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190611041565b91505090565b610365816105aa565b61017a816000610673565b6060600061037c610721565b9050805167ffffffffffffffff81111561039857610398610eb0565b6040519080825280602002602001820160405280156103d157816020015b6103be610ca2565b8152602001906001900390816103b65790505b50915060005b8151811015610470576000806000806104088686815181106103fb576103fb61105e565b602002602001015161074c565b93509350935093506040518060800160405280858152602001846001600160a01b0316815260200183815260200182151581525087868151811061044e5761044e61105e565b60200260200101819052505050505080806104689061108a565b9150506103d7565b505090565b60006101996040518060200160405280600081525085858560405160200161049e9291906110a3565b6040516020818303038152906040526104b6906110b3565b6108b3565b60005b815181101561051f576104e98282815181106104dc576104dc61105e565b60200260200101516105aa565b61050d8282815181106104fe576104fe61105e565b60200260200101516001610673565b806105178161108a565b9150506104be565b5050565b61052c816105aa565b61017a816109ca565b600061054f8585858560405160200161049e9291906110a3565b95945050505050565b610560610ca2565b610569826105aa565b6000806000806105788661074c565b604080516080810182529485526001600160a01b03909316602085015291830152151560608201529695505050505050565b6001600160a01b0381166105d157604051630706e15760e51b815260040160405180910390fd5b6040516301ffc9a760e01b815263df76a3d360e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa925050508015610638575060408051601f3d908101601f19168201909252610635918101906110da565b60015b6106555760405163f58a5f2760e01b815260040160405180910390fd5b8061051f5760405163f58a5f2760e01b815260040160405180910390fd5b6001600160a01b0382811660009081526000805160206111e88339815191526020819052604090912054909116156106be57604051632406020960e01b815260040160405180910390fd5b6106cb6001820184610a8d565b506040805180820182526001600160a01b03948516808252931515602080830191825260009586529390935292209151825491511515600160a01b026001600160a81b0319909216931692909217919091179055565b60606101877f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aa2565b606060008181806000805160206111e88339815191526001600160a01b038781166000908152602083905260409020549192501661079d5760405163017ab33760e71b815260040160405180910390fd5b856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261080391908101906110fc565b6001600160a01b03808816600081815260208590526040808220548151636465e69f60e01b81529151941693636465e69f926004808401939192918290030181865afa158015610857573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261087f91908101906110fc565b6001600160a01b03989098166000908152602093909352604090922054909791969550600160a01b900460ff169350915050565b60006108bd610292565b6001600160a01b0316836001600160a01b0316036108dd5750600161019c565b6000805160206111e883398151915260006109177f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aaf565b905060005b818110156109c0576109316001840182610ab9565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b815260040161095f93929190611190565b602060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a091906110da565b156109ae57600193506109c0565b806109b88161108a565b91505061091c565b5050509392505050565b6001600160a01b0381811660009081526000805160206111e88339815191526020819052604090912054909116610a145760405163017ab33760e71b815260040160405180910390fd5b6001600160a01b038216600090815260208290526040902054600160a01b900460ff1615610a5557604051636045809760e11b815260040160405180910390fd5b610a626001820183610ac5565b506001600160a01b0390911660009081526020919091526040902080546001600160a81b0319169055565b600061019c836001600160a01b038416610ada565b6060600061019c83610b29565b600061028c825490565b600061019c8383610b85565b600061019c836001600160a01b038416610baf565b6000818152600183016020526040812054610b215750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561028c565b50600061028c565b606081600001805480602002602001604051908101604052809291908181526020018280548015610b7957602002820191906000526020600020905b815481526020019060010190808311610b65575b50505050509050919050565b6000826000018281548110610b9c57610b9c61105e565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610c98576000610bd36001836111be565b8554909150600090610be7906001906111be565b9050818114610c4c576000866000018281548110610c0757610c0761105e565b9060005260206000200154905080876000018481548110610c2a57610c2a61105e565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610c5d57610c5d6111d1565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061028c565b600091505061028c565b60405180608001604052806060815260200160006001600160a01b03168152602001606081526020016000151581525090565b6001600160a01b038116811461017a57600080fd5b600060208284031215610cfc57600080fd5b813561019c81610cd5565b60005b83811015610d22578181015183820152602001610d0a565b50506000910152565b60008151808452610d43816020860160208601610d07565b601f01601f19169290920160200192915050565b6000815160808452610d6c6080850182610d2b565b905060018060a01b03602084015116602085015260408301518482036040860152610d978282610d2b565b9150506060830151151560608501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e0557603f19888603018452610df3858351610d57565b94509285019290850190600101610dd7565b5092979650505050505050565b60008083601f840112610e2457600080fd5b50813567ffffffffffffffff811115610e3c57600080fd5b602083019150836020828501011115610e5457600080fd5b9250929050565b600080600060408486031215610e7057600080fd5b8335610e7b81610cd5565b9250602084013567ffffffffffffffff811115610e9757600080fd5b610ea386828701610e12565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610eef57610eef610eb0565b604052919050565b60006020808385031215610f0a57600080fd5b823567ffffffffffffffff80821115610f2257600080fd5b818501915085601f830112610f3657600080fd5b813581811115610f4857610f48610eb0565b8060051b9150610f59848301610ec6565b8181529183018401918481019088841115610f7357600080fd5b938501935b83851015610f9d5784359250610f8d83610cd5565b8282529385019390850190610f78565b98975050505050505050565b600080600080600060608688031215610fc157600080fd5b853567ffffffffffffffff80821115610fd957600080fd5b610fe589838a01610e12565b909750955060208801359150610ffa82610cd5565b9093506040870135908082111561101057600080fd5b5061101d88828901610e12565b969995985093965092949392505050565b60208152600061019c6020830184610d57565b60006020828403121561105357600080fd5b815161019c81610cd5565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161109c5761109c611074565b5060010190565b8183823760009101908152919050565b805160208083015191908110156110d4576000198160200360031b1b821691505b50919050565b6000602082840312156110ec57600080fd5b8151801515811461019c57600080fd5b60006020828403121561110e57600080fd5b815167ffffffffffffffff8082111561112657600080fd5b818401915084601f83011261113a57600080fd5b81518181111561114c5761114c610eb0565b61115f601f8201601f1916602001610ec6565b915080825285602082850101111561117657600080fd5b611187816020840160208601610d07565b50949350505050565b6060815260006111a36060830186610d2b565b6001600160a01b039490941660208301525060400152919050565b8181038181111561028c5761028c611074565b634e487b7160e01b600052603160045260246000fdfe2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8558",
    "sourceMap": "286:1124:163:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638bfc820f1161005b5780638bfc820f146100d8578063be24138d146100eb578063cea632bc146100fe578063fba4ff9d1461011157600080fd5b8063070b9c3f14610082578063487dc38c146100975780634ff8eb71146100b5575b600080fd5b610095610090366004610cea565b610131565b005b61009f61017d565b6040516100ac9190610db0565b60405180910390f35b6100c86100c3366004610e5b565b61018c565b60405190151581526020016100ac565b6100956100e6366004610ef7565b6101a3565b6100956100f9366004610cea565b6101e7565b6100c861010c366004610fa9565b61022b565b61012461011f366004610cea565b61027b565b6040516100ac919061102e565b610139610292565b6001600160a01b0316336001600160a01b031614610171576040516365f4906560e01b81523360048201526024015b60405180910390fd5b61017a8161035c565b50565b6060610187610370565b905090565b6000610199848484610475565b90505b9392505050565b6101ab610292565b6001600160a01b0316336001600160a01b0316146101de576040516365f4906560e01b8152336004820152602401610168565b61017a816104bb565b6101ef610292565b6001600160a01b0316336001600160a01b031614610222576040516365f4906560e01b8152336004820152602401610168565b61017a81610523565b600061027186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250879150869050610535565b9695505050505050565b610283610ca2565b61028c82610558565b92915050565b6040805180820182527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d0546001600160a01b03168082527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d154602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190611041565b91505090565b610365816105aa565b61017a816000610673565b6060600061037c610721565b9050805167ffffffffffffffff81111561039857610398610eb0565b6040519080825280602002602001820160405280156103d157816020015b6103be610ca2565b8152602001906001900390816103b65790505b50915060005b8151811015610470576000806000806104088686815181106103fb576103fb61105e565b602002602001015161074c565b93509350935093506040518060800160405280858152602001846001600160a01b0316815260200183815260200182151581525087868151811061044e5761044e61105e565b60200260200101819052505050505080806104689061108a565b9150506103d7565b505090565b60006101996040518060200160405280600081525085858560405160200161049e9291906110a3565b6040516020818303038152906040526104b6906110b3565b6108b3565b60005b815181101561051f576104e98282815181106104dc576104dc61105e565b60200260200101516105aa565b61050d8282815181106104fe576104fe61105e565b60200260200101516001610673565b806105178161108a565b9150506104be565b5050565b61052c816105aa565b61017a816109ca565b600061054f8585858560405160200161049e9291906110a3565b95945050505050565b610560610ca2565b610569826105aa565b6000806000806105788661074c565b604080516080810182529485526001600160a01b03909316602085015291830152151560608201529695505050505050565b6001600160a01b0381166105d157604051630706e15760e51b815260040160405180910390fd5b6040516301ffc9a760e01b815263df76a3d360e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa925050508015610638575060408051601f3d908101601f19168201909252610635918101906110da565b60015b6106555760405163f58a5f2760e01b815260040160405180910390fd5b8061051f5760405163f58a5f2760e01b815260040160405180910390fd5b6001600160a01b0382811660009081526000805160206111e88339815191526020819052604090912054909116156106be57604051632406020960e01b815260040160405180910390fd5b6106cb6001820184610a8d565b506040805180820182526001600160a01b03948516808252931515602080830191825260009586529390935292209151825491511515600160a01b026001600160a81b0319909216931692909217919091179055565b60606101877f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aa2565b606060008181806000805160206111e88339815191526001600160a01b038781166000908152602083905260409020549192501661079d5760405163017ab33760e71b815260040160405180910390fd5b856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa1580156107db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261080391908101906110fc565b6001600160a01b03808816600081815260208590526040808220548151636465e69f60e01b81529151941693636465e69f926004808401939192918290030181865afa158015610857573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261087f91908101906110fc565b6001600160a01b03989098166000908152602093909352604090922054909791969550600160a01b900460ff169350915050565b60006108bd610292565b6001600160a01b0316836001600160a01b0316036108dd5750600161019c565b6000805160206111e883398151915260006109177f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610aaf565b905060005b818110156109c0576109316001840182610ab9565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b815260040161095f93929190611190565b602060405180830381865afa15801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a091906110da565b156109ae57600193506109c0565b806109b88161108a565b91505061091c565b5050509392505050565b6001600160a01b0381811660009081526000805160206111e88339815191526020819052604090912054909116610a145760405163017ab33760e71b815260040160405180910390fd5b6001600160a01b038216600090815260208290526040902054600160a01b900460ff1615610a5557604051636045809760e11b815260040160405180910390fd5b610a626001820183610ac5565b506001600160a01b0390911660009081526020919091526040902080546001600160a81b0319169055565b600061019c836001600160a01b038416610ada565b6060600061019c83610b29565b600061028c825490565b600061019c8383610b85565b600061019c836001600160a01b038416610baf565b6000818152600183016020526040812054610b215750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561028c565b50600061028c565b606081600001805480602002602001604051908101604052809291908181526020018280548015610b7957602002820191906000526020600020905b815481526020019060010190808311610b65575b50505050509050919050565b6000826000018281548110610b9c57610b9c61105e565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610c98576000610bd36001836111be565b8554909150600090610be7906001906111be565b9050818114610c4c576000866000018281548110610c0757610c0761105e565b9060005260206000200154905080876000018481548110610c2a57610c2a61105e565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610c5d57610c5d6111d1565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061028c565b600091505061028c565b60405180608001604052806060815260200160006001600160a01b03168152602001606081526020016000151581525090565b6001600160a01b038116811461017a57600080fd5b600060208284031215610cfc57600080fd5b813561019c81610cd5565b60005b83811015610d22578181015183820152602001610d0a565b50506000910152565b60008151808452610d43816020860160208601610d07565b601f01601f19169290920160200192915050565b6000815160808452610d6c6080850182610d2b565b905060018060a01b03602084015116602085015260408301518482036040860152610d978282610d2b565b9150506060830151151560608501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e0557603f19888603018452610df3858351610d57565b94509285019290850190600101610dd7565b5092979650505050505050565b60008083601f840112610e2457600080fd5b50813567ffffffffffffffff811115610e3c57600080fd5b602083019150836020828501011115610e5457600080fd5b9250929050565b600080600060408486031215610e7057600080fd5b8335610e7b81610cd5565b9250602084013567ffffffffffffffff811115610e9757600080fd5b610ea386828701610e12565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610eef57610eef610eb0565b604052919050565b60006020808385031215610f0a57600080fd5b823567ffffffffffffffff80821115610f2257600080fd5b818501915085601f830112610f3657600080fd5b813581811115610f4857610f48610eb0565b8060051b9150610f59848301610ec6565b8181529183018401918481019088841115610f7357600080fd5b938501935b83851015610f9d5784359250610f8d83610cd5565b8282529385019390850190610f78565b98975050505050505050565b600080600080600060608688031215610fc157600080fd5b853567ffffffffffffffff80821115610fd957600080fd5b610fe589838a01610e12565b909750955060208801359150610ffa82610cd5565b9093506040870135908082111561101057600080fd5b5061101d88828901610e12565b969995985093965092949392505050565b60208152600061019c6020830184610d57565b60006020828403121561105357600080fd5b815161019c81610cd5565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161109c5761109c611074565b5060010190565b8183823760009101908152919050565b805160208083015191908110156110d4576000198160200360031b1b821691505b50919050565b6000602082840312156110ec57600080fd5b8151801515811461019c57600080fd5b60006020828403121561110e57600080fd5b815167ffffffffffffffff8082111561112657600080fd5b818401915084601f83011261113a57600080fd5b81518181111561114c5761114c610eb0565b61115f601f8201601f1916602001610ec6565b915080825285602082850101111561117657600080fd5b611187816020840160208601610d07565b50949350505050565b6060815260006111a36060830186610d2b565b6001600160a01b039490941660208301525060400152919050565b8181038181111561028c5761028c611074565b634e487b7160e01b600052603160045260246000fdfe2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8558",
    "sourceMap": "286:1124:163:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:115;;;;;;:::i;:::-;;:::i;:::-;;774:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1032:162;;;;;;:::i;:::-;;:::i;:::-;;;3410:14:439;;3403:22;3385:41;;3373:2;3358:18;1032:162:163;3245:187:439;384:142:163;;;;;;:::i;:::-;;:::i;649:121::-;;;;;;:::i;:::-;;:::i;1198:210::-;;;;;;:::i;:::-;;:::i;886:142::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;530:115::-;600:8:60;:6;:8::i;:::-;-1:-1:-1;;;;;586:22:60;:10;-1:-1:-1;;;;;586:22:60;;582:79;;625:29;;-1:-1:-1;;;625:29:60;;643:10;625:29;;;6159:51:439;6132:18;;625:29:60;;;;;;;;582:79;606:34:163::1;628:11;606:21;:34::i;:::-;530:115:::0;:::o;774:108::-;824:20;859:18;:16;:18::i;:::-;852:25;;774:108;:::o;1032:162::-;1135:4;1154:35;1172:4;1178:10;;1154:17;:35::i;:::-;1147:42;;1032:162;;;;;;:::o;384:142::-;600:8:60;:6;:8::i;:::-;-1:-1:-1;;;;;586:22:60;:10;-1:-1:-1;;;;;586:22:60;;582:79;;625:29;;-1:-1:-1;;;625:29:60;;643:10;625:29;;;6159:51:439;6132:18;;625:29:60;6013:203:439;582:79:60;482:39:163::1;508:12;482:25;:39::i;649:121::-:0;600:8:60;:6;:8::i;:::-;-1:-1:-1;;;;;586:22:60;:10;-1:-1:-1;;;;;586:22:60;;582:79;;625:29;;-1:-1:-1;;;625:29:60;;643:10;625:29;;;6159:51:439;6132:18;;625:29:60;6013:203:439;582:79:60;728:37:163::1;753:11;728:24;:37::i;1198:210::-:0;1335:4;1354:49;1375:9;;1354:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1386:4:163;;-1:-1:-1;1392:10:163;;-1:-1:-1;1392:10:163;;-1:-1:-1;1354:20:163;:49::i;:::-;1347:56;1198:210;-1:-1:-1;;;;;;1198:210:163:o;886:142::-;962:18;;:::i;:::-;995:28;1011:11;995:15;:28::i;:::-;988:35;886:142;-1:-1:-1;;886:142:163:o;676:189:60:-;738:67;;;;;;;;185::62;738::60;-1:-1:-1;;;;;738:67:60;;;;;;;;;;;;;818:42;;-1:-1:-1;;;818:42:60;;;;;6367:25:439;;;;818:42:60;;717:13;;818:30;;6340:18:439;;;;;818:42:60;;;;;;738:67;818:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;811:49;;;676:189;:::o;646:278:164:-;769:59;816:11;769:46;:59::i;:::-;858:61;900:11;913:5;858:41;:61::i;1729:680::-;1792:28;1830:29;1862:51;:49;:51::i;:::-;1830:83;;1948:12;:19;1930:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1920:48;;1980:9;1975:430;1999:12;:19;1995:1;:23;1975:430;;;2043:18;2071:26;2107:24;2141:16;2168:58;2210:12;2223:1;2210:15;;;;;;;;:::i;:::-;;;;;;;2168:41;:58::i;:::-;2033:193;;;;;;;;2248:150;;;;;;;;2276:4;2248:150;;;;2305:18;-1:-1:-1;;;;;2248:150:164;;;;;2345:10;2248:150;;;;2378:11;2248:150;;;;;2235:7;2243:1;2235:10;;;;;;;;:::i;:::-;;;;;;:163;;;;2025:380;;;;2020:3;;;;;:::i;:::-;;;;1975:430;;;;1824:585;1729:680;:::o;1433:193:152:-;1537:4;1556:65;1568:7;;;;;;;;;;;;1577:4;1608:10;;1591:28;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1583:37;;;:::i;:::-;1556:11;:65::i;357:285:164:-;443:9;438:200;462:12;:19;458:1;:23;438:200;;;496:63;543:12;556:1;543:15;;;;;;;;:::i;:::-;;;;;;;496:46;:63::i;:::-;567:64;609:12;622:1;609:15;;;;;;;;:::i;:::-;;;;;;;626:4;567:41;:64::i;:::-;483:3;;;;:::i;:::-;;;;438:200;;;;357:285;:::o;928:277::-;1054:59;1101:11;1054:46;:59::i;:::-;1143:57;1188:11;1143:44;:57::i;1630:227:152:-;1766:4;1785:67;1797:9;1808:4;1839:10;;1822:28;;;;;;;;;:::i;1785:67::-;1778:74;1630:227;-1:-1:-1;;;;;1630:227:152:o;1209:516:164:-;1286:25;;:::i;:::-;1319:59;1366:11;1319:46;:59::i;:::-;1393:18;1419:26;1453:24;1485:16;1510:54;1552:11;1510:41;:54::i;:::-;1580:140;;;;;;;;;;;-1:-1:-1;;;;;1580:140:164;;;;;;;;;;;;;;;;;;1209:516;-1:-1:-1;;;;;;1209:516:164:o;3274:476:165:-;-1:-1:-1;;;;;3348:25:165;;3344:101;;3390:48;;-1:-1:-1;;;3390:48:165;;;;;;;;;;;3344:101;3461:70;;-1:-1:-1;;;3461:70:165;;-1:-1:-1;;;3461:70:165;;;7787:52:439;-1:-1:-1;;;;;3461:38:165;;;;;7760:18:439;;3461:70:165;;;;;;;;;;;;;;;;;;-1:-1:-1;3461:70:165;;;;;;;;-1:-1:-1;;3461:70:165;;;;;;;;;;;;:::i;:::-;;;3451:295;;3689:50;;-1:-1:-1;;;3689:50:165;;;;;;;;;;;3451:295;3574:9;3569:92;;3602:50;;-1:-1:-1;;;3602:50:165;;;;;;;;;;;1231:498;-1:-1:-1;;;;;1409:36:165;;;1309:44;1409:36;;;-1:-1:-1;;;;;;;;;;;1409:36:165;;;;;;;;:48;288::166;;1409::165;:62;1405:137;;1488:47;;-1:-1:-1;;;1488:47:165;;;;;;;;;;;1405:137;1548:32;:15;;;1568:11;1548:19;:32::i;:::-;-1:-1:-1;1625:99:165;;;;;;;;-1:-1:-1;;;;;1625:99:165;;;;;;;;;;;;;;;;-1:-1:-1;1586:36:165;;;;;;;;;:138;;;;;;;;-1:-1:-1;;;1586:138:165;-1:-1:-1;;;;;;1586:138:165;;;;;;;;;;;;;;;1231:498::o;2923:170::-;2985:29;3031:57;:48;:55;:57::i;2252:667::-;2347:18;2373:21;2347:18;2373:21;;-1:-1:-1;;;;;;;;;;;;;;;;2565:36:165;;;2625:1;2565:36;;;;;;;;;;:48;2465:89;;-1:-1:-1;2565:48:165;2561:136;;2644:46;;-1:-1:-1;;;2644:46:165;;;;;;;;;;;2561:136;2731:11;-1:-1:-1;;;;;2718:30:165;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2718:32:165;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2758:36:165;;;:23;:36;;;;;;;;;;;:48;2814:38;;-1:-1:-1;;;2814:38:165;;;;2758:48;;;2814:36;;:38;;;;;2758:23;;2814:38;;;;;;2758:36;2814:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2814:38:165;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2860:36:165;;;;:23;:36;;;;;;;;;;;;:48;2703:211;;;;2860:36;-1:-1:-1;;;;2860:48:165;;;;;-1:-1:-1;2252:667:165;-1:-1:-1;;2252:667:165:o;844:585:152:-;963:13;996:8;:6;:8::i;:::-;-1:-1:-1;;;;;988:16:152;:4;-1:-1:-1;;;;;988:16:152;;984:33;;-1:-1:-1;1013:4:152;1006:11;;984:33;-1:-1:-1;;;;;;;;;;;1024:44:152;1147:24;:15;:22;:24::i;:::-;1120:51;;1183:9;1178:247;1202:16;1198:1;:20;1178:247;;;1259:21;:15;;;1278:1;1259:18;:21::i;:::-;-1:-1:-1;;;;;1246:46:152;;1304:9;1325:4;1341:10;1246:115;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1233:186;;;1391:4;1380:15;;1405:5;;1233:186;1220:3;;;;:::i;:::-;;;;1178:247;;;;978:451;;844:585;;;;;:::o;1733:515:165:-;-1:-1:-1;;;;;1896:36:165;;;1796:44;1896:36;;;-1:-1:-1;;;;;;;;;;;1896:36:165;;;;;;;;:48;288::166;;1896::165;1892:136;;1975:46;;-1:-1:-1;;;1975:46:165;;;;;;;;;;;1892:136;-1:-1:-1;;;;;2038:36:165;;:23;:36;;;;;;;;;;:48;-1:-1:-1;;;2038:48:165;;;;2034:119;;;2103:43;;-1:-1:-1;;;2103:43:165;;;;;;;;;;;2034:119;2159:35;:15;;;2182:11;2159:22;:35::i;:::-;-1:-1:-1;;;;;;2207:36:165;;;:23;:36;;;;;;;;;;;2200:43;;-1:-1:-1;;;;;;2200:43:165;;;1733:515::o;8297:150:431:-;8367:4;8390:50;8395:3;-1:-1:-1;;;;;8415:23:431;;8390:4;:50::i;10251:300::-;10314:16;10342:22;10367:19;10375:3;10367:7;:19::i;9098:115::-;9161:7;9187:19;9195:3;4537:18;;4455:107;9555:156;9629:7;9679:22;9683:3;9695:5;9679:3;:22::i;8615:156::-;8688:4;8711:53;8719:3;-1:-1:-1;;;;;8739:23:431;;8711:7;:53::i;2206:404::-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:431;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:431;2581:12;;5562:109;5618:16;5653:3;:11;;5646:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5562:109;;;:::o;4904:118::-;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;2778:1388::-;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:431;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:439:-;-1:-1:-1;;;;;89:31:439;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;402:250::-;487:1;497:113;511:6;508:1;505:13;497:113;;;587:11;;;581:18;568:11;;;561:39;533:2;526:10;497:113;;;-1:-1:-1;;644:1:439;626:16;;619:27;402:250::o;657:271::-;699:3;737:5;731:12;764:6;759:3;752:19;780:76;849:6;842:4;837:3;833:14;826:4;819:5;815:16;780:76;:::i;:::-;910:2;889:15;-1:-1:-1;;885:29:439;876:39;;;;917:4;872:50;;657:271;-1:-1:-1;;657:271:439:o;933:543::-;987:3;1031:5;1025:12;1058:4;1053:3;1046:17;1084:47;1125:4;1120:3;1116:14;1102:12;1084:47;:::i;:::-;1072:59;;1209:1;1205;1200:3;1196:11;1192:19;1184:4;1177:5;1173:16;1167:23;1163:49;1156:4;1151:3;1147:14;1140:73;1261:4;1254:5;1250:16;1244:23;1309:3;1303:4;1299:14;1292:4;1287:3;1283:14;1276:38;1337:39;1371:4;1355:14;1337:39;:::i;:::-;1323:53;;;1439:4;1432:5;1428:16;1422:23;1415:31;1408:39;1401:4;1396:3;1392:14;1385:63;1464:6;1457:13;;;933:543;;;;:::o;1481:855::-;1683:4;1712:2;1752;1741:9;1737:18;1782:2;1771:9;1764:21;1805:6;1840;1834:13;1871:6;1863;1856:22;1909:2;1898:9;1894:18;1887:25;;1971:2;1961:6;1958:1;1954:14;1943:9;1939:30;1935:39;1921:53;;2009:2;2001:6;1997:15;2030:1;2040:267;2054:6;2051:1;2048:13;2040:267;;;2147:2;2143:7;2131:9;2123:6;2119:22;2115:36;2110:3;2103:49;2175:52;2220:6;2211;2205:13;2175:52;:::i;:::-;2165:62;-1:-1:-1;2285:12:439;;;;2250:15;;;;2076:1;2069:9;2040:267;;;-1:-1:-1;2324:6:439;;1481:855;-1:-1:-1;;;;;;;1481:855:439:o;2341:348::-;2393:8;2403:6;2457:3;2450:4;2442:6;2438:17;2434:27;2424:55;;2475:1;2472;2465:12;2424:55;-1:-1:-1;2498:20:439;;2541:18;2530:30;;2527:50;;;2573:1;2570;2563:12;2527:50;2610:4;2602:6;2598:17;2586:29;;2662:3;2655:4;2646:6;2638;2634:19;2630:30;2627:39;2624:59;;;2679:1;2676;2669:12;2624:59;2341:348;;;;;:::o;2694:546::-;2774:6;2782;2790;2843:2;2831:9;2822:7;2818:23;2814:32;2811:52;;;2859:1;2856;2849:12;2811:52;2898:9;2885:23;2917:31;2942:5;2917:31;:::i;:::-;2967:5;-1:-1:-1;3023:2:439;3008:18;;2995:32;3050:18;3039:30;;3036:50;;;3082:1;3079;3072:12;3036:50;3121:59;3172:7;3163:6;3152:9;3148:22;3121:59;:::i;:::-;2694:546;;3199:8;;-1:-1:-1;3095:85:439;;-1:-1:-1;;;;2694:546:439:o;3437:127::-;3498:10;3493:3;3489:20;3486:1;3479:31;3529:4;3526:1;3519:15;3553:4;3550:1;3543:15;3569:275;3640:2;3634:9;3705:2;3686:13;;-1:-1:-1;;3682:27:439;3670:40;;3740:18;3725:34;;3761:22;;;3722:62;3719:88;;;3787:18;;:::i;:::-;3823:2;3816:22;3569:275;;-1:-1:-1;3569:275:439:o;3849:1021::-;3933:6;3964:2;4007;3995:9;3986:7;3982:23;3978:32;3975:52;;;4023:1;4020;4013:12;3975:52;4063:9;4050:23;4092:18;4133:2;4125:6;4122:14;4119:34;;;4149:1;4146;4139:12;4119:34;4187:6;4176:9;4172:22;4162:32;;4232:7;4225:4;4221:2;4217:13;4213:27;4203:55;;4254:1;4251;4244:12;4203:55;4290:2;4277:16;4312:2;4308;4305:10;4302:36;;;4318:18;;:::i;:::-;4364:2;4361:1;4357:10;4347:20;;4387:28;4411:2;4407;4403:11;4387:28;:::i;:::-;4449:15;;;4519:11;;;4515:20;;;4480:12;;;;4547:19;;;4544:39;;;4579:1;4576;4569:12;4544:39;4603:11;;;;4623:217;4639:6;4634:3;4631:15;4623:217;;;4719:3;4706:17;4693:30;;4736:31;4761:5;4736:31;:::i;:::-;4780:18;;;4656:12;;;;4818;;;;4623:217;;;4859:5;3849:1021;-1:-1:-1;;;;;;;;3849:1021:439:o;4875:856::-;4976:6;4984;4992;5000;5008;5061:2;5049:9;5040:7;5036:23;5032:32;5029:52;;;5077:1;5074;5067:12;5029:52;5117:9;5104:23;5146:18;5187:2;5179:6;5176:14;5173:34;;;5203:1;5200;5193:12;5173:34;5242:59;5293:7;5284:6;5273:9;5269:22;5242:59;:::i;:::-;5320:8;;-1:-1:-1;5216:85:439;-1:-1:-1;5405:2:439;5390:18;;5377:32;;-1:-1:-1;5418:31:439;5377:32;5418:31;:::i;:::-;5468:5;;-1:-1:-1;5526:2:439;5511:18;;5498:32;;5542:16;;;5539:36;;;5571:1;5568;5561:12;5539:36;;5610:61;5663:7;5652:8;5641:9;5637:24;5610:61;:::i;:::-;4875:856;;;;-1:-1:-1;4875:856:439;;-1:-1:-1;5690:8:439;;5584:87;4875:856;-1:-1:-1;;;4875:856:439:o;5736:272::-;5925:2;5914:9;5907:21;5888:4;5945:57;5998:2;5987:9;5983:18;5975:6;5945:57;:::i;6403:251::-;6473:6;6526:2;6514:9;6505:7;6501:23;6497:32;6494:52;;;6542:1;6539;6532:12;6494:52;6574:9;6568:16;6593:31;6618:5;6593:31;:::i;6659:127::-;6720:10;6715:3;6711:20;6708:1;6701:31;6751:4;6748:1;6741:15;6775:4;6772:1;6765:15;6791:127;6852:10;6847:3;6843:20;6840:1;6833:31;6883:4;6880:1;6873:15;6907:4;6904:1;6897:15;6923:135;6962:3;6983:17;;;6980:43;;7003:18;;:::i;:::-;-1:-1:-1;7050:1:439;7039:13;;6923:135::o;7063:273::-;7248:6;7240;7235:3;7222:33;7204:3;7274:16;;7299:13;;;7274:16;7063:273;-1:-1:-1;7063:273:439:o;7341:297::-;7459:12;;7506:4;7495:16;;;7489:23;;7459:12;7524:16;;7521:111;;;7618:1;7614:6;7604;7598:4;7594:17;7591:1;7587:25;7583:38;7576:5;7572:50;7563:59;;7521:111;;7341:297;;;:::o;7850:277::-;7917:6;7970:2;7958:9;7949:7;7945:23;7941:32;7938:52;;;7986:1;7983;7976:12;7938:52;8018:9;8012:16;8071:5;8064:13;8057:21;8050:5;8047:32;8037:60;;8093:1;8090;8083:12;8132:719;8212:6;8265:2;8253:9;8244:7;8240:23;8236:32;8233:52;;;8281:1;8278;8271:12;8233:52;8314:9;8308:16;8343:18;8384:2;8376:6;8373:14;8370:34;;;8400:1;8397;8390:12;8370:34;8438:6;8427:9;8423:22;8413:32;;8483:7;8476:4;8472:2;8468:13;8464:27;8454:55;;8505:1;8502;8495:12;8454:55;8534:2;8528:9;8556:2;8552;8549:10;8546:36;;;8562:18;;:::i;:::-;8604:53;8647:2;8628:13;;-1:-1:-1;;8624:27:439;8653:2;8620:36;8604:53;:::i;:::-;8591:66;;8680:2;8673:5;8666:17;8720:7;8715:2;8710;8706;8702:11;8698:20;8695:33;8692:53;;;8741:1;8738;8731:12;8692:53;8754:67;8818:2;8813;8806:5;8802:14;8797:2;8793;8789:11;8754:67;:::i;:::-;-1:-1:-1;8840:5:439;8132:719;-1:-1:-1;;;;8132:719:439:o;8856:388::-;9061:2;9050:9;9043:21;9024:4;9081:45;9122:2;9111:9;9107:18;9099:6;9081:45;:::i;:::-;-1:-1:-1;;;;;9162:32:439;;;;9157:2;9142:18;;9135:60;-1:-1:-1;9226:2:439;9211:18;9204:34;9073:53;8856:388;-1:-1:-1;8856:388:439:o;9249:128::-;9316:9;;;9337:11;;;9334:37;;;9351:18;;:::i;9382:127::-;9443:10;9438:3;9434:20;9431:1;9424:31;9474:4;9471:1;9464:15;9498:4;9495:1;9488:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addEntitlementModule(address)": "070b9c3f",
    "addImmutableEntitlements(address[])": "8bfc820f",
    "getEntitlement(address)": "fba4ff9d",
    "getEntitlements()": "487dc38c",
    "isEntitledToChannel(string,address,string)": "cea632bc",
    "isEntitledToTown(address,string)": "4ff8eb71",
    "removeEntitlementModule(address)": "be24138d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Entitlement__InvalidValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Entitlement__NotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Entitlement__ValueAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__EntitlementAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__EntitlementDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__ImmutableEntitlement\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__InvalidEntitlementAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__InvalidEntitlementInterface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Pausable__NotPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Pausable__Paused\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entitlement\",\"type\":\"address\"}],\"name\":\"addEntitlementModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"entitlements\",\"type\":\"address[]\"}],\"name\":\"addImmutableEntitlements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entitlement\",\"type\":\"address\"}],\"name\":\"getEntitlement\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"moduleType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isImmutable\",\"type\":\"bool\"}],\"internalType\":\"struct IEntitlementsManagerBase.Entitlement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntitlements\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"moduleType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isImmutable\",\"type\":\"bool\"}],\"internalType\":\"struct IEntitlementsManagerBase.Entitlement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"channelId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"permission\",\"type\":\"string\"}],\"name\":\"isEntitledToChannel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"permission\",\"type\":\"string\"}],\"name\":\"isEntitledToTown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entitlement\",\"type\":\"address\"}],\"name\":\"removeEntitlementModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OwnershipTransferred(address,address)\":{\"details\":\"This emits when ownership of a contract changes.\"}},\"kind\":\"dev\",\"methods\":{\"addEntitlementModule(address)\":{\"params\":{\"entitlement\":\"The entitlement to add\"}},\"addImmutableEntitlements(address[])\":{\"params\":{\"entitlements\":\"The entitlements to add\"}},\"getEntitlement(address)\":{\"params\":{\"entitlement\":\"The entitlement to get\"},\"returns\":{\"_0\":\"The entitlement module address\"}},\"getEntitlements()\":{\"returns\":{\"_0\":\"The entitlement modules\"}},\"isEntitledToChannel(string,address,string)\":{\"params\":{\"channelId\":\"The channel to check\",\"permission\":\"The permission to check\",\"user\":\"The user to check\"},\"returns\":{\"_0\":\"True if the user is entitled to the permission, false otherwise\"}},\"isEntitledToTown(address,string)\":{\"params\":{\"permission\":\"The permission to check\",\"user\":\"The user to check\"},\"returns\":{\"_0\":\"True if the user is entitled to the permission, false otherwise\"}},\"removeEntitlementModule(address)\":{\"params\":{\"entitlement\":\"The entitlement to remove\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addEntitlementModule(address)\":{\"notice\":\"Adds an entitlement to the town\"},\"addImmutableEntitlements(address[])\":{\"notice\":\"Allows the town owner to add immutable entitlements to the town\"},\"getEntitlement(address)\":{\"notice\":\"Gets an entitlement from the town\"},\"getEntitlements()\":{\"notice\":\"Gets all entitlements from the town\"},\"isEntitledToChannel(string,address,string)\":{\"notice\":\"Checks if a user is entitled to a permission in a channel\"},\"isEntitledToTown(address,string)\":{\"notice\":\"Checks if a user is entitled to a permission in the town\"},\"removeEntitlementModule(address)\":{\"notice\":\"Removes an entitlement from the town\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/towns/facets/entitlements/EntitlementsManager.sol\":\"EntitlementsManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC721A/=lib/ERC721A/contracts/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=lib/operator-filter-registry/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"contracts/src/diamond/facets/introspection/IERC165.sol\":{\"keccak256\":\"0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2\",\"dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV\"]},\"contracts/src/diamond/facets/ownable/IERC173.sol\":{\"keccak256\":\"0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620\",\"dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol\":{\"keccak256\":\"0x61304bf241c1d14017416d3cc1742960f6157411d90a1464b8bde23bd322da89\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ac41ce2830e16be806340ea576a1885db9ecd02cc4f5002bfdeb4dfd4ac0115e\",\"dweb:/ipfs/QmXqE8xZjwkFA2YgfV3eExFVEMqHizVSBTxyNDhM9WVrEZ\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol\":{\"keccak256\":\"0xea4323b3cc8794cb9008bf79180555b0dc248c52e0b030024d6b4ac9fdd6af0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dce6d6130309fce1126b8a4b493cc14666c59d1f7685107f07fb685d2cf31773\",\"dweb:/ipfs/QmVrC5tmJWZYgZ7ruKW6uDU8QDeZgbh3QcZD9aWHrX2Duh\"]},\"contracts/src/diamond/facets/pausable/IPausable.sol\":{\"keccak256\":\"0x51faf4ca7fa88bc4bf2699bab34692f0a43a316d0b3f95a8d7271935ef243a78\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e4ff1050ba7ec1bc7de90f562d8ccf7875f4faea0f12ca5101f22619f2dd6de2\",\"dweb:/ipfs/QmeczRzWavYXmirfEbwGg5uLeLdXaENtFAzmxxFsggUHsW\"]},\"contracts/src/diamond/facets/pausable/PausableBase.sol\":{\"keccak256\":\"0xfdeeba59a9f9b6a31203aa45f9244767b5d790dbcf36c920cc0ec5471505e47f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72d6eb74b90e658834c9b9f6a9e391722c3eb3992aef2d4694c1a91473b291a1\",\"dweb:/ipfs/QmXVV8mTt8LmFDhzn3Lm3BMLXNdJTzUMbMrpBjnUaMzm5F\"]},\"contracts/src/diamond/facets/pausable/PausableStorage.sol\":{\"keccak256\":\"0x7aaa1baa71b080cf67876cb383b505be55ff2661b4bafc7f01428d509c201296\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://68231325f3a66baf6b96cb34d1432a675ff1d36fc15500cec97de12fc823bcd1\",\"dweb:/ipfs/QmVQb23iSSbYQJqk3EB9vT5fjSp6J8Uj2AwgEaHMSkF6wa\"]},\"contracts/src/towns/entitlements/IEntitlement.sol\":{\"keccak256\":\"0x3c3733f40dcf373c19ea564ec9cbf49b33e96c27a80012e9be6f8d6d24e76c46\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ba0686e15bc8bfac66d59f62e59832eaf6d4c1b636080f9b2367386d5dc72ecb\",\"dweb:/ipfs/QmemW17L8TkGWG9RHKWTpjq9WBtYX3dmZsiTtzDmYNNXwE\"]},\"contracts/src/towns/facets/Entitled.sol\":{\"keccak256\":\"0x7aa843d40e4efd1a09e1ec302af382911989aba7999e1a0ec2619293b0598710\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d60caab15dacfc58082c74dff1abfbb68b2415d30a88308772123ff16c5369\",\"dweb:/ipfs/QmdAx6MjAwMWyfK8rEFWCRohff49ELCND6vxmvU8hwZzNU\"]},\"contracts/src/towns/facets/entitlements/EntitlementsManager.sol\":{\"keccak256\":\"0xb348490c3e28cf8d5ff2ced284e7cf9b7d37f1a852996e8d3d15d431842b8d59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8c1f47eff7cb027dbb8a1b1492f76d2eb1c2eee7b4b43fb99124d810e718c565\",\"dweb:/ipfs/QmZMbG3HEC9YSKFBMyC7WeXzCrcCsSKZuJArzenVSKyHuJ\"]},\"contracts/src/towns/facets/entitlements/EntitlementsManagerBase.sol\":{\"keccak256\":\"0xf7723ec8d39d24ccc64b5f3aa25e3330d2f0d29c0b5f0549c3a0ded411a48627\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6092dfce4d99e35d1cd4b309127c09179f69532ee152ac1daddca94d4311a56d\",\"dweb:/ipfs/QmUe2tp7PUroYL2zV7RRxDbfweQEcVZNiTN6FcrLxTcB3C\"]},\"contracts/src/towns/facets/entitlements/EntitlementsManagerService.sol\":{\"keccak256\":\"0xec231181537f2bd37bde9fe50a37e4ffca400e51467e20f804021130d091904d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c96e305f95f70cc80c9c603bdee50e8520fe2401541efc97144cfc2dba55c19e\",\"dweb:/ipfs/Qmb3MKgF65Yqx7d63Ej7AYNNzDZRiy9PjmyKxFASS2xBKE\"]},\"contracts/src/towns/facets/entitlements/EntitlementsManagerStorage.sol\":{\"keccak256\":\"0x2fa49a3dea8314e57341b402894a053fe4c3e4f6f682d3f6cfae79e999919340\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ca673210755140e127ec9ed3c7716a3c4fc48d3c4cf66d6ccfca5144e2c9933d\",\"dweb:/ipfs/QmQajUVgwkg8dkeAb8Ext2dABL3PRPNsiDCxd7XXXuUdVD\"]},\"contracts/src/towns/facets/entitlements/IEntitlementsManager.sol\":{\"keccak256\":\"0x5168b9751e1a2a55dbadcaff261aecd936c526387c9b26ad97b1ed38c091d9be\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://394dc6dfe499dc42d1cf82a0805b82c75b65578795a3f4e311e68a8c02de1fea\",\"dweb:/ipfs/QmcLZ7XeMuFAY561YKoMR2oFssakWCTyME6rxTMAiDU6wV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "Entitlement__InvalidValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Entitlement__NotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Entitlement__ValueAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__EntitlementAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__EntitlementDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__ImmutableEntitlement"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__InvalidEntitlementAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__InvalidEntitlementInterface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__ZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Pausable__NotPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Pausable__Paused"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "entitlement",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addEntitlementModule"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "entitlements",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addImmutableEntitlements"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "entitlement",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitlement",
          "outputs": [
            {
              "internalType": "struct IEntitlementsManagerBase.Entitlement",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "moduleType",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "isImmutable",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitlements",
          "outputs": [
            {
              "internalType": "struct IEntitlementsManagerBase.Entitlement[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "moduleType",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "isImmutable",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "channelId",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "permission",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEntitledToChannel",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "permission",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEntitledToTown",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "entitlement",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeEntitlementModule"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addEntitlementModule(address)": {
            "params": {
              "entitlement": "The entitlement to add"
            }
          },
          "addImmutableEntitlements(address[])": {
            "params": {
              "entitlements": "The entitlements to add"
            }
          },
          "getEntitlement(address)": {
            "params": {
              "entitlement": "The entitlement to get"
            },
            "returns": {
              "_0": "The entitlement module address"
            }
          },
          "getEntitlements()": {
            "returns": {
              "_0": "The entitlement modules"
            }
          },
          "isEntitledToChannel(string,address,string)": {
            "params": {
              "channelId": "The channel to check",
              "permission": "The permission to check",
              "user": "The user to check"
            },
            "returns": {
              "_0": "True if the user is entitled to the permission, false otherwise"
            }
          },
          "isEntitledToTown(address,string)": {
            "params": {
              "permission": "The permission to check",
              "user": "The user to check"
            },
            "returns": {
              "_0": "True if the user is entitled to the permission, false otherwise"
            }
          },
          "removeEntitlementModule(address)": {
            "params": {
              "entitlement": "The entitlement to remove"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addEntitlementModule(address)": {
            "notice": "Adds an entitlement to the town"
          },
          "addImmutableEntitlements(address[])": {
            "notice": "Allows the town owner to add immutable entitlements to the town"
          },
          "getEntitlement(address)": {
            "notice": "Gets an entitlement from the town"
          },
          "getEntitlements()": {
            "notice": "Gets all entitlements from the town"
          },
          "isEntitledToChannel(string,address,string)": {
            "notice": "Checks if a user is entitled to a permission in a channel"
          },
          "isEntitledToTown(address,string)": {
            "notice": "Checks if a user is entitled to a permission in the town"
          },
          "removeEntitlementModule(address)": {
            "notice": "Removes an entitlement from the town"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC721A/=lib/ERC721A/contracts/",
        "council/=lib/council/contracts/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "operator-filter-registry/=lib/operator-filter-registry/",
        "prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "contracts/src/towns/facets/entitlements/EntitlementsManager.sol": "EntitlementsManager"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/diamond/facets/introspection/IERC165.sol": {
        "keccak256": "0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816",
        "urls": [
          "bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2",
          "dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/IERC173.sol": {
        "keccak256": "0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe",
        "urls": [
          "bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620",
          "dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol": {
        "keccak256": "0x61304bf241c1d14017416d3cc1742960f6157411d90a1464b8bde23bd322da89",
        "urls": [
          "bzz-raw://ac41ce2830e16be806340ea576a1885db9ecd02cc4f5002bfdeb4dfd4ac0115e",
          "dweb:/ipfs/QmXqE8xZjwkFA2YgfV3eExFVEMqHizVSBTxyNDhM9WVrEZ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol": {
        "keccak256": "0xea4323b3cc8794cb9008bf79180555b0dc248c52e0b030024d6b4ac9fdd6af0b",
        "urls": [
          "bzz-raw://dce6d6130309fce1126b8a4b493cc14666c59d1f7685107f07fb685d2cf31773",
          "dweb:/ipfs/QmVrC5tmJWZYgZ7ruKW6uDU8QDeZgbh3QcZD9aWHrX2Duh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/IPausable.sol": {
        "keccak256": "0x51faf4ca7fa88bc4bf2699bab34692f0a43a316d0b3f95a8d7271935ef243a78",
        "urls": [
          "bzz-raw://e4ff1050ba7ec1bc7de90f562d8ccf7875f4faea0f12ca5101f22619f2dd6de2",
          "dweb:/ipfs/QmeczRzWavYXmirfEbwGg5uLeLdXaENtFAzmxxFsggUHsW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/PausableBase.sol": {
        "keccak256": "0xfdeeba59a9f9b6a31203aa45f9244767b5d790dbcf36c920cc0ec5471505e47f",
        "urls": [
          "bzz-raw://72d6eb74b90e658834c9b9f6a9e391722c3eb3992aef2d4694c1a91473b291a1",
          "dweb:/ipfs/QmXVV8mTt8LmFDhzn3Lm3BMLXNdJTzUMbMrpBjnUaMzm5F"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/PausableStorage.sol": {
        "keccak256": "0x7aaa1baa71b080cf67876cb383b505be55ff2661b4bafc7f01428d509c201296",
        "urls": [
          "bzz-raw://68231325f3a66baf6b96cb34d1432a675ff1d36fc15500cec97de12fc823bcd1",
          "dweb:/ipfs/QmVQb23iSSbYQJqk3EB9vT5fjSp6J8Uj2AwgEaHMSkF6wa"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/entitlements/IEntitlement.sol": {
        "keccak256": "0x3c3733f40dcf373c19ea564ec9cbf49b33e96c27a80012e9be6f8d6d24e76c46",
        "urls": [
          "bzz-raw://ba0686e15bc8bfac66d59f62e59832eaf6d4c1b636080f9b2367386d5dc72ecb",
          "dweb:/ipfs/QmemW17L8TkGWG9RHKWTpjq9WBtYX3dmZsiTtzDmYNNXwE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/Entitled.sol": {
        "keccak256": "0x7aa843d40e4efd1a09e1ec302af382911989aba7999e1a0ec2619293b0598710",
        "urls": [
          "bzz-raw://75d60caab15dacfc58082c74dff1abfbb68b2415d30a88308772123ff16c5369",
          "dweb:/ipfs/QmdAx6MjAwMWyfK8rEFWCRohff49ELCND6vxmvU8hwZzNU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsManager.sol": {
        "keccak256": "0xb348490c3e28cf8d5ff2ced284e7cf9b7d37f1a852996e8d3d15d431842b8d59",
        "urls": [
          "bzz-raw://8c1f47eff7cb027dbb8a1b1492f76d2eb1c2eee7b4b43fb99124d810e718c565",
          "dweb:/ipfs/QmZMbG3HEC9YSKFBMyC7WeXzCrcCsSKZuJArzenVSKyHuJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsManagerBase.sol": {
        "keccak256": "0xf7723ec8d39d24ccc64b5f3aa25e3330d2f0d29c0b5f0549c3a0ded411a48627",
        "urls": [
          "bzz-raw://6092dfce4d99e35d1cd4b309127c09179f69532ee152ac1daddca94d4311a56d",
          "dweb:/ipfs/QmUe2tp7PUroYL2zV7RRxDbfweQEcVZNiTN6FcrLxTcB3C"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsManagerService.sol": {
        "keccak256": "0xec231181537f2bd37bde9fe50a37e4ffca400e51467e20f804021130d091904d",
        "urls": [
          "bzz-raw://c96e305f95f70cc80c9c603bdee50e8520fe2401541efc97144cfc2dba55c19e",
          "dweb:/ipfs/Qmb3MKgF65Yqx7d63Ej7AYNNzDZRiy9PjmyKxFASS2xBKE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsManagerStorage.sol": {
        "keccak256": "0x2fa49a3dea8314e57341b402894a053fe4c3e4f6f682d3f6cfae79e999919340",
        "urls": [
          "bzz-raw://ca673210755140e127ec9ed3c7716a3c4fc48d3c4cf66d6ccfca5144e2c9933d",
          "dweb:/ipfs/QmQajUVgwkg8dkeAb8Ext2dABL3PRPNsiDCxd7XXXuUdVD"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/IEntitlementsManager.sol": {
        "keccak256": "0x5168b9751e1a2a55dbadcaff261aecd936c526387c9b26ad97b1ed38c091d9be",
        "urls": [
          "bzz-raw://394dc6dfe499dc42d1cf82a0805b82c75b65578795a3f4e311e68a8c02de1fea",
          "dweb:/ipfs/QmcLZ7XeMuFAY561YKoMR2oFssakWCTyME6rxTMAiDU6wV"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/towns/facets/entitlements/EntitlementsManager.sol",
    "id": 32016,
    "exportedSymbols": {
      "Entitled": [
        29660
      ],
      "EntitlementsManager": [
        32015
      ],
      "EntitlementsManagerBase": [
        32201
      ],
      "IEntitlementsManager": [
        32662
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1372:163",
    "nodes": [
      {
        "id": 31908,
        "nodeType": "PragmaDirective",
        "src": "39:24:163",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 31910,
        "nodeType": "ImportDirective",
        "src": "79:64:163",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/entitlements/IEntitlementsManager.sol",
        "file": "./IEntitlementsManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32016,
        "sourceUnit": 32663,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31909,
              "name": "IEntitlementsManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32662,
              "src": "87:20:163",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31912,
        "nodeType": "ImportDirective",
        "src": "172:70:163",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/entitlements/EntitlementsManagerBase.sol",
        "file": "./EntitlementsManagerBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32016,
        "sourceUnit": 32202,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31911,
              "name": "EntitlementsManagerBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32201,
              "src": "180:23:163",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31914,
        "nodeType": "ImportDirective",
        "src": "243:41:163",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/Entitled.sol",
        "file": "../Entitled.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32016,
        "sourceUnit": 29661,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31913,
              "name": "Entitled",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29660,
              "src": "251:8:163",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32015,
        "nodeType": "ContractDefinition",
        "src": "286:1124:163",
        "nodes": [
          {
            "id": 31933,
            "nodeType": "FunctionDefinition",
            "src": "384:142:163",
            "nodes": [],
            "body": {
              "id": 31932,
              "nodeType": "Block",
              "src": "476:50:163",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31929,
                        "name": "entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31923,
                        "src": "508:12:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 31928,
                      "name": "_addImmutableEntitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32060,
                      "src": "482:25:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 31930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "482:39:163",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31931,
                  "nodeType": "ExpressionStatement",
                  "src": "482:39:163"
                }
              ]
            },
            "baseFunctions": [
              32610
            ],
            "functionSelector": "8bfc820f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31926,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31925,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "466:9:163"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8555,
                  "src": "466:9:163"
                },
                "nodeType": "ModifierInvocation",
                "src": "466:9:163"
              }
            ],
            "name": "addImmutableEntitlements",
            "nameLocation": "393:24:163",
            "parameters": {
              "id": 31924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31923,
                  "mutability": "mutable",
                  "name": "entitlements",
                  "nameLocation": "440:12:163",
                  "nodeType": "VariableDeclaration",
                  "scope": 31933,
                  "src": "423:29:163",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 31921,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "423:7:163",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 31922,
                    "nodeType": "ArrayTypeName",
                    "src": "423:9:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "417:39:163"
            },
            "returnParameters": {
              "id": 31927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "476:0:163"
            },
            "scope": 32015,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31945,
            "nodeType": "FunctionDefinition",
            "src": "530:115:163",
            "nodes": [],
            "body": {
              "id": 31944,
              "nodeType": "Block",
              "src": "600:45:163",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31941,
                        "name": "entitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31935,
                        "src": "628:11:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31940,
                      "name": "_addEntitlementModule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32079,
                      "src": "606:21:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "606:34:163",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31943,
                  "nodeType": "ExpressionStatement",
                  "src": "606:34:163"
                }
              ]
            },
            "baseFunctions": [
              32638
            ],
            "functionSelector": "070b9c3f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31938,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31937,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "590:9:163"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8555,
                  "src": "590:9:163"
                },
                "nodeType": "ModifierInvocation",
                "src": "590:9:163"
              }
            ],
            "name": "addEntitlementModule",
            "nameLocation": "539:20:163",
            "parameters": {
              "id": 31936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31935,
                  "mutability": "mutable",
                  "name": "entitlement",
                  "nameLocation": "568:11:163",
                  "nodeType": "VariableDeclaration",
                  "scope": 31945,
                  "src": "560:19:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:7:163",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "559:21:163"
            },
            "returnParameters": {
              "id": 31939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:163"
            },
            "scope": 32015,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31957,
            "nodeType": "FunctionDefinition",
            "src": "649:121:163",
            "nodes": [],
            "body": {
              "id": 31956,
              "nodeType": "Block",
              "src": "722:48:163",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31953,
                        "name": "entitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31947,
                        "src": "753:11:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31952,
                      "name": "_removeEntitlementModule",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32097,
                      "src": "728:24:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "728:37:163",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31955,
                  "nodeType": "ExpressionStatement",
                  "src": "728:37:163"
                }
              ]
            },
            "baseFunctions": [
              32644
            ],
            "functionSelector": "be24138d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 31950,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 31949,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "712:9:163"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8555,
                  "src": "712:9:163"
                },
                "nodeType": "ModifierInvocation",
                "src": "712:9:163"
              }
            ],
            "name": "removeEntitlementModule",
            "nameLocation": "658:23:163",
            "parameters": {
              "id": 31948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31947,
                  "mutability": "mutable",
                  "name": "entitlement",
                  "nameLocation": "690:11:163",
                  "nodeType": "VariableDeclaration",
                  "scope": 31957,
                  "src": "682:19:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:163",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "681:21:163"
            },
            "returnParameters": {
              "id": 31951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "722:0:163"
            },
            "scope": 32015,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31968,
            "nodeType": "FunctionDefinition",
            "src": "774:108:163",
            "nodes": [],
            "body": {
              "id": 31967,
              "nodeType": "Block",
              "src": "846:36:163",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 31964,
                      "name": "_getEntitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32200,
                      "src": "859:16:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_struct$_Entitlement_$32600_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (struct IEntitlementsManagerBase.Entitlement memory[] memory)"
                      }
                    },
                    "id": 31965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "859:18:163",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Entitlement_$32600_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IEntitlementsManagerBase.Entitlement memory[] memory"
                    }
                  },
                  "functionReturnParameters": 31963,
                  "id": 31966,
                  "nodeType": "Return",
                  "src": "852:25:163"
                }
              ]
            },
            "baseFunctions": [
              32661
            ],
            "functionSelector": "487dc38c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntitlements",
            "nameLocation": "783:15:163",
            "parameters": {
              "id": 31958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "798:2:163"
            },
            "returnParameters": {
              "id": 31963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31962,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31968,
                  "src": "824:20:163",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Entitlement_$32600_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IEntitlementsManagerBase.Entitlement[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 31960,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 31959,
                        "name": "Entitlement",
                        "nameLocations": [
                          "824:11:163"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 32600,
                        "src": "824:11:163"
                      },
                      "referencedDeclaration": 32600,
                      "src": "824:11:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Entitlement_$32600_storage_ptr",
                        "typeString": "struct IEntitlementsManagerBase.Entitlement"
                      }
                    },
                    "id": 31961,
                    "nodeType": "ArrayTypeName",
                    "src": "824:13:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Entitlement_$32600_storage_$dyn_storage_ptr",
                      "typeString": "struct IEntitlementsManagerBase.Entitlement[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "823:22:163"
            },
            "scope": 32015,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31981,
            "nodeType": "FunctionDefinition",
            "src": "886:142:163",
            "nodes": [],
            "body": {
              "id": 31980,
              "nodeType": "Block",
              "src": "982:46:163",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31977,
                        "name": "entitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31970,
                        "src": "1011:11:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31976,
                      "name": "_getEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32134,
                      "src": "995:15:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_Entitlement_$32600_memory_ptr_$",
                        "typeString": "function (address) view returns (struct IEntitlementsManagerBase.Entitlement memory)"
                      }
                    },
                    "id": 31978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "995:28:163",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Entitlement_$32600_memory_ptr",
                      "typeString": "struct IEntitlementsManagerBase.Entitlement memory"
                    }
                  },
                  "functionReturnParameters": 31975,
                  "id": 31979,
                  "nodeType": "Return",
                  "src": "988:35:163"
                }
              ]
            },
            "baseFunctions": [
              32653
            ],
            "functionSelector": "fba4ff9d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntitlement",
            "nameLocation": "895:14:163",
            "parameters": {
              "id": 31971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31970,
                  "mutability": "mutable",
                  "name": "entitlement",
                  "nameLocation": "923:11:163",
                  "nodeType": "VariableDeclaration",
                  "scope": 31981,
                  "src": "915:19:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:7:163",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "909:29:163"
            },
            "returnParameters": {
              "id": 31975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31974,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31981,
                  "src": "962:18:163",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Entitlement_$32600_memory_ptr",
                    "typeString": "struct IEntitlementsManagerBase.Entitlement"
                  },
                  "typeName": {
                    "id": 31973,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31972,
                      "name": "Entitlement",
                      "nameLocations": [
                        "962:11:163"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32600,
                      "src": "962:11:163"
                    },
                    "referencedDeclaration": 32600,
                    "src": "962:11:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Entitlement_$32600_storage_ptr",
                      "typeString": "struct IEntitlementsManagerBase.Entitlement"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "961:20:163"
            },
            "scope": 32015,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 31996,
            "nodeType": "FunctionDefinition",
            "src": "1032:162:163",
            "nodes": [],
            "body": {
              "id": 31995,
              "nodeType": "Block",
              "src": "1141:53:163",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31991,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31983,
                        "src": "1172:4:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31992,
                        "name": "permission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31985,
                        "src": "1178:10:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 31990,
                      "name": "_isEntitledToTown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29504,
                      "src": "1154:17:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_string_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,string calldata) view returns (bool)"
                      }
                    },
                    "id": 31993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1154:35:163",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 31989,
                  "id": 31994,
                  "nodeType": "Return",
                  "src": "1147:42:163"
                }
              ]
            },
            "baseFunctions": [
              32620
            ],
            "functionSelector": "4ff8eb71",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isEntitledToTown",
            "nameLocation": "1041:16:163",
            "parameters": {
              "id": 31986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31983,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1071:4:163",
                  "nodeType": "VariableDeclaration",
                  "scope": 31996,
                  "src": "1063:12:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:7:163",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31985,
                  "mutability": "mutable",
                  "name": "permission",
                  "nameLocation": "1097:10:163",
                  "nodeType": "VariableDeclaration",
                  "scope": 31996,
                  "src": "1081:26:163",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31984,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1081:6:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1057:54:163"
            },
            "returnParameters": {
              "id": 31989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31996,
                  "src": "1135:4:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 31987,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1135:4:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1134:6:163"
            },
            "scope": 32015,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32014,
            "nodeType": "FunctionDefinition",
            "src": "1198:210:163",
            "nodes": [],
            "body": {
              "id": 32013,
              "nodeType": "Block",
              "src": "1341:67:163",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32008,
                        "name": "channelId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31998,
                        "src": "1375:9:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 32009,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32000,
                        "src": "1386:4:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32010,
                        "name": "permission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32002,
                        "src": "1392:10:163",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 32007,
                      "name": "_isEntitledToChannel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29528,
                      "src": "1354:20:163",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_string_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory,address,string calldata) view returns (bool)"
                      }
                    },
                    "id": 32011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1354:49:163",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 32006,
                  "id": 32012,
                  "nodeType": "Return",
                  "src": "1347:56:163"
                }
              ]
            },
            "baseFunctions": [
              32632
            ],
            "functionSelector": "cea632bc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isEntitledToChannel",
            "nameLocation": "1207:19:163",
            "parameters": {
              "id": 32003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31998,
                  "mutability": "mutable",
                  "name": "channelId",
                  "nameLocation": "1248:9:163",
                  "nodeType": "VariableDeclaration",
                  "scope": 32014,
                  "src": "1232:25:163",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31997,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1232:6:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32000,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1271:4:163",
                  "nodeType": "VariableDeclaration",
                  "scope": 32014,
                  "src": "1263:12:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:163",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32002,
                  "mutability": "mutable",
                  "name": "permission",
                  "nameLocation": "1297:10:163",
                  "nodeType": "VariableDeclaration",
                  "scope": 32014,
                  "src": "1281:26:163",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 32001,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1281:6:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1226:85:163"
            },
            "returnParameters": {
              "id": 32006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32005,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32014,
                  "src": "1335:4:163",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32004,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:4:163",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1334:6:163"
            },
            "scope": 32015,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31915,
              "name": "IEntitlementsManager",
              "nameLocations": [
                "320:20:163"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32662,
              "src": "320:20:163"
            },
            "id": 31916,
            "nodeType": "InheritanceSpecifier",
            "src": "320:20:163"
          },
          {
            "baseName": {
              "id": 31917,
              "name": "EntitlementsManagerBase",
              "nameLocations": [
                "344:23:163"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32201,
              "src": "344:23:163"
            },
            "id": 31918,
            "nodeType": "InheritanceSpecifier",
            "src": "344:23:163"
          },
          {
            "baseName": {
              "id": 31919,
              "name": "Entitled",
              "nameLocations": [
                "371:8:163"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29660,
              "src": "371:8:163"
            },
            "id": 31920,
            "nodeType": "InheritanceSpecifier",
            "src": "371:8:163"
          }
        ],
        "canonicalName": "EntitlementsManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32015,
          29660,
          8818,
          8727,
          8627,
          8079,
          27475,
          32201,
          32662,
          32601
        ],
        "name": "EntitlementsManager",
        "nameLocation": "295:19:163",
        "scope": 32016,
        "usedErrors": [
          8067,
          8071,
          8716,
          8718,
          27470,
          27472,
          27474,
          32213,
          32215,
          32217,
          32219,
          32221
        ],
        "usedEvents": [
          8078,
          8722,
          8726
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 163
}
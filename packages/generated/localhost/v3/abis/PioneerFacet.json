{
  "abi": [
    {
      "inputs": [],
      "name": "AlreadyAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Initializable_InInitializingState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Initializable_NotInInitializingState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Introspection_AlreadySupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Introspection_NotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRewardValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MaxSupplyReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonExistentTokenURI",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "version",
          "type": "uint32"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "InterfaceAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "InterfaceRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allow",
          "type": "bool"
        }
      ],
      "name": "SetAllowed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "name": "__ERC721A_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "__Pioneer_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMintReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "allow",
          "type": "bool"
        }
      ],
      "name": "setAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMintReward",
          "type": "uint256"
        }
      ],
      "name": "setMintReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001961001e565b6100c4565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de8054640100000000900460ff161561006a576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff90811610156100c157805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b611ae1806100d36000396000f3fe60806040526004361061012a5760003560e01c80636352211e116100ab578063a22cb4651161006f578063a22cb46514610305578063b88d4fde14610325578063c833245114610338578063c87b56dd1461034d578063d2f01f191461036d578063e985e9c51461038d57600080fd5b80636352211e1461027057806370a0823114610290578063755edd17146102b057806380e801ba146102d057806395d89b41146102f057600080fd5b806323b872dd116100f257806323b872dd146101ea57806342842e0e146101fd5780634697f05d1461021057806351cff8d91461023057806355f804b31461025057600080fd5b806306fdde031461012f578063081812fc1461015a578063095ea7b31461019257806318160ddd146101a75780631aa23ef5146101ca575b600080fd5b34801561013b57600080fd5b506101446103bd565b604051610151919061157a565b60405180910390f35b34801561016657600080fd5b5061017a61017536600461158d565b610458565b6040516001600160a01b039091168152602001610151565b6101a56101a03660046115bd565b610469565b005b3480156101b357600080fd5b506101bc610479565b604051908152602001610151565b3480156101d657600080fd5b506101a56101e5366004611693565b610488565b6101a56101f8366004611736565b610500565b6101a561020b366004611736565b6106f7565b34801561021c57600080fd5b506101a561022b366004611772565b610717565b34801561023c57600080fd5b506101a561024b3660046117ae565b6107aa565b34801561025c57600080fd5b506101a561026b3660046117c9565b6107f2565b34801561027c57600080fd5b5061017a61028b36600461158d565b610836565b34801561029c57600080fd5b506101bc6102ab3660046117ae565b610841565b3480156102bc57600080fd5b506101bc6102cb3660046117ae565b61084c565b3480156102dc57600080fd5b506101a56102eb36600461158d565b61091d565b3480156102fc57600080fd5b50610144610961565b34801561031157600080fd5b506101a5610320366004611772565b610979565b6101a56103333660046117fe565b6109f6565b34801561034457600080fd5b506101bc610a40565b34801561035957600080fd5b5061014461036836600461158d565b610a4a565b34801561037957600080fd5b506101a561038836600461187a565b610adb565b34801561039957600080fd5b506103ad6103a83660046118de565b610b2f565b6040519015158152602001610151565b60606103c7610b3b565b60020180546103d590611911565b80601f016020809104026020016040519081016040528092919081815260200182805461040190611911565b801561044e5780601f106104235761010080835404028352916020019161044e565b820191906000526020600020905b81548152906001019060200180831161043157829003601f168201915b5050505050905090565b600061046382610b5f565b92915050565b61047582826001610bac565b5050565b6000610483610c61565b905090565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff166104d257604051630ef4733760e31b815260040160405180910390fd5b6104db83610c80565b6104e6816001610ccd565b6104ef82610d6a565b6104f98585610daf565b5050505050565b600061050b82610e23565b9050836001600160a01b0316816001600160a01b03161461053e5760405162a1148160e81b815260040160405180910390fd5b60008061054a84610ec8565b9150915061056f818761055a3390565b6001600160a01b039081169116811491141790565b61059a5761057d8633610b2f565b61059a57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166105c157604051633a954ecd60e21b815260040160405180910390fd5b80156105cc57600082555b6105d4610b3b565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610600610b3b565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b17610637610b3b565b60008681526004919091016020526040812091909155600160e11b841690036106ad5760018401610666610b3b565b6000828152600491909101602052604081205490036106ab57610687610b3b565b5481146106ab5783610697610b3b565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b610712838383604051806020016040528060008152506109f6565b505050565b61071f610ef0565b6001600160a01b0316336001600160a01b031614610757576040516365f4906560e01b81523360048201526024015b60405180910390fd5b6107618282610ccd565b816001600160a01b03167f91d426a6b868d3a9f12f044bfd4dfb1df6e3e050a71a34b090d8ce43a5023c298260405161079e911515815260200190565b60405180910390a25050565b6107b2610ef0565b6001600160a01b0316336001600160a01b0316146107e5576040516365f4906560e01b815233600482015260240161074e565b6107ef8147610f1e565b50565b6107fa610ef0565b6001600160a01b0316336001600160a01b03161461082d576040516365f4906560e01b815233600482015260240161074e565b6107ef81610c80565b600061046382610e23565b600061046382610fcc565b600061085733611035565b61087457604051631eb49d6d60e11b815260040160405180910390fd5b6001600160a01b03821661089b57604051631eb49d6d60e11b815260040160405180910390fd5b60006108a683610fcc565b11156108c557604051631bbdf5c560e31b815260040160405180910390fd5b60006108cf611072565b9050478111156108f257604051631e9acf1760e31b815260040160405180910390fd5b6108fa61109c565b91506109078360016110a6565b8015610917576109178382610f1e565b50919050565b610925610ef0565b6001600160a01b0316336001600160a01b031614610958576040516365f4906560e01b815233600482015260240161074e565b6107ef81610d6a565b606061096b610b3b565b60030180546103d590611911565b80610982610b3b565b336000818152600792909201602090815260408084206001600160a01b03881680865290835293819020805460ff19169515159590951790945592518415158152919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610a01848484610500565b6001600160a01b0383163b15610a3a57610a1d848484846110c0565b610a3a576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6000610483611072565b6060610a55826111ac565b610a7257604051630a14c4b560e41b815260040160405180910390fd5b6000610a8960408051602081019091526000815290565b90508051600003610aa95760405180602001604052806000815250610ad4565b80610ab3846111e8565b604051602001610ac4929190611945565b6040516020818303038152906040525b9392505050565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff16610b2557604051630ef4733760e31b815260040160405180910390fd5b6104758282610daf565b6000610ad4838361122c565b7f234d8962d7c9a6a6604d7f98797e6ad6d7a886804f7409feb26422e27bf8125490565b6000610b6a826111ac565b610b87576040516333d1c03960e21b815260040160405180910390fd5b610b8f610b3b565b60009283526006016020525060409020546001600160a01b031690565b6000610bb783610836565b90508115610bf657336001600160a01b03821614610bf657610bd9813361122c565b610bf6576040516367d9dca160e11b815260040160405180910390fd5b83610bff610b3b565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b600080610c6c610b3b565b60010154610c78610b3b565b540303919050565b8051600003610ca25760405163d872946b60e01b815260040160405180910390fd5b7fa716e9aec1664bc61cb89bba9cb9d1cbd868c2c653ad90d895ac0bacf743cdbc61047582826119ba565b6001600160a01b038216610cf457604051631eb49d6d60e11b815260040160405180910390fd5b801515610d0083611035565b151503610d2057604051636a4648d760e01b815260040160405180910390fd5b6001600160a01b039190911660009081527fa716e9aec1664bc61cb89bba9cb9d1cbd868c2c653ad90d895ac0bacf743cdbd60205260409020805460ff1916911515919091179055565b80600003610d8b5760405163861ef1e360e01b815260040160405180910390fd5b7fa716e9aec1664bc61cb89bba9cb9d1cbd868c2c653ad90d895ac0bacf743cdbb55565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff16610df957604051630ef4733760e31b815260040160405180910390fd5b610e096380ac58cd60e01b611269565b610e19635b5e139f60e01b611269565b6104758282611347565b6000610e2d610b3b565b600083815260049190910160205260408120549150600160e01b82169003610eaf5780600003610eaa57610e5f610b3b565b548210610e7f57604051636f96cda160e11b815260040160405180910390fd5b610e87610b3b565b600019909201600081815260049390930160205260409092205490508015610e7f575b919050565b604051636f96cda160e11b815260040160405180910390fd5b6000806000610ed5610b3b565b60009485526006016020525050604090912080549092909150565b7fa7c3be20e3a76821507555109752fad8a6630ef0362a34dcfcdfef83c99a2537546001600160a01b031690565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f6b576040519150601f19603f3d011682016040523d82523d6000602084013e610f70565b606091505b50509050806107125760405162461bcd60e51b815260206004820152602260248201527f50696f6e656572426173653a206661696c656420746f2073656e6420726577616044820152611c9960f21b606482015260840161074e565b60006001600160a01b038216610ff5576040516323d3ad8160e21b815260040160405180910390fd5b67ffffffffffffffff611006610b3b565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b6001600160a01b031660009081527fa716e9aec1664bc61cb89bba9cb9d1cbd868c2c653ad90d895ac0bacf743cdbd602052604090205460ff1690565b60007fa716e9aec1664bc61cb89bba9cb9d1cbd868c2c653ad90d895ac0bacf743cdbb5b54919050565b6000611096610b3b565b610475828260405180602001604052806000815250611379565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906110f5903390899088908890600401611a7a565b6020604051808303816000875af1925050508015611130575060408051601f3d908101601f1916820190925261112d91810190611ab7565b60015b61118e573d80801561115e576040519150601f19603f3d011682016040523d82523d6000602084013e611163565b606091505b508051600003611186576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60006111b6610b3b565b54821080156104635750600160e01b6111cd610b3b565b60008481526004919091016020526040902054161592915050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806112025750819003601f19909101908152919050565b6000611236610b3b565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b6001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c4602052604090205460ff1615156001146112f6576001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c460205260409020805460ff1916600117905561130f565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b6000611351610b3b565b90506002810161136184826119ba565b506003810161137083826119ba565b50600090555050565b61138383836113ef565b6001600160a01b0383163b1561071257600061139d610b3b565b5490508281035b6113b760008683806001019450866110c0565b6113d4576040516368d2bf6b60e11b815260040160405180910390fd5b8181106113a457816113e4610b3b565b54146104f957600080fd5b60006113f9610b3b565b549050600082900361141e5760405163b562e8dd60e01b815260040160405180910390fd5b680100000000000000018202611432610b3b565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b171761146d610b3b565b600083815260049190910160205260408120919091556001600160a01b0384169083830190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b8181146114f757808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016114bf565b508160000361151857604051622e076360e81b815260040160405180910390fd5b80611521610b3b565b55506107129050565b60005b8381101561154557818101518382015260200161152d565b50506000910152565b6000815180845261156681602086016020860161152a565b601f01601f19169290920160200192915050565b602081526000610ad4602083018461154e565b60006020828403121561159f57600080fd5b5035919050565b80356001600160a01b0381168114610eaa57600080fd5b600080604083850312156115d057600080fd5b6115d9836115a6565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611618576116186115e7565b604051601f8501601f19908116603f01168101908282118183101715611640576116406115e7565b8160405280935085815286868601111561165957600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261168457600080fd5b610ad4838335602085016115fd565b600080600080600060a086880312156116ab57600080fd5b853567ffffffffffffffff808211156116c357600080fd5b6116cf89838a01611673565b965060208801359150808211156116e557600080fd5b6116f189838a01611673565b9550604088013591508082111561170757600080fd5b5061171488828901611673565b9350506060860135915061172a608087016115a6565b90509295509295909350565b60008060006060848603121561174b57600080fd5b611754846115a6565b9250611762602085016115a6565b9150604084013590509250925092565b6000806040838503121561178557600080fd5b61178e836115a6565b9150602083013580151581146117a357600080fd5b809150509250929050565b6000602082840312156117c057600080fd5b610ad4826115a6565b6000602082840312156117db57600080fd5b813567ffffffffffffffff8111156117f257600080fd5b6111a484828501611673565b6000806000806080858703121561181457600080fd5b61181d856115a6565b935061182b602086016115a6565b925060408501359150606085013567ffffffffffffffff81111561184e57600080fd5b8501601f8101871361185f57600080fd5b61186e878235602084016115fd565b91505092959194509250565b6000806040838503121561188d57600080fd5b823567ffffffffffffffff808211156118a557600080fd5b6118b186838701611673565b935060208501359150808211156118c757600080fd5b506118d485828601611673565b9150509250929050565b600080604083850312156118f157600080fd5b6118fa836115a6565b9150611908602084016115a6565b90509250929050565b600181811c9082168061192557607f821691505b60208210810361091757634e487b7160e01b600052602260045260246000fd5b6000835161195781846020880161152a565b83519083019061196b81836020880161152a565b01949350505050565b601f82111561071257600081815260208120601f850160051c8101602086101561199b5750805b601f850160051c820191505b818110156106ef578281556001016119a7565b815167ffffffffffffffff8111156119d4576119d46115e7565b6119e8816119e28454611911565b84611974565b602080601f831160018114611a1d5760008415611a055750858301515b600019600386901b1c1916600185901b1785556106ef565b600085815260208120601f198616915b82811015611a4c57888601518255948401946001909101908401611a2d565b5085821015611a6a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611aad9083018461154e565b9695505050505050565b600060208284031215611ac957600080fd5b81516001600160e01b031981168114610ad457600080fd",
    "sourceMap": "358:1582:136:-:0;;;;;;;;;;;;-1:-1:-1;385:22:39;:20;:22::i;:::-;358:1582:136;;1653:314:50;186:68:51;1779:14:50;;;;;;;1775:62;;;1802:35;;-1:-1:-1;;;1802:35:50;;;;;;;;;;;1775:62;1848:9;;1860:16;1848:9;;;:28;1844:119;;;1886:28;;-1:-1:-1;;1886:28:50;1898:16;1886:28;;;;;1927:29;;158:42:388;;;1927:29:50;;146:2:388;131:18;1927:29:50;;;;;;;1844:119;1694:273;1653:314::o;14:192:388:-;358:1582:136;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061012a5760003560e01c80636352211e116100ab578063a22cb4651161006f578063a22cb46514610305578063b88d4fde14610325578063c833245114610338578063c87b56dd1461034d578063d2f01f191461036d578063e985e9c51461038d57600080fd5b80636352211e1461027057806370a0823114610290578063755edd17146102b057806380e801ba146102d057806395d89b41146102f057600080fd5b806323b872dd116100f257806323b872dd146101ea57806342842e0e146101fd5780634697f05d1461021057806351cff8d91461023057806355f804b31461025057600080fd5b806306fdde031461012f578063081812fc1461015a578063095ea7b31461019257806318160ddd146101a75780631aa23ef5146101ca575b600080fd5b34801561013b57600080fd5b506101446103bd565b604051610151919061157a565b60405180910390f35b34801561016657600080fd5b5061017a61017536600461158d565b610458565b6040516001600160a01b039091168152602001610151565b6101a56101a03660046115bd565b610469565b005b3480156101b357600080fd5b506101bc610479565b604051908152602001610151565b3480156101d657600080fd5b506101a56101e5366004611693565b610488565b6101a56101f8366004611736565b610500565b6101a561020b366004611736565b6106f7565b34801561021c57600080fd5b506101a561022b366004611772565b610717565b34801561023c57600080fd5b506101a561024b3660046117ae565b6107aa565b34801561025c57600080fd5b506101a561026b3660046117c9565b6107f2565b34801561027c57600080fd5b5061017a61028b36600461158d565b610836565b34801561029c57600080fd5b506101bc6102ab3660046117ae565b610841565b3480156102bc57600080fd5b506101bc6102cb3660046117ae565b61084c565b3480156102dc57600080fd5b506101a56102eb36600461158d565b61091d565b3480156102fc57600080fd5b50610144610961565b34801561031157600080fd5b506101a5610320366004611772565b610979565b6101a56103333660046117fe565b6109f6565b34801561034457600080fd5b506101bc610a40565b34801561035957600080fd5b5061014461036836600461158d565b610a4a565b34801561037957600080fd5b506101a561038836600461187a565b610adb565b34801561039957600080fd5b506103ad6103a83660046118de565b610b2f565b6040519015158152602001610151565b60606103c7610b3b565b60020180546103d590611911565b80601f016020809104026020016040519081016040528092919081815260200182805461040190611911565b801561044e5780601f106104235761010080835404028352916020019161044e565b820191906000526020600020905b81548152906001019060200180831161043157829003601f168201915b5050505050905090565b600061046382610b5f565b92915050565b61047582826001610bac565b5050565b6000610483610c61565b905090565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff166104d257604051630ef4733760e31b815260040160405180910390fd5b6104db83610c80565b6104e6816001610ccd565b6104ef82610d6a565b6104f98585610daf565b5050505050565b600061050b82610e23565b9050836001600160a01b0316816001600160a01b03161461053e5760405162a1148160e81b815260040160405180910390fd5b60008061054a84610ec8565b9150915061056f818761055a3390565b6001600160a01b039081169116811491141790565b61059a5761057d8633610b2f565b61059a57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166105c157604051633a954ecd60e21b815260040160405180910390fd5b80156105cc57600082555b6105d4610b3b565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610600610b3b565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b17610637610b3b565b60008681526004919091016020526040812091909155600160e11b841690036106ad5760018401610666610b3b565b6000828152600491909101602052604081205490036106ab57610687610b3b565b5481146106ab5783610697610b3b565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b505050505050565b610712838383604051806020016040528060008152506109f6565b505050565b61071f610ef0565b6001600160a01b0316336001600160a01b031614610757576040516365f4906560e01b81523360048201526024015b60405180910390fd5b6107618282610ccd565b816001600160a01b03167f91d426a6b868d3a9f12f044bfd4dfb1df6e3e050a71a34b090d8ce43a5023c298260405161079e911515815260200190565b60405180910390a25050565b6107b2610ef0565b6001600160a01b0316336001600160a01b0316146107e5576040516365f4906560e01b815233600482015260240161074e565b6107ef8147610f1e565b50565b6107fa610ef0565b6001600160a01b0316336001600160a01b03161461082d576040516365f4906560e01b815233600482015260240161074e565b6107ef81610c80565b600061046382610e23565b600061046382610fcc565b600061085733611035565b61087457604051631eb49d6d60e11b815260040160405180910390fd5b6001600160a01b03821661089b57604051631eb49d6d60e11b815260040160405180910390fd5b60006108a683610fcc565b11156108c557604051631bbdf5c560e31b815260040160405180910390fd5b60006108cf611072565b9050478111156108f257604051631e9acf1760e31b815260040160405180910390fd5b6108fa61109c565b91506109078360016110a6565b8015610917576109178382610f1e565b50919050565b610925610ef0565b6001600160a01b0316336001600160a01b031614610958576040516365f4906560e01b815233600482015260240161074e565b6107ef81610d6a565b606061096b610b3b565b60030180546103d590611911565b80610982610b3b565b336000818152600792909201602090815260408084206001600160a01b03881680865290835293819020805460ff19169515159590951790945592518415158152919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610a01848484610500565b6001600160a01b0383163b15610a3a57610a1d848484846110c0565b610a3a576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6000610483611072565b6060610a55826111ac565b610a7257604051630a14c4b560e41b815260040160405180910390fd5b6000610a8960408051602081019091526000815290565b90508051600003610aa95760405180602001604052806000815250610ad4565b80610ab3846111e8565b604051602001610ac4929190611945565b6040516020818303038152906040525b9392505050565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff16610b2557604051630ef4733760e31b815260040160405180910390fd5b6104758282610daf565b6000610ad4838361122c565b7f234d8962d7c9a6a6604d7f98797e6ad6d7a886804f7409feb26422e27bf8125490565b6000610b6a826111ac565b610b87576040516333d1c03960e21b815260040160405180910390fd5b610b8f610b3b565b60009283526006016020525060409020546001600160a01b031690565b6000610bb783610836565b90508115610bf657336001600160a01b03821614610bf657610bd9813361122c565b610bf6576040516367d9dca160e11b815260040160405180910390fd5b83610bff610b3b565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b600080610c6c610b3b565b60010154610c78610b3b565b540303919050565b8051600003610ca25760405163d872946b60e01b815260040160405180910390fd5b7fa716e9aec1664bc61cb89bba9cb9d1cbd868c2c653ad90d895ac0bacf743cdbc61047582826119ba565b6001600160a01b038216610cf457604051631eb49d6d60e11b815260040160405180910390fd5b801515610d0083611035565b151503610d2057604051636a4648d760e01b815260040160405180910390fd5b6001600160a01b039190911660009081527fa716e9aec1664bc61cb89bba9cb9d1cbd868c2c653ad90d895ac0bacf743cdbd60205260409020805460ff1916911515919091179055565b80600003610d8b5760405163861ef1e360e01b815260040160405180910390fd5b7fa716e9aec1664bc61cb89bba9cb9d1cbd868c2c653ad90d895ac0bacf743cdbb55565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff16610df957604051630ef4733760e31b815260040160405180910390fd5b610e096380ac58cd60e01b611269565b610e19635b5e139f60e01b611269565b6104758282611347565b6000610e2d610b3b565b600083815260049190910160205260408120549150600160e01b82169003610eaf5780600003610eaa57610e5f610b3b565b548210610e7f57604051636f96cda160e11b815260040160405180910390fd5b610e87610b3b565b600019909201600081815260049390930160205260409092205490508015610e7f575b919050565b604051636f96cda160e11b815260040160405180910390fd5b6000806000610ed5610b3b565b60009485526006016020525050604090912080549092909150565b7fa7c3be20e3a76821507555109752fad8a6630ef0362a34dcfcdfef83c99a2537546001600160a01b031690565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f6b576040519150601f19603f3d011682016040523d82523d6000602084013e610f70565b606091505b50509050806107125760405162461bcd60e51b815260206004820152602260248201527f50696f6e656572426173653a206661696c656420746f2073656e6420726577616044820152611c9960f21b606482015260840161074e565b60006001600160a01b038216610ff5576040516323d3ad8160e21b815260040160405180910390fd5b67ffffffffffffffff611006610b3b565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b6001600160a01b031660009081527fa716e9aec1664bc61cb89bba9cb9d1cbd868c2c653ad90d895ac0bacf743cdbd602052604090205460ff1690565b60007fa716e9aec1664bc61cb89bba9cb9d1cbd868c2c653ad90d895ac0bacf743cdbb5b54919050565b6000611096610b3b565b610475828260405180602001604052806000815250611379565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906110f5903390899088908890600401611a7a565b6020604051808303816000875af1925050508015611130575060408051601f3d908101601f1916820190925261112d91810190611ab7565b60015b61118e573d80801561115e576040519150601f19603f3d011682016040523d82523d6000602084013e611163565b606091505b508051600003611186576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60006111b6610b3b565b54821080156104635750600160e01b6111cd610b3b565b60008481526004919091016020526040902054161592915050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806112025750819003601f19909101908152919050565b6000611236610b3b565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b6001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c4602052604090205460ff1615156001146112f6576001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c460205260409020805460ff1916600117905561130f565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b6000611351610b3b565b90506002810161136184826119ba565b506003810161137083826119ba565b50600090555050565b61138383836113ef565b6001600160a01b0383163b1561071257600061139d610b3b565b5490508281035b6113b760008683806001019450866110c0565b6113d4576040516368d2bf6b60e11b815260040160405180910390fd5b8181106113a457816113e4610b3b565b54146104f957600080fd5b60006113f9610b3b565b549050600082900361141e5760405163b562e8dd60e01b815260040160405180910390fd5b680100000000000000018202611432610b3b565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b171761146d610b3b565b600083815260049190910160205260408120919091556001600160a01b0384169083830190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b8181146114f757808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001016114bf565b508160000361151857604051622e076360e81b815260040160405180910390fd5b80611521610b3b565b55506107129050565b60005b8381101561154557818101518382015260200161152d565b50506000910152565b6000815180845261156681602086016020860161152a565b601f01601f19169290920160200192915050565b602081526000610ad4602083018461154e565b60006020828403121561159f57600080fd5b5035919050565b80356001600160a01b0381168114610eaa57600080fd5b600080604083850312156115d057600080fd5b6115d9836115a6565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611618576116186115e7565b604051601f8501601f19908116603f01168101908282118183101715611640576116406115e7565b8160405280935085815286868601111561165957600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261168457600080fd5b610ad4838335602085016115fd565b600080600080600060a086880312156116ab57600080fd5b853567ffffffffffffffff808211156116c357600080fd5b6116cf89838a01611673565b965060208801359150808211156116e557600080fd5b6116f189838a01611673565b9550604088013591508082111561170757600080fd5b5061171488828901611673565b9350506060860135915061172a608087016115a6565b90509295509295909350565b60008060006060848603121561174b57600080fd5b611754846115a6565b9250611762602085016115a6565b9150604084013590509250925092565b6000806040838503121561178557600080fd5b61178e836115a6565b9150602083013580151581146117a357600080fd5b809150509250929050565b6000602082840312156117c057600080fd5b610ad4826115a6565b6000602082840312156117db57600080fd5b813567ffffffffffffffff8111156117f257600080fd5b6111a484828501611673565b6000806000806080858703121561181457600080fd5b61181d856115a6565b935061182b602086016115a6565b925060408501359150606085013567ffffffffffffffff81111561184e57600080fd5b8501601f8101871361185f57600080fd5b61186e878235602084016115fd565b91505092959194509250565b6000806040838503121561188d57600080fd5b823567ffffffffffffffff808211156118a557600080fd5b6118b186838701611673565b935060208501359150808211156118c757600080fd5b506118d485828601611673565b9150509250929050565b600080604083850312156118f157600080fd5b6118fa836115a6565b9150611908602084016115a6565b90509250929050565b600181811c9082168061192557607f821691505b60208210810361091757634e487b7160e01b600052602260045260246000fd5b6000835161195781846020880161152a565b83519083019061196b81836020880161152a565b01949350505050565b601f82111561071257600081815260208120601f850160051c8101602086101561199b5750805b601f850160051c820191505b818110156106ef578281556001016119a7565b815167ffffffffffffffff8111156119d4576119d46115e7565b6119e8816119e28454611911565b84611974565b602080601f831160018114611a1d5760008415611a055750858301515b600019600386901b1c1916600185901b1785556106ef565b600085815260208120601f198616915b82811015611a4c57888601518255948401946001909101908401611a2d565b5085821015611a6a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611aad9083018461154e565b9695505050505050565b600060208284031215611ac957600080fd5b81516001600160e01b031981168114610ad457600080fd",
    "sourceMap": "358:1582:136:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2044:116:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3522:132;;;;;;;;;;-1:-1:-1;3522:132:86;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1119:32:388;;;1101:51;;1089:2;1074:18;3522:132:86;955:203:388;3260:128:86;;;;;;:::i;:::-;;:::i;:::-;;1527:93;;;;;;;;;;;;;:::i;:::-;;;1746:25:388;;;1734:2;1719:18;1527:93:86;1600:177:388;524:303:136;;;;;;;;;;-1:-1:-1;524:303:136;;;;;:::i;:::-;;:::i;4917:2680:86:-;;;;;;:::i;:::-;;:::i;7680:167::-;;;;;;:::i;:::-;;:::i;1422:134:136:-;;;;;;;;;;-1:-1:-1;1422:134:136;;;;;:::i;:::-;;:::i;1293:98::-;;;;;;;;;;-1:-1:-1;1293:98:136;;;;;:::i;:::-;;:::i;1587:93::-;;;;;;;;;;-1:-1:-1;1587:93:136;;;;;:::i;:::-;;:::i;2891:152:86:-;;;;;;;;;;-1:-1:-1;2891:152:86;;;;;:::i;:::-;;:::i;1697:107::-;;;;;;;;;;-1:-1:-1;1697:107:86;;;;;:::i;:::-;;:::i;858:404:136:-;;;;;;;;;;-1:-1:-1;858:404:136;;;;;:::i;:::-;;:::i;1711:105::-;;;;;;;;;;-1:-1:-1;1711:105:136;;;;;:::i;:::-;;:::i;2223:120:86:-;;;;;;;;;;;;;:::i;3957:269::-;;;;;;;;;;-1:-1:-1;3957:269:86;;;;;:::i;:::-;;:::i;8396:348::-;;;;;;:::i;:::-;;:::i;1847:91:136:-;;;;;;;;;;;;;:::i;2436:329:86:-;;;;;;;;;;-1:-1:-1;2436:329:86;;;;;:::i;:::-;;:::i;876:157::-;;;;;;;;;;-1:-1:-1;876:157:86;;;;;:::i;:::-;;:::i;4364:167::-;;;;;;;;;;-1:-1:-1;4364:167:86;;;;;:::i;:::-;;:::i;:::-;;;6523:14:388;;6516:22;6498:41;;6486:2;6471:18;4364:167:86;6358:187:388;2044:116:86;2098:13;2126:23;:21;:23::i;:::-;:29;;2119:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2044:116;:::o;3522:132::-;3606:7;3628:21;3641:7;3628:12;:21::i;:::-;3621:28;3522:132;-1:-1:-1;;3522:132:86:o;3260:128::-;3356:27;3365:2;3369:7;3378:4;3356:8;:27::i;:::-;3260:128;;:::o;1527:93::-;1579:7;1601:14;:12;:14::i;:::-;1594:21;;1527:93;:::o;524:303:136:-;186:68:51;1263:42:50;;;;;;1258:100;;1320:38;;-1:-1:-1;;;1320:38:50;;;;;;;;;;;1258:100;700:20:136::1;712:7;700:11;:20::i;:::-;726:24;738:5;745:4;726:11;:24::i;:::-;756:22;771:6;756:14;:22::i;:::-;784:38;809:4;815:6;784:24;:38::i;:::-;524:303:::0;;;;;:::o;4917:2680:86:-;5036:27;5066;5085:7;5066:18;:27::i;:::-;5036:57;;5145:4;-1:-1:-1;;;;;5104:45:86;5120:19;-1:-1:-1;;;;;5104:45:86;;5100:92;;5164:28;;-1:-1:-1;;;5164:28:86;;;;;;;;;;;5100:92;5207:27;5242:23;5274:35;5301:7;5274:26;:35::i;:::-;5199:110;;;;5398:68;5423:15;5440:4;5446:19;29472:10:87;;29390:97;5446:19:86;-1:-1:-1;;;;;11873:32:87;;;11731:28;;11988:20;;12010:30;;11985:56;;11464:587;5398:68:86;5393:181;;5479:43;5496:4;29472:10:87;4364:167:86;:::i;5479:43::-;5474:100;;5539:35;;-1:-1:-1;;;5539:35:86;;;;;;;;;;;5474:100;-1:-1:-1;;;;;5585:16:86;;5581:52;;5610:23;;-1:-1:-1;;;5610:23:86;;;;;;;;;;;5581:52;5758:15;5755:135;;;5880:1;5859:19;5852:30;5755:135;6230:23;:21;:23::i;:::-;-1:-1:-1;;;;;6230:48:86;;;;;;:42;;;;;:48;;;;;6228:50;;-1:-1:-1;;6228:50:86;;;6316:23;:21;:23::i;:::-;-1:-1:-1;;;;;6316:46:86;;;;;;:42;;;;;:46;;;;;;6314:48;;;;;;10232:11:87;10207:23;10203:41;10190:63;-1:-1:-1;;;10190:63:87;6590:23:86;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:184;;;;-1:-1:-1;;;6879:47:86;;:52;;6875:625;;6975:1;6965:11;;7080:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;:59;;7076:416;;7220:23;:21;:23::i;:::-;:37;7205:52;;7201:281;;7450:19;7365:23;:21;:23::i;:::-;:82;;;;:41;;;;;:82;;;;;:104;7201:281;6933:567;6875:625;7536:7;7532:2;-1:-1:-1;;;;;7517:27:86;7526:4;-1:-1:-1;;;;;7517:27:86;;;;;;;;;;;7550:42;5030:2567;;;4917:2680;;;:::o;7680:167::-;7803:39;7820:4;7826:2;7830:7;7803:39;;;;;;;;;;;;:16;:39::i;:::-;7680:167;;;:::o;1422:134:136:-;300:8:60;:6;:8::i;:::-;-1:-1:-1;;;;;286:22:60;:10;-1:-1:-1;;;;;286:22:60;;282:79;;325:29;;-1:-1:-1;;;325:29:60;;343:10;325:29;;;1101:51:388;1074:18;;325:29:60;;;;;;;;282:79;1493:24:136::1;1505:4;1511:5;1493:11;:24::i;:::-;1539:4;-1:-1:-1::0;;;;;1528:23:136::1;;1545:5;1528:23;;;;6523:14:388::0;6516:22;6498:41;;6486:2;6471:18;;6358:187;1528:23:136::1;;;;;;;;1422:134:::0;;:::o;1293:98::-;300:8:60;:6;:8::i;:::-;-1:-1:-1;;;;;286:22:60;:10;-1:-1:-1;;;;;286:22:60;;282:79;;325:29;;-1:-1:-1;;;325:29:60;;343:10;325:29;;;1101:51:388;1074:18;;325:29:60;955:203:388;282:79:60;1348:38:136::1;1360:2;1364:21;1348:11;:38::i;:::-;1293:98:::0;:::o;1587:93::-;300:8:60;:6;:8::i;:::-;-1:-1:-1;;;;;286:22:60;:10;-1:-1:-1;;;;;286:22:60;;282:79;;325:29;;-1:-1:-1;;;325:29:60;;343:10;325:29;;;1101:51:388;1074:18;;325:29:60;955:203:388;282:79:60;1655:20:136::1;1667:7;1655:11;:20::i;2891:152:86:-:0;2971:7;3009:27;3028:7;3009:18;:27::i;1697:107::-;1760:7;1782:17;1793:5;1782:10;:17::i;858:404:136:-;916:15;465:22;476:10;465;:22::i;:::-;460:48;;496:12;;-1:-1:-1;;;496:12:136;;;;;;;;;;;460:48;-1:-1:-1;;;;;943:16:136;::::1;939:41;;968:12;;-1:-1:-1::0;;;968:12:136::1;;;;;;;;;;;939:41;1007:1;990:14;1001:2;990:10;:14::i;:::-;:18;986:46;;;1017:15;;-1:-1:-1::0;;;1017:15:136::1;;;;;;;;;;;986:46;1039:14;1056:16;:14;:16::i;:::-;1039:33;;1092:21;1083:6;:30;1079:64;;;1122:21;;-1:-1:-1::0;;;1122:21:136::1;;;;;;;;;;;1079:64;1160:14;:12;:14::i;:::-;1150:24;;1181:16;1191:2;1195:1;1181:9;:16::i;:::-;1208:10:::0;;1204:54:::1;;1228:23;1240:2;1244:6;1228:11;:23::i;:::-;933:329;858:404:::0;;;:::o;1711:105::-;300:8:60;:6;:8::i;:::-;-1:-1:-1;;;;;286:22:60;:10;-1:-1:-1;;;;;286:22:60;;282:79;;325:29;;-1:-1:-1;;;325:29:60;;343:10;325:29;;;1101:51:388;1074:18;;325:29:60;955:203:388;282:79:60;1782:29:136::1;1797:13;1782:14;:29::i;2223:120:86:-:0;2279:13;2307:23;:21;:23::i;:::-;:31;;2300:38;;;;;:::i;3957:269::-;4147:8;4059:23;:21;:23::i;:::-;29472:10:87;4059:63:86;;;;:42;;;;;:63;;;;;;;;-1:-1:-1;;;;;4059:85:86;;;;;;;;;;;;:96;;-1:-1:-1;;4059:96:86;;;;;;;;;;;4166:55;;6523:14:388;;6516:22;6498:41;;4059:85:86;;29472:10:87;;4166:55:86;;6471:18:388;4166:55:86;;;;;;;3957:269;;:::o;8396:348::-;8543:31;8556:4;8562:2;8566:7;8543:12;:31::i;:::-;-1:-1:-1;;;;;8584:14:86;;;:19;8580:160;;8616:56;8647:4;8653:2;8657:7;8666:5;8616:30;:56::i;:::-;8611:129;;8691:40;;-1:-1:-1;;;8691:40:86;;;;;;;;;;;8611:129;8396:348;;;;:::o;1847:91:136:-;1895:7;1917:16;:14;:16::i;2436:329:86:-;2517:13;2543:16;2551:7;2543;:16::i;:::-;2538:59;;2568:29;;-1:-1:-1;;;2568:29:86;;;;;;;;;;;2538:59;2604:21;2628:10;6624:9:87;;;;;;;;;-1:-1:-1;6624:9:87;;;6552:86;2628:10:86;2604:34;;2663:7;2657:21;2682:1;2657:26;:103;;;;;;;;;;;;;;;;;2718:7;2727:18;2737:7;2727:9;:18::i;:::-;2701:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2657:103;2644:116;2436:329;-1:-1:-1;;;2436:329:86:o;876:157::-;186:68:51;1263:42:50;;;;;;1258:100;;1320:38;;-1:-1:-1;;;1320:38:50;;;;;;;;;;;1258:100;988:40:86::1;1013:5;1020:7;988:24;:40::i;4364:167::-:0;4473:4;4492:34;4510:5;4517:8;4492:17;:34::i;1557:139:88:-;183:44;;1557:139::o;22507:230:87:-;22585:7;22605:16;22613:7;22605;:16::i;:::-;22600:64;;22630:34;;-1:-1:-1;;;22630:34:87;;;;;;;;;;;22600:64;22678:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;22678:48:87;;;:54;-1:-1:-1;;;;;22678:54:87;;22507:230::o;23287:439::-;23393:13;23409:17;23418:7;23409:8;:17::i;:::-;23393:33;;23437:13;23433:184;;;29472:10;-1:-1:-1;;;;;23462:28:87;;;23458:159;;23505:45;23523:5;29472:10;23505:17;:45::i;:::-;23500:117;;23571:35;;-1:-1:-1;;;23571:35:87;;;;;;;;;;;23500:117;23680:2;23623:23;:21;:23::i;:::-;:48;;;;:39;;;;;:48;;;;;;:59;;-1:-1:-1;;;;;;23623:59:87;-1:-1:-1;;;;;23623:59:87;;;;;;23693:28;23623:48;;23693:28;;;;;;;;;;23623:48;23693:28;23387:339;23287:439;;;:::o;2985:351::-;3032:7;;3263:23;:21;:23::i;:::-;:36;;;3215:23;:21;:23::i;:::-;:37;:84;:110;;2985:351;-1:-1:-1;2985:351:87:o;941:171:135:-;1010:7;1004:21;1029:1;1004:26;1000:60;;1039:21;;-1:-1:-1;;;1039:21:135;;;;;;;;;;;1000:60;1066:31;:41;1100:7;1066:31;:41;:::i;420:221::-;-1:-1:-1;;;;;486:18:135;;482:43;;513:12;;-1:-1:-1;;;513:12:135;;;;;;;;;;;482:43;555:5;535:25;;:16;546:4;535:10;:16::i;:::-;:25;;;531:54;;569:16;;-1:-1:-1;;;569:16:135;;;;;;;;;;;531:54;-1:-1:-1;;;;;591:37:135;;;;;;;;:31;:37;;;;;:45;;-1:-1:-1;;591:45:135;;;;;;;;;;420:221::o;1403:165::-;1466:10;1480:1;1466:15;1462:48;;1490:20;;-1:-1:-1;;;1490:20:135;;;;;;;;;;;1462:48;180:42:137;1516:47:135;1403:165::o;1037:299:86:-;186:68:51;1263:42:50;;;;;;1258:100;;1320:38;;-1:-1:-1;;;1320:38:50;;;;;;;;;;;1258:100;1159:25:86::1;-1:-1:-1::0;;;1159:13:86::1;:25::i;:::-;1224;-1:-1:-1::0;;;1224:13:86::1;:25::i;:::-;1297:34;1316:5;1323:7;1297:18;:34::i;7836:1497:87:-:0;7912:14;7983:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;;;;8069:24:87;;:29;;8065:1214;;8190:6;8200:1;8190:11;8186:833;;8230:23;:21;:23::i;:::-;:37;8219:48;;8215:104;;8288:31;;-1:-1:-1;;;8288:31:87;;;;;;;;;;;8215:104;8864:23;:21;:23::i;:::-;-1:-1:-1;;8906:9:87;;;8864:52;;;;:41;;;;;:52;;;;;;;;-1:-1:-1;8944:25:87;;8806:203;8944:25;;7836:1497;;;:::o;8065:1214::-;9297:31;;-1:-1:-1;;;9297:31:87;;;;;;;;;;;12151:478;12247:27;12276:23;12309:38;12350:30;:28;:30::i;:::-;:62;;;;:53;;:62;;-1:-1:-1;;12350:62:87;;;;12593:26;;12350:62;;12593:26;;-1:-1:-1;12151:478:87:o;376:103:60:-;180:56:62;445:29:60;-1:-1:-1;;;;;445:29:60;;376:103::o;1686:174:135:-;1751:12;1769:2;-1:-1:-1;;;;;1769:7:135;1784:6;1769:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1750:45;;;1809:7;1801:54;;;;-1:-1:-1;;;1801:54:135;;10052:2:388;1801:54:135;;;10034:21:388;10091:2;10071:18;;;10064:30;10130:34;10110:18;;;10103:62;-1:-1:-1;;;10181:18:388;;;10174:32;10223:19;;1801:54:135;9850:398:388;3340:242:87;3398:7;-1:-1:-1;;;;;3417:19:87;;3413:60;;3445:28;;-1:-1:-1;;;3445:28:87;;;;;;;;;;;3413:60;571:13;3492:23;:21;:23::i;:::-;:42;;:49;3535:5;-1:-1:-1;;;;;3492:49:87;-1:-1:-1;;;;;3492:49:87;;;;;;;;;;;;;:85;3479:98;;3340:242;;;:::o;645:118:135:-;-1:-1:-1;;;;;721:37:135;702:4;721:37;;;:31;:37;;;;;;;;;645:118::o;1572:110::-;1621:7;180:42:137;1643:23:135;:34;;1572:110;-1:-1:-1;1572:110:135:o;4042:119:87:-;4097:7;4119:23;:21;:23::i;21752:104::-;21824:27;21834:2;21838:8;21824:27;;;;;;;;;;;;:9;:27::i;14710:674::-;14873:139;;-1:-1:-1;;;14873:139:87;;14851:4;;-1:-1:-1;;;;;14873:56:87;;;;;:139;;29472:10;;14968:4;;14982:7;;14999:5;;14873:139;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14873:139:87;;;;;;;;-1:-1:-1;;14873:139:87;;;;;;;;;;;;:::i;:::-;;;14863:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15195:6;:13;15212:1;15195:18;15191:183;;15232:40;;-1:-1:-1;;;15232:40:87;;;;;;;;;;;15191:183;15348:6;15342:13;15333:6;15329:2;15325:15;15318:38;14863:517;-1:-1:-1;;;;;;15064:83:87;-1:-1:-1;;;15064:83:87;;-1:-1:-1;14863:517:87;14710:674;;;;;;:::o;11067:301::-;11132:4;11203:23;:21;:23::i;:::-;:37;11193:47;;11157:187;;;;;-1:-1:-1;;;11271:23:87;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;:68;:73;11144:200;11067:301;-1:-1:-1;;11067:301:87:o;29576:1574::-;29649:17;30043:4;30036;30030:11;30026:22;30121:1;30115:4;30108:15;30182:4;30179:1;30175:12;30168:19;;;30250:1;30245:3;30238:14;30339:3;30549:5;30531:419;30596:1;30591:3;30587:11;30580:18;;30764:2;30758:4;30754:13;30750:2;30746:22;30741:3;30733:36;30856:2;30846:13;;30911:25;30531:419;30911:25;-1:-1:-1;30972:13:87;;;-1:-1:-1;;31073:14:87;;;31121:19;;;31073:14;29576:1574;-1:-1:-1;29576:1574:87:o;22317:186::-;22420:4;22439:23;:21;:23::i;:::-;-1:-1:-1;;;;;22439:49:87;;;;;;;:42;;;;;:49;;;;;;;;:59;;;;;;;;;;-1:-1:-1;22439:59:87;;;;;22317:186::o;461:282:53:-;-1:-1:-1;;;;;;1130:62:53;;1105:4;1130:62;;;186:68:55;1130:62:53;;;;;;;;:70;;:62;:70;519:182;;-1:-1:-1;;;;;;565:62:53;;:49;:62;;;186:68:55;565:62:53;;;;;:69;;-1:-1:-1;;565:69:53;630:4;565:69;;;519:182;;;662:32;;-1:-1:-1;;;662:32:53;;;;;;;;;;;519:182;711:27;;-1:-1:-1;;;;;;711:27:53;;;;;;;;461:282;:::o;2560:247:87:-;2657:32;2692:23;:21;:23::i;:::-;2657:58;-1:-1:-1;2722:8:87;;;:15;2733:4;2722:8;:15;:::i;:::-;-1:-1:-1;2743:10:87;;;:19;2756:6;2743:10;:19;:::i;:::-;-1:-1:-1;3948:7:87;2768:34;;-1:-1:-1;;2560:247:87:o;21084:597::-;21192:19;21198:2;21202:8;21192:5;:19::i;:::-;-1:-1:-1;;;;;21240:14:87;;;:19;21236:435;;21271:11;21285:23;:21;:23::i;:::-;:37;;-1:-1:-1;21348:14:87;;;21372:189;21392:62;21431:1;21435:2;21439:7;;;;;;21448:5;21392:30;:62::i;:::-;21387:143;;21477:40;;-1:-1:-1;;;21477:40:87;;;;;;;;;;;21387:143;21556:3;21548:5;:11;21372:189;;21649:3;21608:23;:21;:23::i;:::-;:37;:44;21604:58;;21654:8;;;15802:2642;15870:20;15893:23;:21;:23::i;:::-;:37;;-1:-1:-1;15893:37:87;15940:13;;;15936:44;;15962:18;;-1:-1:-1;;;15962:18:87;;;;;;;;;;;15936:44;16477:32;16457:53;;16399:23;:21;:23::i;:::-;-1:-1:-1;;;;;16399:46:87;;;;;;:42;;;;;:46;;;;;;:111;;;;;;;;;10232:11;10207:23;10203:41;-1:-1:-1;10627:15:87;;10601:24;10597:46;10200:52;10190:63;16710:23;:21;:23::i;:::-;:71;;;;:41;;;;;:71;;;;;:188;;;;-1:-1:-1;;;;;17419:25:87;;;16945:23;;;;16761:12;;17419:25;;17605;16710:71;;17491:260;18029:1;18015:12;18011:20;17980:275;18061:3;18052:7;18049:16;17980:275;;18237:7;18227:8;18224:1;18197:25;18194:1;18191;18186:59;18103:1;18090:15;17980:275;;;17984:57;18274:8;18286:1;18274:13;18270:45;;18296:19;;-1:-1:-1;;;18296:19:87;;;;;;;;;;;18270:45;18364:3;18324:23;:21;:23::i;:::-;:43;-1:-1:-1;18379:60:87;;-1:-1:-1;8396:348:86;14:250:388;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:388;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:388;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:388:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;770:180::-;829:6;882:2;870:9;861:7;857:23;853:32;850:52;;;898:1;895;888:12;850:52;-1:-1:-1;921:23:388;;770:180;-1:-1:-1;770:180:388:o;1163:173::-;1231:20;;-1:-1:-1;;;;;1280:31:388;;1270:42;;1260:70;;1326:1;1323;1316:12;1341:254;1409:6;1417;1470:2;1458:9;1449:7;1445:23;1441:32;1438:52;;;1486:1;1483;1476:12;1438:52;1509:29;1528:9;1509:29;:::i;:::-;1499:39;1585:2;1570:18;;;;1557:32;;-1:-1:-1;;;1341:254:388:o;1782:127::-;1843:10;1838:3;1834:20;1831:1;1824:31;1874:4;1871:1;1864:15;1898:4;1895:1;1888:15;1914:632;1979:5;2009:18;2050:2;2042:6;2039:14;2036:40;;;2056:18;;:::i;:::-;2131:2;2125:9;2099:2;2185:15;;-1:-1:-1;;2181:24:388;;;2207:2;2177:33;2173:42;2161:55;;;2231:18;;;2251:22;;;2228:46;2225:72;;;2277:18;;:::i;:::-;2317:10;2313:2;2306:22;2346:6;2337:15;;2376:6;2368;2361:22;2416:3;2407:6;2402:3;2398:16;2395:25;2392:45;;;2433:1;2430;2423:12;2392:45;2483:6;2478:3;2471:4;2463:6;2459:17;2446:44;2538:1;2531:4;2522:6;2514;2510:19;2506:30;2499:41;;;;1914:632;;;;;:::o;2551:222::-;2594:5;2647:3;2640:4;2632:6;2628:17;2624:27;2614:55;;2665:1;2662;2655:12;2614:55;2687:80;2763:3;2754:6;2741:20;2734:4;2726:6;2722:17;2687:80;:::i;2778:887::-;2903:6;2911;2919;2927;2935;2988:3;2976:9;2967:7;2963:23;2959:33;2956:53;;;3005:1;3002;2995:12;2956:53;3045:9;3032:23;3074:18;3115:2;3107:6;3104:14;3101:34;;;3131:1;3128;3121:12;3101:34;3154:50;3196:7;3187:6;3176:9;3172:22;3154:50;:::i;:::-;3144:60;;3257:2;3246:9;3242:18;3229:32;3213:48;;3286:2;3276:8;3273:16;3270:36;;;3302:1;3299;3292:12;3270:36;3325:52;3369:7;3358:8;3347:9;3343:24;3325:52;:::i;:::-;3315:62;;3430:2;3419:9;3415:18;3402:32;3386:48;;3459:2;3449:8;3446:16;3443:36;;;3475:1;3472;3465:12;3443:36;;3498:52;3542:7;3531:8;3520:9;3516:24;3498:52;:::i;:::-;3488:62;;;3597:2;3586:9;3582:18;3569:32;3559:42;;3620:39;3654:3;3643:9;3639:19;3620:39;:::i;:::-;3610:49;;2778:887;;;;;;;;:::o;3670:328::-;3747:6;3755;3763;3816:2;3804:9;3795:7;3791:23;3787:32;3784:52;;;3832:1;3829;3822:12;3784:52;3855:29;3874:9;3855:29;:::i;:::-;3845:39;;3903:38;3937:2;3926:9;3922:18;3903:38;:::i;:::-;3893:48;;3988:2;3977:9;3973:18;3960:32;3950:42;;3670:328;;;;;:::o;4003:347::-;4068:6;4076;4129:2;4117:9;4108:7;4104:23;4100:32;4097:52;;;4145:1;4142;4135:12;4097:52;4168:29;4187:9;4168:29;:::i;:::-;4158:39;;4247:2;4236:9;4232:18;4219:32;4294:5;4287:13;4280:21;4273:5;4270:32;4260:60;;4316:1;4313;4306:12;4260:60;4339:5;4329:15;;;4003:347;;;;;:::o;4355:186::-;4414:6;4467:2;4455:9;4446:7;4442:23;4438:32;4435:52;;;4483:1;4480;4473:12;4435:52;4506:29;4525:9;4506:29;:::i;4546:322::-;4615:6;4668:2;4656:9;4647:7;4643:23;4639:32;4636:52;;;4684:1;4681;4674:12;4636:52;4724:9;4711:23;4757:18;4749:6;4746:30;4743:50;;;4789:1;4786;4779:12;4743:50;4812;4854:7;4845:6;4834:9;4830:22;4812:50;:::i;4873:667::-;4968:6;4976;4984;4992;5045:3;5033:9;5024:7;5020:23;5016:33;5013:53;;;5062:1;5059;5052:12;5013:53;5085:29;5104:9;5085:29;:::i;:::-;5075:39;;5133:38;5167:2;5156:9;5152:18;5133:38;:::i;:::-;5123:48;;5218:2;5207:9;5203:18;5190:32;5180:42;;5273:2;5262:9;5258:18;5245:32;5300:18;5292:6;5289:30;5286:50;;;5332:1;5329;5322:12;5286:50;5355:22;;5408:4;5400:13;;5396:27;-1:-1:-1;5386:55:388;;5437:1;5434;5427:12;5386:55;5460:74;5526:7;5521:2;5508:16;5503:2;5499;5495:11;5460:74;:::i;:::-;5450:84;;;4873:667;;;;;;;:::o;5545:543::-;5633:6;5641;5694:2;5682:9;5673:7;5669:23;5665:32;5662:52;;;5710:1;5707;5700:12;5662:52;5750:9;5737:23;5779:18;5820:2;5812:6;5809:14;5806:34;;;5836:1;5833;5826:12;5806:34;5859:50;5901:7;5892:6;5881:9;5877:22;5859:50;:::i;:::-;5849:60;;5962:2;5951:9;5947:18;5934:32;5918:48;;5991:2;5981:8;5978:16;5975:36;;;6007:1;6004;5997:12;5975:36;;6030:52;6074:7;6063:8;6052:9;6048:24;6030:52;:::i;:::-;6020:62;;;5545:543;;;;;:::o;6093:260::-;6161:6;6169;6222:2;6210:9;6201:7;6197:23;6193:32;6190:52;;;6238:1;6235;6228:12;6190:52;6261:29;6280:9;6261:29;:::i;:::-;6251:39;;6309:38;6343:2;6332:9;6328:18;6309:38;:::i;:::-;6299:48;;6093:260;;;;;:::o;6550:380::-;6629:1;6625:12;;;;6672;;;6693:61;;6747:4;6739:6;6735:17;6725:27;;6693:61;6800:2;6792:6;6789:14;6769:18;6766:38;6763:161;;6846:10;6841:3;6837:20;6834:1;6827:31;6881:4;6878:1;6871:15;6909:4;6906:1;6899:15;6935:496;7114:3;7152:6;7146:13;7168:66;7227:6;7222:3;7215:4;7207:6;7203:17;7168:66;:::i;:::-;7297:13;;7256:16;;;;7319:70;7297:13;7256:16;7366:4;7354:17;;7319:70;:::i;:::-;7405:20;;6935:496;-1:-1:-1;;;;6935:496:388:o;7562:545::-;7664:2;7659:3;7656:11;7653:448;;;7700:1;7725:5;7721:2;7714:17;7770:4;7766:2;7756:19;7840:2;7828:10;7824:19;7821:1;7817:27;7811:4;7807:38;7876:4;7864:10;7861:20;7858:47;;;-1:-1:-1;7899:4:388;7858:47;7954:2;7949:3;7945:12;7942:1;7938:20;7932:4;7928:31;7918:41;;8009:82;8027:2;8020:5;8017:13;8009:82;;;8072:17;;;8053:1;8042:13;8009:82;;8283:1352;8409:3;8403:10;8436:18;8428:6;8425:30;8422:56;;;8458:18;;:::i;:::-;8487:97;8577:6;8537:38;8569:4;8563:11;8537:38;:::i;:::-;8531:4;8487:97;:::i;:::-;8639:4;;8703:2;8692:14;;8720:1;8715:663;;;;9422:1;9439:6;9436:89;;;-1:-1:-1;9491:19:388;;;9485:26;9436:89;-1:-1:-1;;8240:1:388;8236:11;;;8232:24;8228:29;8218:40;8264:1;8260:11;;;8215:57;9538:81;;8685:944;;8715:663;7509:1;7502:14;;;7546:4;7533:18;;-1:-1:-1;;8751:20:388;;;8869:236;8883:7;8880:1;8877:14;8869:236;;;8972:19;;;8966:26;8951:42;;9064:27;;;;9032:1;9020:14;;;;8899:19;;8869:236;;;8873:3;9133:6;9124:7;9121:19;9118:201;;;9194:19;;;9188:26;-1:-1:-1;;9277:1:388;9273:14;;;9289:3;9269:24;9265:37;9261:42;9246:58;9231:74;;9118:201;-1:-1:-1;;;;;9365:1:388;9349:14;;;9345:22;9332:36;;-1:-1:-1;8283:1352:388:o;10253:489::-;-1:-1:-1;;;;;10522:15:388;;;10504:34;;10574:15;;10569:2;10554:18;;10547:43;10621:2;10606:18;;10599:34;;;10669:3;10664:2;10649:18;;10642:31;;;10447:4;;10690:46;;10716:19;;10708:6;10690:46;:::i;:::-;10682:54;10253:489;-1:-1:-1;;;;;;10253:489:388:o;10747:290::-;10816:6;10869:2;10857:9;10848:7;10844:23;10840:32;10837:52;;;10885:1;10882;10875:12;10837:52;10911:16;;-1:-1:-1;;;;;;10956:32:388;;10946:43;;10936:71;;11003:1;11000;10993:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "__ERC721A_init(string,string)": "d2f01f19",
    "__Pioneer_init(string,string,string,uint256,address)": "1aa23ef5",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "getMintReward()": "c8332451",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mintTo(address)": "755edd17",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setAllowed(address,bool)": "4697f05d",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setBaseURI(string)": "55f804b3",
    "setMintReward(uint256)": "80e801ba",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "withdraw(address)": "51cff8d9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initializable_InInitializingState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initializable_NotInInitializingState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Introspection_AlreadySupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Introspection_NotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRewardValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSupplyReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonExistentTokenURI\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"InterfaceAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"InterfaceRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allow\",\"type\":\"bool\"}],\"name\":\"SetAllowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"name\":\"__ERC721A_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"__Pioneer_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allow\",\"type\":\"bool\"}],\"name\":\"setAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMintReward\",\"type\":\"uint256\"}],\"name\":\"setMintReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"OwnershipTransferred(address,address)\":{\"details\":\"This emits when ownership of a contract changes.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getMintReward()\":{\"returns\":{\"_0\":\"Mint reward\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"mintTo(address)\":{\"params\":{\"to\":\"Address to mint to\"},\"returns\":{\"tokenId\":\"New token ID\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setAllowed(address,bool)\":{\"params\":{\"allow\":\"Whether or not to allow the address to mint new tokens\",\"user\":\"Address to allow or disallow\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setBaseURI(string)\":{\"params\":{\"baseURI\":\"New base URI\"}},\"setMintReward(uint256)\":{\"params\":{\"mintReward\":\"New mint reward\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"withdraw(address)\":{\"params\":{\"to\":\"Address to withdraw to\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"InterfaceAdded(bytes4)\":{\"notice\":\"Emitted when an interface is added to the contract via `_addInterface`.\"},\"InterfaceRemoved(bytes4)\":{\"notice\":\"Emitted when an interface is removed from the contract via `_removeInterface`.\"}},\"kind\":\"user\",\"methods\":{\"getMintReward()\":{\"notice\":\"Get the mint reward\"},\"mintTo(address)\":{\"notice\":\"Mint a new token\"},\"setAllowed(address,bool)\":{\"notice\":\"Allow or disallow an address to mint new tokens\"},\"setBaseURI(string)\":{\"notice\":\"Set the base URI for all token IDs\"},\"setMintReward(uint256)\":{\"notice\":\"Set the mint reward\"},\"withdraw(address)\":{\"notice\":\"Withdraw the contract balance to an address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/tokens/pioneer/PioneerFacet.sol\":\"PioneerFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC721A/=lib/ERC721A/contracts/\",\":base64-sol/=lib/base64/\",\":base64/=lib/base64/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=lib/operator-filter-registry/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"contracts/src/diamond/facets/Facet.sol\":{\"keccak256\":\"0x8213b85d1271bc3c2aa9842979c8ad825066c4c9addc55296d53b6747e5198ba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b4e88e869c99e65f0caeb9d03938e78c578a869783b9f20c05f4ba52e7ca493d\",\"dweb:/ipfs/QmRqPmg8BYD1V6Cd8kfihCQ7nn2DAsgRjGW2MJvc7Evnjt\"]},\"contracts/src/diamond/facets/initializable/Initializable.sol\":{\"keccak256\":\"0x2a4f3a99b3b3ac6c2c18431cea80b40774c1d8265ddefac21b26da561e069096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36dbba730942b1fd345f242051ea7f33e979f70392fbd929d8522c0c9c6dd367\",\"dweb:/ipfs/QmYMvYnvg9zQJpDQX9yMHZ1AET9Vx7UXtDenXAs1JhfPpd\"]},\"contracts/src/diamond/facets/initializable/InitializableStorage.sol\":{\"keccak256\":\"0x99dfe047dbb8df48a7490f63939420dd990fb5fd3b3a03c42d0cb9c6f4f9eefa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e8f6d4bff257324e4544cacadd9fee42bada459f457fb707fef90bcfe0e895a\",\"dweb:/ipfs/QmYWEam5VcMt5ViNMKRkaxoD84MK2MewS5iWwSES589Vma\"]},\"contracts/src/diamond/facets/introspection/IERC165.sol\":{\"keccak256\":\"0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2\",\"dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV\"]},\"contracts/src/diamond/facets/introspection/IntrospectionBase.sol\":{\"keccak256\":\"0xbdc803a2179838316625692285c4b720cdbae1c78e5f9a68560719c909253d00\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://776a4490b22b01b554770d71afde7bed4c32ea639a08c84a194076eddf5517be\",\"dweb:/ipfs/QmcPVR9T7vXccCg7RXQ4wXtHaBG6ugrEXk8qnhRpsYMVd6\"]},\"contracts/src/diamond/facets/introspection/IntrospectionStorage.sol\":{\"keccak256\":\"0xd2ec3bbe4d15f9232006b41e0a80a5127006243ee596754af77bd3926045782a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8c47e18bfd34a687ce9ec75dc1f1fa5bca088e97e59aad2ac3fdb0989d06d7e6\",\"dweb:/ipfs/QmdktQXV7PKABzh43SZqemdTG25RxMaMsgpXTTUvZUxmfU\"]},\"contracts/src/diamond/facets/ownable/IERC173.sol\":{\"keccak256\":\"0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620\",\"dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD\"]},\"contracts/src/diamond/facets/ownable/OwnableBase.sol\":{\"keccak256\":\"0xdab71f70fb02899801d2330e861918f67ec84a89e2e15074b4a3ef132d9c78d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9f37d1dbeb745d1c61aa983c0de7e1d2da21f5b6354167492c528b5599323f07\",\"dweb:/ipfs/QmdHYdsXyohNAPqthXvo7ro3TS6rf8Y6gE6y6NhUWnYnwq\"]},\"contracts/src/diamond/facets/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x1d2aa559d8156f0ae1d6adeffa46fa04697b533e94f8872fd4e1c6ec99be4be3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://136f0417a3c58ae4b80c640355fa9b46ea1d3ae06943d08d6164db10833652a6\",\"dweb:/ipfs/QmUv5FULyBPKL3LXtdeuBwoLFF4JtWNo3uUsoNeXoh7den\"]},\"contracts/src/diamond/facets/token/ERC721A/ERC721A.sol\":{\"keccak256\":\"0x321ea4cd6a2617d12cdf6bcd84095072de32ecfddfa95df83e58711c4684e325\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://95b09721ac18cc7d34859486008989238dfc9ff9bbafb300ce7a3b2ecfb201a1\",\"dweb:/ipfs/Qmcdzd3hLsafxVkDTYs2japBR5UpmeJ7VYWrNFbSf1kboX\"]},\"contracts/src/diamond/facets/token/ERC721A/ERC721ABase.sol\":{\"keccak256\":\"0x1e0f21db21117ca705182e671aca5f24d157ca9003268450582d3f49eb2b8ece\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4348c9408175707af61dd9d5d0eda909066c14eb35e1fc88604b9d58eed0d667\",\"dweb:/ipfs/QmUk514VMTYx1skNfooNs5q53x7SoxonHuEYpsDSwvoyEG\"]},\"contracts/src/diamond/facets/token/ERC721A/ERC721AStorage.sol\":{\"keccak256\":\"0xd6940108c888555331b972b7ea5d4842ddeb7c222feab4565c166c12f85900ba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecbc54202867c7b11e57ca2cbcbe33aa5701ea1593a70bfa82a0ccc358682767\",\"dweb:/ipfs/QmScG3JBtGEoDgxipmP8EbAgZxZF9F8aWaZ9gYBqqBweNH\"]},\"contracts/src/diamond/facets/token/ERC721A/IERC721A.sol\":{\"keccak256\":\"0x1473085ffec67f1e059e56baa36be6d3379f7b876147cd62b9854cea8f52cce9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6b3bd85f29ed8e16ad5622e40966c92b58baf988880da4a676142957462ded06\",\"dweb:/ipfs/QmSkGb7ByX4DTvNPh6egoSAs71b7w1NHoYfPUPT9LdtJY9\"]},\"contracts/src/tokens/pioneer/IPioneer.sol\":{\"keccak256\":\"0x4f91225c8e8742e3f67730e2db12282a8e5874def299c6596f2aa0f8ec15fa18\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c657bb6b79963a1a3833f02a31294e93473b1fe53e877ca9613bd3495f2209d\",\"dweb:/ipfs/QmRqtMZwPuYivqGXCdq7hLVemB4qDwm24gECPyKpiWEfoj\"]},\"contracts/src/tokens/pioneer/PioneerBase.sol\":{\"keccak256\":\"0xed387a91e3cca88ce3ce44c2cb979e7c3b77cefa71a61b1579967733bb03754a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://03640b40418c684aee563b8a48e0db9f8cb5096fda4cd3fcdcb9d425262f411a\",\"dweb:/ipfs/QmTMK9MCibUbXQoD66ZaowUUWruBpZWq6ju3whockogZpt\"]},\"contracts/src/tokens/pioneer/PioneerFacet.sol\":{\"keccak256\":\"0x7d4a3eb6413660efa2a7001ec86e18bdb0ce214ff339faa470abad37e4f584a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://361ab8df4d36a6e9afbbb326e2e45c74ca3a2be8af319dc46717d0b2c1b8eb3c\",\"dweb:/ipfs/QmTgbVcLPPeYSeuRfkjSUPtLZvuj2fj2YMbBxVk2c3Xinp\"]},\"contracts/src/tokens/pioneer/PioneerStorage.sol\":{\"keccak256\":\"0xab927497dc811d5aa366073cb54c9f957895b1e8ce187306d4238f8d765d241b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c51226809304cf0cb20ef85cf032e6d2b49f5ff5bd7617f9897316dbbafcfd10\",\"dweb:/ipfs/QmT4TNfdGwLjoSpCKCpvVG2rAvB2vQZpCsedcGWV6MVvHY\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Initializable_InInitializingState"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Initializable_NotInInitializingState"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Introspection_AlreadySupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Introspection_NotSupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidRewardValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxSupplyReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonExistentTokenURI"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__ZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "version",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "InterfaceAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "InterfaceRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "allow",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetAllowed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "__ERC721A_init"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "__Pioneer_init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMintReward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "allow",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBaseURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newMintReward",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMintReward"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in `owner`'s account."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getMintReward()": {
            "returns": {
              "_0": "Mint reward"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "mintTo(address)": {
            "params": {
              "to": "Address to mint to"
            },
            "returns": {
              "tokenId": "New token ID"
            }
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setAllowed(address,bool)": {
            "params": {
              "allow": "Whether or not to allow the address to mint new tokens",
              "user": "Address to allow or disallow"
            }
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "setBaseURI(string)": {
            "params": {
              "baseURI": "New base URI"
            }
          },
          "setMintReward(uint256)": {
            "params": {
              "mintReward": "New mint reward"
            }
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokenURI(uint256)": {
            "details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          },
          "withdraw(address)": {
            "params": {
              "to": "Address to withdraw to"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getMintReward()": {
            "notice": "Get the mint reward"
          },
          "mintTo(address)": {
            "notice": "Mint a new token"
          },
          "setAllowed(address,bool)": {
            "notice": "Allow or disallow an address to mint new tokens"
          },
          "setBaseURI(string)": {
            "notice": "Set the base URI for all token IDs"
          },
          "setMintReward(uint256)": {
            "notice": "Set the mint reward"
          },
          "withdraw(address)": {
            "notice": "Withdraw the contract balance to an address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC721A/=lib/ERC721A/contracts/",
        "base64-sol/=lib/base64/",
        "base64/=lib/base64/",
        "council/=lib/council/contracts/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "operator-filter-registry/=lib/operator-filter-registry/",
        "prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "contracts/src/tokens/pioneer/PioneerFacet.sol": "PioneerFacet"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/diamond/facets/Facet.sol": {
        "keccak256": "0x8213b85d1271bc3c2aa9842979c8ad825066c4c9addc55296d53b6747e5198ba",
        "urls": [
          "bzz-raw://b4e88e869c99e65f0caeb9d03938e78c578a869783b9f20c05f4ba52e7ca493d",
          "dweb:/ipfs/QmRqPmg8BYD1V6Cd8kfihCQ7nn2DAsgRjGW2MJvc7Evnjt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/initializable/Initializable.sol": {
        "keccak256": "0x2a4f3a99b3b3ac6c2c18431cea80b40774c1d8265ddefac21b26da561e069096",
        "urls": [
          "bzz-raw://36dbba730942b1fd345f242051ea7f33e979f70392fbd929d8522c0c9c6dd367",
          "dweb:/ipfs/QmYMvYnvg9zQJpDQX9yMHZ1AET9Vx7UXtDenXAs1JhfPpd"
        ],
        "license": "MIT"
      },
      "contracts/src/diamond/facets/initializable/InitializableStorage.sol": {
        "keccak256": "0x99dfe047dbb8df48a7490f63939420dd990fb5fd3b3a03c42d0cb9c6f4f9eefa",
        "urls": [
          "bzz-raw://5e8f6d4bff257324e4544cacadd9fee42bada459f457fb707fef90bcfe0e895a",
          "dweb:/ipfs/QmYWEam5VcMt5ViNMKRkaxoD84MK2MewS5iWwSES589Vma"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IERC165.sol": {
        "keccak256": "0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816",
        "urls": [
          "bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2",
          "dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IntrospectionBase.sol": {
        "keccak256": "0xbdc803a2179838316625692285c4b720cdbae1c78e5f9a68560719c909253d00",
        "urls": [
          "bzz-raw://776a4490b22b01b554770d71afde7bed4c32ea639a08c84a194076eddf5517be",
          "dweb:/ipfs/QmcPVR9T7vXccCg7RXQ4wXtHaBG6ugrEXk8qnhRpsYMVd6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IntrospectionStorage.sol": {
        "keccak256": "0xd2ec3bbe4d15f9232006b41e0a80a5127006243ee596754af77bd3926045782a",
        "urls": [
          "bzz-raw://8c47e18bfd34a687ce9ec75dc1f1fa5bca088e97e59aad2ac3fdb0989d06d7e6",
          "dweb:/ipfs/QmdktQXV7PKABzh43SZqemdTG25RxMaMsgpXTTUvZUxmfU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/IERC173.sol": {
        "keccak256": "0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe",
        "urls": [
          "bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620",
          "dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/OwnableBase.sol": {
        "keccak256": "0xdab71f70fb02899801d2330e861918f67ec84a89e2e15074b4a3ef132d9c78d3",
        "urls": [
          "bzz-raw://9f37d1dbeb745d1c61aa983c0de7e1d2da21f5b6354167492c528b5599323f07",
          "dweb:/ipfs/QmdHYdsXyohNAPqthXvo7ro3TS6rf8Y6gE6y6NhUWnYnwq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/OwnableStorage.sol": {
        "keccak256": "0x1d2aa559d8156f0ae1d6adeffa46fa04697b533e94f8872fd4e1c6ec99be4be3",
        "urls": [
          "bzz-raw://136f0417a3c58ae4b80c640355fa9b46ea1d3ae06943d08d6164db10833652a6",
          "dweb:/ipfs/QmUv5FULyBPKL3LXtdeuBwoLFF4JtWNo3uUsoNeXoh7den"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC721A/ERC721A.sol": {
        "keccak256": "0x321ea4cd6a2617d12cdf6bcd84095072de32ecfddfa95df83e58711c4684e325",
        "urls": [
          "bzz-raw://95b09721ac18cc7d34859486008989238dfc9ff9bbafb300ce7a3b2ecfb201a1",
          "dweb:/ipfs/Qmcdzd3hLsafxVkDTYs2japBR5UpmeJ7VYWrNFbSf1kboX"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC721A/ERC721ABase.sol": {
        "keccak256": "0x1e0f21db21117ca705182e671aca5f24d157ca9003268450582d3f49eb2b8ece",
        "urls": [
          "bzz-raw://4348c9408175707af61dd9d5d0eda909066c14eb35e1fc88604b9d58eed0d667",
          "dweb:/ipfs/QmUk514VMTYx1skNfooNs5q53x7SoxonHuEYpsDSwvoyEG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC721A/ERC721AStorage.sol": {
        "keccak256": "0xd6940108c888555331b972b7ea5d4842ddeb7c222feab4565c166c12f85900ba",
        "urls": [
          "bzz-raw://ecbc54202867c7b11e57ca2cbcbe33aa5701ea1593a70bfa82a0ccc358682767",
          "dweb:/ipfs/QmScG3JBtGEoDgxipmP8EbAgZxZF9F8aWaZ9gYBqqBweNH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC721A/IERC721A.sol": {
        "keccak256": "0x1473085ffec67f1e059e56baa36be6d3379f7b876147cd62b9854cea8f52cce9",
        "urls": [
          "bzz-raw://6b3bd85f29ed8e16ad5622e40966c92b58baf988880da4a676142957462ded06",
          "dweb:/ipfs/QmSkGb7ByX4DTvNPh6egoSAs71b7w1NHoYfPUPT9LdtJY9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/tokens/pioneer/IPioneer.sol": {
        "keccak256": "0x4f91225c8e8742e3f67730e2db12282a8e5874def299c6596f2aa0f8ec15fa18",
        "urls": [
          "bzz-raw://9c657bb6b79963a1a3833f02a31294e93473b1fe53e877ca9613bd3495f2209d",
          "dweb:/ipfs/QmRqtMZwPuYivqGXCdq7hLVemB4qDwm24gECPyKpiWEfoj"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/tokens/pioneer/PioneerBase.sol": {
        "keccak256": "0xed387a91e3cca88ce3ce44c2cb979e7c3b77cefa71a61b1579967733bb03754a",
        "urls": [
          "bzz-raw://03640b40418c684aee563b8a48e0db9f8cb5096fda4cd3fcdcb9d425262f411a",
          "dweb:/ipfs/QmTMK9MCibUbXQoD66ZaowUUWruBpZWq6ju3whockogZpt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/tokens/pioneer/PioneerFacet.sol": {
        "keccak256": "0x7d4a3eb6413660efa2a7001ec86e18bdb0ce214ff339faa470abad37e4f584a6",
        "urls": [
          "bzz-raw://361ab8df4d36a6e9afbbb326e2e45c74ca3a2be8af319dc46717d0b2c1b8eb3c",
          "dweb:/ipfs/QmTgbVcLPPeYSeuRfkjSUPtLZvuj2fj2YMbBxVk2c3Xinp"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/tokens/pioneer/PioneerStorage.sol": {
        "keccak256": "0xab927497dc811d5aa366073cb54c9f957895b1e8ce187306d4238f8d765d241b",
        "urls": [
          "bzz-raw://c51226809304cf0cb20ef85cf032e6d2b49f5ff5bd7617f9897316dbbafcfd10",
          "dweb:/ipfs/QmT4TNfdGwLjoSpCKCpvVG2rAvB2vQZpCsedcGWV6MVvHY"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/tokens/pioneer/PioneerFacet.sol",
    "id": 20325,
    "exportedSymbols": {
      "ERC721A": [
        12888
      ],
      "IPioneer": [
        19966
      ],
      "OwnableBase": [
        10996
      ],
      "PioneerBase": [
        20117
      ],
      "PioneerFacet": [
        20324
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1902:136",
    "nodes": [
      {
        "id": 20119,
        "nodeType": "PragmaDirective",
        "src": "39:24:136",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 20121,
        "nodeType": "ImportDirective",
        "src": "79:40:136",
        "nodes": [],
        "absolutePath": "contracts/src/tokens/pioneer/IPioneer.sol",
        "file": "./IPioneer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 20325,
        "sourceUnit": 19967,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20120,
              "name": "IPioneer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 19966,
              "src": "87:8:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 20123,
        "nodeType": "ImportDirective",
        "src": "148:46:136",
        "nodes": [],
        "absolutePath": "contracts/src/tokens/pioneer/PioneerBase.sol",
        "file": "./PioneerBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 20325,
        "sourceUnit": 20118,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20122,
              "name": "PioneerBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 20117,
              "src": "156:11:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 20125,
        "nodeType": "ImportDirective",
        "src": "195:79:136",
        "nodes": [],
        "absolutePath": "contracts/src/diamond/facets/token/ERC721A/ERC721A.sol",
        "file": "contracts/src/diamond/facets/token/ERC721A/ERC721A.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 20325,
        "sourceUnit": 12889,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20124,
              "name": "ERC721A",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12888,
              "src": "203:7:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 20127,
        "nodeType": "ImportDirective",
        "src": "275:81:136",
        "nodes": [],
        "absolutePath": "contracts/src/diamond/facets/ownable/OwnableBase.sol",
        "file": "contracts/src/diamond/facets/ownable/OwnableBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 20325,
        "sourceUnit": 10997,
        "symbolAliases": [
          {
            "foreign": {
              "id": 20126,
              "name": "OwnableBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10996,
              "src": "283:11:136",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 20324,
        "nodeType": "ContractDefinition",
        "src": "358:1582:136",
        "nodes": [
          {
            "id": 20148,
            "nodeType": "ModifierDefinition",
            "src": "431:89:136",
            "nodes": [],
            "body": {
              "id": 20147,
              "nodeType": "Block",
              "src": "454:66:136",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 20141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "464:23:136",
                    "subExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 20138,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "476:3:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 20139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "480:6:136",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "476:10:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 20137,
                        "name": "_isAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20026,
                        "src": "465:10:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 20140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "465:22:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20145,
                  "nodeType": "IfStatement",
                  "src": "460:48:136",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 20142,
                        "name": "NotAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19910,
                        "src": "496:10:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 20143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "496:12:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 20144,
                    "nodeType": "RevertStatement",
                    "src": "489:19:136"
                  }
                },
                {
                  "id": 20146,
                  "nodeType": "PlaceholderStatement",
                  "src": "514:1:136"
                }
              ]
            },
            "name": "onlyAllowed",
            "nameLocation": "440:11:136",
            "parameters": {
              "id": 20136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "451:2:136"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 20182,
            "nodeType": "FunctionDefinition",
            "src": "524:303:136",
            "nodes": [],
            "body": {
              "id": 20181,
              "nodeType": "Block",
              "src": "694:133:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20164,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20154,
                        "src": "712:7:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 20163,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20051,
                      "src": "700:11:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 20165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "700:20:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20166,
                  "nodeType": "ExpressionStatement",
                  "src": "700:20:136"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20168,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20158,
                        "src": "738:5:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 20169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "745:4:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20167,
                      "name": "_setAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20011,
                      "src": "726:11:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 20170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "726:24:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20171,
                  "nodeType": "ExpressionStatement",
                  "src": "726:24:136"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20173,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20156,
                        "src": "771:6:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20172,
                      "name": "_setMintReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20083,
                      "src": "756:14:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 20174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:22:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20175,
                  "nodeType": "ExpressionStatement",
                  "src": "756:22:136"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20177,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20150,
                        "src": "809:4:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 20178,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20152,
                        "src": "815:6:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 20176,
                      "name": "__ERC721A_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12476,
                      "src": "784:24:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 20179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "784:38:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20180,
                  "nodeType": "ExpressionStatement",
                  "src": "784:38:136"
                }
              ]
            },
            "functionSelector": "1aa23ef5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20161,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20160,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "677:16:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10264,
                  "src": "677:16:136"
                },
                "nodeType": "ModifierInvocation",
                "src": "677:16:136"
              }
            ],
            "name": "__Pioneer_init",
            "nameLocation": "533:14:136",
            "parameters": {
              "id": 20159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20150,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "567:4:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 20182,
                  "src": "553:18:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20149,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20152,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "591:6:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 20182,
                  "src": "577:20:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20151,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20154,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "617:7:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 20182,
                  "src": "603:21:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20153,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20156,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "638:6:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 20182,
                  "src": "630:14:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "630:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20158,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "658:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 20182,
                  "src": "650:13:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "650:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:120:136"
            },
            "returnParameters": {
              "id": 20162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:0:136"
            },
            "scope": 20324,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 20248,
            "nodeType": "FunctionDefinition",
            "src": "858:404:136",
            "nodes": [],
            "body": {
              "id": 20247,
              "nodeType": "Block",
              "src": "933:329:136",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 20197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 20192,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20185,
                      "src": "943:2:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 20195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "957:1:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 20194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "949:7:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 20193,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "949:7:136",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 20196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "949:10:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "943:16:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20201,
                  "nodeType": "IfStatement",
                  "src": "939:41:136",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 20198,
                        "name": "NotAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19910,
                        "src": "968:10:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 20199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "968:12:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 20200,
                    "nodeType": "RevertStatement",
                    "src": "961:19:136"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 20206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 20203,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20185,
                          "src": "1001:2:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 20202,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13046,
                        "src": "990:10:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 20204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "990:14:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 20205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1007:1:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "990:18:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20210,
                  "nodeType": "IfStatement",
                  "src": "986:46:136",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 20207,
                        "name": "AlreadyMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19922,
                        "src": "1017:13:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 20208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1017:15:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 20209,
                    "nodeType": "RevertStatement",
                    "src": "1010:22:136"
                  }
                },
                {
                  "assignments": [
                    20212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20212,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "1047:6:136",
                      "nodeType": "VariableDeclaration",
                      "scope": 20247,
                      "src": "1039:14:136",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 20211,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1039:7:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 20215,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20213,
                      "name": "_getMintReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20094,
                      "src": "1056:14:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 20214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1056:16:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1039:33:136"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 20222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 20216,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20212,
                      "src": "1083:6:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 20219,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1100:4:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PioneerFacet_$20324",
                              "typeString": "contract PioneerFacet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PioneerFacet_$20324",
                              "typeString": "contract PioneerFacet"
                            }
                          ],
                          "id": 20218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1092:7:136",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 20217,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1092:7:136",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 20220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1092:13:136",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 20221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1106:7:136",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "1092:21:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1083:30:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20226,
                  "nodeType": "IfStatement",
                  "src": "1079:64:136",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 20223,
                        "name": "InsufficientBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19916,
                        "src": "1122:19:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 20224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1122:21:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 20225,
                    "nodeType": "RevertStatement",
                    "src": "1115:28:136"
                  }
                },
                {
                  "expression": {
                    "id": 20230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20227,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20190,
                      "src": "1150:7:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 20228,
                        "name": "_nextTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13067,
                        "src": "1160:12:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 20229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1160:14:136",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1150:24:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20231,
                  "nodeType": "ExpressionStatement",
                  "src": "1150:24:136"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20233,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20185,
                        "src": "1191:2:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 20234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1195:1:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 20232,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13877,
                        13892
                      ],
                      "referencedDeclaration": 13892,
                      "src": "1181:9:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 20235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1181:16:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20236,
                  "nodeType": "ExpressionStatement",
                  "src": "1181:16:136"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 20239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 20237,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20212,
                      "src": "1208:6:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 20238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1217:1:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1208:10:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 20246,
                  "nodeType": "IfStatement",
                  "src": "1204:54:136",
                  "trueBody": {
                    "id": 20245,
                    "nodeType": "Block",
                    "src": "1220:38:136",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 20241,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20185,
                              "src": "1240:2:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 20242,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20212,
                              "src": "1244:6:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 20240,
                            "name": "_sendReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20116,
                            "src": "1228:11:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 20243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1228:23:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 20244,
                        "nodeType": "ExpressionStatement",
                        "src": "1228:23:136"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              19933
            ],
            "documentation": {
              "id": 20183,
              "nodeType": "StructuredDocumentation",
              "src": "831:24:136",
              "text": "@inheritdoc IPioneer"
            },
            "functionSelector": "755edd17",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20188,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20187,
                  "name": "onlyAllowed",
                  "nameLocations": [
                    "895:11:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20148,
                  "src": "895:11:136"
                },
                "nodeType": "ModifierInvocation",
                "src": "895:11:136"
              }
            ],
            "name": "mintTo",
            "nameLocation": "867:6:136",
            "parameters": {
              "id": 20186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20185,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "882:2:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 20248,
                  "src": "874:10:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "874:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "873:12:136"
            },
            "returnParameters": {
              "id": 20191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20190,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "924:7:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 20248,
                  "src": "916:15:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "915:17:136"
            },
            "scope": 20324,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 20266,
            "nodeType": "FunctionDefinition",
            "src": "1293:98:136",
            "nodes": [],
            "body": {
              "id": 20265,
              "nodeType": "Block",
              "src": "1342:49:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20257,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20251,
                        "src": "1360:2:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 20260,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1372:4:136",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PioneerFacet_$20324",
                                "typeString": "contract PioneerFacet"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PioneerFacet_$20324",
                                "typeString": "contract PioneerFacet"
                              }
                            ],
                            "id": 20259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1364:7:136",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 20258,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1364:7:136",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 20261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1364:13:136",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 20262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1378:7:136",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1364:21:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20256,
                      "name": "_sendReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20116,
                      "src": "1348:11:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 20263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1348:38:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20264,
                  "nodeType": "ExpressionStatement",
                  "src": "1348:38:136"
                }
              ]
            },
            "baseFunctions": [
              19939
            ],
            "documentation": {
              "id": 20249,
              "nodeType": "StructuredDocumentation",
              "src": "1266:24:136",
              "text": "@inheritdoc IPioneer"
            },
            "functionSelector": "51cff8d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20254,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20253,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1332:9:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10922,
                  "src": "1332:9:136"
                },
                "nodeType": "ModifierInvocation",
                "src": "1332:9:136"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1302:8:136",
            "parameters": {
              "id": 20252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20251,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1319:2:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 20266,
                  "src": "1311:10:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1310:12:136"
            },
            "returnParameters": {
              "id": 20255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1342:0:136"
            },
            "scope": 20324,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 20287,
            "nodeType": "FunctionDefinition",
            "src": "1422:134:136",
            "nodes": [],
            "body": {
              "id": 20286,
              "nodeType": "Block",
              "src": "1487:69:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20277,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20269,
                        "src": "1505:4:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20278,
                        "name": "allow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20271,
                        "src": "1511:5:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20276,
                      "name": "_setAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20011,
                      "src": "1493:11:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 20279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1493:24:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20280,
                  "nodeType": "ExpressionStatement",
                  "src": "1493:24:136"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 20282,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20269,
                        "src": "1539:4:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 20283,
                        "name": "allow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20271,
                        "src": "1545:5:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 20281,
                      "name": "SetAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19908,
                      "src": "1528:10:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 20284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1528:23:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20285,
                  "nodeType": "EmitStatement",
                  "src": "1523:28:136"
                }
              ]
            },
            "baseFunctions": [
              19947
            ],
            "documentation": {
              "id": 20267,
              "nodeType": "StructuredDocumentation",
              "src": "1395:24:136",
              "text": "@inheritdoc IPioneer"
            },
            "functionSelector": "4697f05d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20274,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20273,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1477:9:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10922,
                  "src": "1477:9:136"
                },
                "nodeType": "ModifierInvocation",
                "src": "1477:9:136"
              }
            ],
            "name": "setAllowed",
            "nameLocation": "1431:10:136",
            "parameters": {
              "id": 20272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20269,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1450:4:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 20287,
                  "src": "1442:12:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:136",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20271,
                  "mutability": "mutable",
                  "name": "allow",
                  "nameLocation": "1461:5:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 20287,
                  "src": "1456:10:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20270,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:4:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1441:26:136"
            },
            "returnParameters": {
              "id": 20275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1487:0:136"
            },
            "scope": 20324,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 20300,
            "nodeType": "FunctionDefinition",
            "src": "1587:93:136",
            "nodes": [],
            "body": {
              "id": 20299,
              "nodeType": "Block",
              "src": "1649:31:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20296,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20290,
                        "src": "1667:7:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 20295,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20051,
                      "src": "1655:11:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 20297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1655:20:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20298,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:20:136"
                }
              ]
            },
            "baseFunctions": [
              19953
            ],
            "documentation": {
              "id": 20288,
              "nodeType": "StructuredDocumentation",
              "src": "1560:24:136",
              "text": "@inheritdoc IPioneer"
            },
            "functionSelector": "55f804b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20293,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20292,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1639:9:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10922,
                  "src": "1639:9:136"
                },
                "nodeType": "ModifierInvocation",
                "src": "1639:9:136"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "1596:10:136",
            "parameters": {
              "id": 20291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20290,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "1621:7:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 20300,
                  "src": "1607:21:136",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20289,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:6:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1606:23:136"
            },
            "returnParameters": {
              "id": 20294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1649:0:136"
            },
            "scope": 20324,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 20313,
            "nodeType": "FunctionDefinition",
            "src": "1711:105:136",
            "nodes": [],
            "body": {
              "id": 20312,
              "nodeType": "Block",
              "src": "1776:40:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20309,
                        "name": "newMintReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20303,
                        "src": "1797:13:136",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 20308,
                      "name": "_setMintReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20083,
                      "src": "1782:14:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 20310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1782:29:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20311,
                  "nodeType": "ExpressionStatement",
                  "src": "1782:29:136"
                }
              ]
            },
            "baseFunctions": [
              19959
            ],
            "documentation": {
              "id": 20301,
              "nodeType": "StructuredDocumentation",
              "src": "1684:24:136",
              "text": "@inheritdoc IPioneer"
            },
            "functionSelector": "80e801ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 20306,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 20305,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1766:9:136"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10922,
                  "src": "1766:9:136"
                },
                "nodeType": "ModifierInvocation",
                "src": "1766:9:136"
              }
            ],
            "name": "setMintReward",
            "nameLocation": "1720:13:136",
            "parameters": {
              "id": 20304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20303,
                  "mutability": "mutable",
                  "name": "newMintReward",
                  "nameLocation": "1742:13:136",
                  "nodeType": "VariableDeclaration",
                  "scope": 20313,
                  "src": "1734:21:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1734:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1733:23:136"
            },
            "returnParameters": {
              "id": 20307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1776:0:136"
            },
            "scope": 20324,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 20323,
            "nodeType": "FunctionDefinition",
            "src": "1847:91:136",
            "nodes": [],
            "body": {
              "id": 20322,
              "nodeType": "Block",
              "src": "1904:34:136",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 20319,
                      "name": "_getMintReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20094,
                      "src": "1917:14:136",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 20320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1917:16:136",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 20318,
                  "id": 20321,
                  "nodeType": "Return",
                  "src": "1910:23:136"
                }
              ]
            },
            "baseFunctions": [
              19965
            ],
            "documentation": {
              "id": 20314,
              "nodeType": "StructuredDocumentation",
              "src": "1820:24:136",
              "text": "@inheritdoc IPioneer"
            },
            "functionSelector": "c8332451",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMintReward",
            "nameLocation": "1856:13:136",
            "parameters": {
              "id": 20315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1869:2:136"
            },
            "returnParameters": {
              "id": 20318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20317,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20323,
                  "src": "1895:7:136",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:136",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1894:9:136"
            },
            "scope": 20324,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20128,
              "name": "IPioneer",
              "nameLocations": [
                "383:8:136"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19966,
              "src": "383:8:136"
            },
            "id": 20129,
            "nodeType": "InheritanceSpecifier",
            "src": "383:8:136"
          },
          {
            "baseName": {
              "id": 20130,
              "name": "PioneerBase",
              "nameLocations": [
                "393:11:136"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20117,
              "src": "393:11:136"
            },
            "id": 20131,
            "nodeType": "InheritanceSpecifier",
            "src": "393:11:136"
          },
          {
            "baseName": {
              "id": 20132,
              "name": "OwnableBase",
              "nameLocations": [
                "406:11:136"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10996,
              "src": "406:11:136"
            },
            "id": 20133,
            "nodeType": "InheritanceSpecifier",
            "src": "406:11:136"
          },
          {
            "baseName": {
              "id": 20134,
              "name": "ERC721A",
              "nameLocations": [
                "419:7:136"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12888,
              "src": "419:7:136"
            },
            "id": 20135,
            "nodeType": "InheritanceSpecifier",
            "src": "419:7:136"
          }
        ],
        "canonicalName": "PioneerFacet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          20324,
          12888,
          7152,
          10504,
          10394,
          10352,
          14325,
          14594,
          14482,
          10996,
          10883,
          20117,
          19966,
          19923
        ],
        "name": "PioneerFacet",
        "nameLocation": "367:12:136",
        "scope": 20325,
        "usedErrors": [
          10132,
          10134,
          10381,
          10383,
          10871,
          10875,
          14407,
          14410,
          14413,
          14416,
          14419,
          14422,
          14425,
          14428,
          14431,
          14434,
          14437,
          14440,
          14443,
          19910,
          19912,
          19914,
          19916,
          19918,
          19920,
          19922
        ],
        "usedEvents": [
          10138,
          10388,
          10393,
          10882,
          14452,
          14461,
          14470,
          14481,
          19908
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 136
}
{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC5643__DurationZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC5643__InvalidTokenId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC5643__NotApprovedOrOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC5643__SubscriptionNotRenewable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Entitlement__InvalidValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Entitlement__NotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Entitlement__ValueAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Initializable_InInitializingState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Initializable_NotInInitializingState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Introspection_AlreadySupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Introspection_NotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__AlreadyMember",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__InsufficientPayment",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__InvalidCurrency",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__InvalidFeeRecipient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__InvalidLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__InvalidPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__LimitReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__PriceTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Pausable__NotPaused",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Pausable__Paused",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuard__ReentrantCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "version",
          "type": "uint32"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "InterfaceAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "InterfaceRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "MembershipCurrencyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "MembershipFeeRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "MembershipLimitUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "MembershipPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "expiration",
          "type": "uint64"
        }
      ],
      "name": "SubscriptionUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "name": "__ERC721A_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "membershipPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "membershipLimit",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "membershipCurrency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "membershipFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "townFactory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "internalType": "struct IMembershipBase.MembershipInfo",
          "name": "info",
          "type": "tuple"
        }
      ],
      "name": "__Membership_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getMembershipCurrency",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getMembershipFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getMembershipLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getMembershipPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getTownFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCurrency",
          "type": "address"
        }
      ],
      "name": "_setMembershipCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newRecipient",
          "type": "address"
        }
      ],
      "name": "_setMembershipFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "_setMembershipLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "_setMembershipPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelMembership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "expiresAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMembershipCurrency",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMembershipFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMembershipLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMembershipPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTownFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "joinTown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "renewMembership",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCurrency",
          "type": "address"
        }
      ],
      "name": "setMembershipCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newRecipient",
          "type": "address"
        }
      ],
      "name": "setMembershipFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "setMembershipLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "setMembershipPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000ca565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de8054640100000000900460ff16156200006f576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff9081161015620000c757805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b61341e80620000da6000396000f3fe6080604052600436106102255760003560e01c80636340d0961161012357806395d600c8116100ab578063b88d4fde1161006f578063b88d4fde14610634578063bf3bc87814610647578063c87b56dd1461065c578063d2f01f191461067c578063e985e9c51461069c57600080fd5b806395d600c8146105aa57806395d89b41146105bf57806397fb7c1e146105d4578063a22cb465146105f4578063b83073761461061457600080fd5b80636e43d05d116100f25780636e43d05d146104ff578063702515631461051f57806370a082311461054a5780637d0567c41461056a57806389def3201461058a57600080fd5b80636340d096146104955780636352211e146104aa578063657e45e8146104ca57806369d5f38a146104df57600080fd5b806318160ddd116101b157806342842e0e1161017557806342842e0e146103f4578063572b6c05146104075780635b312fce1461043757806361a9c7df14610462578063624520061461047557600080fd5b806318160ddd1461034d57806318e5da65146103625780631b3972f0146103825780631d214b4d146103a457806323b872dd146103e157600080fd5b80630c3a01b1116101f85780630c3a01b1146102c25780631278076a146102e257806316a344b4146103055780631766bb7b1461031857806317c957091461032d57600080fd5b806302b24da51461022a57806306fdde031461024c578063081812fc14610277578063095ea7b3146102af575b600080fd5b34801561023657600080fd5b5061024a610245366004612b75565b6106bc565b005b34801561025857600080fd5b50610261610793565b60405161026e9190612bde565b60405180910390f35b34801561028357600080fd5b50610297610292366004612b75565b61082e565b6040516001600160a01b03909116815260200161026e565b61024a6102bd366004612c11565b61083f565b3480156102ce57600080fd5b5061024a6102dd366004612b75565b61084f565b3480156102ee57600080fd5b506102f761092f565b60405190815260200161026e565b6102f7610313366004612c3d565b61094c565b34801561032457600080fd5b506102f7610a7c565b34801561033957600080fd5b506102f7610348366004612b75565b610b3f565b34801561035957600080fd5b506102f7610b59565b34801561036e57600080fd5b5061024a61037d366004612c3d565b610b63565b34801561038e57600080fd5b506000805160206133fe833981519152546102f7565b3480156103b057600080fd5b507f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a6012546001600160a01b0316610297565b61024a6103ef366004612c5a565b610baf565b61024a610402366004612c5a565b610da4565b34801561041357600080fd5b50610427610422366004612c3d565b610dc4565b604051901515815260200161026e565b34801561044357600080fd5b506000805160206133de833981519152546001600160a01b0316610297565b61024a610470366004612c3d565b610e01565b34801561048157600080fd5b5061024a610490366004612c3d565b610ecf565b3480156104a157600080fd5b50610297610f37565b3480156104b657600080fd5b506102976104c5366004612b75565b610f58565b3480156104d657600080fd5b50610297610f63565b3480156104eb57600080fd5b5061024a6104fa366004612b75565b610f84565b34801561050b57600080fd5b5061024a61051a366004612d6f565b610fc8565b34801561052b57600080fd5b5060008051602061335e833981519152546001600160a01b0316610297565b34801561055657600080fd5b506102f7610565366004612c3d565b611090565b34801561057657600080fd5b5061024a610585366004612c3d565b6110c3565b34801561059657600080fd5b5061024a6105a5366004612b75565b611107565b3480156105b657600080fd5b506102f761119d565b3480156105cb57600080fd5b506102616111a7565b3480156105e057600080fd5b5061024a6105ef366004612b75565b6111bf565b34801561060057600080fd5b5061024a61060f366004612e66565b611203565b34801561062057600080fd5b5061024a61062f366004612c3d565b6112a5565b61024a610642366004612e9f565b6112fb565b34801561065357600080fd5b50610297611345565b34801561066857600080fd5b50610261610677366004612b75565b611378565b34801561068857600080fd5b5061024a610697366004612f1e565b611409565b3480156106a857600080fd5b506104276106b7366004612f81565b61145d565b6000805160206133de8339815191525460408051632cbb9d1360e01b8152905160008051602061337e833981519152926000926001600160a01b0390911691632cbb9d13916004808201926020929091908290030181865afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190612faf565b90508083111561076d57604051632b6e8cbb60e11b815260040160405180910390fd5b50507f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a601055565b606061079d611469565b60020180546107ab90612fc8565b80601f01602080910402602001604051908101604052809291908181526020018280546107d790612fc8565b80156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108398261148d565b92915050565b61084b828260016114da565b5050565b60008051602061335e8339815191525460008051602061337e833981519152906001600160a01b031661089557604051636da3122b60e01b815260040160405180910390fd5b600681015460408051630eac306d60e01b815290516000926001600160a01b031691630eac306d9160048083019260209291908290030181865afa1580156108e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109059190612faf565b90508083101561092857604051631a23d64760e11b815260040160405180910390fd5b5060020155565b60006109476000805160206133fe8339815191525490565b905090565b6000600260008051602061339e833981519152540361097e57604051635db5c7cd60e11b815260040160405180910390fd5b610995600260008051602061339e83398151915255565b6109be604051806040016040528060088152602001672537b4b72a37bbb760c11b8152506115a6565b60006109c9836115dc565b11156109e8576040516316d9a23f60e31b815260040160405180910390fd5b6000805160206133fe83398151915254158015610a135750610a08610a7c565b610a10611644565b10155b15610a3157604051635e9cd6f760e01b815260040160405180910390fd5b610a39611663565b9050610a4482611673565b610a4f826001611953565b610a6081610a5b61196d565b6119e8565b610a77600160008051602061339e83398151915255565b919050565b7f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60105460009060008051602061337e833981519152908203610b36578060060160009054906101000a90046001600160a01b03166001600160a01b0316632cbb9d136040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190612faf565b91505090565b60030154919050565b6000610b4a82611ada565b6001600160401b031692915050565b6000610947611644565b610b6b611b14565b6001600160a01b0316336001600160a01b031614610ba3576040516365f4906560e01b81523360048201526024015b60405180910390fd5b610bac81610ecf565b50565b6000610bba82611bd8565b9050836001600160a01b0316816001600160a01b031614610bed5760405162a1148160e81b815260040160405180910390fd5b600080610bf984611c7c565b91509150610c1f8187610c0a611ca4565b6001600160a01b039081169116811491141790565b610c4c57610c2f866106b7611ca4565b610c4c57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610c7357604051633a954ecd60e21b815260040160405180910390fd5b610c808686866001611cae565b8015610c8b57600082555b610c93611469565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610cbf611469565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b17610cf6611469565b60008681526004919091016020526040812091909155600160e11b84169003610d6c5760018401610d25611469565b600082815260049190910160205260408120549003610d6a57610d46611469565b548114610d6a5783610d56611469565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b03166000805160206133be83398151915260405160405180910390a45b505050505050565b610dbf838383604051806020016040528060008152506112fb565b505050565b6001600160a01b031660009081527f9be1203d7c008407e47cf520c8f15f54b074f0a2af3750145c254290338afc3f602052604090205460ff1690565b600260008051602061339e8339815191525403610e3157604051635db5c7cd60e11b815260040160405180910390fd5b610e48600260008051602061339e83398151915255565b6001600160a01b038116610e6f57604051635fbd571760e01b815260040160405180910390fd5b6000610e7a82611d18565b9050610e8581611d52565b610ea2576040516367d9dca160e11b815260040160405180910390fd5b610eab82611673565b610eb781610a5b61196d565b50610bac600160008051602061339e83398151915255565b6001600160a01b038116610ef657604051631492df6160e21b815260040160405180910390fd5b7f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a601280546001600160a01b0319166001600160a01b0392909216919091179055565b60006109476000805160206133de833981519152546001600160a01b031690565b600061083982611bd8565b600061094760008051602061335e833981519152546001600160a01b031690565b610f8c611b14565b6001600160a01b0316336001600160a01b031614610fbf576040516365f4906560e01b8152336004820152602401610b9a565b610bac8161084f565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff1661101257604051630ef4733760e31b815260040160405180910390fd5b61103381600001518260200151836040015184606001518560800151611dbf565b61107e8160a001516001600160a01b031660009081527f9be1203d7c008407e47cf520c8f15f54b074f0a2af3750145c254290338afc3f60205260409020805460ff19166001179055565b610bac8160c001518260e00151611e76565b6000426110a461109f84611d18565b611ada565b6001600160401b0316116110ba57506000919050565b610839826115dc565b6110cb611b14565b6001600160a01b0316336001600160a01b0316146110fe576040516365f4906560e01b8152336004820152602401610b9a565b610bac816112a5565b600260008051602061339e833981519152540361113757604051635db5c7cd60e11b815260040160405180910390fd5b61114e600260008051602061339e83398151915255565b61115781611d52565b611174576040516367d9dca160e11b815260040160405180910390fd5b61117d81611eea565b61118681611ef5565b610bac600160008051602061339e83398151915255565b6000610947610a7c565b60606111b1611469565b60030180546107ab90612fc8565b6111c7611b14565b6001600160a01b0316336001600160a01b0316146111fa576040516365f4906560e01b8152336004820152602401610b9a565b610bac816106bc565b8061120c611469565b6007016000611219611ca4565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561125d611ca4565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611299911515815260200190565b60405180910390a35050565b6001600160a01b0381166112cc57604051636da3122b60e01b815260040160405180910390fd5b60008051602061335e83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611306848484610baf565b6001600160a01b0383163b1561133f5761132284848484611f68565b61133f576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60006109477f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a6012546001600160a01b031690565b60606113838261205a565b6113a057604051630a14c4b560e41b815260040160405180910390fd5b60006113b760408051602081019091526000815290565b905080516000036113d75760405180602001604052806000815250611402565b806113e184612096565b6040516020016113f2929190613002565b6040516020818303038152906040525b9392505050565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff1661145357604051630ef4733760e31b815260040160405180910390fd5b61084b8282611e76565b600061140283836120da565b7f234d8962d7c9a6a6604d7f98797e6ad6d7a886804f7409feb26422e27bf8125490565b60006114988261205a565b6114b5576040516333d1c03960e21b815260040160405180910390fd5b6114bd611469565b60009283526006016020525060409020546001600160a01b031690565b60006114e583610f58565b9050811561153b57806001600160a01b03166114ff611ca4565b6001600160a01b03161461153b5761151e81611519611ca4565b6120da565b61153b576040516367d9dca160e11b815260040160405180910390fd5b83611544611469565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b6115bf6040518060200160405280600081525082612117565b610bac57604051630ce39a4b60e21b815260040160405180910390fd5b60006001600160a01b038216611605576040516323d3ad8160e21b815260040160405180910390fd5b6001600160401b03611615611469565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b60008061164f611469565b6001015461165b611469565b540303919050565b600061166d611469565b54919050565b600061168b6000805160206133fe8339815191525490565b905080600003611699575050565b6000805160206133de8339815191525460408051630eac306d60e01b8152905160008051602061337e833981519152926000926001600160a01b0390911691630eac306d916004808201926020929091908290030181865afa158015611703573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117279190612faf565b90508083101561174a57604051635894b54560e11b815260040160405180910390fd5b6006820154604080516301332c8360e61b815290516000926001600160a01b031691634ccb20c09160048083019260209291908290030181865afa158015611796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ba9190613031565b905060008360060160009054906101000a90046001600160a01b03166001600160a01b0316639f6542aa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611813573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611837919061304e565b905060008460060160009054906101000a90046001600160a01b03166001600160a01b031663190eaaba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b49190612faf565b905060006118c28588613088565b905080156118f15784826118da61ffff86168461309b565b6118e491906130b2565b6118ee91906130d4565b94505b600486015461190b906001600160a01b03168986886121a9565b8060000361191d575050505050505050565b60048601546005870154611949916001600160a01b03908116918b9116611944898c613088565b6121a9565b5050505050505050565b61084b8282604051806020016040528060008152506121ef565b6000805160206133de8339815191525460408051634090785d60e11b815290516000926001600160a01b031691638120f0ba9160048083019260209291908290030181865afa1580156119c4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094791906130e7565b60008281527f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e3616020819052604082205490916001600160401b0390911690818103611a3e57611a378442613110565b9050611a74565b611a478561226c565b611a6757604051637be9098d60e11b815260048101869052602401610b9a565b611a718483613110565b90505b60008581526020848152604091829020805467ffffffffffffffff19166001600160401b038516908117909155915191825286917f2ec2be2c4b90c2cf13ecb6751a24daed6bb741ae5ed3f7371aabf9402f6d62e8910160405180910390a25050505050565b60009081527f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e36160205260409020546001600160401b031690565b6040805180820182527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d0546001600160a01b03168082527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d154602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa158015611bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190613031565b6000611be2611469565b600083815260049190910160205260408120549150600160e01b82169003611c635780600003610a7757611c14611469565b548210611c3457604051636f96cda160e11b815260040160405180910390fd5b611c3c611469565b600019909201600081815260049390930160205260409092205490508015611c3457919050565b604051636f96cda160e11b815260040160405180910390fd5b6000806000611c89611469565b60009485526006016020525050604090912080549092909150565b60006109476122a3565b61133f8284600082815260008051602061337e8339815191526020908152604080832080546001600160a01b0319166001600160a01b039590951694851790559282527f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600e90522055565b6001600160a01b031660009081527f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600e602052604090205490565b600080611d5e83610f58565b9050806001600160a01b0316611d726122a3565b6001600160a01b03161480611d8e5750611d8e816115196122a3565b806114025750611d9c6122a3565b6001600160a01b0316611dae8461148d565b6001600160a01b0316149392505050565b6000805160206133fe8339815191528590557f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a601084905560008051602061337e8339815191526001600160a01b03841615611e195783611e2f565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee5b6004820180546001600160a01b03199081166001600160a01b0393841617909155600583018054821695831695909517909455600690910180549093169116179055505050565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff16611ec057604051630ef4733760e31b815260040160405180910390fd5b611ed06380ac58cd60e01b6122d1565b611ee0635b5e139f60e01b6122d1565b61084b82826123af565b610bac8160006123e1565b7f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e361600082815260209182526040808220805467ffffffffffffffff191690555190815282917f2ec2be2c4b90c2cf13ecb6751a24daed6bb741ae5ed3f7371aabf9402f6d62e8910160405180910390a250565b6000836001600160a01b031663150b7a02611f81611ca4565b8786866040518563ffffffff1660e01b8152600401611fa39493929190613137565b6020604051808303816000875af1925050508015611fde575060408051601f3d908101601f19168201909252611fdb91810190613174565b60015b61203c573d80801561200c576040519150601f19603f3d011682016040523d82523d6000602084013e612011565b606091505b508051600003612034576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6000612064611469565b54821080156108395750600160e01b61207b611469565b60008481526004919091016020526040902054161592915050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806120b05750819003601f19909101908152919050565b60006120e4611469565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b6000612121611ca4565b6001600160a01b0316612132611b14565b6001600160a01b0316148061140257507ff421ea548af7158b1d71ba0aeccf57104c067038bd8fd214edd05c09eb4f735b5460ff1615801561140257506114028361217b611ca4565b8460405160200161218c919061319e565b6040516020818303038152906040526121a4906131ba565b612562565b801561133f5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038516016121e3576121de828261268b565b61133f565b61133f8484848461272e565b6121f98383612781565b6001600160a01b0383163b15610dbf576000612213611469565b5490508281035b61222d6000868380600101945086611f68565b61224a576040516368d2bf6b60e11b815260040160405180910390fd5b81811061221a578161225a611469565b541461226557600080fd5b5050505050565b60004261227761196d565b6001600160401b031661228a91906130d4565b61229383611ada565b6001600160401b03161092915050565b6000601436108015906122ba57506122ba33610dc4565b156122cc575060131936013560601c90565b503390565b6001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c4602052604090205460ff16151560011461235e576001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c460205260409020805460ff19166001179055612377565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b60006123b9611469565b9050600281016123c98482613224565b50600381016123d88382613224565b50600090555050565b60006123ec83611bd8565b9050806000806123fb86611c7c565b91509150841561243f576124128184610c0a611ca4565b61243f5761242283611519611ca4565b61243f57604051632ce44b5f60e11b815260040160405180910390fd5b61244d836000886001611cae565b801561245857600082555b6fffffffffffffffffffffffffffffffff612471611469565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b17600360e01b176124aa611469565b60008881526004919091016020526040812091909155600160e11b8516900361252057600186016124d9611469565b60008281526004919091016020526040812054900361251e576124fa611469565b54811461251e578461250a611469565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b038616906000805160206133be833981519152908390a461254e611469565b600190810180549091019055505050505050565b600061256c611b14565b6001600160a01b0316836001600160a01b03160361258c57506001611402565b7f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb855860006125d87f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb85596128a5565b905060005b81811015612681576125f260018401826128af565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b8152600401612620939291906132e3565b602060405180830381865afa15801561263d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126619190613311565b1561266f5760019350612681565b806126798161332e565b9150506125dd565b5050509392505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146126d8576040519150601f19603f3d011682016040523d82523d6000602084013e6126dd565b606091505b5050905080610dbf5760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610b9a565b816001600160a01b0316836001600160a01b0316031561133f57306001600160a01b0384160361276c576121de6001600160a01b03851683836128bb565b61133f6001600160a01b03851684848461291e565b600061278b611469565b54905060008290036127b05760405163b562e8dd60e01b815260040160405180910390fd5b6127bd6000848385611cae565b6801000000000000000182026127d1611469565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b171761280c611469565b600083815260049190910160205260408120919091556001600160a01b0384169083830190839083906000805160206133be8339815191528180a4600183015b81811461287257808360006000805160206133be833981519152600080a460010161284c565b508160000361289357604051622e076360e81b815260040160405180910390fd5b8061289c611469565b5550610dbf9050565b6000610839825490565b60006114028383612956565b6040516001600160a01b038316602482015260448101829052610dbf90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612980565b6040516001600160a01b038085166024830152831660448201526064810182905261133f9085906323b872dd60e01b906084016128e7565b600082600001828154811061296d5761296d613347565b9060005260206000200154905092915050565b60006129d5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612a529092919063ffffffff16565b805190915015610dbf57808060200190518101906129f39190613311565b610dbf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b9a565b6060612052848460008585600080866001600160a01b03168587604051612a79919061319e565b60006040518083038185875af1925050503d8060008114612ab6576040519150601f19603f3d011682016040523d82523d6000602084013e612abb565b606091505b5091509150612acc87838387612ad7565b979650505050505050565b60608315612b46578251600003612b3f576001600160a01b0385163b612b3f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b9a565b5081612052565b6120528383815115612b5b5781518083602001fd5b8060405162461bcd60e51b8152600401610b9a9190612bde565b600060208284031215612b8757600080fd5b5035919050565b60005b83811015612ba9578181015183820152602001612b91565b50506000910152565b60008151808452612bca816020860160208601612b8e565b601f01601f19169290920160200192915050565b6020815260006114026020830184612bb2565b6001600160a01b0381168114610bac57600080fd5b8035610a7781612bf1565b60008060408385031215612c2457600080fd5b8235612c2f81612bf1565b946020939093013593505050565b600060208284031215612c4f57600080fd5b813561140281612bf1565b600080600060608486031215612c6f57600080fd5b8335612c7a81612bf1565b92506020840135612c8a81612bf1565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715612cd457612cd4612c9b565b60405290565b60006001600160401b0380841115612cf457612cf4612c9b565b604051601f8501601f19908116603f01168101908282118183101715612d1c57612d1c612c9b565b81604052809350858152868686011115612d3557600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112612d6057600080fd5b61140283833560208501612cda565b600060208284031215612d8157600080fd5b81356001600160401b0380821115612d9857600080fd5b908301906101008286031215612dad57600080fd5b612db5612cb1565b8235815260208301356020820152612dcf60408401612c06565b6040820152612de060608401612c06565b6060820152612df160808401612c06565b6080820152612e0260a08401612c06565b60a082015260c083013582811115612e1957600080fd5b612e2587828601612d4f565b60c08301525060e083013582811115612e3d57600080fd5b612e4987828601612d4f565b60e08301525095945050505050565b8015158114610bac57600080fd5b60008060408385031215612e7957600080fd5b8235612e8481612bf1565b91506020830135612e9481612e58565b809150509250929050565b60008060008060808587031215612eb557600080fd5b8435612ec081612bf1565b93506020850135612ed081612bf1565b92506040850135915060608501356001600160401b03811115612ef257600080fd5b8501601f81018713612f0357600080fd5b612f1287823560208401612cda565b91505092959194509250565b60008060408385031215612f3157600080fd5b82356001600160401b0380821115612f4857600080fd5b612f5486838701612d4f565b93506020850135915080821115612f6a57600080fd5b50612f7785828601612d4f565b9150509250929050565b60008060408385031215612f9457600080fd5b8235612f9f81612bf1565b91506020830135612e9481612bf1565b600060208284031215612fc157600080fd5b5051919050565b600181811c90821680612fdc57607f821691505b602082108103612ffc57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351613014818460208801612b8e565b835190830190613028818360208801612b8e565b01949350505050565b60006020828403121561304357600080fd5b815161140281612bf1565b60006020828403121561306057600080fd5b815161ffff8116811461140257600080fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561083957610839613072565b808202811582820484141761083957610839613072565b6000826130cf57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561083957610839613072565b6000602082840312156130f957600080fd5b81516001600160401b038116811461140257600080fd5b6001600160401b0381811683821601908082111561313057613130613072565b5092915050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061316a90830184612bb2565b9695505050505050565b60006020828403121561318657600080fd5b81516001600160e01b03198116811461140257600080fd5b600082516131b0818460208701612b8e565b9190910192915050565b80516020808301519190811015612ffc5760001960209190910360031b1b16919050565b601f821115610dbf57600081815260208120601f850160051c810160208610156132055750805b601f850160051c820191505b81811015610d9c57828155600101613211565b81516001600160401b0381111561323d5761323d612c9b565b6132518161324b8454612fc8565b846131de565b602080601f831160018114613286576000841561326e5750858301515b600019600386901b1c1916600185901b178555610d9c565b600085815260208120601f198616915b828110156132b557888601518255948401946001909101908401613296565b50858210156132d35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6060815260006132f66060830186612bb2565b6001600160a01b039490941660208301525060400152919050565b60006020828403121561332357600080fd5b815161140281612e58565b60006001820161334057613340613072565b5060010190565b634e487b7160e01b600052603260045260246000fdfe9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60119b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600d50b052c8fb38984269a818b2b593d0584a81b1b99245abc0fab04abc7afb010fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60139b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600f",
    "sourceMap": "709:6367:166:-:0;;;;;;;;;;;;-1:-1:-1;385:22:36;:20;:22::i;:::-;709:6367:166;;1653:314:47;186:68:48;1779:14:47;;;;;;;1775:62;;;1802:35;;-1:-1:-1;;;1802:35:47;;;;;;;;;;;1775:62;1848:9;;1860:16;1848:9;;;:28;1844:119;;;1886:28;;-1:-1:-1;;1886:28:47;1898:16;1886:28;;;;;1927:29;;158:42:385;;;1927:29:47;;146:2:385;131:18;1927:29:47;;;;;;;1844:119;1694:273;1653:314::o;14:192:385:-;709:6367:166;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102255760003560e01c80636340d0961161012357806395d600c8116100ab578063b88d4fde1161006f578063b88d4fde14610634578063bf3bc87814610647578063c87b56dd1461065c578063d2f01f191461067c578063e985e9c51461069c57600080fd5b806395d600c8146105aa57806395d89b41146105bf57806397fb7c1e146105d4578063a22cb465146105f4578063b83073761461061457600080fd5b80636e43d05d116100f25780636e43d05d146104ff578063702515631461051f57806370a082311461054a5780637d0567c41461056a57806389def3201461058a57600080fd5b80636340d096146104955780636352211e146104aa578063657e45e8146104ca57806369d5f38a146104df57600080fd5b806318160ddd116101b157806342842e0e1161017557806342842e0e146103f4578063572b6c05146104075780635b312fce1461043757806361a9c7df14610462578063624520061461047557600080fd5b806318160ddd1461034d57806318e5da65146103625780631b3972f0146103825780631d214b4d146103a457806323b872dd146103e157600080fd5b80630c3a01b1116101f85780630c3a01b1146102c25780631278076a146102e257806316a344b4146103055780631766bb7b1461031857806317c957091461032d57600080fd5b806302b24da51461022a57806306fdde031461024c578063081812fc14610277578063095ea7b3146102af575b600080fd5b34801561023657600080fd5b5061024a610245366004612b75565b6106bc565b005b34801561025857600080fd5b50610261610793565b60405161026e9190612bde565b60405180910390f35b34801561028357600080fd5b50610297610292366004612b75565b61082e565b6040516001600160a01b03909116815260200161026e565b61024a6102bd366004612c11565b61083f565b3480156102ce57600080fd5b5061024a6102dd366004612b75565b61084f565b3480156102ee57600080fd5b506102f761092f565b60405190815260200161026e565b6102f7610313366004612c3d565b61094c565b34801561032457600080fd5b506102f7610a7c565b34801561033957600080fd5b506102f7610348366004612b75565b610b3f565b34801561035957600080fd5b506102f7610b59565b34801561036e57600080fd5b5061024a61037d366004612c3d565b610b63565b34801561038e57600080fd5b506000805160206133fe833981519152546102f7565b3480156103b057600080fd5b507f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a6012546001600160a01b0316610297565b61024a6103ef366004612c5a565b610baf565b61024a610402366004612c5a565b610da4565b34801561041357600080fd5b50610427610422366004612c3d565b610dc4565b604051901515815260200161026e565b34801561044357600080fd5b506000805160206133de833981519152546001600160a01b0316610297565b61024a610470366004612c3d565b610e01565b34801561048157600080fd5b5061024a610490366004612c3d565b610ecf565b3480156104a157600080fd5b50610297610f37565b3480156104b657600080fd5b506102976104c5366004612b75565b610f58565b3480156104d657600080fd5b50610297610f63565b3480156104eb57600080fd5b5061024a6104fa366004612b75565b610f84565b34801561050b57600080fd5b5061024a61051a366004612d6f565b610fc8565b34801561052b57600080fd5b5060008051602061335e833981519152546001600160a01b0316610297565b34801561055657600080fd5b506102f7610565366004612c3d565b611090565b34801561057657600080fd5b5061024a610585366004612c3d565b6110c3565b34801561059657600080fd5b5061024a6105a5366004612b75565b611107565b3480156105b657600080fd5b506102f761119d565b3480156105cb57600080fd5b506102616111a7565b3480156105e057600080fd5b5061024a6105ef366004612b75565b6111bf565b34801561060057600080fd5b5061024a61060f366004612e66565b611203565b34801561062057600080fd5b5061024a61062f366004612c3d565b6112a5565b61024a610642366004612e9f565b6112fb565b34801561065357600080fd5b50610297611345565b34801561066857600080fd5b50610261610677366004612b75565b611378565b34801561068857600080fd5b5061024a610697366004612f1e565b611409565b3480156106a857600080fd5b506104276106b7366004612f81565b61145d565b6000805160206133de8339815191525460408051632cbb9d1360e01b8152905160008051602061337e833981519152926000926001600160a01b0390911691632cbb9d13916004808201926020929091908290030181865afa158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190612faf565b90508083111561076d57604051632b6e8cbb60e11b815260040160405180910390fd5b50507f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a601055565b606061079d611469565b60020180546107ab90612fc8565b80601f01602080910402602001604051908101604052809291908181526020018280546107d790612fc8565b80156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108398261148d565b92915050565b61084b828260016114da565b5050565b60008051602061335e8339815191525460008051602061337e833981519152906001600160a01b031661089557604051636da3122b60e01b815260040160405180910390fd5b600681015460408051630eac306d60e01b815290516000926001600160a01b031691630eac306d9160048083019260209291908290030181865afa1580156108e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109059190612faf565b90508083101561092857604051631a23d64760e11b815260040160405180910390fd5b5060020155565b60006109476000805160206133fe8339815191525490565b905090565b6000600260008051602061339e833981519152540361097e57604051635db5c7cd60e11b815260040160405180910390fd5b610995600260008051602061339e83398151915255565b6109be604051806040016040528060088152602001672537b4b72a37bbb760c11b8152506115a6565b60006109c9836115dc565b11156109e8576040516316d9a23f60e31b815260040160405180910390fd5b6000805160206133fe83398151915254158015610a135750610a08610a7c565b610a10611644565b10155b15610a3157604051635e9cd6f760e01b815260040160405180910390fd5b610a39611663565b9050610a4482611673565b610a4f826001611953565b610a6081610a5b61196d565b6119e8565b610a77600160008051602061339e83398151915255565b919050565b7f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60105460009060008051602061337e833981519152908203610b36578060060160009054906101000a90046001600160a01b03166001600160a01b0316632cbb9d136040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190612faf565b91505090565b60030154919050565b6000610b4a82611ada565b6001600160401b031692915050565b6000610947611644565b610b6b611b14565b6001600160a01b0316336001600160a01b031614610ba3576040516365f4906560e01b81523360048201526024015b60405180910390fd5b610bac81610ecf565b50565b6000610bba82611bd8565b9050836001600160a01b0316816001600160a01b031614610bed5760405162a1148160e81b815260040160405180910390fd5b600080610bf984611c7c565b91509150610c1f8187610c0a611ca4565b6001600160a01b039081169116811491141790565b610c4c57610c2f866106b7611ca4565b610c4c57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610c7357604051633a954ecd60e21b815260040160405180910390fd5b610c808686866001611cae565b8015610c8b57600082555b610c93611469565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610cbf611469565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b17610cf6611469565b60008681526004919091016020526040812091909155600160e11b84169003610d6c5760018401610d25611469565b600082815260049190910160205260408120549003610d6a57610d46611469565b548114610d6a5783610d56611469565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b03166000805160206133be83398151915260405160405180910390a45b505050505050565b610dbf838383604051806020016040528060008152506112fb565b505050565b6001600160a01b031660009081527f9be1203d7c008407e47cf520c8f15f54b074f0a2af3750145c254290338afc3f602052604090205460ff1690565b600260008051602061339e8339815191525403610e3157604051635db5c7cd60e11b815260040160405180910390fd5b610e48600260008051602061339e83398151915255565b6001600160a01b038116610e6f57604051635fbd571760e01b815260040160405180910390fd5b6000610e7a82611d18565b9050610e8581611d52565b610ea2576040516367d9dca160e11b815260040160405180910390fd5b610eab82611673565b610eb781610a5b61196d565b50610bac600160008051602061339e83398151915255565b6001600160a01b038116610ef657604051631492df6160e21b815260040160405180910390fd5b7f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a601280546001600160a01b0319166001600160a01b0392909216919091179055565b60006109476000805160206133de833981519152546001600160a01b031690565b600061083982611bd8565b600061094760008051602061335e833981519152546001600160a01b031690565b610f8c611b14565b6001600160a01b0316336001600160a01b031614610fbf576040516365f4906560e01b8152336004820152602401610b9a565b610bac8161084f565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff1661101257604051630ef4733760e31b815260040160405180910390fd5b61103381600001518260200151836040015184606001518560800151611dbf565b61107e8160a001516001600160a01b031660009081527f9be1203d7c008407e47cf520c8f15f54b074f0a2af3750145c254290338afc3f60205260409020805460ff19166001179055565b610bac8160c001518260e00151611e76565b6000426110a461109f84611d18565b611ada565b6001600160401b0316116110ba57506000919050565b610839826115dc565b6110cb611b14565b6001600160a01b0316336001600160a01b0316146110fe576040516365f4906560e01b8152336004820152602401610b9a565b610bac816112a5565b600260008051602061339e833981519152540361113757604051635db5c7cd60e11b815260040160405180910390fd5b61114e600260008051602061339e83398151915255565b61115781611d52565b611174576040516367d9dca160e11b815260040160405180910390fd5b61117d81611eea565b61118681611ef5565b610bac600160008051602061339e83398151915255565b6000610947610a7c565b60606111b1611469565b60030180546107ab90612fc8565b6111c7611b14565b6001600160a01b0316336001600160a01b0316146111fa576040516365f4906560e01b8152336004820152602401610b9a565b610bac816106bc565b8061120c611469565b6007016000611219611ca4565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561125d611ca4565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611299911515815260200190565b60405180910390a35050565b6001600160a01b0381166112cc57604051636da3122b60e01b815260040160405180910390fd5b60008051602061335e83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611306848484610baf565b6001600160a01b0383163b1561133f5761132284848484611f68565b61133f576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60006109477f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a6012546001600160a01b031690565b60606113838261205a565b6113a057604051630a14c4b560e41b815260040160405180910390fd5b60006113b760408051602081019091526000815290565b905080516000036113d75760405180602001604052806000815250611402565b806113e184612096565b6040516020016113f2929190613002565b6040516020818303038152906040525b9392505050565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff1661145357604051630ef4733760e31b815260040160405180910390fd5b61084b8282611e76565b600061140283836120da565b7f234d8962d7c9a6a6604d7f98797e6ad6d7a886804f7409feb26422e27bf8125490565b60006114988261205a565b6114b5576040516333d1c03960e21b815260040160405180910390fd5b6114bd611469565b60009283526006016020525060409020546001600160a01b031690565b60006114e583610f58565b9050811561153b57806001600160a01b03166114ff611ca4565b6001600160a01b03161461153b5761151e81611519611ca4565b6120da565b61153b576040516367d9dca160e11b815260040160405180910390fd5b83611544611469565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b6115bf6040518060200160405280600081525082612117565b610bac57604051630ce39a4b60e21b815260040160405180910390fd5b60006001600160a01b038216611605576040516323d3ad8160e21b815260040160405180910390fd5b6001600160401b03611615611469565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b60008061164f611469565b6001015461165b611469565b540303919050565b600061166d611469565b54919050565b600061168b6000805160206133fe8339815191525490565b905080600003611699575050565b6000805160206133de8339815191525460408051630eac306d60e01b8152905160008051602061337e833981519152926000926001600160a01b0390911691630eac306d916004808201926020929091908290030181865afa158015611703573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117279190612faf565b90508083101561174a57604051635894b54560e11b815260040160405180910390fd5b6006820154604080516301332c8360e61b815290516000926001600160a01b031691634ccb20c09160048083019260209291908290030181865afa158015611796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ba9190613031565b905060008360060160009054906101000a90046001600160a01b03166001600160a01b0316639f6542aa6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611813573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611837919061304e565b905060008460060160009054906101000a90046001600160a01b03166001600160a01b031663190eaaba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b49190612faf565b905060006118c28588613088565b905080156118f15784826118da61ffff86168461309b565b6118e491906130b2565b6118ee91906130d4565b94505b600486015461190b906001600160a01b03168986886121a9565b8060000361191d575050505050505050565b60048601546005870154611949916001600160a01b03908116918b9116611944898c613088565b6121a9565b5050505050505050565b61084b8282604051806020016040528060008152506121ef565b6000805160206133de8339815191525460408051634090785d60e11b815290516000926001600160a01b031691638120f0ba9160048083019260209291908290030181865afa1580156119c4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094791906130e7565b60008281527f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e3616020819052604082205490916001600160401b0390911690818103611a3e57611a378442613110565b9050611a74565b611a478561226c565b611a6757604051637be9098d60e11b815260048101869052602401610b9a565b611a718483613110565b90505b60008581526020848152604091829020805467ffffffffffffffff19166001600160401b038516908117909155915191825286917f2ec2be2c4b90c2cf13ecb6751a24daed6bb741ae5ed3f7371aabf9402f6d62e8910160405180910390a25050505050565b60009081527f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e36160205260409020546001600160401b031690565b6040805180820182527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d0546001600160a01b03168082527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d154602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa158015611bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190613031565b6000611be2611469565b600083815260049190910160205260408120549150600160e01b82169003611c635780600003610a7757611c14611469565b548210611c3457604051636f96cda160e11b815260040160405180910390fd5b611c3c611469565b600019909201600081815260049390930160205260409092205490508015611c3457919050565b604051636f96cda160e11b815260040160405180910390fd5b6000806000611c89611469565b60009485526006016020525050604090912080549092909150565b60006109476122a3565b61133f8284600082815260008051602061337e8339815191526020908152604080832080546001600160a01b0319166001600160a01b039590951694851790559282527f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600e90522055565b6001600160a01b031660009081527f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600e602052604090205490565b600080611d5e83610f58565b9050806001600160a01b0316611d726122a3565b6001600160a01b03161480611d8e5750611d8e816115196122a3565b806114025750611d9c6122a3565b6001600160a01b0316611dae8461148d565b6001600160a01b0316149392505050565b6000805160206133fe8339815191528590557f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a601084905560008051602061337e8339815191526001600160a01b03841615611e195783611e2f565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee5b6004820180546001600160a01b03199081166001600160a01b0393841617909155600583018054821695831695909517909455600690910180549093169116179055505050565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff16611ec057604051630ef4733760e31b815260040160405180910390fd5b611ed06380ac58cd60e01b6122d1565b611ee0635b5e139f60e01b6122d1565b61084b82826123af565b610bac8160006123e1565b7f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e361600082815260209182526040808220805467ffffffffffffffff191690555190815282917f2ec2be2c4b90c2cf13ecb6751a24daed6bb741ae5ed3f7371aabf9402f6d62e8910160405180910390a250565b6000836001600160a01b031663150b7a02611f81611ca4565b8786866040518563ffffffff1660e01b8152600401611fa39493929190613137565b6020604051808303816000875af1925050508015611fde575060408051601f3d908101601f19168201909252611fdb91810190613174565b60015b61203c573d80801561200c576040519150601f19603f3d011682016040523d82523d6000602084013e612011565b606091505b508051600003612034576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6000612064611469565b54821080156108395750600160e01b61207b611469565b60008481526004919091016020526040902054161592915050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806120b05750819003601f19909101908152919050565b60006120e4611469565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b6000612121611ca4565b6001600160a01b0316612132611b14565b6001600160a01b0316148061140257507ff421ea548af7158b1d71ba0aeccf57104c067038bd8fd214edd05c09eb4f735b5460ff1615801561140257506114028361217b611ca4565b8460405160200161218c919061319e565b6040516020818303038152906040526121a4906131ba565b612562565b801561133f5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038516016121e3576121de828261268b565b61133f565b61133f8484848461272e565b6121f98383612781565b6001600160a01b0383163b15610dbf576000612213611469565b5490508281035b61222d6000868380600101945086611f68565b61224a576040516368d2bf6b60e11b815260040160405180910390fd5b81811061221a578161225a611469565b541461226557600080fd5b5050505050565b60004261227761196d565b6001600160401b031661228a91906130d4565b61229383611ada565b6001600160401b03161092915050565b6000601436108015906122ba57506122ba33610dc4565b156122cc575060131936013560601c90565b503390565b6001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c4602052604090205460ff16151560011461235e576001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c460205260409020805460ff19166001179055612377565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b60006123b9611469565b9050600281016123c98482613224565b50600381016123d88382613224565b50600090555050565b60006123ec83611bd8565b9050806000806123fb86611c7c565b91509150841561243f576124128184610c0a611ca4565b61243f5761242283611519611ca4565b61243f57604051632ce44b5f60e11b815260040160405180910390fd5b61244d836000886001611cae565b801561245857600082555b6fffffffffffffffffffffffffffffffff612471611469565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b17600360e01b176124aa611469565b60008881526004919091016020526040812091909155600160e11b8516900361252057600186016124d9611469565b60008281526004919091016020526040812054900361251e576124fa611469565b54811461251e578461250a611469565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b038616906000805160206133be833981519152908390a461254e611469565b600190810180549091019055505050505050565b600061256c611b14565b6001600160a01b0316836001600160a01b03160361258c57506001611402565b7f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb855860006125d87f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb85596128a5565b905060005b81811015612681576125f260018401826128af565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b8152600401612620939291906132e3565b602060405180830381865afa15801561263d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126619190613311565b1561266f5760019350612681565b806126798161332e565b9150506125dd565b5050509392505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146126d8576040519150601f19603f3d011682016040523d82523d6000602084013e6126dd565b606091505b5050905080610dbf5760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610b9a565b816001600160a01b0316836001600160a01b0316031561133f57306001600160a01b0384160361276c576121de6001600160a01b03851683836128bb565b61133f6001600160a01b03851684848461291e565b600061278b611469565b54905060008290036127b05760405163b562e8dd60e01b815260040160405180910390fd5b6127bd6000848385611cae565b6801000000000000000182026127d1611469565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b171761280c611469565b600083815260049190910160205260408120919091556001600160a01b0384169083830190839083906000805160206133be8339815191528180a4600183015b81811461287257808360006000805160206133be833981519152600080a460010161284c565b508160000361289357604051622e076360e81b815260040160405180910390fd5b8061289c611469565b5550610dbf9050565b6000610839825490565b60006114028383612956565b6040516001600160a01b038316602482015260448101829052610dbf90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612980565b6040516001600160a01b038085166024830152831660448201526064810182905261133f9085906323b872dd60e01b906084016128e7565b600082600001828154811061296d5761296d613347565b9060005260206000200154905092915050565b60006129d5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612a529092919063ffffffff16565b805190915015610dbf57808060200190518101906129f39190613311565b610dbf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b9a565b6060612052848460008585600080866001600160a01b03168587604051612a79919061319e565b60006040518083038185875af1925050503d8060008114612ab6576040519150601f19603f3d011682016040523d82523d6000602084013e612abb565b606091505b5091509150612acc87838387612ad7565b979650505050505050565b60608315612b46578251600003612b3f576001600160a01b0385163b612b3f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b9a565b5081612052565b6120528383815115612b5b5781518083602001fd5b8060405162461bcd60e51b8152600401610b9a9190612bde565b600060208284031215612b8757600080fd5b5035919050565b60005b83811015612ba9578181015183820152602001612b91565b50506000910152565b60008151808452612bca816020860160208601612b8e565b601f01601f19169290920160200192915050565b6020815260006114026020830184612bb2565b6001600160a01b0381168114610bac57600080fd5b8035610a7781612bf1565b60008060408385031215612c2457600080fd5b8235612c2f81612bf1565b946020939093013593505050565b600060208284031215612c4f57600080fd5b813561140281612bf1565b600080600060608486031215612c6f57600080fd5b8335612c7a81612bf1565b92506020840135612c8a81612bf1565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715612cd457612cd4612c9b565b60405290565b60006001600160401b0380841115612cf457612cf4612c9b565b604051601f8501601f19908116603f01168101908282118183101715612d1c57612d1c612c9b565b81604052809350858152868686011115612d3557600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112612d6057600080fd5b61140283833560208501612cda565b600060208284031215612d8157600080fd5b81356001600160401b0380821115612d9857600080fd5b908301906101008286031215612dad57600080fd5b612db5612cb1565b8235815260208301356020820152612dcf60408401612c06565b6040820152612de060608401612c06565b6060820152612df160808401612c06565b6080820152612e0260a08401612c06565b60a082015260c083013582811115612e1957600080fd5b612e2587828601612d4f565b60c08301525060e083013582811115612e3d57600080fd5b612e4987828601612d4f565b60e08301525095945050505050565b8015158114610bac57600080fd5b60008060408385031215612e7957600080fd5b8235612e8481612bf1565b91506020830135612e9481612e58565b809150509250929050565b60008060008060808587031215612eb557600080fd5b8435612ec081612bf1565b93506020850135612ed081612bf1565b92506040850135915060608501356001600160401b03811115612ef257600080fd5b8501601f81018713612f0357600080fd5b612f1287823560208401612cda565b91505092959194509250565b60008060408385031215612f3157600080fd5b82356001600160401b0380821115612f4857600080fd5b612f5486838701612d4f565b93506020850135915080821115612f6a57600080fd5b50612f7785828601612d4f565b9150509250929050565b60008060408385031215612f9457600080fd5b8235612f9f81612bf1565b91506020830135612e9481612bf1565b600060208284031215612fc157600080fd5b5051919050565b600181811c90821680612fdc57607f821691505b602082108103612ffc57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351613014818460208801612b8e565b835190830190613028818360208801612b8e565b01949350505050565b60006020828403121561304357600080fd5b815161140281612bf1565b60006020828403121561306057600080fd5b815161ffff8116811461140257600080fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561083957610839613072565b808202811582820484141761083957610839613072565b6000826130cf57634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561083957610839613072565b6000602082840312156130f957600080fd5b81516001600160401b038116811461140257600080fd5b6001600160401b0381811683821601908082111561313057613130613072565b5092915050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061316a90830184612bb2565b9695505050505050565b60006020828403121561318657600080fd5b81516001600160e01b03198116811461140257600080fd5b600082516131b0818460208701612b8e565b9190910192915050565b80516020808301519190811015612ffc5760001960209190910360031b1b16919050565b601f821115610dbf57600081815260208120601f850160051c810160208610156132055750805b601f850160051c820191505b81811015610d9c57828155600101613211565b81516001600160401b0381111561323d5761323d612c9b565b6132518161324b8454612fc8565b846131de565b602080601f831160018114613286576000841561326e5750858301515b600019600386901b1c1916600185901b178555610d9c565b600085815260208120601f198616915b828110156132b557888601518255948401946001909101908401613296565b50858210156132d35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6060815260006132f66060830186612bb2565b6001600160a01b039490941660208301525060400152919050565b60006020828403121561332357600080fd5b815161140281612e58565b60006001820161334057613340613072565b5060010190565b634e487b7160e01b600052603260045260246000fdfe9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60119b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600d50b052c8fb38984269a818b2b593d0584a81b1b99245abc0fab04abc7afb010fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60139b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600f",
    "sourceMap": "709:6367:166:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4560:349:165;;;;;;;;;;-1:-1:-1;4560:349:165;;;;;:::i;:::-;;:::i;:::-;;2044:116:83;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3522:132;;;;;;;;;;-1:-1:-1;3522:132:83;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1119:32:385;;;1101:51;;1089:2;1074:18;3522:132:83;955:203:385;3260:128:83;;;;;;:::i;:::-;;:::i;3679:510:165:-;;;;;;;;;;-1:-1:-1;3679:510:165;;;;;:::i;:::-;;:::i;3309:101:166:-;;;;;;;;;;;;;:::i;:::-;;;1904:25:385;;;1892:2;1877:18;3309:101:166;1758:177:385;1438:713:166;;;;;;:::i;:::-;;:::i;4913:301:165:-;;;;;;;;;;;;;:::i;2857:105:166:-;;;;;;;;;;-1:-1:-1;2857:105:166;;;;;:::i;:::-;;:::i;1527:93:83:-;;;;;;;;;;;;;:::i;4534:127:166:-;;;;;;;;;;-1:-1:-1;4534:127:166;;;;;:::i;:::-;;:::i;4255:129:165:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;4337:42:165;4255:129;;6127:135;;;;;;;;;;-1:-1:-1;6208:49:165;;-1:-1:-1;;;;;6208:49:165;6127:135;;4917:2680:83;;;;;;:::i;:::-;;:::i;7680:167::-;;;;;;:::i;:::-;;:::i;638:170:72:-;;;;;;;;;;-1:-1:-1;638:170:72;;;;;:::i;:::-;;:::i;:::-;;;2818:14:385;;2811:22;2793:41;;2781:2;2766:18;638:170:72;2653:187:385;6439:113:165;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6509:38:165;-1:-1:-1;;;;;6509:38:165;6439:113;;2185:391:166;;;;;;:::i;:::-;;:::i;5905:218:165:-;;;;;;;;;;-1:-1:-1;5905:218:165;;;;;:::i;:::-;;:::i;5018:93:166:-;;;;;;;;;;;;;:::i;2891:152:83:-;;;;;;;;;;-1:-1:-1;2891:152:83;;;;;:::i;:::-;;:::i;4217:107:166:-;;;;;;;;;;;;;:::i;3170:105::-;;;;;;;;;;-1:-1:-1;3170:105:166;;;;;:::i;:::-;;:::i;854:376::-;;;;;;;;;;-1:-1:-1;854:376:166;;;;;:::i;:::-;;:::i;5599:127:165:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;5676:45:165;-1:-1:-1;;;;;5676:45:165;5599:127;;6248:270:166;;;;;;;;;;-1:-1:-1;6248:270:166;;;;;:::i;:::-;;:::i;4066:117::-;;;;;;;;;;-1:-1:-1;4066:117:166;;;;;:::i;:::-;;:::i;2610:213::-;;;;;;;;;;-1:-1:-1;2610:213:166;;;;;:::i;:::-;;:::i;3756:101::-;;;;;;;;;;;;;:::i;2223:120:83:-;;;;;;;;;;;;;:::i;3617:105:166:-;;;;;;;;;;-1:-1:-1;3617:105:166;;;;;:::i;:::-;;:::i;3957:269:83:-;;;;;;;;;;-1:-1:-1;3957:269:83;;;;;:::i;:::-;;:::i;5392:203:165:-;;;;;;;;;;-1:-1:-1;5392:203:165;;;;;:::i;:::-;;:::i;8396:348:83:-;;;;;;:::i;:::-;;:::i;4695:115:166:-;;;;;;;;;;;;;:::i;2436:329:83:-;;;;;;;;;;-1:-1:-1;2436:329:83;;;;;:::i;:::-;;:::i;876:157::-;;;;;;;;;;-1:-1:-1;876:157:83;;;;;:::i;:::-;;:::i;4364:167::-;;;;;;;;;;-1:-1:-1;4364:167:83;;;;;:::i;:::-;;:::i;4560:349:165:-;-1:-1:-1;;;;;;;;;;;4732:14:165;4710:69;;;-1:-1:-1;;;4710:69:165;;;;-1:-1:-1;;;;;;;;;;;181:54:167;4620:35:165;;-1:-1:-1;;;;;4732:14:165;;;;4710:67;;:69;;;;;;;;;;;;;;;4732:14;4710:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4691:88;;4801:8;4790;:19;4786:58;;;4818:26;;-1:-1:-1;;;4818:26:165;;;;;;;;;;;4786:58;-1:-1:-1;;4851:42:165;:53;4560:349::o;2044:116:83:-;2098:13;2126:23;:21;:23::i;:::-;:29;;2119:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2044:116;:::o;3522:132::-;3606:7;3628:21;3641:7;3628:12;:21::i;:::-;3621:28;3522:132;-1:-1:-1;;3522:132:83:o;3260:128::-;3356:27;3365:2;3369:7;3378:4;3356:8;:27::i;:::-;3260:128;;:::o;3679:510:165:-;-1:-1:-1;;;;;;;;;;;3910:21:165;-1:-1:-1;;;;;;;;;;;181:54:167;-1:-1:-1;;;;;3910:21:165;3906:83;;3960:29;;-1:-1:-1;;;3960:29:165;;;;;;;;;;;3906:83;4040:14;;;;4018:63;;;-1:-1:-1;;;4018:63:165;;;;3996:19;;-1:-1:-1;;;;;4040:14:165;;4018:61;;:63;;;;;;;;;;;;;;4040:14;4018:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3996:85;;4103:11;4092:8;:22;4088:60;;;4123:25;;-1:-1:-1;;;4123:25:165;;;;;;;;;;;4088:60;-1:-1:-1;4155:18:165;;:29;3679:510::o;3309:101:166:-;3362:7;3384:21;-1:-1:-1;;;;;;;;;;;4337:42:165;;4255:129;3384:21:166;3377:28;;3309:101;:::o;1438:713::-;1521:15;415:1:77;-1:-1:-1;;;;;;;;;;;515:38:77;:66;511:117;;596:32;;-1:-1:-1;;;596:32:77;;;;;;;;;;;511:117;634:22;415:1;-1:-1:-1;;;;;;;;;;;832:65:77;777:125;634:22;1609:41:166::1;1629:20;;;;;;;;;;;;;-1:-1:-1::0;;;1629:20:166::1;;::::0;1609:19:::1;:41::i;:::-;1735:1;1712:20;1723:8;1712:10;:20::i;:::-;:24;1708:64;;;1745:27;;-1:-1:-1::0;;;1745:27:166::1;;;;;;;;;;;1708:64;-1:-1:-1::0;;;;;;;;;;;4337:42:165;1872:26:166;:69;::::1;;;;1920:21;:19;:21::i;:::-;1902:14;:12;:14::i;:::-;:39;;1872:69;1868:123;;;1958:26;;-1:-1:-1::0;;;1958:26:166::1;;;;;;;;;;;1868:123;2007:14;:12;:14::i;:::-;1997:24;;2028:31;2050:8;2028:21;:31::i;:::-;2065:22;2075:8;2085:1;2065:9;:22::i;:::-;2093:53;2112:7;2121:24;:22;:24::i;:::-;2093:18;:53::i;:::-;669:24:77::0;475:1;-1:-1:-1;;;;;;;;;;;832:65:77;777:125;669:24;1438:713:166;;;:::o;4913:301:165:-;5055:18;;4965:7;;-1:-1:-1;;;;;;;;;;;181:54:167;5055:23:165;;5051:159;;5117:2;:14;;;;;;;;;;-1:-1:-1;;;;;5117:14:165;-1:-1:-1;;;;;5095:60:165;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5088:69;;;4913:301;:::o;5051:159::-;5185:18;;;;4913:301;-1:-1:-1;4913:301:165:o;2857:105:166:-;2916:7;2938:19;2949:7;2938:10;:19::i;:::-;-1:-1:-1;;;;;2931:26:166;;2857:105;-1:-1:-1;;2857:105:166:o;1527:93:83:-;1579:7;1601:14;:12;:14::i;4534:127:166:-;622:8:64;:6;:8::i;:::-;-1:-1:-1;;;;;608:22:64;:10;-1:-1:-1;;;;;608:22:64;;604:79;;647:29;;-1:-1:-1;;;647:29:64;;665:10;647:29;;;1101:51:385;1074:18;;647:29:64;;;;;;;;604:79;4616:40:166::1;4643:12;4616:26;:40::i;:::-;4534:127:::0;:::o;4917:2680:83:-;5036:27;5066;5085:7;5066:18;:27::i;:::-;5036:57;;5145:4;-1:-1:-1;;;;;5104:45:83;5120:19;-1:-1:-1;;;;;5104:45:83;;5100:92;;5164:28;;-1:-1:-1;;;5164:28:83;;;;;;;;;;;5100:92;5207:27;5242:23;5274:35;5301:7;5274:26;:35::i;:::-;5199:110;;;;5398:68;5423:15;5440:4;5446:19;:17;:19::i;:::-;-1:-1:-1;;;;;11873:32:84;;;11731:28;;11988:20;;12010:30;;11985:56;;11464:587;5398:68:83;5393:181;;5479:43;5496:4;5502:19;:17;:19::i;5479:43::-;5474:100;;5539:35;;-1:-1:-1;;;5539:35:83;;;;;;;;;;;5474:100;-1:-1:-1;;;;;5585:16:83;;5581:52;;5610:23;;-1:-1:-1;;;5610:23:83;;;;;;;;;;;5581:52;5640:43;5662:4;5668:2;5672:7;5681:1;5640:21;:43::i;:::-;5758:15;5755:135;;;5880:1;5859:19;5852:30;5755:135;6230:23;:21;:23::i;:::-;-1:-1:-1;;;;;6230:48:83;;;;;;:42;;;;;:48;;;;;6228:50;;-1:-1:-1;;6228:50:83;;;6316:23;:21;:23::i;:::-;-1:-1:-1;;;;;6316:46:83;;;;;;:42;;;;;:46;;;;;;6314:48;;;;;;10232:11:84;10207:23;10203:41;10190:63;-1:-1:-1;;;10190:63:84;6590:23:83;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:184;;;;-1:-1:-1;;;6879:47:83;;:52;;6875:625;;6975:1;6965:11;;7080:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;:59;;7076:416;;7220:23;:21;:23::i;:::-;:37;7205:52;;7201:281;;7450:19;7365:23;:21;:23::i;:::-;:82;;;;:41;;;;;:82;;;;;:104;7201:281;6933:567;6875:625;7536:7;7532:2;-1:-1:-1;;;;;7517:27:83;7526:4;-1:-1:-1;;;;;7517:27:83;-1:-1:-1;;;;;;;;;;;7517:27:83;;;;;;;;;7550:42;5030:2567;;;4917:2680;;;:::o;7680:167::-;7803:39;7820:4;7826:2;7830:7;7803:39;;;;;;;;;;;;:16;:39::i;:::-;7680:167;;;:::o;638:170:72:-;-1:-1:-1;;;;;742:61:72;723:4;742:61;;;189:54:74;742:61:72;;;;;;;;;638:170::o;2185:391:166:-;415:1:77;-1:-1:-1;;;;;;;;;;;515:38:77;:66;511:117;;596:32;;-1:-1:-1;;;596:32:77;;;;;;;;;;;511:117;634:22;415:1;-1:-1:-1;;;;;;;;;;;832:65:77;777:125;634:22;-1:-1:-1;;;;;2268:22:166;::::1;2264:63;;2299:28;;-1:-1:-1::0;;;2299:28:166::1;;;;;;;;;;;2264:63;2334:15;2352:33;2376:8;2352:23;:33::i;:::-;2334:51;;2397:27;2416:7;2397:18;:27::i;:::-;2392:82;;2439:35;;-1:-1:-1::0;;;2439:35:166::1;;;;;;;;;;;2392:82;2481:31;2503:8;2481:21;:31::i;:::-;2518:53;2537:7;2546:24;:22;:24::i;2518:53::-;2258:318;669:24:77::0;475:1;-1:-1:-1;;;;;;;;;;;832:65:77;777:125;5905:218:165;-1:-1:-1;;;;;5980:26:165;;5976:72;;6015:33;;-1:-1:-1;;;6015:33:165;;;;;;;;;;;5976:72;6054:49;:64;;-1:-1:-1;;;;;;6054:64:165;-1:-1:-1;;;;;6054:64:165;;;;;;;;;;5905:218::o;5018:93:166:-;5067:7;5089:17;-1:-1:-1;;;;;;;;;;;6509:38:165;-1:-1:-1;;;;;6509:38:165;;6439:113;2891:152:83;2971:7;3009:27;3028:7;3009:18;:27::i;4217:107:166:-;4273:7;4295:24;-1:-1:-1;;;;;;;;;;;5676:45:165;-1:-1:-1;;;;;5676:45:165;;5599:127;3170:105:166;622:8:64;:6;:8::i;:::-;-1:-1:-1;;;;;608:22:64;:10;-1:-1:-1;;;;;608:22:64;;604:79;;647:29;;-1:-1:-1;;;647:29:64;;665:10;647:29;;;1101:51:385;1074:18;;647:29:64;955:203:385;604:79:64;3241:29:166::1;3261:8;3241:19;:29::i;854:376::-:0;186:68:48;1263:42:47;;;;;;1258:100;;1320:38;;-1:-1:-1;;;1320:38:47;;;;;;;;;;;1258:100;949:173:166::1;978:4;:20;;;1006:4;:20;;;1034:4;:23;;;1065:4;:27;;;1100:4;:16;;;949:21;:173::i;:::-;1128:43;1156:4;:14;;;-1:-1:-1::0;;;;;380:68:72;:50;:68;;;189:54:74;380:68:72;;;;;:75;;-1:-1:-1;;380:75:72;451:4;380:75;;;302:158;1128:43:166::1;1177:48;1202:4;:9;;;1213:4;:11;;;1177:24;:48::i;6248:270::-:0;6314:7;6441:15;6393:44;6404:32;6428:7;6404:23;:32::i;:::-;6393:10;:44::i;:::-;-1:-1:-1;;;;;6393:63:166;;6389:92;;-1:-1:-1;6473:1:166;;6248:270;-1:-1:-1;6248:270:166:o;6389:92::-;6494:19;6505:7;6494:10;:19::i;4066:117::-;622:8:64;:6;:8::i;:::-;-1:-1:-1;;;;;608:22:64;:10;-1:-1:-1;;;;;608:22:64;;604:79;;647:29;;-1:-1:-1;;;647:29:64;;665:10;647:29;;;1101:51:385;1074:18;;647:29:64;955:203:385;604:79:64;4143:35:166::1;4166:11;4143:22;:35::i;2610:213::-:0;415:1:77;-1:-1:-1;;;;;;;;;;;515:38:77;:66;511:117;;596:32;;-1:-1:-1;;;596:32:77;;;;;;;;;;;511:117;634:22;415:1;-1:-1:-1;;;;;;;;;;;832:65:77;777:125;634:22;2686:27:166::1;2705:7;2686:18;:27::i;:::-;2681:82;;2728:35;;-1:-1:-1::0;;;2728:35:166::1;;;;;;;;;;;2681:82;2770:14;2776:7;2770:5;:14::i;:::-;2790:28;2810:7;2790:19;:28::i;:::-;669:24:77::0;475:1;-1:-1:-1;;;;;;;;;;;832:65:77;777:125;3756:101:166;3809:7;3831:21;:19;:21::i;2223:120:83:-;2279:13;2307:23;:21;:23::i;:::-;:31;;2300:38;;;;;:::i;3617:105:166:-;622:8:64;:6;:8::i;:::-;-1:-1:-1;;;;;608:22:64;:10;-1:-1:-1;;;;;608:22:64;;604:79;;647:29;;-1:-1:-1;;;647:29:64;;665:10;647:29;;;1101:51:385;1074:18;;647:29:64;955:203:385;604:79:64;3688:29:166::1;3708:8;3688:19;:29::i;3957:269:83:-:0;4147:8;4059:23;:21;:23::i;:::-;:42;;:63;4102:19;:17;:19::i;:::-;-1:-1:-1;;;;;4059:63:83;;;;;;;;;;;;;;;;;-1:-1:-1;4059:63:83;;;:85;;;;;;;;;;;;:96;;-1:-1:-1;;4059:96:83;;;;;;;;;;;4181:19;:17;:19::i;:::-;-1:-1:-1;;;;;4166:55:83;;4212:8;4166:55;;;;2818:14:385;2811:22;2793:41;;2781:2;2766:18;;2653:187;4166:55:83;;;;;;;;3957:269;;:::o;5392:203:165:-;-1:-1:-1;;;;;5462:25:165;;5458:67;;5496:29;;-1:-1:-1;;;5496:29:165;;;;;;;;;;;5458:67;-1:-1:-1;;;;;;;;;;;5531:59:165;;-1:-1:-1;;;;;;5531:59:165;-1:-1:-1;;;;;5531:59:165;;;;;;;;;;5392:203::o;8396:348:83:-;8543:31;8556:4;8562:2;8566:7;8543:12;:31::i;:::-;-1:-1:-1;;;;;8584:14:83;;;:19;8580:160;;8616:56;8647:4;8653:2;8657:7;8666:5;8616:30;:56::i;:::-;8611:129;;8691:40;;-1:-1:-1;;;8691:40:83;;;;;;;;;;;8611:129;8396:348;;;;:::o;4695:115:166:-;4755:7;4777:28;6208:49:165;;-1:-1:-1;;;;;6208:49:165;;6127:135;2436:329:83;2517:13;2543:16;2551:7;2543;:16::i;:::-;2538:59;;2568:29;;-1:-1:-1;;;2568:29:83;;;;;;;;;;;2538:59;2604:21;2628:10;6624:9:84;;;;;;;;;-1:-1:-1;6624:9:84;;;6552:86;2628:10:83;2604:34;;2663:7;2657:21;2682:1;2657:26;:103;;;;;;;;;;;;;;;;;2718:7;2727:18;2737:7;2727:9;:18::i;:::-;2701:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2657:103;2644:116;2436:329;-1:-1:-1;;;2436:329:83:o;876:157::-;186:68:48;1263:42:47;;;;;;1258:100;;1320:38;;-1:-1:-1;;;1320:38:47;;;;;;;;;;;1258:100;988:40:83::1;1013:5;1020:7;988:24;:40::i;4364:167::-:0;4473:4;4492:34;4510:5;4517:8;4492:17;:34::i;1557:139:85:-;183:44;;1557:139::o;22507:230:84:-;22585:7;22605:16;22613:7;22605;:16::i;:::-;22600:64;;22630:34;;-1:-1:-1;;;22630:34:84;;;;;;;;;;;22600:64;22678:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;22678:48:84;;;:54;-1:-1:-1;;;;;22678:54:84;;22507:230::o;23287:439::-;23393:13;23409:17;23418:7;23409:8;:17::i;:::-;23393:33;;23437:13;23433:184;;;23485:5;-1:-1:-1;;;;;23462:28:84;:19;:17;:19::i;:::-;-1:-1:-1;;;;;23462:28:84;;23458:159;;23505:45;23523:5;23530:19;:17;:19::i;:::-;23505:17;:45::i;:::-;23500:117;;23571:35;;-1:-1:-1;;;23571:35:84;;;;;;;;;;;23500:117;23680:2;23623:23;:21;:23::i;:::-;:48;;;;:39;;;;;:48;;;;;;:59;;-1:-1:-1;;;;;;23623:59:84;-1:-1:-1;;;;;23623:59:84;;;;;;23693:28;23623:48;;23693:28;;;;;;;;;;23623:48;23693:28;23387:339;23287:439;;;:::o;2471:164:141:-;2551:31;2562:7;;;;;;;;;;;;2571:10;2551;:31::i;:::-;2546:85;;2599:25;;-1:-1:-1;;;2599:25:141;;;;;;;;;;;3340:242:84;3398:7;-1:-1:-1;;;;;3417:19:84;;3413:60;;3445:28;;-1:-1:-1;;;3445:28:84;;;;;;;;;;;3413:60;-1:-1:-1;;;;;3492:23:84;:21;:23::i;:::-;:42;;:49;3535:5;-1:-1:-1;;;;;3492:49:84;-1:-1:-1;;;;;3492:49:84;;;;;;;;;;;;;:85;3479:98;;3340:242;;;:::o;2985:351::-;3032:7;;3263:23;:21;:23::i;:::-;:36;;;3215:23;:21;:23::i;:::-;:37;:84;:110;;2985:351;-1:-1:-1;2985:351:84:o;4042:119::-;4097:7;4119:23;:21;:23::i;:::-;:37;;4042:119;-1:-1:-1;4042:119:84:o;1784:1357:165:-;1845:23;1871:21;-1:-1:-1;;;;;;;;;;;4337:42:165;;4255:129;1871:21;1845:47;;1903:15;1922:1;1903:20;1899:33;;1925:7;1784:1357;:::o;1899:33::-;-1:-1:-1;;;;;;;;;;;2053:14:165;2031:63;;;-1:-1:-1;;;2031:63:165;;;;-1:-1:-1;;;;;;;;;;;181:54:167;1938:35:165;;-1:-1:-1;;;;;2053:14:165;;;;2031:61;;:63;;;;;;;;;;;;;;;2053:14;2031:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2009:85;;2123:11;2105:15;:29;2101:75;;;2143:33;;-1:-1:-1;;;2143:33:165;;;;;;;;;;;2101:75;2228:14;;;;2206:62;;;-1:-1:-1;;;2206:62:165;;;;2183:20;;-1:-1:-1;;;;;2228:14:165;;2206:60;;:62;;;;;;;;;;;;;;2228:14;2206:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2183:85;;2274:13;2312:2;:14;;;;;;;;;;-1:-1:-1;;;;;2312:14:165;-1:-1:-1;;;;;2290:54:165;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2274:72;;2352:19;2396:2;:14;;;;;;;;;;-1:-1:-1;;;;;2396:14:165;-1:-1:-1;;;;;2374:59:165;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2352:83;-1:-1:-1;2442:15:165;2460:29;2478:11;2460:15;:29;:::i;:::-;2442:47;-1:-1:-1;2585:11:165;;2581:94;;2657:11;2642;2622:16;;;;:7;:16;:::i;:::-;2621:32;;;;:::i;:::-;2620:48;;;;:::i;:::-;2606:62;;2581:94;2784:21;;;;2743:134;;-1:-1:-1;;;;;2784:21:165;2813:5;2834:12;2860:11;2743:33;:134::i;:::-;2888:7;2899:1;2888:12;2884:25;;2902:7;;;;;;;1784:1357;:::o;2884:25::-;3012:21;;;;3062:25;;;;2971:165;;-1:-1:-1;;;;;3012:21:165;;;;3041:5;;3062:25;3101:29;3119:11;3101:15;:29;:::i;:::-;2971:33;:165::i;:::-;1839:1302;;;;;;;1784:1357;:::o;21752:104:84:-;21824:27;21834:2;21838:8;21824:27;;;;;;;;;;;;:9;:27::i;3319:183:165:-;-1:-1:-1;;;;;;;;;;;3425:38:165;3403:94;;;-1:-1:-1;;;3403:94:165;;;;3376:6;;-1:-1:-1;;;;;3425:38:165;;3403:92;;:94;;;;;;;;;;;;;;3425:38;3403:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;256:588:80:-;333:32;425:22;;;180:44:81;425:22:80;;;;;;;;180:44:81;;-1:-1:-1;;;;;425:22:80;;;;484;;;480:261;;532:34;558:8;539:15;532:34;:::i;:::-;516:50;;480:261;;;592:21;605:7;592:12;:21::i;:::-;587:96;;632:42;;-1:-1:-1;;;632:42:80;;;;;1904:25:385;;;1877:18;;632:42:80;1758:177:385;587:96:80;706:28;726:8;706:17;:28;:::i;:::-;690:44;;480:261;747:13;:22;;;;;;;;;;;;:38;;-1:-1:-1;;747:38:80;-1:-1:-1;;;;;747:38:80;;;;;;;;797:42;;10543:50:385;;;747:22:80;;797:42;;10516:18:385;797:42:80;;;;;;;327:517;;;256:588;;:::o;1009:129::-;1069:6;1090:43;;;180:44:81;1090:43:80;;;;;;-1:-1:-1;;;;;1090:43:80;;1009:129::o;698:189:64:-;760:67;;;;;;;;185::66;760::64;-1:-1:-1;;;;;760:67:64;;;;;;;;;;;;;840:42;;-1:-1:-1;;;840:42:64;;;;;1904:25:385;;;;840:42:64;;739:13;;840:30;;1877:18:385;;;;;840:42:64;;;;;;760:67;840:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7836:1497:84:-;7912:14;7983:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;;;;8069:24:84;;:29;;8065:1214;;8190:6;8200:1;8190:11;8186:833;;8230:23;:21;:23::i;:::-;:37;8219:48;;8215:104;;8288:31;;-1:-1:-1;;;8288:31:84;;;;;;;;;;;8215:104;8864:23;:21;:23::i;:::-;-1:-1:-1;;8906:9:84;;;8864:52;;;;:41;;;;;:52;;;;;;;;-1:-1:-1;8944:25:84;;8806:203;8944:25;7836:1497;;;:::o;8065:1214::-;9297:31;;-1:-1:-1;;;9297:31:84;;;;;;;;;;;12151:478;12247:27;12276:23;12309:38;12350:30;:28;:30::i;:::-;:62;;;;:53;;:62;;-1:-1:-1;;12350:62:84;;;;12593:26;;12350:62;;12593:26;;-1:-1:-1;12151:478:84:o;6778:100:166:-;6839:7;6861:12;:10;:12::i;6522:252::-;6730:39;6752:12;6766:2;1302:35:165;1373:27;;;-1:-1:-1;;;;;;;;;;;1373:27:165;;;;;;;;:36;;-1:-1:-1;;;;;;1373:36:165;-1:-1:-1;;;;;1373:36:165;;;;;;;;;1415:26;;;:18;:26;;;:36;1223:233;1623:157;-1:-1:-1;;;;;1725:50:165;1703:7;1725:50;;;:42;:50;;;;;;;1623:157::o;5289:256:166:-;5357:4;5369:13;5385:17;5394:7;5385:8;:17::i;:::-;5369:33;;5439:5;-1:-1:-1;;;;;5423:21:166;:12;:10;:12::i;:::-;-1:-1:-1;;;;;5423:21:166;;5422:71;;;;5455:38;5473:5;5480:12;:10;:12::i;5455:38::-;5422:118;;;;5528:12;:10;:12::i;:::-;-1:-1:-1;;;;;5503:37:166;:21;5516:7;5503:12;:21::i;:::-;-1:-1:-1;;;;;5503:37:166;;5409:131;5289:256;-1:-1:-1;;;5289:256:166:o;472:571:165:-;-1:-1:-1;;;;;;;;;;;743:36:165;;;785:18;:36;;;-1:-1:-1;;;;;;;;;;;;;;;;851:32:165;;;:97;;930:18;851:97;;;447:42:213;851:97:165;827:21;;;:121;;-1:-1:-1;;;;;;827:121:165;;;-1:-1:-1;;;;;827:121:165;;;;;;;954:25;;;:50;;;;;;;;;;;;;;1010:14;;;;:28;;;;;;;;;;-1:-1:-1;;;472:571:165:o;1037:299:83:-;186:68:48;1263:42:47;;;;;;1258:100;;1320:38;;-1:-1:-1;;;1320:38:47;;;;;;;;;;;1258:100;1159:25:83::1;-1:-1:-1::0;;;1159:13:83::1;:25::i;:::-;1224;-1:-1:-1::0;;;1224:13:83::1;:25::i;:::-;1297:34;1316:5;1323:7;1297:18;:34::i;23970:81:84:-:0;24025:21;24031:7;24040:5;24025;:21::i;848:157:80:-;180:44:81;916:34:80;:43;;;;;;;;;;;909:50;;-1:-1:-1;;909:50:80;;;970:30;10543:50:385;;;916:43:80;;970:30;;10516:18:385;970:30:80;;;;;;;848:157;:::o;14710:674:84:-;14851:4;14909:2;-1:-1:-1;;;;;14873:56:84;;14939:19;:17;:19::i;:::-;14968:4;14982:7;14999:5;14873:139;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14873:139:84;;;;;;;;-1:-1:-1;;14873:139:84;;;;;;;;;;;;:::i;:::-;;;14863:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15195:6;:13;15212:1;15195:18;15191:183;;15232:40;;-1:-1:-1;;;15232:40:84;;;;;;;;;;;15191:183;15348:6;15342:13;15333:6;15329:2;15325:15;15318:38;14863:517;-1:-1:-1;;;;;;15064:83:84;-1:-1:-1;;;15064:83:84;;-1:-1:-1;14863:517:84;14710:674;;;;;;:::o;11067:301::-;11132:4;11203:23;:21;:23::i;:::-;:37;11193:47;;11157:187;;;;;-1:-1:-1;;;11271:23:84;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;:68;:73;11144:200;11067:301;-1:-1:-1;;11067:301:84:o;29576:1574::-;29649:17;30043:4;30036;30030:11;30026:22;30121:1;30115:4;30108:15;30182:4;30179:1;30175:12;30168:19;;;30250:1;30245:3;30238:14;30339:3;30549:5;30531:419;30596:1;30591:3;30587:11;30580:18;;30764:2;30758:4;30754:13;30750:2;30746:22;30741:3;30733:36;30856:2;30846:13;;30911:25;30531:419;30911:25;-1:-1:-1;30972:13:84;;;-1:-1:-1;;31073:14:84;;;31121:19;;;31073:14;29576:1574;-1:-1:-1;29576:1574:84:o;22317:186::-;22420:4;22439:23;:21;:23::i;:::-;-1:-1:-1;;;;;22439:49:84;;;;;;;:42;;;;;:49;;;;;;;;:59;;;;;;;;;;-1:-1:-1;22439:59:84;;;;;22317:186::o;2142:325:141:-;2248:4;2285:20;:18;:20::i;:::-;-1:-1:-1;;;;;2273:32:141;:8;:6;:8::i;:::-;-1:-1:-1;;;;;2273:32:141;;:189;;;-1:-1:-1;181:58:70;526:31:68;;;2316:10:141;:145;;;;;2338:123;2361:9;2382:20;:18;:20::i;:::-;2439:10;2422:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;2414:37;;;:::i;:::-;2338:11;:123::i;728:315:213:-;849:38;;874:7;849:38;-1:-1:-1;;;;;;;897:24:213;;;893:146;;931:35;955:2;959:6;931:23;:35::i;:::-;893:146;;;987:45;1005:8;1015:4;1021:2;1025:6;987:17;:45::i;21084:597:84:-;21192:19;21198:2;21202:8;21192:5;:19::i;:::-;-1:-1:-1;;;;;21240:14:84;;;:19;21236:435;;21271:11;21285:23;:21;:23::i;:::-;:37;;-1:-1:-1;21348:14:84;;;21372:189;21392:62;21431:1;21435:2;21439:7;;;;;;21448:5;21392:30;:62::i;:::-;21387:143;;21477:40;;-1:-1:-1;;;21477:40:84;;;;;;;;;;;21387:143;21556:3;21548:5;:11;21372:189;;21649:3;21608:23;:21;:23::i;:::-;:37;:44;21604:58;;21654:8;;;21604:58;21261:410;;21084:597;;;:::o;5911:159:166:-;5982:4;6050:15;6023:24;:22;:24::i;:::-;-1:-1:-1;;;;;6023:42:166;;;;;:::i;:::-;6001:19;6012:7;6001:10;:19::i;:::-;-1:-1:-1;;;;;6001:64:166;;;5911:159;-1:-1:-1;;5911:159:166:o;987:481:72:-;1032:14;1077:2;1058:8;:21;;;;:55;;;1083:30;1102:10;1083:18;:30::i;:::-;1054:410;;;-1:-1:-1;;;1391:14:72;1387:23;1374:37;1370:2;1366:46;987:481;:::o;1054:410::-;-1:-1:-1;1447:10:72;;987:481::o;461:282:50:-;-1:-1:-1;;;;;;1130:62:50;;1105:4;1130:62;;;186:68:52;1130:62:50;;;;;;;;:70;;:62;:70;519:182;;-1:-1:-1;;;;;;565:62:50;;:49;:62;;;186:68:52;565:62:50;;;;;:69;;-1:-1:-1;;565:69:50;630:4;565:69;;;519:182;;;662:32;;-1:-1:-1;;;662:32:50;;;;;;;;;;;519:182;711:27;;-1:-1:-1;;;;;;711:27:50;;;;;;;;461:282;:::o;2560:247:84:-;2657:32;2692:23;:21;:23::i;:::-;2657:58;-1:-1:-1;2722:8:84;;;:15;2733:4;2722:8;:15;:::i;:::-;-1:-1:-1;2743:10:84;;;:19;2756:6;2743:10;:19;:::i;:::-;-1:-1:-1;3948:7:84;2768:34;;-1:-1:-1;;2560:247:84:o;24246:2906::-;24321:27;24351;24370:7;24351:18;:27::i;:::-;24321:57;-1:-1:-1;24321:57:84;24385:12;;24519:35;24546:7;24519:26;:35::i;:::-;24444:110;;;;24565:13;24561:299;;;24672:68;24697:15;24714:4;24720:19;:17;:19::i;24672:68::-;24667:186;;24755:44;24773:4;24779:19;:17;:19::i;24755:44::-;24750:103;;24818:35;;-1:-1:-1;;;24818:35:84;;;;;;;;;;;24750:103;24866:51;24888:4;24902:1;24906:7;24915:1;24866:21;:51::i;:::-;24992:15;24989:135;;;25114:1;25093:19;25086:30;24989:135;25711:40;25651:23;:21;:23::i;:::-;-1:-1:-1;;;;;25651:48:84;;;;;;:42;;;;;:48;;;;;;:100;;;;;;;;;10232:11;10207:23;10203:41;10190:63;-1:-1:-1;;;10190:63:84;25946:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:214;;;;-1:-1:-1;;;26265:47:84;;:52;;26261:625;;26361:1;26351:11;;26466:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;:59;;26462:416;;26606:23;:21;:23::i;:::-;:37;26591:52;;26587:281;;26836:19;26751:23;:21;:23::i;:::-;:82;;;;:41;;;;;:82;;;;;:104;26587:281;26319:567;26261:625;26903:35;;26930:7;;26926:1;;-1:-1:-1;;;;;26903:35:84;;;-1:-1:-1;;;;;;;;;;;26903:35:84;26926:1;;26903:35;27103:23;:21;:23::i;:::-;:36;;;;:38;;;;;;;-1:-1:-1;;;;;;24246:2906:84:o;844:585:141:-;963:13;996:8;:6;:8::i;:::-;-1:-1:-1;;;;;988:16:141;:4;-1:-1:-1;;;;;988:16:141;;984:33;;-1:-1:-1;1013:4:141;1006:11;;984:33;288:48:155;1024:44:141;1147:24;:15;:22;:24::i;:::-;1120:51;;1183:9;1178:247;1202:16;1198:1;:20;1178:247;;;1259:21;:15;;;1278:1;1259:18;:21::i;:::-;-1:-1:-1;;;;;1246:46:141;;1304:9;1325:4;1341:10;1246:115;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1233:186;;;1391:4;1380:15;;1405:5;;1233:186;1220:3;;;;:::i;:::-;;;;1178:247;;;;978:451;;844:585;;;;;:::o;2569:178:213:-;2645:12;2663:2;-1:-1:-1;;;;;2663:7:213;2678:5;2663:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2644:44;;;2702:7;2694:48;;;;-1:-1:-1;;;2694:48:213;;15602:2:385;2694:48:213;;;15584:21:385;15641:2;15621:18;;;15614:30;15680;15660:18;;;15653:58;15728:18;;2694:48:213;15400:352:385;2195:315:213;2326:2;-1:-1:-1;;;;;2318:10:213;:4;-1:-1:-1;;;;;2318:10:213;;2314:37;2338:7;2314:37;2377:4;-1:-1:-1;;;;;2361:21:213;;;2357:149;;2392:38;-1:-1:-1;;;;;2392:26:213;;2419:2;2423:6;2392:26;:38::i;2357:149::-;2451:48;-1:-1:-1;;;;;2451:30:213;;2482:4;2488:2;2492:6;2451:30;:48::i;15802:2642:84:-;15870:20;15893:23;:21;:23::i;:::-;:37;;-1:-1:-1;15893:37:84;15940:13;;;15936:44;;15962:18;;-1:-1:-1;;;15962:18:84;;;;;;;;;;;15936:44;15987:61;16017:1;16021:2;16025:12;16039:8;15987:21;:61::i;:::-;16477:32;16457:53;;16399:23;:21;:23::i;:::-;-1:-1:-1;;;;;16399:46:84;;;;;;:42;;;;;:46;;;;;;:111;;;;;;;;;10232:11;10207:23;10203:41;-1:-1:-1;10627:15:84;;10601:24;10597:46;10200:52;10190:63;16710:23;:21;:23::i;:::-;:71;;;;:41;;;;;:71;;;;;:188;;;;-1:-1:-1;;;;;17419:25:84;;;16945:23;;;;16761:12;;17419:25;;-1:-1:-1;;;;;;;;;;;16710:71:84;;17491:260;18029:1;18015:12;18011:20;17980:275;18061:3;18052:7;18049:16;17980:275;;18237:7;18227:8;18224:1;-1:-1:-1;;;;;;;;;;;18194:1:84;18191;18186:59;18103:1;18090:15;17980:275;;;17984:57;18274:8;18286:1;18274:13;18270:45;;18296:19;;-1:-1:-1;;;18296:19:84;;;;;;;;;;;18270:45;18364:3;18324:23;:21;:23::i;:::-;:43;-1:-1:-1;18379:60:84;;-1:-1:-1;8396:348:83;9098:115:377;9161:7;9187:19;9195:3;4537:18;;4455:107;9555:156;9629:7;9679:22;9683:3;9695:5;9679:3;:22::i;763:205:358:-;902:58;;-1:-1:-1;;;;;15949:32:385;;902:58:358;;;15931:51:385;15998:18;;;15991:34;;;875:86:358;;895:5;;-1:-1:-1;;;925:23:358;15904:18:385;;902:58:358;;;;-1:-1:-1;;902:58:358;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:358;-1:-1:-1;;;;;;902:58:358;;;;;;;;;;875:19;:86::i;974:241::-;1139:68;;-1:-1:-1;;;;;16294:15:385;;;1139:68:358;;;16276:34:385;16346:15;;16326:18;;;16319:43;16378:18;;;16371:34;;;1112:96:358;;1132:5;;-1:-1:-1;;;1162:27:358;16211:18:385;;1139:68:358;16036:375:385;4904:118:377;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;3747:706:358:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:358;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:358;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:358;;16750:2:385;4351:85:358;;;16732:21:385;16789:2;16769:18;;;16762:30;16828:34;16808:18;;;16801:62;-1:-1:-1;;;16879:18:385;;;16872:40;16929:19;;4351:85:358;16548:406:385;3873:223:364;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4006;5241;5255:23;5282:6;-1:-1:-1;;;;;5282:11:364;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:364:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:364;;;7908:60;;;;-1:-1:-1;;;7908:60:364;;17860:2:385;7908:60:364;;;17842:21:385;17899:2;17879:18;;;17872:30;17938:31;17918:18;;;17911:59;17987:18;;7908:60:364;17658:353:385;7908:60:364;-1:-1:-1;8003:10:364;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:364;;;;;;;;:::i;14:180:385:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:385;;14:180;-1:-1:-1;14:180:385:o;199:250::-;284:1;294:113;308:6;305:1;302:13;294:113;;;384:11;;;378:18;365:11;;;358:39;330:2;323:10;294:113;;;-1:-1:-1;;441:1:385;423:16;;416:27;199:250::o;454:271::-;496:3;534:5;528:12;561:6;556:3;549:19;577:76;646:6;639:4;634:3;630:14;623:4;616:5;612:16;577:76;:::i;:::-;707:2;686:15;-1:-1:-1;;682:29:385;673:39;;;;714:4;669:50;;454:271;-1:-1:-1;;454:271:385:o;730:220::-;879:2;868:9;861:21;842:4;899:45;940:2;929:9;925:18;917:6;899:45;:::i;1163:131::-;-1:-1:-1;;;;;1238:31:385;;1228:42;;1218:70;;1284:1;1281;1274:12;1299:134;1367:20;;1396:31;1367:20;1396:31;:::i;1438:315::-;1506:6;1514;1567:2;1555:9;1546:7;1542:23;1538:32;1535:52;;;1583:1;1580;1573:12;1535:52;1622:9;1609:23;1641:31;1666:5;1641:31;:::i;:::-;1691:5;1743:2;1728:18;;;;1715:32;;-1:-1:-1;;;1438:315:385:o;1940:247::-;1999:6;2052:2;2040:9;2031:7;2027:23;2023:32;2020:52;;;2068:1;2065;2058:12;2020:52;2107:9;2094:23;2126:31;2151:5;2126:31;:::i;2192:456::-;2269:6;2277;2285;2338:2;2326:9;2317:7;2313:23;2309:32;2306:52;;;2354:1;2351;2344:12;2306:52;2393:9;2380:23;2412:31;2437:5;2412:31;:::i;:::-;2462:5;-1:-1:-1;2519:2:385;2504:18;;2491:32;2532:33;2491:32;2532:33;:::i;:::-;2192:456;;2584:7;;-1:-1:-1;;;2638:2:385;2623:18;;;;2610:32;;2192:456::o;2845:127::-;2906:10;2901:3;2897:20;2894:1;2887:31;2937:4;2934:1;2927:15;2961:4;2958:1;2951:15;2977:250;3044:2;3038:9;3086:6;3074:19;;-1:-1:-1;;;;;3108:34:385;;3144:22;;;3105:62;3102:88;;;3170:18;;:::i;:::-;3206:2;3199:22;2977:250;:::o;3232:632::-;3297:5;-1:-1:-1;;;;;3368:2:385;3360:6;3357:14;3354:40;;;3374:18;;:::i;:::-;3449:2;3443:9;3417:2;3503:15;;-1:-1:-1;;3499:24:385;;;3525:2;3495:33;3491:42;3479:55;;;3549:18;;;3569:22;;;3546:46;3543:72;;;3595:18;;:::i;:::-;3635:10;3631:2;3624:22;3664:6;3655:15;;3694:6;3686;3679:22;3734:3;3725:6;3720:3;3716:16;3713:25;3710:45;;;3751:1;3748;3741:12;3710:45;3801:6;3796:3;3789:4;3781:6;3777:17;3764:44;3856:1;3849:4;3840:6;3832;3828:19;3824:30;3817:41;;;;3232:632;;;;;:::o;3869:222::-;3912:5;3965:3;3958:4;3950:6;3946:17;3942:27;3932:55;;3983:1;3980;3973:12;3932:55;4005:80;4081:3;4072:6;4059:20;4052:4;4044:6;4040:17;4005:80;:::i;4096:1167::-;4188:6;4241:2;4229:9;4220:7;4216:23;4212:32;4209:52;;;4257:1;4254;4247:12;4209:52;4297:9;4284:23;-1:-1:-1;;;;;4367:2:385;4359:6;4356:14;4353:34;;;4383:1;4380;4373:12;4353:34;4406:22;;;;4462:6;4444:16;;;4440:29;4437:49;;;4482:1;4479;4472:12;4437:49;4508:17;;:::i;:::-;4561:2;4548:16;4541:5;4534:31;4618:2;4614;4610:11;4597:25;4592:2;4585:5;4581:14;4574:49;4655:31;4682:2;4678;4674:11;4655:31;:::i;:::-;4650:2;4643:5;4639:14;4632:55;4719:31;4746:2;4742;4738:11;4719:31;:::i;:::-;4714:2;4707:5;4703:14;4696:55;4784:32;4811:3;4807:2;4803:12;4784:32;:::i;:::-;4778:3;4771:5;4767:15;4760:57;4850:32;4877:3;4873:2;4869:12;4850:32;:::i;:::-;4844:3;4837:5;4833:15;4826:57;4929:3;4925:2;4921:12;4908:26;4959:2;4949:8;4946:16;4943:36;;;4975:1;4972;4965:12;4943:36;5012:45;5049:7;5038:8;5034:2;5030:17;5012:45;:::i;:::-;5006:3;4999:5;4995:15;4988:70;;5104:3;5100:2;5096:12;5083:26;5134:2;5124:8;5121:16;5118:36;;;5150:1;5147;5140:12;5118:36;5187:45;5224:7;5213:8;5209:2;5205:17;5187:45;:::i;:::-;5181:3;5170:15;;5163:70;-1:-1:-1;5174:5:385;4096:1167;-1:-1:-1;;;;;4096:1167:385:o;5268:118::-;5354:5;5347:13;5340:21;5333:5;5330:32;5320:60;;5376:1;5373;5366:12;5391:382;5456:6;5464;5517:2;5505:9;5496:7;5492:23;5488:32;5485:52;;;5533:1;5530;5523:12;5485:52;5572:9;5559:23;5591:31;5616:5;5591:31;:::i;:::-;5641:5;-1:-1:-1;5698:2:385;5683:18;;5670:32;5711:30;5670:32;5711:30;:::i;:::-;5760:7;5750:17;;;5391:382;;;;;:::o;5778:795::-;5873:6;5881;5889;5897;5950:3;5938:9;5929:7;5925:23;5921:33;5918:53;;;5967:1;5964;5957:12;5918:53;6006:9;5993:23;6025:31;6050:5;6025:31;:::i;:::-;6075:5;-1:-1:-1;6132:2:385;6117:18;;6104:32;6145:33;6104:32;6145:33;:::i;:::-;6197:7;-1:-1:-1;6251:2:385;6236:18;;6223:32;;-1:-1:-1;6306:2:385;6291:18;;6278:32;-1:-1:-1;;;;;6322:30:385;;6319:50;;;6365:1;6362;6355:12;6319:50;6388:22;;6441:4;6433:13;;6429:27;-1:-1:-1;6419:55:385;;6470:1;6467;6460:12;6419:55;6493:74;6559:7;6554:2;6541:16;6536:2;6532;6528:11;6493:74;:::i;:::-;6483:84;;;5778:795;;;;;;;:::o;6578:543::-;6666:6;6674;6727:2;6715:9;6706:7;6702:23;6698:32;6695:52;;;6743:1;6740;6733:12;6695:52;6783:9;6770:23;-1:-1:-1;;;;;6853:2:385;6845:6;6842:14;6839:34;;;6869:1;6866;6859:12;6839:34;6892:50;6934:7;6925:6;6914:9;6910:22;6892:50;:::i;:::-;6882:60;;6995:2;6984:9;6980:18;6967:32;6951:48;;7024:2;7014:8;7011:16;7008:36;;;7040:1;7037;7030:12;7008:36;;7063:52;7107:7;7096:8;7085:9;7081:24;7063:52;:::i;:::-;7053:62;;;6578:543;;;;;:::o;7126:388::-;7194:6;7202;7255:2;7243:9;7234:7;7230:23;7226:32;7223:52;;;7271:1;7268;7261:12;7223:52;7310:9;7297:23;7329:31;7354:5;7329:31;:::i;:::-;7379:5;-1:-1:-1;7436:2:385;7421:18;;7408:32;7449:33;7408:32;7449:33;:::i;7519:184::-;7589:6;7642:2;7630:9;7621:7;7617:23;7613:32;7610:52;;;7658:1;7655;7648:12;7610:52;-1:-1:-1;7681:16:385;;7519:184;-1:-1:-1;7519:184:385:o;7708:380::-;7787:1;7783:12;;;;7830;;;7851:61;;7905:4;7897:6;7893:17;7883:27;;7851:61;7958:2;7950:6;7947:14;7927:18;7924:38;7921:161;;8004:10;7999:3;7995:20;7992:1;7985:31;8039:4;8036:1;8029:15;8067:4;8064:1;8057:15;7921:161;;7708:380;;;:::o;8093:496::-;8272:3;8310:6;8304:13;8326:66;8385:6;8380:3;8373:4;8365:6;8361:17;8326:66;:::i;:::-;8455:13;;8414:16;;;;8477:70;8455:13;8414:16;8524:4;8512:17;;8477:70;:::i;:::-;8563:20;;8093:496;-1:-1:-1;;;;8093:496:385:o;8594:251::-;8664:6;8717:2;8705:9;8696:7;8692:23;8688:32;8685:52;;;8733:1;8730;8723:12;8685:52;8765:9;8759:16;8784:31;8809:5;8784:31;:::i;8850:276::-;8919:6;8972:2;8960:9;8951:7;8947:23;8943:32;8940:52;;;8988:1;8985;8978:12;8940:52;9020:9;9014:16;9070:6;9063:5;9059:18;9052:5;9049:29;9039:57;;9092:1;9089;9082:12;9131:127;9192:10;9187:3;9183:20;9180:1;9173:31;9223:4;9220:1;9213:15;9247:4;9244:1;9237:15;9263:128;9330:9;;;9351:11;;;9348:37;;;9365:18;;:::i;9396:168::-;9469:9;;;9500;;9517:15;;;9511:22;;9497:37;9487:71;;9538:18;;:::i;9569:217::-;9609:1;9635;9625:132;;9679:10;9674:3;9670:20;9667:1;9660:31;9714:4;9711:1;9704:15;9742:4;9739:1;9732:15;9625:132;-1:-1:-1;9771:9:385;;9569:217::o;9791:125::-;9856:9;;;9877:10;;;9874:36;;;9890:18;;:::i;9921:288::-;9990:6;10043:2;10031:9;10022:7;10018:23;10014:32;10011:52;;;10059:1;10056;10049:12;10011:52;10091:9;10085:16;-1:-1:-1;;;;;10134:5:385;10130:30;10123:5;10120:41;10110:69;;10175:1;10172;10165:12;10214:180;-1:-1:-1;;;;;10319:10:385;;;10331;;;10315:27;;10354:11;;;10351:37;;;10368:18;;:::i;:::-;10351:37;10214:180;;;;:::o;10818:489::-;-1:-1:-1;;;;;11087:15:385;;;11069:34;;11139:15;;11134:2;11119:18;;11112:43;11186:2;11171:18;;11164:34;;;11234:3;11229:2;11214:18;;11207:31;;;11012:4;;11255:46;;11281:19;;11273:6;11255:46;:::i;:::-;11247:54;10818:489;-1:-1:-1;;;;;;10818:489:385:o;11312:290::-;11381:6;11434:2;11422:9;11413:7;11409:23;11405:32;11402:52;;;11450:1;11447;11440:12;11402:52;11476:16;;-1:-1:-1;;;;;;11521:32:385;;11511:43;;11501:71;;11568:1;11565;11558:12;11607:289;11738:3;11776:6;11770:13;11792:66;11851:6;11846:3;11839:4;11831:6;11827:17;11792:66;:::i;:::-;11874:16;;;;;11607:289;-1:-1:-1;;11607:289:385:o;11901:297::-;12019:12;;12066:4;12055:16;;;12049:23;;12019:12;12084:16;;12081:111;;;-1:-1:-1;;12158:4:385;12154:17;;;;12151:1;12147:25;12143:38;12132:50;;11901:297;-1:-1:-1;11901:297:385:o;12329:545::-;12431:2;12426:3;12423:11;12420:448;;;12467:1;12492:5;12488:2;12481:17;12537:4;12533:2;12523:19;12607:2;12595:10;12591:19;12588:1;12584:27;12578:4;12574:38;12643:4;12631:10;12628:20;12625:47;;;-1:-1:-1;12666:4:385;12625:47;12721:2;12716:3;12712:12;12709:1;12705:20;12699:4;12695:31;12685:41;;12776:82;12794:2;12787:5;12784:13;12776:82;;;12839:17;;;12820:1;12809:13;12776:82;;13050:1352;13176:3;13170:10;-1:-1:-1;;;;;13195:6:385;13192:30;13189:56;;;13225:18;;:::i;:::-;13254:97;13344:6;13304:38;13336:4;13330:11;13304:38;:::i;:::-;13298:4;13254:97;:::i;:::-;13406:4;;13470:2;13459:14;;13487:1;13482:663;;;;14189:1;14206:6;14203:89;;;-1:-1:-1;14258:19:385;;;14252:26;14203:89;-1:-1:-1;;13007:1:385;13003:11;;;12999:24;12995:29;12985:40;13031:1;13027:11;;;12982:57;14305:81;;13452:944;;13482:663;12276:1;12269:14;;;12313:4;12300:18;;-1:-1:-1;;13518:20:385;;;13636:236;13650:7;13647:1;13644:14;13636:236;;;13739:19;;;13733:26;13718:42;;13831:27;;;;13799:1;13787:14;;;;13666:19;;13636:236;;;13640:3;13900:6;13891:7;13888:19;13885:201;;;13961:19;;;13955:26;-1:-1:-1;;14044:1:385;14040:14;;;14056:3;14036:24;14032:37;14028:42;14013:58;13998:74;;13885:201;-1:-1:-1;;;;;14132:1:385;14116:14;;;14112:22;14099:36;;-1:-1:-1;13050:1352:385:o;14407:388::-;14612:2;14601:9;14594:21;14575:4;14632:45;14673:2;14662:9;14658:18;14650:6;14632:45;:::i;:::-;-1:-1:-1;;;;;14713:32:385;;;;14708:2;14693:18;;14686:60;-1:-1:-1;14777:2:385;14762:18;14755:34;14624:53;14407:388;-1:-1:-1;14407:388:385:o;14800:245::-;14867:6;14920:2;14908:9;14899:7;14895:23;14891:32;14888:52;;;14936:1;14933;14926:12;14888:52;14968:9;14962:16;14987:28;15009:5;14987:28;:::i;15050:135::-;15089:3;15110:17;;;15107:43;;15130:18;;:::i;:::-;-1:-1:-1;15177:1:385;15166:13;;15050:135::o;16416:127::-;16477:10;16472:3;16468:20;16465:1;16458:31;16508:4;16505:1;16498:15;16532:4;16529:1;16522:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "__ERC721A_init(string,string)": "d2f01f19",
    "__Membership_init((uint256,uint256,address,address,address,address,string,string))": "6e43d05d",
    "_getMembershipCurrency()": "70251563",
    "_getMembershipFeeRecipient()": "1d214b4d",
    "_getMembershipLimit()": "1766bb7b",
    "_getMembershipPrice()": "1b3972f0",
    "_getTownFactory()": "5b312fce",
    "_setMembershipCurrency(address)": "b8307376",
    "_setMembershipFeeRecipient(address)": "62452006",
    "_setMembershipLimit(uint256)": "02b24da5",
    "_setMembershipPrice(uint256)": "0c3a01b1",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "cancelMembership(uint256)": "89def320",
    "expiresAt(uint256)": "17c95709",
    "getApproved(uint256)": "081812fc",
    "getMembershipCurrency()": "657e45e8",
    "getMembershipFeeRecipient()": "bf3bc878",
    "getMembershipLimit()": "95d600c8",
    "getMembershipPrice()": "1278076a",
    "getTownFactory()": "6340d096",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "joinTown(address)": "16a344b4",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "renewMembership(address)": "61a9c7df",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setMembershipCurrency(address)": "7d0567c4",
    "setMembershipFeeRecipient(address)": "18e5da65",
    "setMembershipLimit(uint256)": "97fb7c1e",
    "setMembershipPrice(uint256)": "69d5f38a",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC5643__DurationZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC5643__InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC5643__NotApprovedOrOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC5643__SubscriptionNotRenewable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Entitlement__InvalidValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Entitlement__NotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Entitlement__ValueAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initializable_InInitializingState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initializable_NotInInitializingState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Introspection_AlreadySupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Introspection_NotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__AlreadyMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__InsufficientPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__InvalidCurrency\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__InvalidFeeRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__InvalidLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__InvalidPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__LimitReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__PriceTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Pausable__NotPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Pausable__Paused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuard__ReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"InterfaceAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"InterfaceRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"MembershipCurrencyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"MembershipFeeRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"MembershipLimitUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"MembershipPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expiration\",\"type\":\"uint64\"}],\"name\":\"SubscriptionUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"name\":\"__ERC721A_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"membershipPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"membershipLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"membershipCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"membershipFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"townFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"internalType\":\"struct IMembershipBase.MembershipInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"__Membership_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getMembershipCurrency\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getMembershipFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getMembershipLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getMembershipPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getTownFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCurrency\",\"type\":\"address\"}],\"name\":\"_setMembershipCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"_setMembershipFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"_setMembershipLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"_setMembershipPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"expiresAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMembershipCurrency\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMembershipFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMembershipLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMembershipPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTownFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"joinTown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"renewMembership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCurrency\",\"type\":\"address\"}],\"name\":\"setMembershipCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"setMembershipFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"setMembershipLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setMembershipPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"OwnershipTransferred(address,address)\":{\"details\":\"This emits when ownership of a contract changes.\"},\"SubscriptionUpdate(uint256,uint64)\":{\"details\":\"When a subscription is canceled, the expiration value should also be 0.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"_getMembershipPrice()\":{\"details\":\"Makes it virtual to allow other pricing strategies\"},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"cancelMembership(uint256)\":{\"params\":{\"tokenId\":\"The token id of the membership\"}},\"expiresAt(uint256)\":{\"params\":{\"tokenId\":\"The token id of the membership\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getMembershipCurrency()\":{\"returns\":{\"_0\":\"The membership currency\"}},\"getMembershipFeeRecipient()\":{\"returns\":{\"_0\":\"The membership fee recipient\"}},\"getMembershipLimit()\":{\"returns\":{\"_0\":\"The membership limit\"}},\"getMembershipPrice()\":{\"returns\":{\"_0\":\"The membership price\"}},\"getTownFactory()\":{\"returns\":{\"_0\":\"The town factory\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}},\"joinTown(address)\":{\"params\":{\"receiver\":\"The address of the receiver\"},\"returns\":{\"tokenId\":\"The token id of the membership\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renewMembership(address)\":{\"params\":{\"receiver\":\"The address of the receiver\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setMembershipCurrency(address)\":{\"params\":{\"newCurrency\":\"The new membership currency\"}},\"setMembershipFeeRecipient(address)\":{\"params\":{\"newRecipient\":\"The new membership fee recipient\"}},\"setMembershipLimit(uint256)\":{\"params\":{\"newLimit\":\"The new membership limit\"}},\"setMembershipPrice(uint256)\":{\"params\":{\"newPrice\":\"The new membership price\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"InterfaceAdded(bytes4)\":{\"notice\":\"Emitted when an interface is added to the contract via `_addInterface`.\"},\"InterfaceRemoved(bytes4)\":{\"notice\":\"Emitted when an interface is removed from the contract via `_removeInterface`.\"},\"SubscriptionUpdate(uint256,uint64)\":{\"notice\":\"Emitted when a subscription expiration changes\"}},\"kind\":\"user\",\"methods\":{\"cancelMembership(uint256)\":{\"notice\":\"Cancel a town membership\"},\"expiresAt(uint256)\":{\"notice\":\"Return the expiration date of a membership\"},\"getMembershipCurrency()\":{\"notice\":\"Get the membership currency\"},\"getMembershipFeeRecipient()\":{\"notice\":\"Get the membership fee recipient\"},\"getMembershipLimit()\":{\"notice\":\"Get the membership limit\"},\"getMembershipPrice()\":{\"notice\":\"Get the membership price\"},\"getTownFactory()\":{\"notice\":\"Get the town factory\"},\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"},\"joinTown(address)\":{\"notice\":\"Join a town\"},\"renewMembership(address)\":{\"notice\":\"Renew a town membership\"},\"setMembershipCurrency(address)\":{\"notice\":\"Set the membership currency\"},\"setMembershipFeeRecipient(address)\":{\"notice\":\"Set the membership fee recipient\"},\"setMembershipLimit(uint256)\":{\"notice\":\"Set the membership limit\"},\"setMembershipPrice(uint256)\":{\"notice\":\"Set the membership price\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/towns/facets/membership/MembershipFacet.sol\":\"MembershipFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC721A/=lib/ERC721A/contracts/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=lib/operator-filter-registry/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"contracts/src/diamond/facets/Facet.sol\":{\"keccak256\":\"0x8213b85d1271bc3c2aa9842979c8ad825066c4c9addc55296d53b6747e5198ba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b4e88e869c99e65f0caeb9d03938e78c578a869783b9f20c05f4ba52e7ca493d\",\"dweb:/ipfs/QmRqPmg8BYD1V6Cd8kfihCQ7nn2DAsgRjGW2MJvc7Evnjt\"]},\"contracts/src/diamond/facets/initializable/Initializable.sol\":{\"keccak256\":\"0x2a4f3a99b3b3ac6c2c18431cea80b40774c1d8265ddefac21b26da561e069096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36dbba730942b1fd345f242051ea7f33e979f70392fbd929d8522c0c9c6dd367\",\"dweb:/ipfs/QmYMvYnvg9zQJpDQX9yMHZ1AET9Vx7UXtDenXAs1JhfPpd\"]},\"contracts/src/diamond/facets/initializable/InitializableStorage.sol\":{\"keccak256\":\"0x99dfe047dbb8df48a7490f63939420dd990fb5fd3b3a03c42d0cb9c6f4f9eefa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e8f6d4bff257324e4544cacadd9fee42bada459f457fb707fef90bcfe0e895a\",\"dweb:/ipfs/QmYWEam5VcMt5ViNMKRkaxoD84MK2MewS5iWwSES589Vma\"]},\"contracts/src/diamond/facets/introspection/IERC165.sol\":{\"keccak256\":\"0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2\",\"dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV\"]},\"contracts/src/diamond/facets/introspection/IntrospectionBase.sol\":{\"keccak256\":\"0xbdc803a2179838316625692285c4b720cdbae1c78e5f9a68560719c909253d00\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://776a4490b22b01b554770d71afde7bed4c32ea639a08c84a194076eddf5517be\",\"dweb:/ipfs/QmcPVR9T7vXccCg7RXQ4wXtHaBG6ugrEXk8qnhRpsYMVd6\"]},\"contracts/src/diamond/facets/introspection/IntrospectionStorage.sol\":{\"keccak256\":\"0xd2ec3bbe4d15f9232006b41e0a80a5127006243ee596754af77bd3926045782a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8c47e18bfd34a687ce9ec75dc1f1fa5bca088e97e59aad2ac3fdb0989d06d7e6\",\"dweb:/ipfs/QmdktQXV7PKABzh43SZqemdTG25RxMaMsgpXTTUvZUxmfU\"]},\"contracts/src/diamond/facets/ownable/IERC173.sol\":{\"keccak256\":\"0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620\",\"dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol\":{\"keccak256\":\"0xa2498b875cb3c6f8c642a6b2fd5d9f017f698e687e07610135c3ae0c418e10e1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6881798ca926328f2b7e6731b06babfa548d47c1210ff52cdede3d31f99188b4\",\"dweb:/ipfs/QmRPKteWS4tSg1iTG1nsKJXgGxWWcEVdyXJaxMamZ7EdL6\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol\":{\"keccak256\":\"0xea4323b3cc8794cb9008bf79180555b0dc248c52e0b030024d6b4ac9fdd6af0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dce6d6130309fce1126b8a4b493cc14666c59d1f7685107f07fb685d2cf31773\",\"dweb:/ipfs/QmVrC5tmJWZYgZ7ruKW6uDU8QDeZgbh3QcZD9aWHrX2Duh\"]},\"contracts/src/diamond/facets/pausable/IPausable.sol\":{\"keccak256\":\"0x51faf4ca7fa88bc4bf2699bab34692f0a43a316d0b3f95a8d7271935ef243a78\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e4ff1050ba7ec1bc7de90f562d8ccf7875f4faea0f12ca5101f22619f2dd6de2\",\"dweb:/ipfs/QmeczRzWavYXmirfEbwGg5uLeLdXaENtFAzmxxFsggUHsW\"]},\"contracts/src/diamond/facets/pausable/PausableBase.sol\":{\"keccak256\":\"0xfdeeba59a9f9b6a31203aa45f9244767b5d790dbcf36c920cc0ec5471505e47f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72d6eb74b90e658834c9b9f6a9e391722c3eb3992aef2d4694c1a91473b291a1\",\"dweb:/ipfs/QmXVV8mTt8LmFDhzn3Lm3BMLXNdJTzUMbMrpBjnUaMzm5F\"]},\"contracts/src/diamond/facets/pausable/PausableStorage.sol\":{\"keccak256\":\"0x7aaa1baa71b080cf67876cb383b505be55ff2661b4bafc7f01428d509c201296\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://68231325f3a66baf6b96cb34d1432a675ff1d36fc15500cec97de12fc823bcd1\",\"dweb:/ipfs/QmVQb23iSSbYQJqk3EB9vT5fjSp6J8Uj2AwgEaHMSkF6wa\"]},\"contracts/src/diamond/facets/recipient/ERC2771RecipientBase.sol\":{\"keccak256\":\"0x8bc4ba2434fe953b044842bde8221e91986076bc7a2991e2326ad81eafc1c2df\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7e7abe4d785d77b1ada045857eebe50d94643b211716789a05e618f66af91681\",\"dweb:/ipfs/QmZhDnkSMu9TFWZhufwaG2hb6BH4MQuAXUm2FkT2Wv9xtk\"]},\"contracts/src/diamond/facets/recipient/ERC2771RecipientStorage.sol\":{\"keccak256\":\"0xbc05f921c7f0d4a61bde16443d89633eef695cc86715aeab4d356c5110fba2d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b35bb2b1b879c728be85655549ffe26a4f2b99c328f5b466656ffe323804f150\",\"dweb:/ipfs/QmRFaRnhiS4RgwsSWFQzhcQge4PGBDb9oUchDTZrFPGGbs\"]},\"contracts/src/diamond/facets/recipient/IERC2771Recipient.sol\":{\"keccak256\":\"0x5be5673df93a2162aa89c13802f0f4240fa889b2b8c6e57f372166d27ce779c1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3b276d85daa4373d0fc6e0bc6f29650903ac5b4ee00669e886bf828f5e075aaa\",\"dweb:/ipfs/QmRrCEXA3UwKpHEHtgEhsqwfMNXy3dMVhdDUd64fTqfesM\"]},\"contracts/src/diamond/facets/reentrancy/IReentrancyGuard.sol\":{\"keccak256\":\"0x507dfdcf6a41cf53878f7bd5ce7e1b0d6e55143eb6a797c7d898677c6ff745dd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41eb17240f7ad1c9db7e3545aac935be523a2bce38ac82fe7105d55ac274b2ef\",\"dweb:/ipfs/QmeaSfDMhH4MzMyZLUeiC62S4yZKiUFo5xQnAxwzMKJRaW\"]},\"contracts/src/diamond/facets/reentrancy/ReentrancyGuard.sol\":{\"keccak256\":\"0x4d4a1255bdb69707eacf1268582e817b7df99f295fbe5600307324c3b9a98b9a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7032a949862a25195309aa00468e3ca98e1cd2debc24b917097bc1305ecb80f6\",\"dweb:/ipfs/QmWqZQtHJtUkx2Evw486iDWnTa6SEJffKyXcPScsV8VJXJ\"]},\"contracts/src/diamond/facets/reentrancy/ReentrancyGuardStorage.sol\":{\"keccak256\":\"0xe1adcec11c7ed6bfbbacfdf6807cd302e740728a579a89417e7f15a1f0f31916\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://76dbe11f006b449792ed47c699d266ea89706a2babe0e7177a287283aa9f15f1\",\"dweb:/ipfs/Qmd1AZpAYqzejHFBjpenbMwDWHFhYX7MQTNc18PKtDdoNd\"]},\"contracts/src/diamond/facets/token/ERC5643/ERC5643Base.sol\":{\"keccak256\":\"0x7775b07e89b00a68968273263fc1ddd0673be2d14873909ee5776749b6df7dff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://83b4abf7a61b7225ce897e857f12c12a75dc2fdf14e0fa4360bbbc8a96741ff7\",\"dweb:/ipfs/QmcCyztsCfzAcTaH4LfrsdYSqkztNutqnoTGHoWNiH9s62\"]},\"contracts/src/diamond/facets/token/ERC5643/ERC5643Storage.sol\":{\"keccak256\":\"0x9c8a69b866bc3491d24758d6cf1c8a4b0514bfefd799867e0915a1c519d6ce10\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3d96033585fc705c542d8378fcb6f15feb7d94ee27854bb8650ba0f7af675a52\",\"dweb:/ipfs/QmSVwSN7BpysF5e5rTNEksedRWHb7fLGKfbWDbraxMp3e8\"]},\"contracts/src/diamond/facets/token/ERC5643/IERC5643.sol\":{\"keccak256\":\"0xd8bdaad94ddd9d05f4b124e4a616cbc0a9b7787169722252b45116c3b8ec4ed0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c03a38ce42b8636aefd8200e231864995ac34a61adca44ff885649efa3ac8272\",\"dweb:/ipfs/QmStu2XFdLd2GT6g9cko45SsyactK9w8zFs9gzh6VGK5GT\"]},\"contracts/src/diamond/facets/token/ERC721A/ERC721A.sol\":{\"keccak256\":\"0x321ea4cd6a2617d12cdf6bcd84095072de32ecfddfa95df83e58711c4684e325\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://95b09721ac18cc7d34859486008989238dfc9ff9bbafb300ce7a3b2ecfb201a1\",\"dweb:/ipfs/Qmcdzd3hLsafxVkDTYs2japBR5UpmeJ7VYWrNFbSf1kboX\"]},\"contracts/src/diamond/facets/token/ERC721A/ERC721ABase.sol\":{\"keccak256\":\"0x1e0f21db21117ca705182e671aca5f24d157ca9003268450582d3f49eb2b8ece\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4348c9408175707af61dd9d5d0eda909066c14eb35e1fc88604b9d58eed0d667\",\"dweb:/ipfs/QmUk514VMTYx1skNfooNs5q53x7SoxonHuEYpsDSwvoyEG\"]},\"contracts/src/diamond/facets/token/ERC721A/ERC721AStorage.sol\":{\"keccak256\":\"0xd6940108c888555331b972b7ea5d4842ddeb7c222feab4565c166c12f85900ba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecbc54202867c7b11e57ca2cbcbe33aa5701ea1593a70bfa82a0ccc358682767\",\"dweb:/ipfs/QmScG3JBtGEoDgxipmP8EbAgZxZF9F8aWaZ9gYBqqBweNH\"]},\"contracts/src/diamond/facets/token/ERC721A/IERC721A.sol\":{\"keccak256\":\"0x1473085ffec67f1e059e56baa36be6d3379f7b876147cd62b9854cea8f52cce9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6b3bd85f29ed8e16ad5622e40966c92b58baf988880da4a676142957462ded06\",\"dweb:/ipfs/QmSkGb7ByX4DTvNPh6egoSAs71b7w1NHoYfPUPT9LdtJY9\"]},\"contracts/src/towns/entitlements/IEntitlement.sol\":{\"keccak256\":\"0x3c3733f40dcf373c19ea564ec9cbf49b33e96c27a80012e9be6f8d6d24e76c46\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ba0686e15bc8bfac66d59f62e59832eaf6d4c1b636080f9b2367386d5dc72ecb\",\"dweb:/ipfs/QmemW17L8TkGWG9RHKWTpjq9WBtYX3dmZsiTtzDmYNNXwE\"]},\"contracts/src/towns/facets/Entitled.sol\":{\"keccak256\":\"0x7aa843d40e4efd1a09e1ec302af382911989aba7999e1a0ec2619293b0598710\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d60caab15dacfc58082c74dff1abfbb68b2415d30a88308772123ff16c5369\",\"dweb:/ipfs/QmdAx6MjAwMWyfK8rEFWCRohff49ELCND6vxmvU8hwZzNU\"]},\"contracts/src/towns/facets/Permissions.sol\":{\"keccak256\":\"0x71c581d53e94675ff22111bbdcb54d9238cb2476c1c87d22c1c8709643ca20c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://33571102d8b2339eea4e68cdb4461e6c46617fa2597bc7fc9d3bd085ed3b8939\",\"dweb:/ipfs/QmPsppLQ4sXNwh9QC3hPw1wSdWDXKHsTbeqVPkz97F7KMd\"]},\"contracts/src/towns/facets/entitlements/EntitlementsManagerStorage.sol\":{\"keccak256\":\"0x2fa49a3dea8314e57341b402894a053fe4c3e4f6f682d3f6cfae79e999919340\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ca673210755140e127ec9ed3c7716a3c4fc48d3c4cf66d6ccfca5144e2c9933d\",\"dweb:/ipfs/QmQajUVgwkg8dkeAb8Ext2dABL3PRPNsiDCxd7XXXuUdVD\"]},\"contracts/src/towns/facets/membership/IMembership.sol\":{\"keccak256\":\"0x3850a57d0605852c08b500c4ac18a097ac81295b3ba4c3a65061ba31454dc963\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2f8ee5df52e748adb0f0ecbb6b49eef1616deb07c271d8fea2c991d225f6d26\",\"dweb:/ipfs/QmcbL9Wf8R9YxzFj8LZZUJq3D2XtndpTwaqLBsZqM9NBtz\"]},\"contracts/src/towns/facets/membership/MembershipBase.sol\":{\"keccak256\":\"0x5decd0ae4cdf5b3959734524dc203d8f01ba581230eaa3a98a822570c81e02a8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://418c51270a7b238bc7469759c89f38e314d4caa8e5d1045551c7bf9177d4c1a0\",\"dweb:/ipfs/QmdPbCv6KhA7ax4GbfdvDZbFELLaJVmUiLNed1FwmQJMSc\"]},\"contracts/src/towns/facets/membership/MembershipFacet.sol\":{\"keccak256\":\"0xa2922b7f0cad888d5d57ba3138ab4820ee131c56bd3fdbd772030c41746c3d21\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e592bcc2b14915efb2d1dbd9235dad00ec136b2b7295f7e49e1dc0e32582d3d6\",\"dweb:/ipfs/QmcTghy91NdZ8kYvs7KUq5UPFU1va2dLcs1tdve8BcK9Yy\"]},\"contracts/src/towns/facets/membership/MembershipStorage.sol\":{\"keccak256\":\"0xf61c275fd438990e41184171964bf5438ff347a1e654162b2c12bfe6f4973833\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ed7a0fc30e464a98a8c9876855066ecad26147bb055cee6e33a7f6a2ecec691\",\"dweb:/ipfs/QmSU45tU2HrDxbqY4Zj4JqQQnao3KS4yf89XxeqbmeDF64\"]},\"contracts/src/towns/facets/platform/requirements/IPlatformRequirements.sol\":{\"keccak256\":\"0x2b9abe044df8fad7a5e4427fbcee87b0bdbbb714bc7d9282e94fa4b0b0f5d514\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee228bbd5cbaaba40e99001d5bc23e2b7f4b82647028ad383932470668ab0a12\",\"dweb:/ipfs/QmUziav1iLXZA5NjbF41bUWXBG6CfyCgjK6ET52gE4KdLm\"]},\"contracts/src/utils/interfaces/IWETH.sol\":{\"keccak256\":\"0xd274612ab96215dcdb6e3717a63e7a0f76c7facadff93b2b23ed278f6e7b3b00\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://12444da1f06a0fbe6d2d564d73d6d6bc58c09496af3aeea6988c3d3f9ee81c73\",\"dweb:/ipfs/QmTkpQ6cZmRYgvLUS4mqzLvFg5nabgQjpMnVK8JENboiA3\"]},\"contracts/src/utils/libraries/CurrencyTransfer.sol\":{\"keccak256\":\"0xedde3d732d497dd4600867be3540646cf731ac9e36323254233491cd567c1b2b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c30d846735bf111493739fc41a4d8826100108d220728d7e170c0567e5d22bc\",\"dweb:/ipfs/QmcLiTv1RgrEvLxFhYK2AaxwiZ3XXFkdY7XkDQtDGiz7cG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC5643__DurationZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC5643__InvalidTokenId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC5643__NotApprovedOrOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC5643__SubscriptionNotRenewable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Entitlement__InvalidValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Entitlement__NotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Entitlement__ValueAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Initializable_InInitializingState"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Initializable_NotInInitializingState"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Introspection_AlreadySupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Introspection_NotSupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__AlreadyMember"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__InsufficientPayment"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__InvalidAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__InvalidCurrency"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__InvalidFeeRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__InvalidLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__InvalidPrice"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__LimitReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__PriceTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__ZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Pausable__NotPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Pausable__Paused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuard__ReentrantCall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "version",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "InterfaceAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "InterfaceRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MembershipCurrencyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MembershipFeeRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MembershipLimitUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MembershipPriceUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "expiration",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SubscriptionUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "__ERC721A_init"
        },
        {
          "inputs": [
            {
              "internalType": "struct IMembershipBase.MembershipInfo",
              "name": "info",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "membershipPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "membershipLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "membershipCurrency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "membershipFeeRecipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "townFactory",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "__Membership_init"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_getMembershipCurrency",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_getMembershipFeeRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_getMembershipLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_getMembershipPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_getTownFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newCurrency",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setMembershipCurrency"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setMembershipFeeRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newLimit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setMembershipLimit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setMembershipPrice"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelMembership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "expiresAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembershipCurrency",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembershipFeeRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembershipLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembershipPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTownFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "joinTown",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "renewMembership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newCurrency",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMembershipCurrency"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMembershipFeeRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newLimit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMembershipLimit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMembershipPrice"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "_getMembershipPrice()": {
            "details": "Makes it virtual to allow other pricing strategies"
          },
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
          },
          "cancelMembership(uint256)": {
            "params": {
              "tokenId": "The token id of the membership"
            }
          },
          "expiresAt(uint256)": {
            "params": {
              "tokenId": "The token id of the membership"
            }
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getMembershipCurrency()": {
            "returns": {
              "_0": "The membership currency"
            }
          },
          "getMembershipFeeRecipient()": {
            "returns": {
              "_0": "The membership fee recipient"
            }
          },
          "getMembershipLimit()": {
            "returns": {
              "_0": "The membership limit"
            }
          },
          "getMembershipPrice()": {
            "returns": {
              "_0": "The membership price"
            }
          },
          "getTownFactory()": {
            "returns": {
              "_0": "The town factory"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "isTrustedForwarder(address)": {
            "params": {
              "forwarder": "The address of the Forwarder contract that is being used."
            },
            "returns": {
              "_0": "isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
            }
          },
          "joinTown(address)": {
            "params": {
              "receiver": "The address of the receiver"
            },
            "returns": {
              "tokenId": "The token id of the membership"
            }
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "renewMembership(address)": {
            "params": {
              "receiver": "The address of the receiver"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "setMembershipCurrency(address)": {
            "params": {
              "newCurrency": "The new membership currency"
            }
          },
          "setMembershipFeeRecipient(address)": {
            "params": {
              "newRecipient": "The new membership fee recipient"
            }
          },
          "setMembershipLimit(uint256)": {
            "params": {
              "newLimit": "The new membership limit"
            }
          },
          "setMembershipPrice(uint256)": {
            "params": {
              "newPrice": "The new membership price"
            }
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokenURI(uint256)": {
            "details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "cancelMembership(uint256)": {
            "notice": "Cancel a town membership"
          },
          "expiresAt(uint256)": {
            "notice": "Return the expiration date of a membership"
          },
          "getMembershipCurrency()": {
            "notice": "Get the membership currency"
          },
          "getMembershipFeeRecipient()": {
            "notice": "Get the membership fee recipient"
          },
          "getMembershipLimit()": {
            "notice": "Get the membership limit"
          },
          "getMembershipPrice()": {
            "notice": "Get the membership price"
          },
          "getTownFactory()": {
            "notice": "Get the town factory"
          },
          "isTrustedForwarder(address)": {
            "notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."
          },
          "joinTown(address)": {
            "notice": "Join a town"
          },
          "renewMembership(address)": {
            "notice": "Renew a town membership"
          },
          "setMembershipCurrency(address)": {
            "notice": "Set the membership currency"
          },
          "setMembershipFeeRecipient(address)": {
            "notice": "Set the membership fee recipient"
          },
          "setMembershipLimit(uint256)": {
            "notice": "Set the membership limit"
          },
          "setMembershipPrice(uint256)": {
            "notice": "Set the membership price"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC721A/=lib/ERC721A/contracts/",
        "council/=lib/council/contracts/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "operator-filter-registry/=lib/operator-filter-registry/",
        "prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "contracts/src/towns/facets/membership/MembershipFacet.sol": "MembershipFacet"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/diamond/facets/Facet.sol": {
        "keccak256": "0x8213b85d1271bc3c2aa9842979c8ad825066c4c9addc55296d53b6747e5198ba",
        "urls": [
          "bzz-raw://b4e88e869c99e65f0caeb9d03938e78c578a869783b9f20c05f4ba52e7ca493d",
          "dweb:/ipfs/QmRqPmg8BYD1V6Cd8kfihCQ7nn2DAsgRjGW2MJvc7Evnjt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/initializable/Initializable.sol": {
        "keccak256": "0x2a4f3a99b3b3ac6c2c18431cea80b40774c1d8265ddefac21b26da561e069096",
        "urls": [
          "bzz-raw://36dbba730942b1fd345f242051ea7f33e979f70392fbd929d8522c0c9c6dd367",
          "dweb:/ipfs/QmYMvYnvg9zQJpDQX9yMHZ1AET9Vx7UXtDenXAs1JhfPpd"
        ],
        "license": "MIT"
      },
      "contracts/src/diamond/facets/initializable/InitializableStorage.sol": {
        "keccak256": "0x99dfe047dbb8df48a7490f63939420dd990fb5fd3b3a03c42d0cb9c6f4f9eefa",
        "urls": [
          "bzz-raw://5e8f6d4bff257324e4544cacadd9fee42bada459f457fb707fef90bcfe0e895a",
          "dweb:/ipfs/QmYWEam5VcMt5ViNMKRkaxoD84MK2MewS5iWwSES589Vma"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IERC165.sol": {
        "keccak256": "0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816",
        "urls": [
          "bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2",
          "dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IntrospectionBase.sol": {
        "keccak256": "0xbdc803a2179838316625692285c4b720cdbae1c78e5f9a68560719c909253d00",
        "urls": [
          "bzz-raw://776a4490b22b01b554770d71afde7bed4c32ea639a08c84a194076eddf5517be",
          "dweb:/ipfs/QmcPVR9T7vXccCg7RXQ4wXtHaBG6ugrEXk8qnhRpsYMVd6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IntrospectionStorage.sol": {
        "keccak256": "0xd2ec3bbe4d15f9232006b41e0a80a5127006243ee596754af77bd3926045782a",
        "urls": [
          "bzz-raw://8c47e18bfd34a687ce9ec75dc1f1fa5bca088e97e59aad2ac3fdb0989d06d7e6",
          "dweb:/ipfs/QmdktQXV7PKABzh43SZqemdTG25RxMaMsgpXTTUvZUxmfU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/IERC173.sol": {
        "keccak256": "0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe",
        "urls": [
          "bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620",
          "dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol": {
        "keccak256": "0xa2498b875cb3c6f8c642a6b2fd5d9f017f698e687e07610135c3ae0c418e10e1",
        "urls": [
          "bzz-raw://6881798ca926328f2b7e6731b06babfa548d47c1210ff52cdede3d31f99188b4",
          "dweb:/ipfs/QmRPKteWS4tSg1iTG1nsKJXgGxWWcEVdyXJaxMamZ7EdL6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol": {
        "keccak256": "0xea4323b3cc8794cb9008bf79180555b0dc248c52e0b030024d6b4ac9fdd6af0b",
        "urls": [
          "bzz-raw://dce6d6130309fce1126b8a4b493cc14666c59d1f7685107f07fb685d2cf31773",
          "dweb:/ipfs/QmVrC5tmJWZYgZ7ruKW6uDU8QDeZgbh3QcZD9aWHrX2Duh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/IPausable.sol": {
        "keccak256": "0x51faf4ca7fa88bc4bf2699bab34692f0a43a316d0b3f95a8d7271935ef243a78",
        "urls": [
          "bzz-raw://e4ff1050ba7ec1bc7de90f562d8ccf7875f4faea0f12ca5101f22619f2dd6de2",
          "dweb:/ipfs/QmeczRzWavYXmirfEbwGg5uLeLdXaENtFAzmxxFsggUHsW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/PausableBase.sol": {
        "keccak256": "0xfdeeba59a9f9b6a31203aa45f9244767b5d790dbcf36c920cc0ec5471505e47f",
        "urls": [
          "bzz-raw://72d6eb74b90e658834c9b9f6a9e391722c3eb3992aef2d4694c1a91473b291a1",
          "dweb:/ipfs/QmXVV8mTt8LmFDhzn3Lm3BMLXNdJTzUMbMrpBjnUaMzm5F"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/PausableStorage.sol": {
        "keccak256": "0x7aaa1baa71b080cf67876cb383b505be55ff2661b4bafc7f01428d509c201296",
        "urls": [
          "bzz-raw://68231325f3a66baf6b96cb34d1432a675ff1d36fc15500cec97de12fc823bcd1",
          "dweb:/ipfs/QmVQb23iSSbYQJqk3EB9vT5fjSp6J8Uj2AwgEaHMSkF6wa"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/recipient/ERC2771RecipientBase.sol": {
        "keccak256": "0x8bc4ba2434fe953b044842bde8221e91986076bc7a2991e2326ad81eafc1c2df",
        "urls": [
          "bzz-raw://7e7abe4d785d77b1ada045857eebe50d94643b211716789a05e618f66af91681",
          "dweb:/ipfs/QmZhDnkSMu9TFWZhufwaG2hb6BH4MQuAXUm2FkT2Wv9xtk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/recipient/ERC2771RecipientStorage.sol": {
        "keccak256": "0xbc05f921c7f0d4a61bde16443d89633eef695cc86715aeab4d356c5110fba2d3",
        "urls": [
          "bzz-raw://b35bb2b1b879c728be85655549ffe26a4f2b99c328f5b466656ffe323804f150",
          "dweb:/ipfs/QmRFaRnhiS4RgwsSWFQzhcQge4PGBDb9oUchDTZrFPGGbs"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/recipient/IERC2771Recipient.sol": {
        "keccak256": "0x5be5673df93a2162aa89c13802f0f4240fa889b2b8c6e57f372166d27ce779c1",
        "urls": [
          "bzz-raw://3b276d85daa4373d0fc6e0bc6f29650903ac5b4ee00669e886bf828f5e075aaa",
          "dweb:/ipfs/QmRrCEXA3UwKpHEHtgEhsqwfMNXy3dMVhdDUd64fTqfesM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/reentrancy/IReentrancyGuard.sol": {
        "keccak256": "0x507dfdcf6a41cf53878f7bd5ce7e1b0d6e55143eb6a797c7d898677c6ff745dd",
        "urls": [
          "bzz-raw://41eb17240f7ad1c9db7e3545aac935be523a2bce38ac82fe7105d55ac274b2ef",
          "dweb:/ipfs/QmeaSfDMhH4MzMyZLUeiC62S4yZKiUFo5xQnAxwzMKJRaW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/reentrancy/ReentrancyGuard.sol": {
        "keccak256": "0x4d4a1255bdb69707eacf1268582e817b7df99f295fbe5600307324c3b9a98b9a",
        "urls": [
          "bzz-raw://7032a949862a25195309aa00468e3ca98e1cd2debc24b917097bc1305ecb80f6",
          "dweb:/ipfs/QmWqZQtHJtUkx2Evw486iDWnTa6SEJffKyXcPScsV8VJXJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/reentrancy/ReentrancyGuardStorage.sol": {
        "keccak256": "0xe1adcec11c7ed6bfbbacfdf6807cd302e740728a579a89417e7f15a1f0f31916",
        "urls": [
          "bzz-raw://76dbe11f006b449792ed47c699d266ea89706a2babe0e7177a287283aa9f15f1",
          "dweb:/ipfs/Qmd1AZpAYqzejHFBjpenbMwDWHFhYX7MQTNc18PKtDdoNd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC5643/ERC5643Base.sol": {
        "keccak256": "0x7775b07e89b00a68968273263fc1ddd0673be2d14873909ee5776749b6df7dff",
        "urls": [
          "bzz-raw://83b4abf7a61b7225ce897e857f12c12a75dc2fdf14e0fa4360bbbc8a96741ff7",
          "dweb:/ipfs/QmcCyztsCfzAcTaH4LfrsdYSqkztNutqnoTGHoWNiH9s62"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC5643/ERC5643Storage.sol": {
        "keccak256": "0x9c8a69b866bc3491d24758d6cf1c8a4b0514bfefd799867e0915a1c519d6ce10",
        "urls": [
          "bzz-raw://3d96033585fc705c542d8378fcb6f15feb7d94ee27854bb8650ba0f7af675a52",
          "dweb:/ipfs/QmSVwSN7BpysF5e5rTNEksedRWHb7fLGKfbWDbraxMp3e8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC5643/IERC5643.sol": {
        "keccak256": "0xd8bdaad94ddd9d05f4b124e4a616cbc0a9b7787169722252b45116c3b8ec4ed0",
        "urls": [
          "bzz-raw://c03a38ce42b8636aefd8200e231864995ac34a61adca44ff885649efa3ac8272",
          "dweb:/ipfs/QmStu2XFdLd2GT6g9cko45SsyactK9w8zFs9gzh6VGK5GT"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC721A/ERC721A.sol": {
        "keccak256": "0x321ea4cd6a2617d12cdf6bcd84095072de32ecfddfa95df83e58711c4684e325",
        "urls": [
          "bzz-raw://95b09721ac18cc7d34859486008989238dfc9ff9bbafb300ce7a3b2ecfb201a1",
          "dweb:/ipfs/Qmcdzd3hLsafxVkDTYs2japBR5UpmeJ7VYWrNFbSf1kboX"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC721A/ERC721ABase.sol": {
        "keccak256": "0x1e0f21db21117ca705182e671aca5f24d157ca9003268450582d3f49eb2b8ece",
        "urls": [
          "bzz-raw://4348c9408175707af61dd9d5d0eda909066c14eb35e1fc88604b9d58eed0d667",
          "dweb:/ipfs/QmUk514VMTYx1skNfooNs5q53x7SoxonHuEYpsDSwvoyEG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC721A/ERC721AStorage.sol": {
        "keccak256": "0xd6940108c888555331b972b7ea5d4842ddeb7c222feab4565c166c12f85900ba",
        "urls": [
          "bzz-raw://ecbc54202867c7b11e57ca2cbcbe33aa5701ea1593a70bfa82a0ccc358682767",
          "dweb:/ipfs/QmScG3JBtGEoDgxipmP8EbAgZxZF9F8aWaZ9gYBqqBweNH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC721A/IERC721A.sol": {
        "keccak256": "0x1473085ffec67f1e059e56baa36be6d3379f7b876147cd62b9854cea8f52cce9",
        "urls": [
          "bzz-raw://6b3bd85f29ed8e16ad5622e40966c92b58baf988880da4a676142957462ded06",
          "dweb:/ipfs/QmSkGb7ByX4DTvNPh6egoSAs71b7w1NHoYfPUPT9LdtJY9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/entitlements/IEntitlement.sol": {
        "keccak256": "0x3c3733f40dcf373c19ea564ec9cbf49b33e96c27a80012e9be6f8d6d24e76c46",
        "urls": [
          "bzz-raw://ba0686e15bc8bfac66d59f62e59832eaf6d4c1b636080f9b2367386d5dc72ecb",
          "dweb:/ipfs/QmemW17L8TkGWG9RHKWTpjq9WBtYX3dmZsiTtzDmYNNXwE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/Entitled.sol": {
        "keccak256": "0x7aa843d40e4efd1a09e1ec302af382911989aba7999e1a0ec2619293b0598710",
        "urls": [
          "bzz-raw://75d60caab15dacfc58082c74dff1abfbb68b2415d30a88308772123ff16c5369",
          "dweb:/ipfs/QmdAx6MjAwMWyfK8rEFWCRohff49ELCND6vxmvU8hwZzNU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/Permissions.sol": {
        "keccak256": "0x71c581d53e94675ff22111bbdcb54d9238cb2476c1c87d22c1c8709643ca20c3",
        "urls": [
          "bzz-raw://33571102d8b2339eea4e68cdb4461e6c46617fa2597bc7fc9d3bd085ed3b8939",
          "dweb:/ipfs/QmPsppLQ4sXNwh9QC3hPw1wSdWDXKHsTbeqVPkz97F7KMd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsManagerStorage.sol": {
        "keccak256": "0x2fa49a3dea8314e57341b402894a053fe4c3e4f6f682d3f6cfae79e999919340",
        "urls": [
          "bzz-raw://ca673210755140e127ec9ed3c7716a3c4fc48d3c4cf66d6ccfca5144e2c9933d",
          "dweb:/ipfs/QmQajUVgwkg8dkeAb8Ext2dABL3PRPNsiDCxd7XXXuUdVD"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/membership/IMembership.sol": {
        "keccak256": "0x3850a57d0605852c08b500c4ac18a097ac81295b3ba4c3a65061ba31454dc963",
        "urls": [
          "bzz-raw://f2f8ee5df52e748adb0f0ecbb6b49eef1616deb07c271d8fea2c991d225f6d26",
          "dweb:/ipfs/QmcbL9Wf8R9YxzFj8LZZUJq3D2XtndpTwaqLBsZqM9NBtz"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/membership/MembershipBase.sol": {
        "keccak256": "0x5decd0ae4cdf5b3959734524dc203d8f01ba581230eaa3a98a822570c81e02a8",
        "urls": [
          "bzz-raw://418c51270a7b238bc7469759c89f38e314d4caa8e5d1045551c7bf9177d4c1a0",
          "dweb:/ipfs/QmdPbCv6KhA7ax4GbfdvDZbFELLaJVmUiLNed1FwmQJMSc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/membership/MembershipFacet.sol": {
        "keccak256": "0xa2922b7f0cad888d5d57ba3138ab4820ee131c56bd3fdbd772030c41746c3d21",
        "urls": [
          "bzz-raw://e592bcc2b14915efb2d1dbd9235dad00ec136b2b7295f7e49e1dc0e32582d3d6",
          "dweb:/ipfs/QmcTghy91NdZ8kYvs7KUq5UPFU1va2dLcs1tdve8BcK9Yy"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/membership/MembershipStorage.sol": {
        "keccak256": "0xf61c275fd438990e41184171964bf5438ff347a1e654162b2c12bfe6f4973833",
        "urls": [
          "bzz-raw://8ed7a0fc30e464a98a8c9876855066ecad26147bb055cee6e33a7f6a2ecec691",
          "dweb:/ipfs/QmSU45tU2HrDxbqY4Zj4JqQQnao3KS4yf89XxeqbmeDF64"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/platform/requirements/IPlatformRequirements.sol": {
        "keccak256": "0x2b9abe044df8fad7a5e4427fbcee87b0bdbbb714bc7d9282e94fa4b0b0f5d514",
        "urls": [
          "bzz-raw://ee228bbd5cbaaba40e99001d5bc23e2b7f4b82647028ad383932470668ab0a12",
          "dweb:/ipfs/QmUziav1iLXZA5NjbF41bUWXBG6CfyCgjK6ET52gE4KdLm"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/utils/interfaces/IWETH.sol": {
        "keccak256": "0xd274612ab96215dcdb6e3717a63e7a0f76c7facadff93b2b23ed278f6e7b3b00",
        "urls": [
          "bzz-raw://12444da1f06a0fbe6d2d564d73d6d6bc58c09496af3aeea6988c3d3f9ee81c73",
          "dweb:/ipfs/QmTkpQ6cZmRYgvLUS4mqzLvFg5nabgQjpMnVK8JENboiA3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/utils/libraries/CurrencyTransfer.sol": {
        "keccak256": "0xedde3d732d497dd4600867be3540646cf731ac9e36323254233491cd567c1b2b",
        "urls": [
          "bzz-raw://7c30d846735bf111493739fc41a4d8826100108d220728d7e170c0567e5d22bc",
          "dweb:/ipfs/QmcLiTv1RgrEvLxFhYK2AaxwiZ3XXFkdY7XkDQtDGiz7cG"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/towns/facets/membership/MembershipFacet.sol",
    "id": 27306,
    "exportedSymbols": {
      "ERC2771RecipientBase": [
        11354
      ],
      "ERC5643Base": [
        11809
      ],
      "ERC721A": [
        12360
      ],
      "Entitled": [
        22411
      ],
      "IMembership": [
        26363
      ],
      "MembershipBase": [
        26854
      ],
      "MembershipFacet": [
        27305
      ],
      "Permissions": [
        22423
      ],
      "ReentrancyGuard": [
        11526
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7038:166",
    "nodes": [
      {
        "id": 26856,
        "nodeType": "PragmaDirective",
        "src": "39:24:166",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 26858,
        "nodeType": "ImportDirective",
        "src": "79:46:166",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/membership/IMembership.sol",
        "file": "./IMembership.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27306,
        "sourceUnit": 26364,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26857,
              "name": "IMembership",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26363,
              "src": "87:11:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26860,
        "nodeType": "ImportDirective",
        "src": "140:71:166",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/Permissions.sol",
        "file": "contracts/src/towns/facets/Permissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27306,
        "sourceUnit": 22424,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26859,
              "name": "Permissions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22423,
              "src": "148:11:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26862,
        "nodeType": "ImportDirective",
        "src": "226:52:166",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/membership/MembershipBase.sol",
        "file": "./MembershipBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27306,
        "sourceUnit": 26855,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26861,
              "name": "MembershipBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26854,
              "src": "234:14:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26864,
        "nodeType": "ImportDirective",
        "src": "279:79:166",
        "nodes": [],
        "absolutePath": "contracts/src/diamond/facets/token/ERC721A/ERC721A.sol",
        "file": "contracts/src/diamond/facets/token/ERC721A/ERC721A.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27306,
        "sourceUnit": 12361,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26863,
              "name": "ERC721A",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12360,
              "src": "287:7:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26866,
        "nodeType": "ImportDirective",
        "src": "359:87:166",
        "nodes": [],
        "absolutePath": "contracts/src/diamond/facets/token/ERC5643/ERC5643Base.sol",
        "file": "contracts/src/diamond/facets/token/ERC5643/ERC5643Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27306,
        "sourceUnit": 11810,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26865,
              "name": "ERC5643Base",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11809,
              "src": "367:11:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26868,
        "nodeType": "ImportDirective",
        "src": "447:101:166",
        "nodes": [],
        "absolutePath": "contracts/src/diamond/facets/recipient/ERC2771RecipientBase.sol",
        "file": "contracts/src/diamond/facets/recipient/ERC2771RecipientBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27306,
        "sourceUnit": 11355,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26867,
              "name": "ERC2771RecipientBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11354,
              "src": "455:20:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26870,
        "nodeType": "ImportDirective",
        "src": "549:92:166",
        "nodes": [],
        "absolutePath": "contracts/src/diamond/facets/reentrancy/ReentrancyGuard.sol",
        "file": "contracts/src/diamond/facets/reentrancy/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27306,
        "sourceUnit": 11527,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26869,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11526,
              "src": "557:15:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 26872,
        "nodeType": "ImportDirective",
        "src": "642:65:166",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/Entitled.sol",
        "file": "contracts/src/towns/facets/Entitled.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27306,
        "sourceUnit": 22412,
        "symbolAliases": [
          {
            "foreign": {
              "id": 26871,
              "name": "Entitled",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22411,
              "src": "650:8:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 27305,
        "nodeType": "ContractDefinition",
        "src": "709:6367:166",
        "nodes": [
          {
            "id": 26920,
            "nodeType": "FunctionDefinition",
            "src": "854:376:166",
            "nodes": [],
            "body": {
              "id": 26919,
              "nodeType": "Block",
              "src": "943:287:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 26895,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26889,
                          "src": "978:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$26243_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 26896,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "983:15:166",
                        "memberName": "membershipPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26228,
                        "src": "978:20:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 26897,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26889,
                          "src": "1006:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$26243_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 26898,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1011:15:166",
                        "memberName": "membershipLimit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26230,
                        "src": "1006:20:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 26899,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26889,
                          "src": "1034:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$26243_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 26900,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1039:18:166",
                        "memberName": "membershipCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26232,
                        "src": "1034:23:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26901,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26889,
                          "src": "1065:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$26243_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 26902,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1070:22:166",
                        "memberName": "membershipFeeRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26234,
                        "src": "1065:27:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 26903,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26889,
                          "src": "1100:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$26243_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 26904,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1105:11:166",
                        "memberName": "townFactory",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26236,
                        "src": "1100:16:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 26894,
                      "name": "__MembershipBase_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26437,
                      "src": "949:21:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address,address,address)"
                      }
                    },
                    "id": 26905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "949:173:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26906,
                  "nodeType": "ExpressionStatement",
                  "src": "949:173:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 26908,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26889,
                          "src": "1156:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$26243_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 26909,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1161:9:166",
                        "memberName": "forwarder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26238,
                        "src": "1156:14:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 26907,
                      "name": "__ERC2771RecipientBase_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11264,
                      "src": "1128:27:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:43:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26911,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:43:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 26913,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26889,
                          "src": "1202:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$26243_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 26914,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1207:4:166",
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26240,
                        "src": "1202:9:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 26915,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26889,
                          "src": "1213:4:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$26243_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 26916,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1218:6:166",
                        "memberName": "symbol",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26242,
                        "src": "1213:11:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 26912,
                      "name": "__ERC721A_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11948,
                      "src": "1177:24:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 26917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:48:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26918,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:48:166"
                }
              ]
            },
            "functionSelector": "6e43d05d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 26892,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26891,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "926:16:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9736,
                  "src": "926:16:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "926:16:166"
              }
            ],
            "name": "__Membership_init",
            "nameLocation": "863:17:166",
            "parameters": {
              "id": 26890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26889,
                  "mutability": "mutable",
                  "name": "info",
                  "nameLocation": "908:4:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 26920,
                  "src": "886:26:166",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MembershipInfo_$26243_memory_ptr",
                    "typeString": "struct IMembershipBase.MembershipInfo"
                  },
                  "typeName": {
                    "id": 26888,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 26887,
                      "name": "MembershipInfo",
                      "nameLocations": [
                        "886:14:166"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 26243,
                      "src": "886:14:166"
                    },
                    "referencedDeclaration": 26243,
                    "src": "886:14:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MembershipInfo_$26243_storage_ptr",
                      "typeString": "struct IMembershipBase.MembershipInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "880:36:166"
            },
            "returnParameters": {
              "id": 26893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:0:166"
            },
            "scope": 27305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 26980,
            "nodeType": "FunctionDefinition",
            "src": "1438:713:166",
            "nodes": [],
            "body": {
              "id": 26979,
              "nodeType": "Block",
              "src": "1538:613:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 26931,
                          "name": "Permissions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22423,
                          "src": "1629:11:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Permissions_$22423_$",
                            "typeString": "type(library Permissions)"
                          }
                        },
                        "id": 26932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1641:8:166",
                        "memberName": "JoinTown",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22422,
                        "src": "1629:20:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 26930,
                      "name": "_validatePermission",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22363,
                        22382
                      ],
                      "referencedDeclaration": 22363,
                      "src": "1609:19:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 26933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1609:41:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26934,
                  "nodeType": "ExpressionStatement",
                  "src": "1609:41:166"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 26936,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26923,
                          "src": "1723:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 26935,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12518,
                        "src": "1712:10:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 26937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1712:20:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 26938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1735:1:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1712:24:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26943,
                  "nodeType": "IfStatement",
                  "src": "1708:64:166",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 26940,
                        "name": "Membership__AlreadyMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26255,
                        "src": "1745:25:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 26941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1745:27:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 26942,
                    "nodeType": "RevertStatement",
                    "src": "1738:34:166"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 26953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 26947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 26944,
                          "name": "_getMembershipPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26701,
                          "src": "1872:19:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 26945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1872:21:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 26946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1897:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1872:26:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 26952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 26948,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12491,
                          "src": "1902:12:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 26949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1902:14:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 26950,
                          "name": "_getMembershipLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26772,
                          "src": "1920:19:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 26951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1920:21:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1902:39:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1872:69:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26958,
                  "nodeType": "IfStatement",
                  "src": "1868:123:166",
                  "trueBody": {
                    "id": 26957,
                    "nodeType": "Block",
                    "src": "1943:48:166",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26954,
                            "name": "Membership__LimitReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26261,
                            "src": "1958:24:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 26955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1958:26:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 26956,
                        "nodeType": "RevertStatement",
                        "src": "1951:33:166"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 26962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26959,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26928,
                      "src": "1997:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 26960,
                        "name": "_nextTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12539,
                        "src": "2007:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 26961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2007:14:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1997:24:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26963,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:24:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26965,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26923,
                        "src": "2050:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 26964,
                      "name": "_collectMembershipFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26619,
                      "src": "2028:21:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 26966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2028:31:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26967,
                  "nodeType": "ExpressionStatement",
                  "src": "2028:31:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26969,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26923,
                        "src": "2075:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 26970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2085:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 26968,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13349,
                        13364
                      ],
                      "referencedDeclaration": 13364,
                      "src": "2065:9:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 26971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2065:22:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26972,
                  "nodeType": "ExpressionStatement",
                  "src": "2065:22:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 26974,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26928,
                        "src": "2112:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 26975,
                          "name": "_getMembershipDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26634,
                          "src": "2121:22:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
                            "typeString": "function () view returns (uint64)"
                          }
                        },
                        "id": 26976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2121:24:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 26973,
                      "name": "_renewSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11764,
                      "src": "2093:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint64)"
                      }
                    },
                    "id": 26977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2093:53:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26978,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:53:166"
                }
              ]
            },
            "baseFunctions": [
              26288
            ],
            "documentation": {
              "id": 26921,
              "nodeType": "StructuredDocumentation",
              "src": "1408:27:166",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "16a344b4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 26926,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26925,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1499:12:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11499,
                  "src": "1499:12:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "1499:12:166"
              }
            ],
            "name": "joinTown",
            "nameLocation": "1447:8:166",
            "parameters": {
              "id": 26924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26923,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1469:8:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 26980,
                  "src": "1461:16:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:26:166"
            },
            "returnParameters": {
              "id": 26929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26928,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1529:7:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 26980,
                  "src": "1521:15:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1521:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1520:17:166"
            },
            "scope": 27305,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27023,
            "nodeType": "FunctionDefinition",
            "src": "2185:391:166",
            "nodes": [],
            "body": {
              "id": 27022,
              "nodeType": "Block",
              "src": "2258:318:166",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 26993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 26988,
                      "name": "receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26983,
                      "src": "2268:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 26991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2288:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 26990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2280:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 26989,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2280:7:166",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 26992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2280:10:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2268:22:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26997,
                  "nodeType": "IfStatement",
                  "src": "2264:63:166",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 26994,
                        "name": "Membership__InvalidAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26245,
                        "src": "2299:26:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 26995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2299:28:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 26996,
                    "nodeType": "RevertStatement",
                    "src": "2292:35:166"
                  }
                },
                {
                  "assignments": [
                    26999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 26999,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "2342:7:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 27022,
                      "src": "2334:15:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 26998,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2334:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27003,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 27001,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26983,
                        "src": "2376:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 27000,
                      "name": "_getTokenIdByMembership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26500,
                      "src": "2352:23:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 27002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2352:33:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2334:51:166"
                },
                {
                  "condition": {
                    "id": 27007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2396:28:166",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 27005,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26999,
                          "src": "2416:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 27004,
                        "name": "_isApprovedOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27196,
                        "src": "2397:18:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 27006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2397:27:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27011,
                  "nodeType": "IfStatement",
                  "src": "2392:82:166",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 27008,
                        "name": "ApprovalCallerNotOwnerNorApproved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13879,
                        "src": "2439:33:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 27009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2439:35:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 27010,
                    "nodeType": "RevertStatement",
                    "src": "2432:42:166"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27013,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26983,
                        "src": "2503:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 27012,
                      "name": "_collectMembershipFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26619,
                      "src": "2481:21:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 27014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2481:31:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27015,
                  "nodeType": "ExpressionStatement",
                  "src": "2481:31:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27017,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26999,
                        "src": "2537:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 27018,
                          "name": "_getMembershipDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26634,
                          "src": "2546:22:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
                            "typeString": "function () view returns (uint64)"
                          }
                        },
                        "id": 27019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2546:24:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 27016,
                      "name": "_renewSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11764,
                      "src": "2518:18:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint64)"
                      }
                    },
                    "id": 27020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2518:53:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27021,
                  "nodeType": "ExpressionStatement",
                  "src": "2518:53:166"
                }
              ]
            },
            "baseFunctions": [
              26294
            ],
            "documentation": {
              "id": 26981,
              "nodeType": "StructuredDocumentation",
              "src": "2155:27:166",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "61a9c7df",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 26986,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 26985,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2245:12:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11499,
                  "src": "2245:12:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "2245:12:166"
              }
            ],
            "name": "renewMembership",
            "nameLocation": "2194:15:166",
            "parameters": {
              "id": 26984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26983,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2218:8:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27023,
                  "src": "2210:16:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2209:18:166"
            },
            "returnParameters": {
              "id": 26987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2258:0:166"
            },
            "scope": 27305,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27048,
            "nodeType": "FunctionDefinition",
            "src": "2610:213:166",
            "nodes": [],
            "body": {
              "id": 27047,
              "nodeType": "Block",
              "src": "2675:148:166",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 27034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2685:28:166",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 27032,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27026,
                          "src": "2705:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 27031,
                        "name": "_isApprovedOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27196,
                        "src": "2686:18:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 27033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2686:27:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27038,
                  "nodeType": "IfStatement",
                  "src": "2681:82:166",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 27035,
                        "name": "ApprovalCallerNotOwnerNorApproved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13879,
                        "src": "2728:33:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 27036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2728:35:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 27037,
                    "nodeType": "RevertStatement",
                    "src": "2721:42:166"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27040,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27026,
                        "src": "2776:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27039,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13505,
                        13679
                      ],
                      "referencedDeclaration": 13505,
                      "src": "2770:5:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 27041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2770:14:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27042,
                  "nodeType": "ExpressionStatement",
                  "src": "2770:14:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27044,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27026,
                        "src": "2810:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27043,
                      "name": "_cancelSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11783,
                      "src": "2790:19:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 27045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2790:28:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27046,
                  "nodeType": "ExpressionStatement",
                  "src": "2790:28:166"
                }
              ]
            },
            "baseFunctions": [
              26300
            ],
            "documentation": {
              "id": 27024,
              "nodeType": "StructuredDocumentation",
              "src": "2580:27:166",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "89def320",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 27029,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27028,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2662:12:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11499,
                  "src": "2662:12:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "2662:12:166"
              }
            ],
            "name": "cancelMembership",
            "nameLocation": "2619:16:166",
            "parameters": {
              "id": 27027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27026,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2644:7:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27048,
                  "src": "2636:15:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2635:17:166"
            },
            "returnParameters": {
              "id": 27030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2675:0:166"
            },
            "scope": 27305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27061,
            "nodeType": "FunctionDefinition",
            "src": "2857:105:166",
            "nodes": [],
            "body": {
              "id": 27060,
              "nodeType": "Block",
              "src": "2925:37:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27057,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27051,
                        "src": "2949:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27056,
                      "name": "_expiresAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11798,
                      "src": "2938:10:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint64_$",
                        "typeString": "function (uint256) view returns (uint64)"
                      }
                    },
                    "id": 27058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2938:19:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 27055,
                  "id": 27059,
                  "nodeType": "Return",
                  "src": "2931:26:166"
                }
              ]
            },
            "baseFunctions": [
              26308
            ],
            "documentation": {
              "id": 27049,
              "nodeType": "StructuredDocumentation",
              "src": "2827:27:166",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "17c95709",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "expiresAt",
            "nameLocation": "2866:9:166",
            "parameters": {
              "id": 27052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27051,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2884:7:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27061,
                  "src": "2876:15:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2876:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2875:17:166"
            },
            "returnParameters": {
              "id": 27055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27054,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27061,
                  "src": "2916:7:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2916:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2915:9:166"
            },
            "scope": 27305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27074,
            "nodeType": "FunctionDefinition",
            "src": "3170:105:166",
            "nodes": [],
            "body": {
              "id": 27073,
              "nodeType": "Block",
              "src": "3235:40:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27070,
                        "name": "newPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27064,
                        "src": "3261:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27069,
                      "name": "_setMembershipPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26689,
                      "src": "3241:19:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 27071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3241:29:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27072,
                  "nodeType": "ExpressionStatement",
                  "src": "3241:29:166"
                }
              ]
            },
            "baseFunctions": [
              26314
            ],
            "documentation": {
              "id": 27062,
              "nodeType": "StructuredDocumentation",
              "src": "3140:27:166",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "69d5f38a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 27067,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27066,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3225:9:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10836,
                  "src": "3225:9:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "3225:9:166"
              }
            ],
            "name": "setMembershipPrice",
            "nameLocation": "3179:18:166",
            "parameters": {
              "id": 27065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27064,
                  "mutability": "mutable",
                  "name": "newPrice",
                  "nameLocation": "3206:8:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27074,
                  "src": "3198:16:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27063,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3198:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3197:18:166"
            },
            "returnParameters": {
              "id": 27068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3235:0:166"
            },
            "scope": 27305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27084,
            "nodeType": "FunctionDefinition",
            "src": "3309:101:166",
            "nodes": [],
            "body": {
              "id": 27083,
              "nodeType": "Block",
              "src": "3371:39:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27080,
                      "name": "_getMembershipPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26701,
                      "src": "3384:19:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 27081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3384:21:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 27079,
                  "id": 27082,
                  "nodeType": "Return",
                  "src": "3377:28:166"
                }
              ]
            },
            "baseFunctions": [
              26320
            ],
            "documentation": {
              "id": 27075,
              "nodeType": "StructuredDocumentation",
              "src": "3279:27:166",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "1278076a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMembershipPrice",
            "nameLocation": "3318:18:166",
            "parameters": {
              "id": 27076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3336:2:166"
            },
            "returnParameters": {
              "id": 27079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27078,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27084,
                  "src": "3362:7:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3362:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3361:9:166"
            },
            "scope": 27305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27097,
            "nodeType": "FunctionDefinition",
            "src": "3617:105:166",
            "nodes": [],
            "body": {
              "id": 27096,
              "nodeType": "Block",
              "src": "3682:40:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27093,
                        "name": "newLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27087,
                        "src": "3708:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27092,
                      "name": "_setMembershipLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26740,
                      "src": "3688:19:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 27094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3688:29:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27095,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:29:166"
                }
              ]
            },
            "baseFunctions": [
              26326
            ],
            "documentation": {
              "id": 27085,
              "nodeType": "StructuredDocumentation",
              "src": "3587:27:166",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "97fb7c1e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 27090,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27089,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3672:9:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10836,
                  "src": "3672:9:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "3672:9:166"
              }
            ],
            "name": "setMembershipLimit",
            "nameLocation": "3626:18:166",
            "parameters": {
              "id": 27088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27087,
                  "mutability": "mutable",
                  "name": "newLimit",
                  "nameLocation": "3653:8:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27097,
                  "src": "3645:16:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3645:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3644:18:166"
            },
            "returnParameters": {
              "id": 27091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3682:0:166"
            },
            "scope": 27305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27107,
            "nodeType": "FunctionDefinition",
            "src": "3756:101:166",
            "nodes": [],
            "body": {
              "id": 27106,
              "nodeType": "Block",
              "src": "3818:39:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27103,
                      "name": "_getMembershipLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26772,
                      "src": "3831:19:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 27104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3831:21:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 27102,
                  "id": 27105,
                  "nodeType": "Return",
                  "src": "3824:28:166"
                }
              ]
            },
            "baseFunctions": [
              26332
            ],
            "documentation": {
              "id": 27098,
              "nodeType": "StructuredDocumentation",
              "src": "3726:27:166",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "95d600c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMembershipLimit",
            "nameLocation": "3765:18:166",
            "parameters": {
              "id": 27099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3783:2:166"
            },
            "returnParameters": {
              "id": 27102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27101,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27107,
                  "src": "3809:7:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3809:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3808:9:166"
            },
            "scope": 27305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27120,
            "nodeType": "FunctionDefinition",
            "src": "4066:117:166",
            "nodes": [],
            "body": {
              "id": 27119,
              "nodeType": "Block",
              "src": "4137:46:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27116,
                        "name": "newCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27110,
                        "src": "4166:11:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 27115,
                      "name": "_setMembershipCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26796,
                      "src": "4143:22:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 27117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4143:35:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27118,
                  "nodeType": "ExpressionStatement",
                  "src": "4143:35:166"
                }
              ]
            },
            "baseFunctions": [
              26338
            ],
            "documentation": {
              "id": 27108,
              "nodeType": "StructuredDocumentation",
              "src": "4036:27:166",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "7d0567c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 27113,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27112,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4127:9:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10836,
                  "src": "4127:9:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "4127:9:166"
              }
            ],
            "name": "setMembershipCurrency",
            "nameLocation": "4075:21:166",
            "parameters": {
              "id": 27111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27110,
                  "mutability": "mutable",
                  "name": "newCurrency",
                  "nameLocation": "4105:11:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27120,
                  "src": "4097:19:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4097:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4096:21:166"
            },
            "returnParameters": {
              "id": 27114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4137:0:166"
            },
            "scope": 27305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27130,
            "nodeType": "FunctionDefinition",
            "src": "4217:107:166",
            "nodes": [],
            "body": {
              "id": 27129,
              "nodeType": "Block",
              "src": "4282:42:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27126,
                      "name": "_getMembershipCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26807,
                      "src": "4295:22:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 27127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4295:24:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 27125,
                  "id": 27128,
                  "nodeType": "Return",
                  "src": "4288:31:166"
                }
              ]
            },
            "baseFunctions": [
              26344
            ],
            "documentation": {
              "id": 27121,
              "nodeType": "StructuredDocumentation",
              "src": "4187:27:166",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "657e45e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMembershipCurrency",
            "nameLocation": "4226:21:166",
            "parameters": {
              "id": 27122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4247:2:166"
            },
            "returnParameters": {
              "id": 27125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27130,
                  "src": "4273:7:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4273:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4272:9:166"
            },
            "scope": 27305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27143,
            "nodeType": "FunctionDefinition",
            "src": "4534:127:166",
            "nodes": [],
            "body": {
              "id": 27142,
              "nodeType": "Block",
              "src": "4610:51:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27139,
                        "name": "newRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27133,
                        "src": "4643:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 27138,
                      "name": "_setMembershipFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26831,
                      "src": "4616:26:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 27140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4616:40:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27141,
                  "nodeType": "ExpressionStatement",
                  "src": "4616:40:166"
                }
              ]
            },
            "baseFunctions": [
              26350
            ],
            "documentation": {
              "id": 27131,
              "nodeType": "StructuredDocumentation",
              "src": "4504:27:166",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "18e5da65",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 27136,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27135,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4600:9:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10836,
                  "src": "4600:9:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "4600:9:166"
              }
            ],
            "name": "setMembershipFeeRecipient",
            "nameLocation": "4543:25:166",
            "parameters": {
              "id": 27134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27133,
                  "mutability": "mutable",
                  "name": "newRecipient",
                  "nameLocation": "4577:12:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27143,
                  "src": "4569:20:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4569:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4568:22:166"
            },
            "returnParameters": {
              "id": 27137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4610:0:166"
            },
            "scope": 27305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27153,
            "nodeType": "FunctionDefinition",
            "src": "4695:115:166",
            "nodes": [],
            "body": {
              "id": 27152,
              "nodeType": "Block",
              "src": "4764:46:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27149,
                      "name": "_getMembershipFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26842,
                      "src": "4777:26:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 27150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4777:28:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 27148,
                  "id": 27151,
                  "nodeType": "Return",
                  "src": "4770:35:166"
                }
              ]
            },
            "baseFunctions": [
              26356
            ],
            "documentation": {
              "id": 27144,
              "nodeType": "StructuredDocumentation",
              "src": "4665:27:166",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "bf3bc878",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMembershipFeeRecipient",
            "nameLocation": "4704:25:166",
            "parameters": {
              "id": 27145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4729:2:166"
            },
            "returnParameters": {
              "id": 27148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27147,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27153,
                  "src": "4755:7:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4755:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4754:9:166"
            },
            "scope": 27305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27163,
            "nodeType": "FunctionDefinition",
            "src": "5018:93:166",
            "nodes": [],
            "body": {
              "id": 27162,
              "nodeType": "Block",
              "src": "5076:35:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27159,
                      "name": "_getTownFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26853,
                      "src": "5089:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 27160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5089:17:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 27158,
                  "id": 27161,
                  "nodeType": "Return",
                  "src": "5082:24:166"
                }
              ]
            },
            "baseFunctions": [
              26362
            ],
            "documentation": {
              "id": 27154,
              "nodeType": "StructuredDocumentation",
              "src": "4988:27:166",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "6340d096",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTownFactory",
            "nameLocation": "5027:14:166",
            "parameters": {
              "id": 27155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5041:2:166"
            },
            "returnParameters": {
              "id": 27158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27157,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27163,
                  "src": "5067:7:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5067:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5066:9:166"
            },
            "scope": 27305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27196,
            "nodeType": "FunctionDefinition",
            "src": "5289:256:166",
            "nodes": [],
            "body": {
              "id": 27195,
              "nodeType": "Block",
              "src": "5363:182:166",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    27171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 27171,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5377:5:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 27195,
                      "src": "5369:13:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 27170,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5369:7:166",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27175,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 27173,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27165,
                        "src": "5394:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 27172,
                      "name": "_ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13382,
                      "src": "5385:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 27174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5385:17:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5369:33:166"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 27193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 27186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 27179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 27176,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11303,
                                "src": "5423:10:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 27177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5423:12:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 27178,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27171,
                              "src": "5439:5:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5423:21:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 27180,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5422:23:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 27182,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27171,
                            "src": "5473:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 27183,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11303,
                              "src": "5480:10:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 27184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5480:12:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 27181,
                          "name": "_isApprovedForAll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13402,
                          "src": "5455:17:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 27185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5455:38:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5422:71:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 27192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 27188,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27165,
                            "src": "5516:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 27187,
                          "name": "_getApproved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13426,
                          "src": "5503:12:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 27189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5503:21:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 27190,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11303,
                          "src": "5528:10:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 27191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5528:12:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5503:37:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5422:118:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 27169,
                  "id": 27194,
                  "nodeType": "Return",
                  "src": "5409:131:166"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "5298:18:166",
            "parameters": {
              "id": 27166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27165,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5325:7:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27196,
                  "src": "5317:15:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5317:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5316:17:166"
            },
            "returnParameters": {
              "id": 27169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27196,
                  "src": "5357:4:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27167,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5357:4:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5356:6:166"
            },
            "scope": 27305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 27216,
            "nodeType": "FunctionDefinition",
            "src": "5911:159:166",
            "nodes": [],
            "body": {
              "id": 27215,
              "nodeType": "Block",
              "src": "5988:82:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 27206,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27199,
                          "src": "6012:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 27205,
                        "name": "_expiresAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11798,
                        "src": "6001:10:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint64_$",
                          "typeString": "function (uint256) view returns (uint64)"
                        }
                      },
                      "id": 27207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6001:19:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 27212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 27208,
                          "name": "_getMembershipDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26634,
                          "src": "6023:22:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
                            "typeString": "function () view returns (uint64)"
                          }
                        },
                        "id": 27209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6023:24:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 27210,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6050:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 27211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6056:9:166",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6050:15:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6023:42:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6001:64:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 27204,
                  "id": 27214,
                  "nodeType": "Return",
                  "src": "5994:71:166"
                }
              ]
            },
            "baseFunctions": [
              11808
            ],
            "documentation": {
              "id": 27197,
              "nodeType": "StructuredDocumentation",
              "src": "5748:160:166",
              "text": "@dev only renewable if the expiration of the current membership is less than the default duration + current time. To prevent people from renewing too early."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isRenewable",
            "nameLocation": "5920:12:166",
            "overrides": {
              "id": 27201,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5964:8:166"
            },
            "parameters": {
              "id": 27200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27199,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5941:7:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27216,
                  "src": "5933:15:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5933:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5932:17:166"
            },
            "returnParameters": {
              "id": 27204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27216,
                  "src": "5982:4:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27202,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5982:4:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5981:6:166"
            },
            "scope": 27305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 27232,
            "nodeType": "FunctionDefinition",
            "src": "6074:80:166",
            "nodes": [],
            "body": {
              "id": 27231,
              "nodeType": "Block",
              "src": "6121:33:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 27225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 27223,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27218,
                        "src": "6134:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 27224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6139:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6134:6:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 27228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "-",
                      "prefix": true,
                      "src": "6147:2:166",
                      "subExpression": {
                        "id": 27227,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27218,
                        "src": "6148:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 27229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6134:15:166",
                    "trueExpression": {
                      "id": 27226,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27218,
                      "src": "6143:1:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 27222,
                  "id": 27230,
                  "nodeType": "Return",
                  "src": "6127:22:166"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abs",
            "nameLocation": "6083:3:166",
            "parameters": {
              "id": 27219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27218,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "6091:1:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27232,
                  "src": "6087:5:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 27217,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "6087:3:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6086:7:166"
            },
            "returnParameters": {
              "id": 27222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27221,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27232,
                  "src": "6116:3:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 27220,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "6116:3:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6115:5:166"
            },
            "scope": 27305,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 27257,
            "nodeType": "FunctionDefinition",
            "src": "6248:270:166",
            "nodes": [],
            "body": {
              "id": 27256,
              "nodeType": "Block",
              "src": "6323:195:166",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 27242,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27234,
                              "src": "6428:7:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 27241,
                            "name": "_getTokenIdByMembership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26500,
                            "src": "6404:23:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 27243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6404:32:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 27240,
                        "name": "_expiresAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11798,
                        "src": "6393:10:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint64_$",
                          "typeString": "function (uint256) view returns (uint64)"
                        }
                      },
                      "id": 27244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6393:44:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 27245,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6441:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 27246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6447:9:166",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6441:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6393:63:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 27251,
                  "nodeType": "IfStatement",
                  "src": "6389:92:166",
                  "trueBody": {
                    "id": 27250,
                    "nodeType": "Block",
                    "src": "6458:23:166",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 27248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6473:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 27239,
                        "id": 27249,
                        "nodeType": "Return",
                        "src": "6466:8:166"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27253,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27234,
                        "src": "6505:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 27252,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12518,
                      "src": "6494:10:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 27254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6494:19:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 27239,
                  "id": 27255,
                  "nodeType": "Return",
                  "src": "6487:26:166"
                }
              ]
            },
            "baseFunctions": [
              11971
            ],
            "functionSelector": "70a08231",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "6257:9:166",
            "overrides": {
              "id": 27236,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6296:8:166"
            },
            "parameters": {
              "id": 27235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27234,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6275:7:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27257,
                  "src": "6267:15:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6267:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6266:17:166"
            },
            "returnParameters": {
              "id": 27239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27238,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27257,
                  "src": "6314:7:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6314:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6313:9:166"
            },
            "scope": 27305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27284,
            "nodeType": "FunctionDefinition",
            "src": "6522:252:166",
            "nodes": [],
            "body": {
              "id": 27283,
              "nodeType": "Block",
              "src": "6657:117:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27272,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27259,
                        "src": "6691:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 27273,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27261,
                        "src": "6697:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 27274,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27263,
                        "src": "6701:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 27275,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27265,
                        "src": "6715:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 27269,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6663:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MembershipFacet_$27305_$",
                          "typeString": "type(contract super MembershipFacet)"
                        }
                      },
                      "id": 27271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6669:21:166",
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12975,
                      "src": "6663:27:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 27276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6663:61:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27277,
                  "nodeType": "ExpressionStatement",
                  "src": "6663:61:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 27279,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27263,
                        "src": "6752:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 27280,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27261,
                        "src": "6766:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 27278,
                      "name": "_setMembershipTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26470,
                      "src": "6730:21:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 27281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6730:39:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27282,
                  "nodeType": "ExpressionStatement",
                  "src": "6730:39:166"
                }
              ]
            },
            "baseFunctions": [
              12975
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "6531:21:166",
            "overrides": {
              "id": 27267,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6648:8:166"
            },
            "parameters": {
              "id": 27266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27259,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6566:4:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27284,
                  "src": "6558:12:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6558:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27261,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6584:2:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27284,
                  "src": "6576:10:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6576:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27263,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "6600:12:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27284,
                  "src": "6592:20:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6592:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27265,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "6626:8:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 27284,
                  "src": "6618:16:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6618:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6552:86:166"
            },
            "returnParameters": {
              "id": 27268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6657:0:166"
            },
            "scope": 27305,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 27294,
            "nodeType": "FunctionDefinition",
            "src": "6778:100:166",
            "nodes": [],
            "body": {
              "id": 27293,
              "nodeType": "Block",
              "src": "6848:30:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27290,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11303,
                      "src": "6861:10:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 27291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6861:12:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 27289,
                  "id": 27292,
                  "nodeType": "Return",
                  "src": "6854:19:166"
                }
              ]
            },
            "baseFunctions": [
              13786
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSenderERC721A",
            "nameLocation": "6787:17:166",
            "overrides": {
              "id": 27286,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6821:8:166"
            },
            "parameters": {
              "id": 27285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6804:2:166"
            },
            "returnParameters": {
              "id": 27289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27288,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27294,
                  "src": "6839:7:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6839:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6838:9:166"
            },
            "scope": 27305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 27304,
            "nodeType": "FunctionDefinition",
            "src": "6973:101:166",
            "nodes": [],
            "body": {
              "id": 27303,
              "nodeType": "Block",
              "src": "7044:30:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27300,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11303,
                      "src": "7057:10:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 27301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7057:12:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 27299,
                  "id": 27302,
                  "nodeType": "Return",
                  "src": "7050:19:166"
                }
              ]
            },
            "baseFunctions": [
              22410
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSenderEntitled",
            "nameLocation": "6982:18:166",
            "overrides": {
              "id": 27296,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7017:8:166"
            },
            "parameters": {
              "id": 27295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7000:2:166"
            },
            "returnParameters": {
              "id": 27299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27298,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27304,
                  "src": "7035:7:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27297,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7035:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7034:9:166"
            },
            "scope": 27305,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 26873,
              "name": "IMembership",
              "nameLocations": [
                "739:11:166"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26363,
              "src": "739:11:166"
            },
            "id": 26874,
            "nodeType": "InheritanceSpecifier",
            "src": "739:11:166"
          },
          {
            "baseName": {
              "id": 26875,
              "name": "MembershipBase",
              "nameLocations": [
                "754:14:166"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26854,
              "src": "754:14:166"
            },
            "id": 26876,
            "nodeType": "InheritanceSpecifier",
            "src": "754:14:166"
          },
          {
            "baseName": {
              "id": 26877,
              "name": "ERC5643Base",
              "nameLocations": [
                "772:11:166"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11809,
              "src": "772:11:166"
            },
            "id": 26878,
            "nodeType": "InheritanceSpecifier",
            "src": "772:11:166"
          },
          {
            "baseName": {
              "id": 26879,
              "name": "ERC2771RecipientBase",
              "nameLocations": [
                "787:20:166"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11354,
              "src": "787:20:166"
            },
            "id": 26880,
            "nodeType": "InheritanceSpecifier",
            "src": "787:20:166"
          },
          {
            "baseName": {
              "id": 26881,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "811:15:166"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11526,
              "src": "811:15:166"
            },
            "id": 26882,
            "nodeType": "InheritanceSpecifier",
            "src": "811:15:166"
          },
          {
            "baseName": {
              "id": 26883,
              "name": "ERC721A",
              "nameLocations": [
                "830:7:166"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12360,
              "src": "830:7:166"
            },
            "id": 26884,
            "nodeType": "InheritanceSpecifier",
            "src": "830:7:166"
          },
          {
            "baseName": {
              "id": 26885,
              "name": "Entitled",
              "nameLocations": [
                "841:8:166"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22411,
              "src": "841:8:166"
            },
            "id": 26886,
            "nodeType": "InheritanceSpecifier",
            "src": "841:8:166"
          }
        ],
        "canonicalName": "MembershipFacet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27305,
          22411,
          11099,
          11008,
          10908,
          10355,
          20226,
          12360,
          6624,
          9976,
          9866,
          9824,
          13797,
          14066,
          13954,
          11526,
          11464,
          11354,
          11459,
          11809,
          11856,
          26854,
          26363,
          26278
        ],
        "name": "MembershipFacet",
        "nameLocation": "718:15:166",
        "scope": 27306,
        "usedErrors": [
          9604,
          9606,
          9853,
          9855,
          10343,
          10347,
          10997,
          10999,
          11463,
          11840,
          11844,
          11846,
          11848,
          13879,
          13882,
          13885,
          13888,
          13891,
          13894,
          13897,
          13900,
          13903,
          13906,
          13909,
          13912,
          13915,
          20221,
          20223,
          20225,
          26245,
          26247,
          26249,
          26251,
          26253,
          26255,
          26257,
          26259,
          26261
        ],
        "usedEvents": [
          9610,
          9860,
          9865,
          10354,
          11003,
          11007,
          11855,
          13924,
          13933,
          13942,
          13953,
          26265,
          26269,
          26273,
          26277
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 166
}
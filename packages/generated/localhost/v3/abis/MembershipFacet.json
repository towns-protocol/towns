{
  "abi": [
    {
      "inputs": [],
      "name": "ApprovalCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ApprovalQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BalanceQueryForZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC5643__DurationZero",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC5643__InvalidTokenId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC5643__NotApprovedOrOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC5643__SubscriptionNotRenewable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Entitlement__InvalidValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Entitlement__NotAllowed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Entitlement__ValueAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Initializable_InInitializingState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Initializable_NotInInitializingState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Introspection_AlreadySupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Introspection_NotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__AlreadyMember",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__InsufficientPayment",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__InvalidCurrency",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__InvalidFeeRecipient",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__InvalidLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__InvalidPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__LimitReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Membership__PriceTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintERC2309QuantityExceedsLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintZeroQuantity",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnerQueryForNonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnershipNotInitializedForExtraData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Pausable__NotPaused",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Pausable__Paused",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuard__ReentrantCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferCallerNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferToZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "URIQueryForNonexistentToken",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toTokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ConsecutiveTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "version",
          "type": "uint32"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "InterfaceAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "InterfaceRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "MembershipCurrencyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "MembershipFeeRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "MembershipLimitUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "MembershipPriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "expiration",
          "type": "uint64"
        }
      ],
      "name": "SubscriptionUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "name": "__ERC721A_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "membershipPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "membershipLimit",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "membershipCurrency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "membershipFeeRecipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "townFactory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "internalType": "struct IMembershipBase.MembershipInfo",
          "name": "info",
          "type": "tuple"
        }
      ],
      "name": "__Membership_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getMembershipCurrency",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getMembershipFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getMembershipLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getMembershipPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_getTownFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCurrency",
          "type": "address"
        }
      ],
      "name": "_setMembershipCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newRecipient",
          "type": "address"
        }
      ],
      "name": "_setMembershipFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "_setMembershipLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "_setMembershipPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelMembership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "expiresAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMembershipCurrency",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMembershipFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMembershipLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMembershipPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTownFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "joinTown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "renewMembership",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCurrency",
          "type": "address"
        }
      ],
      "name": "setMembershipCurrency",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newRecipient",
          "type": "address"
        }
      ],
      "name": "setMembershipFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newLimit",
          "type": "uint256"
        }
      ],
      "name": "setMembershipLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "setMembershipPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000ca565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de8054640100000000900460ff16156200006f576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff9081161015620000c757805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b6133e280620000da6000396000f3fe6080604052600436106102255760003560e01c80636340d0961161012357806395d600c8116100ab578063b88d4fde1161006f578063b88d4fde14610622578063bf3bc87814610635578063c87b56dd1461064a578063d2f01f191461066a578063e985e9c51461068a57600080fd5b806395d600c81461059857806395d89b41146105ad57806397fb7c1e146105c2578063a22cb465146105e2578063b83073761461060257600080fd5b80636e43d05d116100f25780636e43d05d146104ed578063702515631461050d57806370a08231146105385780637d0567c41461055857806389def3201461057857600080fd5b80636340d096146104835780636352211e14610498578063657e45e8146104b857806369d5f38a146104cd57600080fd5b806318160ddd116101b157806342842e0e1161017557806342842e0e146103e2578063572b6c05146103f55780635b312fce1461042557806361a9c7df14610450578063624520061461046357600080fd5b806318160ddd1461034d57806318e5da65146103625780631b3972f0146103825780631d214b4d146103a457806323b872dd146103cf57600080fd5b80630c3a01b1116101f85780630c3a01b1146102c25780631278076a146102e257806316a344b4146103055780631766bb7b1461031857806317c957091461032d57600080fd5b806302b24da51461022a57806306fdde031461024c578063081812fc14610277578063095ea7b3146102af575b600080fd5b34801561023657600080fd5b5061024a610245366004612b19565b6106aa565b005b34801561025857600080fd5b50610261610781565b60405161026e9190612b82565b60405180910390f35b34801561028357600080fd5b50610297610292366004612b19565b61081c565b6040516001600160a01b03909116815260200161026e565b61024a6102bd366004612bb5565b61082d565b3480156102ce57600080fd5b5061024a6102dd366004612b19565b61083d565b3480156102ee57600080fd5b506102f761091d565b60405190815260200161026e565b6102f7610313366004612be1565b61093a565b34801561032457600080fd5b506102f7610a6a565b34801561033957600080fd5b506102f7610348366004612b19565b610b2d565b34801561035957600080fd5b506102f7610b47565b34801561036e57600080fd5b5061024a61037d366004612be1565b610b51565b34801561038e57600080fd5b506000805160206133c2833981519152546102f7565b3480156103b057600080fd5b506000805160206133a2833981519152546001600160a01b0316610297565b61024a6103dd366004612bfe565b610b9d565b61024a6103f0366004612bfe565b610d92565b34801561040157600080fd5b50610415610410366004612be1565b610db2565b604051901515815260200161026e565b34801561043157600080fd5b50600080516020613382833981519152546001600160a01b0316610297565b61024a61045e366004612be1565b610def565b34801561046f57600080fd5b5061024a61047e366004612be1565b610ebd565b34801561048f57600080fd5b50610297610f13565b3480156104a457600080fd5b506102976104b3366004612b19565b610f34565b3480156104c457600080fd5b50610297610f3f565b3480156104d957600080fd5b5061024a6104e8366004612b19565b610f60565b3480156104f957600080fd5b5061024a610508366004612d13565b610fa4565b34801561051957600080fd5b50600080516020613302833981519152546001600160a01b0316610297565b34801561054457600080fd5b506102f7610553366004612be1565b6110fd565b34801561056457600080fd5b5061024a610573366004612be1565b611130565b34801561058457600080fd5b5061024a610593366004612b19565b611174565b3480156105a457600080fd5b506102f761120a565b3480156105b957600080fd5b50610261611214565b3480156105ce57600080fd5b5061024a6105dd366004612b19565b61122c565b3480156105ee57600080fd5b5061024a6105fd366004612e0a565b611270565b34801561060e57600080fd5b5061024a61061d366004612be1565b611312565b61024a610630366004612e43565b611368565b34801561064157600080fd5b506102976113b2565b34801561065657600080fd5b50610261610665366004612b19565b6113d3565b34801561067657600080fd5b5061024a610685366004612ec2565b611464565b34801561069657600080fd5b506104156106a5366004612f25565b6114b8565b6000805160206133828339815191525460408051632cbb9d1360e01b81529051600080516020613322833981519152926000926001600160a01b0390911691632cbb9d13916004808201926020929091908290030181865afa158015610714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107389190612f53565b90508083111561075b57604051632b6e8cbb60e11b815260040160405180910390fd5b50507f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a601055565b606061078b6114c4565b600201805461079990612f6c565b80601f01602080910402602001604051908101604052809291908181526020018280546107c590612f6c565b80156108125780601f106107e757610100808354040283529160200191610812565b820191906000526020600020905b8154815290600101906020018083116107f557829003601f168201915b5050505050905090565b6000610827826114e8565b92915050565b61083982826001611535565b5050565b60008051602061330283398151915254600080516020613322833981519152906001600160a01b031661088357604051636da3122b60e01b815260040160405180910390fd5b600681015460408051630eac306d60e01b815290516000926001600160a01b031691630eac306d9160048083019260209291908290030181865afa1580156108cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f39190612f53565b90508083101561091657604051631a23d64760e11b815260040160405180910390fd5b5060020155565b60006109356000805160206133c28339815191525490565b905090565b60006002600080516020613342833981519152540361096c57604051635db5c7cd60e11b815260040160405180910390fd5b610983600260008051602061334283398151915255565b6109ac604051806040016040528060088152602001672537b4b72a37bbb760c11b815250611601565b60006109b783611637565b11156109d6576040516316d9a23f60e31b815260040160405180910390fd5b6000805160206133c283398151915254158015610a0157506109f6610a6a565b6109fe61169f565b10155b15610a1f57604051635e9cd6f760e01b815260040160405180910390fd5b610a276116be565b9050610a32826116ce565b610a3d8260016119ae565b610a4e81610a496119c8565b611a43565b610a65600160008051602061334283398151915255565b919050565b7f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a601054600090600080516020613322833981519152908203610b24578060060160009054906101000a90046001600160a01b03166001600160a01b0316632cbb9d136040518163ffffffff1660e01b8152600401602060405180830381865afa158015610afa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1e9190612f53565b91505090565b60030154919050565b6000610b3882611b35565b6001600160401b031692915050565b600061093561169f565b610b59611b6f565b6001600160a01b0316336001600160a01b031614610b91576040516365f4906560e01b81523360048201526024015b60405180910390fd5b610b9a81610ebd565b50565b6000610ba882611c33565b9050836001600160a01b0316816001600160a01b031614610bdb5760405162a1148160e81b815260040160405180910390fd5b600080610be784611cd7565b91509150610c0d8187610bf8611cff565b6001600160a01b039081169116811491141790565b610c3a57610c1d866106a5611cff565b610c3a57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610c6157604051633a954ecd60e21b815260040160405180910390fd5b610c6e8686866001611d09565b8015610c7957600082555b610c816114c4565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610cad6114c4565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b17610ce46114c4565b60008681526004919091016020526040812091909155600160e11b84169003610d5a5760018401610d136114c4565b600082815260049190910160205260408120549003610d5857610d346114c4565b548114610d585783610d446114c4565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b031660008051602061336283398151915260405160405180910390a45b505050505050565b610dad83838360405180602001604052806000815250611368565b505050565b6001600160a01b031660009081527f9be1203d7c008407e47cf520c8f15f54b074f0a2af3750145c254290338afc3f602052604090205460ff1690565b60026000805160206133428339815191525403610e1f57604051635db5c7cd60e11b815260040160405180910390fd5b610e36600260008051602061334283398151915255565b6001600160a01b038116610e5d57604051635fbd571760e01b815260040160405180910390fd5b6000610e6882611d73565b9050610e7381611dad565b610e90576040516367d9dca160e11b815260040160405180910390fd5b610e99826116ce565b610ea581610a496119c8565b50610b9a600160008051602061334283398151915255565b6001600160a01b038116610ee457604051631492df6160e21b815260040160405180910390fd5b6000805160206133a283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6000610935600080516020613382833981519152546001600160a01b031690565b600061082782611c33565b6000610935600080516020613302833981519152546001600160a01b031690565b610f68611b6f565b6001600160a01b0316336001600160a01b031614610f9b576040516365f4906560e01b8152336004820152602401610b88565b610b9a8161083d565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff16610fee57604051630ef4733760e31b815260040160405180910390fd5b805160208201516040830151606084015160808501516000805160206133c2833981519152949094557f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60109290925560008051602061330283398151915280546001600160a01b039283166001600160a01b0319918216179091556000805160206133a283398151915280549383169382169390931790925560008051602061338283398151915280549190931691161790556110eb8160a001516001600160a01b031660009081527f9be1203d7c008407e47cf520c8f15f54b074f0a2af3750145c254290338afc3f60205260409020805460ff19166001179055565b610b9a8160c001518260e00151611e1a565b60004261111161110c84611d73565b611b35565b6001600160401b03161161112757506000919050565b61082782611637565b611138611b6f565b6001600160a01b0316336001600160a01b03161461116b576040516365f4906560e01b8152336004820152602401610b88565b610b9a81611312565b600260008051602061334283398151915254036111a457604051635db5c7cd60e11b815260040160405180910390fd5b6111bb600260008051602061334283398151915255565b6111c481611dad565b6111e1576040516367d9dca160e11b815260040160405180910390fd5b6111ea81611e8e565b6111f381611e99565b610b9a600160008051602061334283398151915255565b6000610935610a6a565b606061121e6114c4565b600301805461079990612f6c565b611234611b6f565b6001600160a01b0316336001600160a01b031614611267576040516365f4906560e01b8152336004820152602401610b88565b610b9a816106aa565b806112796114c4565b6007016000611286611cff565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556112ca611cff565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611306911515815260200190565b60405180910390a35050565b6001600160a01b03811661133957604051636da3122b60e01b815260040160405180910390fd5b60008051602061330283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611373848484610b9d565b6001600160a01b0383163b156113ac5761138f84848484611f0c565b6113ac576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60006109356000805160206133a2833981519152546001600160a01b031690565b60606113de82611ffe565b6113fb57604051630a14c4b560e41b815260040160405180910390fd5b600061141260408051602081019091526000815290565b90508051600003611432576040518060200160405280600081525061145d565b8061143c8461203a565b60405160200161144d929190612fa6565b6040516020818303038152906040525b9392505050565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff166114ae57604051630ef4733760e31b815260040160405180910390fd5b6108398282611e1a565b600061145d838361207e565b7f234d8962d7c9a6a6604d7f98797e6ad6d7a886804f7409feb26422e27bf8125490565b60006114f382611ffe565b611510576040516333d1c03960e21b815260040160405180910390fd5b6115186114c4565b60009283526006016020525060409020546001600160a01b031690565b600061154083610f34565b9050811561159657806001600160a01b031661155a611cff565b6001600160a01b0316146115965761157981611574611cff565b61207e565b611596576040516367d9dca160e11b815260040160405180910390fd5b8361159f6114c4565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b61161a60405180602001604052806000815250826120bb565b610b9a57604051630ce39a4b60e21b815260040160405180910390fd5b60006001600160a01b038216611660576040516323d3ad8160e21b815260040160405180910390fd5b6001600160401b036116706114c4565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b6000806116aa6114c4565b600101546116b66114c4565b540303919050565b60006116c86114c4565b54919050565b60006116e66000805160206133c28339815191525490565b9050806000036116f4575050565b6000805160206133828339815191525460408051630eac306d60e01b81529051600080516020613322833981519152926000926001600160a01b0390911691630eac306d916004808201926020929091908290030181865afa15801561175e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117829190612f53565b9050808310156117a557604051635894b54560e11b815260040160405180910390fd5b6006820154604080516301332c8360e61b815290516000926001600160a01b031691634ccb20c09160048083019260209291908290030181865afa1580156117f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118159190612fd5565b905060008360060160009054906101000a90046001600160a01b03166001600160a01b0316639f6542aa6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561186e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118929190612ff2565b905060008460060160009054906101000a90046001600160a01b03166001600160a01b031663190eaaba6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190f9190612f53565b9050600061191d858861302c565b9050801561194c57848261193561ffff86168461303f565b61193f9190613056565b6119499190613078565b94505b6004860154611966906001600160a01b031689868861214d565b80600003611978575050505050505050565b600486015460058701546119a4916001600160a01b03908116918b911661199f898c61302c565b61214d565b5050505050505050565b610839828260405180602001604052806000815250612193565b6000805160206133828339815191525460408051634090785d60e11b815290516000926001600160a01b031691638120f0ba9160048083019260209291908290030181865afa158015611a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610935919061308b565b60008281527f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e3616020819052604082205490916001600160401b0390911690818103611a9957611a9284426130b4565b9050611acf565b611aa285612210565b611ac257604051637be9098d60e11b815260048101869052602401610b88565b611acc84836130b4565b90505b60008581526020848152604091829020805467ffffffffffffffff19166001600160401b038516908117909155915191825286917f2ec2be2c4b90c2cf13ecb6751a24daed6bb741ae5ed3f7371aabf9402f6d62e8910160405180910390a25050505050565b60009081527f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e36160205260409020546001600160401b031690565b6040805180820182527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d0546001600160a01b03168082527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d154602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa158015611c0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1e9190612fd5565b6000611c3d6114c4565b600083815260049190910160205260408120549150600160e01b82169003611cbe5780600003610a6557611c6f6114c4565b548210611c8f57604051636f96cda160e11b815260040160405180910390fd5b611c976114c4565b600019909201600081815260049390930160205260409092205490508015611c8f57919050565b604051636f96cda160e11b815260040160405180910390fd5b6000806000611ce46114c4565b60009485526006016020525050604090912080549092909150565b6000610935612247565b6113ac828460008281526000805160206133228339815191526020908152604080832080546001600160a01b0319166001600160a01b039590951694851790559282527f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600e90522055565b6001600160a01b031660009081527f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600e602052604090205490565b600080611db983610f34565b9050806001600160a01b0316611dcd612247565b6001600160a01b03161480611de95750611de981611574612247565b8061145d5750611df7612247565b6001600160a01b0316611e09846114e8565b6001600160a01b0316149392505050565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff16611e6457604051630ef4733760e31b815260040160405180910390fd5b611e746380ac58cd60e01b612275565b611e84635b5e139f60e01b612275565b6108398282612353565b610b9a816000612385565b7f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e361600082815260209182526040808220805467ffffffffffffffff191690555190815282917f2ec2be2c4b90c2cf13ecb6751a24daed6bb741ae5ed3f7371aabf9402f6d62e8910160405180910390a250565b6000836001600160a01b031663150b7a02611f25611cff565b8786866040518563ffffffff1660e01b8152600401611f4794939291906130db565b6020604051808303816000875af1925050508015611f82575060408051601f3d908101601f19168201909252611f7f91810190613118565b60015b611fe0573d808015611fb0576040519150601f19603f3d011682016040523d82523d6000602084013e611fb5565b606091505b508051600003611fd8576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60006120086114c4565b54821080156108275750600160e01b61201f6114c4565b60008481526004919091016020526040902054161592915050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806120545750819003601f19909101908152919050565b60006120886114c4565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b60006120c5611cff565b6001600160a01b03166120d6611b6f565b6001600160a01b0316148061145d57507ff421ea548af7158b1d71ba0aeccf57104c067038bd8fd214edd05c09eb4f735b5460ff1615801561145d575061145d8361211f611cff565b846040516020016121309190613142565b6040516020818303038152906040526121489061315e565b612506565b80156113ac5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0385160161218757612182828261262f565b6113ac565b6113ac848484846126d2565b61219d8383612725565b6001600160a01b0383163b15610dad5760006121b76114c4565b5490508281035b6121d16000868380600101945086611f0c565b6121ee576040516368d2bf6b60e11b815260040160405180910390fd5b8181106121be57816121fe6114c4565b541461220957600080fd5b5050505050565b60004261221b6119c8565b6001600160401b031661222e9190613078565b61223783611b35565b6001600160401b03161092915050565b60006014361080159061225e575061225e33610db2565b15612270575060131936013560601c90565b503390565b6001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c4602052604090205460ff161515600114612302576001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c460205260409020805460ff1916600117905561231b565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b600061235d6114c4565b90506002810161236d84826131c8565b506003810161237c83826131c8565b50600090555050565b600061239083611c33565b90508060008061239f86611cd7565b9150915084156123e3576123b68184610bf8611cff565b6123e3576123c683611574611cff565b6123e357604051632ce44b5f60e11b815260040160405180910390fd5b6123f1836000886001611d09565b80156123fc57600082555b6fffffffffffffffffffffffffffffffff6124156114c4565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b17600360e01b1761244e6114c4565b60008881526004919091016020526040812091909155600160e11b851690036124c4576001860161247d6114c4565b6000828152600491909101602052604081205490036124c25761249e6114c4565b5481146124c257846124ae6114c4565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b03861690600080516020613362833981519152908390a46124f26114c4565b600190810180549091019055505050505050565b6000612510611b6f565b6001600160a01b0316836001600160a01b0316036125305750600161145d565b7f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8558600061257c7f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559612849565b905060005b81811015612625576125966001840182612853565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b81526004016125c493929190613287565b602060405180830381865afa1580156125e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061260591906132b5565b156126135760019350612625565b8061261d816132d2565b915050612581565b5050509392505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461267c576040519150601f19603f3d011682016040523d82523d6000602084013e612681565b606091505b5050905080610dad5760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610b88565b816001600160a01b0316836001600160a01b031603156113ac57306001600160a01b03841603612710576121826001600160a01b038516838361285f565b6113ac6001600160a01b0385168484846128c2565b600061272f6114c4565b54905060008290036127545760405163b562e8dd60e01b815260040160405180910390fd5b6127616000848385611d09565b6801000000000000000182026127756114c4565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b17176127b06114c4565b600083815260049190910160205260408120919091556001600160a01b0384169083830190839083906000805160206133628339815191528180a4600183015b8181146128165780836000600080516020613362833981519152600080a46001016127f0565b508160000361283757604051622e076360e81b815260040160405180910390fd5b806128406114c4565b5550610dad9050565b6000610827825490565b600061145d83836128fa565b6040516001600160a01b038316602482015260448101829052610dad90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612924565b6040516001600160a01b03808516602483015283166044820152606481018290526113ac9085906323b872dd60e01b9060840161288b565b6000826000018281548110612911576129116132eb565b9060005260206000200154905092915050565b6000612979826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129f69092919063ffffffff16565b805190915015610dad578080602001905181019061299791906132b5565b610dad5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b88565b6060611ff6848460008585600080866001600160a01b03168587604051612a1d9190613142565b60006040518083038185875af1925050503d8060008114612a5a576040519150601f19603f3d011682016040523d82523d6000602084013e612a5f565b606091505b5091509150612a7087838387612a7b565b979650505050505050565b60608315612aea578251600003612ae3576001600160a01b0385163b612ae35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b88565b5081611ff6565b611ff68383815115612aff5781518083602001fd5b8060405162461bcd60e51b8152600401610b889190612b82565b600060208284031215612b2b57600080fd5b5035919050565b60005b83811015612b4d578181015183820152602001612b35565b50506000910152565b60008151808452612b6e816020860160208601612b32565b601f01601f19169290920160200192915050565b60208152600061145d6020830184612b56565b6001600160a01b0381168114610b9a57600080fd5b8035610a6581612b95565b60008060408385031215612bc857600080fd5b8235612bd381612b95565b946020939093013593505050565b600060208284031215612bf357600080fd5b813561145d81612b95565b600080600060608486031215612c1357600080fd5b8335612c1e81612b95565b92506020840135612c2e81612b95565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715612c7857612c78612c3f565b60405290565b60006001600160401b0380841115612c9857612c98612c3f565b604051601f8501601f19908116603f01168101908282118183101715612cc057612cc0612c3f565b81604052809350858152868686011115612cd957600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112612d0457600080fd5b61145d83833560208501612c7e565b600060208284031215612d2557600080fd5b81356001600160401b0380821115612d3c57600080fd5b908301906101008286031215612d5157600080fd5b612d59612c55565b8235815260208301356020820152612d7360408401612baa565b6040820152612d8460608401612baa565b6060820152612d9560808401612baa565b6080820152612da660a08401612baa565b60a082015260c083013582811115612dbd57600080fd5b612dc987828601612cf3565b60c08301525060e083013582811115612de157600080fd5b612ded87828601612cf3565b60e08301525095945050505050565b8015158114610b9a57600080fd5b60008060408385031215612e1d57600080fd5b8235612e2881612b95565b91506020830135612e3881612dfc565b809150509250929050565b60008060008060808587031215612e5957600080fd5b8435612e6481612b95565b93506020850135612e7481612b95565b92506040850135915060608501356001600160401b03811115612e9657600080fd5b8501601f81018713612ea757600080fd5b612eb687823560208401612c7e565b91505092959194509250565b60008060408385031215612ed557600080fd5b82356001600160401b0380821115612eec57600080fd5b612ef886838701612cf3565b93506020850135915080821115612f0e57600080fd5b50612f1b85828601612cf3565b9150509250929050565b60008060408385031215612f3857600080fd5b8235612f4381612b95565b91506020830135612e3881612b95565b600060208284031215612f6557600080fd5b5051919050565b600181811c90821680612f8057607f821691505b602082108103612fa057634e487b7160e01b600052602260045260246000fd5b50919050565b60008351612fb8818460208801612b32565b835190830190612fcc818360208801612b32565b01949350505050565b600060208284031215612fe757600080fd5b815161145d81612b95565b60006020828403121561300457600080fd5b815161ffff8116811461145d57600080fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561082757610827613016565b808202811582820484141761082757610827613016565b60008261307357634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561082757610827613016565b60006020828403121561309d57600080fd5b81516001600160401b038116811461145d57600080fd5b6001600160401b038181168382160190808211156130d4576130d4613016565b5092915050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061310e90830184612b56565b9695505050505050565b60006020828403121561312a57600080fd5b81516001600160e01b03198116811461145d57600080fd5b60008251613154818460208701612b32565b9190910192915050565b80516020808301519190811015612fa05760001960209190910360031b1b16919050565b601f821115610dad57600081815260208120601f850160051c810160208610156131a95750805b601f850160051c820191505b81811015610d8a578281556001016131b5565b81516001600160401b038111156131e1576131e1612c3f565b6131f5816131ef8454612f6c565b84613182565b602080601f83116001811461322a57600084156132125750858301515b600019600386901b1c1916600185901b178555610d8a565b600085815260208120601f198616915b828110156132595788860151825594840194600190910190840161323a565b50858210156132775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60608152600061329a6060830186612b56565b6001600160a01b039490941660208301525060400152919050565b6000602082840312156132c757600080fd5b815161145d81612dfc565b6000600182016132e4576132e4613016565b5060010190565b634e487b7160e01b600052603260045260246000fdfe9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60119b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600d50b052c8fb38984269a818b2b593d0584a81b1b99245abc0fab04abc7afb010fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60139b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60129b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600f",
    "sourceMap": "709:6364:183:-:0;;;;;;;;;;;;-1:-1:-1;385:22:40;:20;:22::i;:::-;709:6364:183;;1653:314:45;186:68:46;1779:14:45;;;;;;;1775:62;;;1802:35;;-1:-1:-1;;;1802:35:45;;;;;;;;;;;1775:62;1848:9;;1860:16;1848:9;;;:28;1844:119;;;1886:28;;-1:-1:-1;;1886:28:45;1898:16;1886:28;;;;;1927:29;;158:42:446;;;1927:29:45;;146:2:446;131:18;1927:29:45;;;;;;;1844:119;1694:273;1653:314::o;14:192:446:-;709:6364:183;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102255760003560e01c80636340d0961161012357806395d600c8116100ab578063b88d4fde1161006f578063b88d4fde14610622578063bf3bc87814610635578063c87b56dd1461064a578063d2f01f191461066a578063e985e9c51461068a57600080fd5b806395d600c81461059857806395d89b41146105ad57806397fb7c1e146105c2578063a22cb465146105e2578063b83073761461060257600080fd5b80636e43d05d116100f25780636e43d05d146104ed578063702515631461050d57806370a08231146105385780637d0567c41461055857806389def3201461057857600080fd5b80636340d096146104835780636352211e14610498578063657e45e8146104b857806369d5f38a146104cd57600080fd5b806318160ddd116101b157806342842e0e1161017557806342842e0e146103e2578063572b6c05146103f55780635b312fce1461042557806361a9c7df14610450578063624520061461046357600080fd5b806318160ddd1461034d57806318e5da65146103625780631b3972f0146103825780631d214b4d146103a457806323b872dd146103cf57600080fd5b80630c3a01b1116101f85780630c3a01b1146102c25780631278076a146102e257806316a344b4146103055780631766bb7b1461031857806317c957091461032d57600080fd5b806302b24da51461022a57806306fdde031461024c578063081812fc14610277578063095ea7b3146102af575b600080fd5b34801561023657600080fd5b5061024a610245366004612b19565b6106aa565b005b34801561025857600080fd5b50610261610781565b60405161026e9190612b82565b60405180910390f35b34801561028357600080fd5b50610297610292366004612b19565b61081c565b6040516001600160a01b03909116815260200161026e565b61024a6102bd366004612bb5565b61082d565b3480156102ce57600080fd5b5061024a6102dd366004612b19565b61083d565b3480156102ee57600080fd5b506102f761091d565b60405190815260200161026e565b6102f7610313366004612be1565b61093a565b34801561032457600080fd5b506102f7610a6a565b34801561033957600080fd5b506102f7610348366004612b19565b610b2d565b34801561035957600080fd5b506102f7610b47565b34801561036e57600080fd5b5061024a61037d366004612be1565b610b51565b34801561038e57600080fd5b506000805160206133c2833981519152546102f7565b3480156103b057600080fd5b506000805160206133a2833981519152546001600160a01b0316610297565b61024a6103dd366004612bfe565b610b9d565b61024a6103f0366004612bfe565b610d92565b34801561040157600080fd5b50610415610410366004612be1565b610db2565b604051901515815260200161026e565b34801561043157600080fd5b50600080516020613382833981519152546001600160a01b0316610297565b61024a61045e366004612be1565b610def565b34801561046f57600080fd5b5061024a61047e366004612be1565b610ebd565b34801561048f57600080fd5b50610297610f13565b3480156104a457600080fd5b506102976104b3366004612b19565b610f34565b3480156104c457600080fd5b50610297610f3f565b3480156104d957600080fd5b5061024a6104e8366004612b19565b610f60565b3480156104f957600080fd5b5061024a610508366004612d13565b610fa4565b34801561051957600080fd5b50600080516020613302833981519152546001600160a01b0316610297565b34801561054457600080fd5b506102f7610553366004612be1565b6110fd565b34801561056457600080fd5b5061024a610573366004612be1565b611130565b34801561058457600080fd5b5061024a610593366004612b19565b611174565b3480156105a457600080fd5b506102f761120a565b3480156105b957600080fd5b50610261611214565b3480156105ce57600080fd5b5061024a6105dd366004612b19565b61122c565b3480156105ee57600080fd5b5061024a6105fd366004612e0a565b611270565b34801561060e57600080fd5b5061024a61061d366004612be1565b611312565b61024a610630366004612e43565b611368565b34801561064157600080fd5b506102976113b2565b34801561065657600080fd5b50610261610665366004612b19565b6113d3565b34801561067657600080fd5b5061024a610685366004612ec2565b611464565b34801561069657600080fd5b506104156106a5366004612f25565b6114b8565b6000805160206133828339815191525460408051632cbb9d1360e01b81529051600080516020613322833981519152926000926001600160a01b0390911691632cbb9d13916004808201926020929091908290030181865afa158015610714573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107389190612f53565b90508083111561075b57604051632b6e8cbb60e11b815260040160405180910390fd5b50507f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a601055565b606061078b6114c4565b600201805461079990612f6c565b80601f01602080910402602001604051908101604052809291908181526020018280546107c590612f6c565b80156108125780601f106107e757610100808354040283529160200191610812565b820191906000526020600020905b8154815290600101906020018083116107f557829003601f168201915b5050505050905090565b6000610827826114e8565b92915050565b61083982826001611535565b5050565b60008051602061330283398151915254600080516020613322833981519152906001600160a01b031661088357604051636da3122b60e01b815260040160405180910390fd5b600681015460408051630eac306d60e01b815290516000926001600160a01b031691630eac306d9160048083019260209291908290030181865afa1580156108cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f39190612f53565b90508083101561091657604051631a23d64760e11b815260040160405180910390fd5b5060020155565b60006109356000805160206133c28339815191525490565b905090565b60006002600080516020613342833981519152540361096c57604051635db5c7cd60e11b815260040160405180910390fd5b610983600260008051602061334283398151915255565b6109ac604051806040016040528060088152602001672537b4b72a37bbb760c11b815250611601565b60006109b783611637565b11156109d6576040516316d9a23f60e31b815260040160405180910390fd5b6000805160206133c283398151915254158015610a0157506109f6610a6a565b6109fe61169f565b10155b15610a1f57604051635e9cd6f760e01b815260040160405180910390fd5b610a276116be565b9050610a32826116ce565b610a3d8260016119ae565b610a4e81610a496119c8565b611a43565b610a65600160008051602061334283398151915255565b919050565b7f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a601054600090600080516020613322833981519152908203610b24578060060160009054906101000a90046001600160a01b03166001600160a01b0316632cbb9d136040518163ffffffff1660e01b8152600401602060405180830381865afa158015610afa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1e9190612f53565b91505090565b60030154919050565b6000610b3882611b35565b6001600160401b031692915050565b600061093561169f565b610b59611b6f565b6001600160a01b0316336001600160a01b031614610b91576040516365f4906560e01b81523360048201526024015b60405180910390fd5b610b9a81610ebd565b50565b6000610ba882611c33565b9050836001600160a01b0316816001600160a01b031614610bdb5760405162a1148160e81b815260040160405180910390fd5b600080610be784611cd7565b91509150610c0d8187610bf8611cff565b6001600160a01b039081169116811491141790565b610c3a57610c1d866106a5611cff565b610c3a57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610c6157604051633a954ecd60e21b815260040160405180910390fd5b610c6e8686866001611d09565b8015610c7957600082555b610c816114c4565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610cad6114c4565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b17610ce46114c4565b60008681526004919091016020526040812091909155600160e11b84169003610d5a5760018401610d136114c4565b600082815260049190910160205260408120549003610d5857610d346114c4565b548114610d585783610d446114c4565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b031660008051602061336283398151915260405160405180910390a45b505050505050565b610dad83838360405180602001604052806000815250611368565b505050565b6001600160a01b031660009081527f9be1203d7c008407e47cf520c8f15f54b074f0a2af3750145c254290338afc3f602052604090205460ff1690565b60026000805160206133428339815191525403610e1f57604051635db5c7cd60e11b815260040160405180910390fd5b610e36600260008051602061334283398151915255565b6001600160a01b038116610e5d57604051635fbd571760e01b815260040160405180910390fd5b6000610e6882611d73565b9050610e7381611dad565b610e90576040516367d9dca160e11b815260040160405180910390fd5b610e99826116ce565b610ea581610a496119c8565b50610b9a600160008051602061334283398151915255565b6001600160a01b038116610ee457604051631492df6160e21b815260040160405180910390fd5b6000805160206133a283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6000610935600080516020613382833981519152546001600160a01b031690565b600061082782611c33565b6000610935600080516020613302833981519152546001600160a01b031690565b610f68611b6f565b6001600160a01b0316336001600160a01b031614610f9b576040516365f4906560e01b8152336004820152602401610b88565b610b9a8161083d565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff16610fee57604051630ef4733760e31b815260040160405180910390fd5b805160208201516040830151606084015160808501516000805160206133c2833981519152949094557f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60109290925560008051602061330283398151915280546001600160a01b039283166001600160a01b0319918216179091556000805160206133a283398151915280549383169382169390931790925560008051602061338283398151915280549190931691161790556110eb8160a001516001600160a01b031660009081527f9be1203d7c008407e47cf520c8f15f54b074f0a2af3750145c254290338afc3f60205260409020805460ff19166001179055565b610b9a8160c001518260e00151611e1a565b60004261111161110c84611d73565b611b35565b6001600160401b03161161112757506000919050565b61082782611637565b611138611b6f565b6001600160a01b0316336001600160a01b03161461116b576040516365f4906560e01b8152336004820152602401610b88565b610b9a81611312565b600260008051602061334283398151915254036111a457604051635db5c7cd60e11b815260040160405180910390fd5b6111bb600260008051602061334283398151915255565b6111c481611dad565b6111e1576040516367d9dca160e11b815260040160405180910390fd5b6111ea81611e8e565b6111f381611e99565b610b9a600160008051602061334283398151915255565b6000610935610a6a565b606061121e6114c4565b600301805461079990612f6c565b611234611b6f565b6001600160a01b0316336001600160a01b031614611267576040516365f4906560e01b8152336004820152602401610b88565b610b9a816106aa565b806112796114c4565b6007016000611286611cff565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556112ca611cff565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611306911515815260200190565b60405180910390a35050565b6001600160a01b03811661133957604051636da3122b60e01b815260040160405180910390fd5b60008051602061330283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611373848484610b9d565b6001600160a01b0383163b156113ac5761138f84848484611f0c565b6113ac576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60006109356000805160206133a2833981519152546001600160a01b031690565b60606113de82611ffe565b6113fb57604051630a14c4b560e41b815260040160405180910390fd5b600061141260408051602081019091526000815290565b90508051600003611432576040518060200160405280600081525061145d565b8061143c8461203a565b60405160200161144d929190612fa6565b6040516020818303038152906040525b9392505050565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff166114ae57604051630ef4733760e31b815260040160405180910390fd5b6108398282611e1a565b600061145d838361207e565b7f234d8962d7c9a6a6604d7f98797e6ad6d7a886804f7409feb26422e27bf8125490565b60006114f382611ffe565b611510576040516333d1c03960e21b815260040160405180910390fd5b6115186114c4565b60009283526006016020525060409020546001600160a01b031690565b600061154083610f34565b9050811561159657806001600160a01b031661155a611cff565b6001600160a01b0316146115965761157981611574611cff565b61207e565b611596576040516367d9dca160e11b815260040160405180910390fd5b8361159f6114c4565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b61161a60405180602001604052806000815250826120bb565b610b9a57604051630ce39a4b60e21b815260040160405180910390fd5b60006001600160a01b038216611660576040516323d3ad8160e21b815260040160405180910390fd5b6001600160401b036116706114c4565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b6000806116aa6114c4565b600101546116b66114c4565b540303919050565b60006116c86114c4565b54919050565b60006116e66000805160206133c28339815191525490565b9050806000036116f4575050565b6000805160206133828339815191525460408051630eac306d60e01b81529051600080516020613322833981519152926000926001600160a01b0390911691630eac306d916004808201926020929091908290030181865afa15801561175e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117829190612f53565b9050808310156117a557604051635894b54560e11b815260040160405180910390fd5b6006820154604080516301332c8360e61b815290516000926001600160a01b031691634ccb20c09160048083019260209291908290030181865afa1580156117f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118159190612fd5565b905060008360060160009054906101000a90046001600160a01b03166001600160a01b0316639f6542aa6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561186e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118929190612ff2565b905060008460060160009054906101000a90046001600160a01b03166001600160a01b031663190eaaba6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190f9190612f53565b9050600061191d858861302c565b9050801561194c57848261193561ffff86168461303f565b61193f9190613056565b6119499190613078565b94505b6004860154611966906001600160a01b031689868861214d565b80600003611978575050505050505050565b600486015460058701546119a4916001600160a01b03908116918b911661199f898c61302c565b61214d565b5050505050505050565b610839828260405180602001604052806000815250612193565b6000805160206133828339815191525460408051634090785d60e11b815290516000926001600160a01b031691638120f0ba9160048083019260209291908290030181865afa158015611a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610935919061308b565b60008281527f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e3616020819052604082205490916001600160401b0390911690818103611a9957611a9284426130b4565b9050611acf565b611aa285612210565b611ac257604051637be9098d60e11b815260048101869052602401610b88565b611acc84836130b4565b90505b60008581526020848152604091829020805467ffffffffffffffff19166001600160401b038516908117909155915191825286917f2ec2be2c4b90c2cf13ecb6751a24daed6bb741ae5ed3f7371aabf9402f6d62e8910160405180910390a25050505050565b60009081527f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e36160205260409020546001600160401b031690565b6040805180820182527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d0546001600160a01b03168082527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d154602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa158015611c0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1e9190612fd5565b6000611c3d6114c4565b600083815260049190910160205260408120549150600160e01b82169003611cbe5780600003610a6557611c6f6114c4565b548210611c8f57604051636f96cda160e11b815260040160405180910390fd5b611c976114c4565b600019909201600081815260049390930160205260409092205490508015611c8f57919050565b604051636f96cda160e11b815260040160405180910390fd5b6000806000611ce46114c4565b60009485526006016020525050604090912080549092909150565b6000610935612247565b6113ac828460008281526000805160206133228339815191526020908152604080832080546001600160a01b0319166001600160a01b039590951694851790559282527f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600e90522055565b6001600160a01b031660009081527f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600e602052604090205490565b600080611db983610f34565b9050806001600160a01b0316611dcd612247565b6001600160a01b03161480611de95750611de981611574612247565b8061145d5750611df7612247565b6001600160a01b0316611e09846114e8565b6001600160a01b0316149392505050565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff16611e6457604051630ef4733760e31b815260040160405180910390fd5b611e746380ac58cd60e01b612275565b611e84635b5e139f60e01b612275565b6108398282612353565b610b9a816000612385565b7f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e361600082815260209182526040808220805467ffffffffffffffff191690555190815282917f2ec2be2c4b90c2cf13ecb6751a24daed6bb741ae5ed3f7371aabf9402f6d62e8910160405180910390a250565b6000836001600160a01b031663150b7a02611f25611cff565b8786866040518563ffffffff1660e01b8152600401611f4794939291906130db565b6020604051808303816000875af1925050508015611f82575060408051601f3d908101601f19168201909252611f7f91810190613118565b60015b611fe0573d808015611fb0576040519150601f19603f3d011682016040523d82523d6000602084013e611fb5565b606091505b508051600003611fd8576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60006120086114c4565b54821080156108275750600160e01b61201f6114c4565b60008481526004919091016020526040902054161592915050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806120545750819003601f19909101908152919050565b60006120886114c4565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b60006120c5611cff565b6001600160a01b03166120d6611b6f565b6001600160a01b0316148061145d57507ff421ea548af7158b1d71ba0aeccf57104c067038bd8fd214edd05c09eb4f735b5460ff1615801561145d575061145d8361211f611cff565b846040516020016121309190613142565b6040516020818303038152906040526121489061315e565b612506565b80156113ac5773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0385160161218757612182828261262f565b6113ac565b6113ac848484846126d2565b61219d8383612725565b6001600160a01b0383163b15610dad5760006121b76114c4565b5490508281035b6121d16000868380600101945086611f0c565b6121ee576040516368d2bf6b60e11b815260040160405180910390fd5b8181106121be57816121fe6114c4565b541461220957600080fd5b5050505050565b60004261221b6119c8565b6001600160401b031661222e9190613078565b61223783611b35565b6001600160401b03161092915050565b60006014361080159061225e575061225e33610db2565b15612270575060131936013560601c90565b503390565b6001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c4602052604090205460ff161515600114612302576001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c460205260409020805460ff1916600117905561231b565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b600061235d6114c4565b90506002810161236d84826131c8565b506003810161237c83826131c8565b50600090555050565b600061239083611c33565b90508060008061239f86611cd7565b9150915084156123e3576123b68184610bf8611cff565b6123e3576123c683611574611cff565b6123e357604051632ce44b5f60e11b815260040160405180910390fd5b6123f1836000886001611d09565b80156123fc57600082555b6fffffffffffffffffffffffffffffffff6124156114c4565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b17600360e01b1761244e6114c4565b60008881526004919091016020526040812091909155600160e11b851690036124c4576001860161247d6114c4565b6000828152600491909101602052604081205490036124c25761249e6114c4565b5481146124c257846124ae6114c4565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b03861690600080516020613362833981519152908390a46124f26114c4565b600190810180549091019055505050505050565b6000612510611b6f565b6001600160a01b0316836001600160a01b0316036125305750600161145d565b7f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8558600061257c7f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559612849565b905060005b81811015612625576125966001840182612853565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b81526004016125c493929190613287565b602060405180830381865afa1580156125e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061260591906132b5565b156126135760019350612625565b8061261d816132d2565b915050612581565b5050509392505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461267c576040519150601f19603f3d011682016040523d82523d6000602084013e612681565b606091505b5050905080610dad5760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610b88565b816001600160a01b0316836001600160a01b031603156113ac57306001600160a01b03841603612710576121826001600160a01b038516838361285f565b6113ac6001600160a01b0385168484846128c2565b600061272f6114c4565b54905060008290036127545760405163b562e8dd60e01b815260040160405180910390fd5b6127616000848385611d09565b6801000000000000000182026127756114c4565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b17176127b06114c4565b600083815260049190910160205260408120919091556001600160a01b0384169083830190839083906000805160206133628339815191528180a4600183015b8181146128165780836000600080516020613362833981519152600080a46001016127f0565b508160000361283757604051622e076360e81b815260040160405180910390fd5b806128406114c4565b5550610dad9050565b6000610827825490565b600061145d83836128fa565b6040516001600160a01b038316602482015260448101829052610dad90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612924565b6040516001600160a01b03808516602483015283166044820152606481018290526113ac9085906323b872dd60e01b9060840161288b565b6000826000018281548110612911576129116132eb565b9060005260206000200154905092915050565b6000612979826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129f69092919063ffffffff16565b805190915015610dad578080602001905181019061299791906132b5565b610dad5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b88565b6060611ff6848460008585600080866001600160a01b03168587604051612a1d9190613142565b60006040518083038185875af1925050503d8060008114612a5a576040519150601f19603f3d011682016040523d82523d6000602084013e612a5f565b606091505b5091509150612a7087838387612a7b565b979650505050505050565b60608315612aea578251600003612ae3576001600160a01b0385163b612ae35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b88565b5081611ff6565b611ff68383815115612aff5781518083602001fd5b8060405162461bcd60e51b8152600401610b889190612b82565b600060208284031215612b2b57600080fd5b5035919050565b60005b83811015612b4d578181015183820152602001612b35565b50506000910152565b60008151808452612b6e816020860160208601612b32565b601f01601f19169290920160200192915050565b60208152600061145d6020830184612b56565b6001600160a01b0381168114610b9a57600080fd5b8035610a6581612b95565b60008060408385031215612bc857600080fd5b8235612bd381612b95565b946020939093013593505050565b600060208284031215612bf357600080fd5b813561145d81612b95565b600080600060608486031215612c1357600080fd5b8335612c1e81612b95565b92506020840135612c2e81612b95565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715612c7857612c78612c3f565b60405290565b60006001600160401b0380841115612c9857612c98612c3f565b604051601f8501601f19908116603f01168101908282118183101715612cc057612cc0612c3f565b81604052809350858152868686011115612cd957600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112612d0457600080fd5b61145d83833560208501612c7e565b600060208284031215612d2557600080fd5b81356001600160401b0380821115612d3c57600080fd5b908301906101008286031215612d5157600080fd5b612d59612c55565b8235815260208301356020820152612d7360408401612baa565b6040820152612d8460608401612baa565b6060820152612d9560808401612baa565b6080820152612da660a08401612baa565b60a082015260c083013582811115612dbd57600080fd5b612dc987828601612cf3565b60c08301525060e083013582811115612de157600080fd5b612ded87828601612cf3565b60e08301525095945050505050565b8015158114610b9a57600080fd5b60008060408385031215612e1d57600080fd5b8235612e2881612b95565b91506020830135612e3881612dfc565b809150509250929050565b60008060008060808587031215612e5957600080fd5b8435612e6481612b95565b93506020850135612e7481612b95565b92506040850135915060608501356001600160401b03811115612e9657600080fd5b8501601f81018713612ea757600080fd5b612eb687823560208401612c7e565b91505092959194509250565b60008060408385031215612ed557600080fd5b82356001600160401b0380821115612eec57600080fd5b612ef886838701612cf3565b93506020850135915080821115612f0e57600080fd5b50612f1b85828601612cf3565b9150509250929050565b60008060408385031215612f3857600080fd5b8235612f4381612b95565b91506020830135612e3881612b95565b600060208284031215612f6557600080fd5b5051919050565b600181811c90821680612f8057607f821691505b602082108103612fa057634e487b7160e01b600052602260045260246000fd5b50919050565b60008351612fb8818460208801612b32565b835190830190612fcc818360208801612b32565b01949350505050565b600060208284031215612fe757600080fd5b815161145d81612b95565b60006020828403121561300457600080fd5b815161ffff8116811461145d57600080fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561082757610827613016565b808202811582820484141761082757610827613016565b60008261307357634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561082757610827613016565b60006020828403121561309d57600080fd5b81516001600160401b038116811461145d57600080fd5b6001600160401b038181168382160190808211156130d4576130d4613016565b5092915050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061310e90830184612b56565b9695505050505050565b60006020828403121561312a57600080fd5b81516001600160e01b03198116811461145d57600080fd5b60008251613154818460208701612b32565b9190910192915050565b80516020808301519190811015612fa05760001960209190910360031b1b16919050565b601f821115610dad57600081815260208120601f850160051c810160208610156131a95750805b601f850160051c820191505b81811015610d8a578281556001016131b5565b81516001600160401b038111156131e1576131e1612c3f565b6131f5816131ef8454612f6c565b84613182565b602080601f83116001811461322a57600084156132125750858301515b600019600386901b1c1916600185901b178555610d8a565b600085815260208120601f198616915b828110156132595788860151825594840194600190910190840161323a565b50858210156132775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60608152600061329a6060830186612b56565b6001600160a01b039490941660208301525060400152919050565b6000602082840312156132c757600080fd5b815161145d81612dfc565b6000600182016132e4576132e4613016565b5060010190565b634e487b7160e01b600052603260045260246000fdfe9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60119b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600d50b052c8fb38984269a818b2b593d0584a81b1b99245abc0fab04abc7afb010fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60139b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60129b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600f",
    "sourceMap": "709:6364:183:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4481:349:182;;;;;;;;;;-1:-1:-1;4481:349:182;;;;;:::i;:::-;;:::i;:::-;;2044:116:81;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3522:132;;;;;;;;;;-1:-1:-1;3522:132:81;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1119:32:446;;;1101:51;;1089:2;1074:18;3522:132:81;955:203:446;3260:128:81;;;;;;:::i;:::-;;:::i;3600:510:182:-;;;;;;;;;;-1:-1:-1;3600:510:182;;;;;:::i;:::-;;:::i;3306:101:183:-;;;;;;;;;;;;;:::i;:::-;;;1904:25:446;;;1892:2;1877:18;3306:101:183;1758:177:446;1438:710:183;;;;;;:::i;:::-;;:::i;4834:301:182:-;;;;;;;;;;;;;:::i;2854:105:183:-;;;;;;;;;;-1:-1:-1;2854:105:183;;;;;:::i;:::-;;:::i;1527:93:81:-;;;;;;;;;;;;;:::i;4531:127:183:-;;;;;;;;;;-1:-1:-1;4531:127:183;;;;;:::i;:::-;;:::i;4176:129:182:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;4258:42:182;4176:129;;6048:135;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6129:49:182;-1:-1:-1;;;;;6129:49:182;6048:135;;4917:2680:81;;;;;;:::i;:::-;;:::i;7680:167::-;;;;;;:::i;:::-;;:::i;638:170:70:-;;;;;;;;;;-1:-1:-1;638:170:70;;;;;:::i;:::-;;:::i;:::-;;;2818:14:446;;2811:22;2793:41;;2781:2;2766:18;638:170:70;2653:187:446;6360:113:182;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6430:38:182;-1:-1:-1;;;;;6430:38:182;6360:113;;2182:391:183;;;;;;:::i;:::-;;:::i;5826:218:182:-;;;;;;;;;;-1:-1:-1;5826:218:182;;;;;:::i;:::-;;:::i;5015:93:183:-;;;;;;;;;;;;;:::i;2891:152:81:-;;;;;;;;;;-1:-1:-1;2891:152:81;;;;;:::i;:::-;;:::i;4214:107:183:-;;;;;;;;;;;;;:::i;3167:105::-;;;;;;;;;;-1:-1:-1;3167:105:183;;;;;:::i;:::-;;:::i;854:376::-;;;;;;;;;;-1:-1:-1;854:376:183;;;;;:::i;:::-;;:::i;5520:127:182:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;5597:45:182;-1:-1:-1;;;;;5597:45:182;5520:127;;6245:270:183;;;;;;;;;;-1:-1:-1;6245:270:183;;;;;:::i;:::-;;:::i;4063:117::-;;;;;;;;;;-1:-1:-1;4063:117:183;;;;;:::i;:::-;;:::i;2607:213::-;;;;;;;;;;-1:-1:-1;2607:213:183;;;;;:::i;:::-;;:::i;3753:101::-;;;;;;;;;;;;;:::i;2223:120:81:-;;;;;;;;;;;;;:::i;3614:105:183:-;;;;;;;;;;-1:-1:-1;3614:105:183;;;;;:::i;:::-;;:::i;3957:269:81:-;;;;;;;;;;-1:-1:-1;3957:269:81;;;;;:::i;:::-;;:::i;5313:203:182:-;;;;;;;;;;-1:-1:-1;5313:203:182;;;;;:::i;:::-;;:::i;8396:348:81:-;;;;;;:::i;:::-;;:::i;4692:115:183:-;;;;;;;;;;;;;:::i;2436:329:81:-;;;;;;;;;;-1:-1:-1;2436:329:81;;;;;:::i;:::-;;:::i;876:157::-;;;;;;;;;;-1:-1:-1;876:157:81;;;;;:::i;:::-;;:::i;4364:167::-;;;;;;;;;;-1:-1:-1;4364:167:81;;;;;:::i;:::-;;:::i;4481:349:182:-;-1:-1:-1;;;;;;;;;;;4653:14:182;4631:69;;;-1:-1:-1;;;4631:69:182;;;;-1:-1:-1;;;;;;;;;;;181:54:184;4541:35:182;;-1:-1:-1;;;;;4653:14:182;;;;4631:67;;:69;;;;;;;;;;;;;;;4653:14;4631:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4612:88;;4722:8;4711;:19;4707:58;;;4739:26;;-1:-1:-1;;;4739:26:182;;;;;;;;;;;4707:58;-1:-1:-1;;4772:42:182;:53;4481:349::o;2044:116:81:-;2098:13;2126:23;:21;:23::i;:::-;:29;;2119:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2044:116;:::o;3522:132::-;3606:7;3628:21;3641:7;3628:12;:21::i;:::-;3621:28;3522:132;-1:-1:-1;;3522:132:81:o;3260:128::-;3356:27;3365:2;3369:7;3378:4;3356:8;:27::i;:::-;3260:128;;:::o;3600:510:182:-;-1:-1:-1;;;;;;;;;;;3831:21:182;-1:-1:-1;;;;;;;;;;;181:54:184;-1:-1:-1;;;;;3831:21:182;3827:83;;3881:29;;-1:-1:-1;;;3881:29:182;;;;;;;;;;;3827:83;3961:14;;;;3939:63;;;-1:-1:-1;;;3939:63:182;;;;3917:19;;-1:-1:-1;;;;;3961:14:182;;3939:61;;:63;;;;;;;;;;;;;;3961:14;3939:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3917:85;;4024:11;4013:8;:22;4009:60;;;4044:25;;-1:-1:-1;;;4044:25:182;;;;;;;;;;;4009:60;-1:-1:-1;4076:18:182;;:29;3600:510::o;3306:101:183:-;3359:7;3381:21;-1:-1:-1;;;;;;;;;;;4258:42:182;;4176:129;3381:21:183;3374:28;;3306:101;:::o;1438:710::-;1521:15;415:1:75;-1:-1:-1;;;;;;;;;;;515:38:75;:66;511:117;;596:32;;-1:-1:-1;;;596:32:75;;;;;;;;;;;511:117;634:22;415:1;-1:-1:-1;;;;;;;;;;;832:65:75;777:125;634:22;1609:41:183::1;1629:20;;;;;;;;;;;;;-1:-1:-1::0;;;1629:20:183::1;;::::0;1609:19:::1;:41::i;:::-;1735:1;1712:20;1723:8;1712:10;:20::i;:::-;:24;1708:64;;;1745:27;;-1:-1:-1::0;;;1745:27:183::1;;;;;;;;;;;1708:64;-1:-1:-1::0;;;;;;;;;;;4258:42:182;1869:26:183;:69;::::1;;;;1917:21;:19;:21::i;:::-;1899:14;:12;:14::i;:::-;:39;;1869:69;1865:123;;;1955:26;;-1:-1:-1::0;;;1955:26:183::1;;;;;;;;;;;1865:123;2004:14;:12;:14::i;:::-;1994:24;;2025:31;2047:8;2025:21;:31::i;:::-;2062:22;2072:8;2082:1;2062:9;:22::i;:::-;2090:53;2109:7;2118:24;:22;:24::i;:::-;2090:18;:53::i;:::-;669:24:75::0;475:1;-1:-1:-1;;;;;;;;;;;832:65:75;777:125;669:24;1438:710:183;;;:::o;4834:301:182:-;4976:18;;4886:7;;-1:-1:-1;;;;;;;;;;;181:54:184;4976:23:182;;4972:159;;5038:2;:14;;;;;;;;;;-1:-1:-1;;;;;5038:14:182;-1:-1:-1;;;;;5016:60:182;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5009:69;;;4834:301;:::o;4972:159::-;5106:18;;;;4834:301;-1:-1:-1;4834:301:182:o;2854:105:183:-;2913:7;2935:19;2946:7;2935:10;:19::i;:::-;-1:-1:-1;;;;;2928:26:183;;2854:105;-1:-1:-1;;2854:105:183:o;1527:93:81:-;1579:7;1601:14;:12;:14::i;4531:127:183:-;600:8:62;:6;:8::i;:::-;-1:-1:-1;;;;;586:22:62;:10;-1:-1:-1;;;;;586:22:62;;582:79;;625:29;;-1:-1:-1;;;625:29:62;;643:10;625:29;;;1101:51:446;1074:18;;625:29:62;;;;;;;;582:79;4613:40:183::1;4640:12;4613:26;:40::i;:::-;4531:127:::0;:::o;4917:2680:81:-;5036:27;5066;5085:7;5066:18;:27::i;:::-;5036:57;;5145:4;-1:-1:-1;;;;;5104:45:81;5120:19;-1:-1:-1;;;;;5104:45:81;;5100:92;;5164:28;;-1:-1:-1;;;5164:28:81;;;;;;;;;;;5100:92;5207:27;5242:23;5274:35;5301:7;5274:26;:35::i;:::-;5199:110;;;;5398:68;5423:15;5440:4;5446:19;:17;:19::i;:::-;-1:-1:-1;;;;;11873:32:82;;;11731:28;;11988:20;;12010:30;;11985:56;;11464:587;5398:68:81;5393:181;;5479:43;5496:4;5502:19;:17;:19::i;5479:43::-;5474:100;;5539:35;;-1:-1:-1;;;5539:35:81;;;;;;;;;;;5474:100;-1:-1:-1;;;;;5585:16:81;;5581:52;;5610:23;;-1:-1:-1;;;5610:23:81;;;;;;;;;;;5581:52;5640:43;5662:4;5668:2;5672:7;5681:1;5640:21;:43::i;:::-;5758:15;5755:135;;;5880:1;5859:19;5852:30;5755:135;6230:23;:21;:23::i;:::-;-1:-1:-1;;;;;6230:48:81;;;;;;:42;;;;;:48;;;;;6228:50;;-1:-1:-1;;6228:50:81;;;6316:23;:21;:23::i;:::-;-1:-1:-1;;;;;6316:46:81;;;;;;:42;;;;;:46;;;;;;6314:48;;;;;;10232:11:82;10207:23;10203:41;10190:63;-1:-1:-1;;;10190:63:82;6590:23:81;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:184;;;;-1:-1:-1;;;6879:47:81;;:52;;6875:625;;6975:1;6965:11;;7080:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;:59;;7076:416;;7220:23;:21;:23::i;:::-;:37;7205:52;;7201:281;;7450:19;7365:23;:21;:23::i;:::-;:82;;;;:41;;;;;:82;;;;;:104;7201:281;6933:567;6875:625;7536:7;7532:2;-1:-1:-1;;;;;7517:27:81;7526:4;-1:-1:-1;;;;;7517:27:81;-1:-1:-1;;;;;;;;;;;7517:27:81;;;;;;;;;7550:42;5030:2567;;;4917:2680;;;:::o;7680:167::-;7803:39;7820:4;7826:2;7830:7;7803:39;;;;;;;;;;;;:16;:39::i;:::-;7680:167;;;:::o;638:170:70:-;-1:-1:-1;;;;;742:61:70;723:4;742:61;;;189:54:72;742:61:70;;;;;;;;;638:170::o;2182:391:183:-;415:1:75;-1:-1:-1;;;;;;;;;;;515:38:75;:66;511:117;;596:32;;-1:-1:-1;;;596:32:75;;;;;;;;;;;511:117;634:22;415:1;-1:-1:-1;;;;;;;;;;;832:65:75;777:125;634:22;-1:-1:-1;;;;;2265:22:183;::::1;2261:63;;2296:28;;-1:-1:-1::0;;;2296:28:183::1;;;;;;;;;;;2261:63;2331:15;2349:33;2373:8;2349:23;:33::i;:::-;2331:51;;2394:27;2413:7;2394:18;:27::i;:::-;2389:82;;2436:35;;-1:-1:-1::0;;;2436:35:183::1;;;;;;;;;;;2389:82;2478:31;2500:8;2478:21;:31::i;:::-;2515:53;2534:7;2543:24;:22;:24::i;2515:53::-;2255:318;669:24:75::0;475:1;-1:-1:-1;;;;;;;;;;;832:65:75;777:125;5826:218:182;-1:-1:-1;;;;;5901:26:182;;5897:72;;5936:33;;-1:-1:-1;;;5936:33:182;;;;;;;;;;;5897:72;-1:-1:-1;;;;;;;;;;;5975:64:182;;-1:-1:-1;;;;;;5975:64:182;-1:-1:-1;;;;;5975:64:182;;;;;;;;;;5826:218::o;5015:93:183:-;5064:7;5086:17;-1:-1:-1;;;;;;;;;;;6430:38:182;-1:-1:-1;;;;;6430:38:182;;6360:113;2891:152:81;2971:7;3009:27;3028:7;3009:18;:27::i;4214:107:183:-;4270:7;4292:24;-1:-1:-1;;;;;;;;;;;5597:45:182;-1:-1:-1;;;;;5597:45:182;;5520:127;3167:105:183;600:8:62;:6;:8::i;:::-;-1:-1:-1;;;;;586:22:62;:10;-1:-1:-1;;;;;586:22:62;;582:79;;625:29;;-1:-1:-1;;;625:29:62;;643:10;625:29;;;1101:51:446;1074:18;;625:29:62;955:203:446;582:79:62;3238:29:183::1;3258:8;3238:19;:29::i;854:376::-:0;186:68:46;1263:42:45;;;;;;1258:100;;1320:38;;-1:-1:-1;;;1320:38:45;;;;;;;;;;;1258:100;978:20:183;;1006::::1;::::0;::::1;::::0;1034:23:::1;::::0;::::1;::::0;1065:27:::1;::::0;::::1;::::0;1100:16:::1;::::0;::::1;::::0;-1:-1:-1;;;;;;;;;;;743:36:182;;;;785:18;:36;;;;-1:-1:-1;;;;;;;;;;;827:42:182;;-1:-1:-1;;;;;827:42:182;;;-1:-1:-1;;;;;;827:42:182;;;;;;;-1:-1:-1;;;;;;;;;;;875:50:182;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;931:28:182;;;;;;;;;;;1128:43:183::1;1156:4;:14;;;-1:-1:-1::0;;;;;380:68:70;:50;:68;;;189:54:72;380:68:70;;;;;:75;;-1:-1:-1;;380:75:70;451:4;380:75;;;302:158;1128:43:183::1;1177:48;1202:4;:9;;;1213:4;:11;;;1177:24;:48::i;6245:270::-:0;6311:7;6438:15;6390:44;6401:32;6425:7;6401:23;:32::i;:::-;6390:10;:44::i;:::-;-1:-1:-1;;;;;6390:63:183;;6386:92;;-1:-1:-1;6470:1:183;;6245:270;-1:-1:-1;6245:270:183:o;6386:92::-;6491:19;6502:7;6491:10;:19::i;4063:117::-;600:8:62;:6;:8::i;:::-;-1:-1:-1;;;;;586:22:62;:10;-1:-1:-1;;;;;586:22:62;;582:79;;625:29;;-1:-1:-1;;;625:29:62;;643:10;625:29;;;1101:51:446;1074:18;;625:29:62;955:203:446;582:79:62;4140:35:183::1;4163:11;4140:22;:35::i;2607:213::-:0;415:1:75;-1:-1:-1;;;;;;;;;;;515:38:75;:66;511:117;;596:32;;-1:-1:-1;;;596:32:75;;;;;;;;;;;511:117;634:22;415:1;-1:-1:-1;;;;;;;;;;;832:65:75;777:125;634:22;2683:27:183::1;2702:7;2683:18;:27::i;:::-;2678:82;;2725:35;;-1:-1:-1::0;;;2725:35:183::1;;;;;;;;;;;2678:82;2767:14;2773:7;2767:5;:14::i;:::-;2787:28;2807:7;2787:19;:28::i;:::-;669:24:75::0;475:1;-1:-1:-1;;;;;;;;;;;832:65:75;777:125;3753:101:183;3806:7;3828:21;:19;:21::i;2223:120:81:-;2279:13;2307:23;:21;:23::i;:::-;:31;;2300:38;;;;;:::i;3614:105:183:-;600:8:62;:6;:8::i;:::-;-1:-1:-1;;;;;586:22:62;:10;-1:-1:-1;;;;;586:22:62;;582:79;;625:29;;-1:-1:-1;;;625:29:62;;643:10;625:29;;;1101:51:446;1074:18;;625:29:62;955:203:446;582:79:62;3685:29:183::1;3705:8;3685:19;:29::i;3957:269:81:-:0;4147:8;4059:23;:21;:23::i;:::-;:42;;:63;4102:19;:17;:19::i;:::-;-1:-1:-1;;;;;4059:63:81;;;;;;;;;;;;;;;;;-1:-1:-1;4059:63:81;;;:85;;;;;;;;;;;;:96;;-1:-1:-1;;4059:96:81;;;;;;;;;;;4181:19;:17;:19::i;:::-;-1:-1:-1;;;;;4166:55:81;;4212:8;4166:55;;;;2818:14:446;2811:22;2793:41;;2781:2;2766:18;;2653:187;4166:55:81;;;;;;;;3957:269;;:::o;5313:203:182:-;-1:-1:-1;;;;;5383:25:182;;5379:67;;5417:29;;-1:-1:-1;;;5417:29:182;;;;;;;;;;;5379:67;-1:-1:-1;;;;;;;;;;;5452:59:182;;-1:-1:-1;;;;;;5452:59:182;-1:-1:-1;;;;;5452:59:182;;;;;;;;;;5313:203::o;8396:348:81:-;8543:31;8556:4;8562:2;8566:7;8543:12;:31::i;:::-;-1:-1:-1;;;;;8584:14:81;;;:19;8580:160;;8616:56;8647:4;8653:2;8657:7;8666:5;8616:30;:56::i;:::-;8611:129;;8691:40;;-1:-1:-1;;;8691:40:81;;;;;;;;;;;8611:129;8396:348;;;;:::o;4692:115:183:-;4752:7;4774:28;-1:-1:-1;;;;;;;;;;;6129:49:182;-1:-1:-1;;;;;6129:49:182;;6048:135;2436:329:81;2517:13;2543:16;2551:7;2543;:16::i;:::-;2538:59;;2568:29;;-1:-1:-1;;;2568:29:81;;;;;;;;;;;2538:59;2604:21;2628:10;6624:9:82;;;;;;;;;-1:-1:-1;6624:9:82;;;6552:86;2628:10:81;2604:34;;2663:7;2657:21;2682:1;2657:26;:103;;;;;;;;;;;;;;;;;2718:7;2727:18;2737:7;2727:9;:18::i;:::-;2701:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2657:103;2644:116;2436:329;-1:-1:-1;;;2436:329:81:o;876:157::-;186:68:46;1263:42:45;;;;;;1258:100;;1320:38;;-1:-1:-1;;;1320:38:45;;;;;;;;;;;1258:100;988:40:81::1;1013:5;1020:7;988:24;:40::i;4364:167::-:0;4473:4;4492:34;4510:5;4517:8;4492:17;:34::i;1557:139:83:-;183:44;;1557:139::o;22507:230:82:-;22585:7;22605:16;22613:7;22605;:16::i;:::-;22600:64;;22630:34;;-1:-1:-1;;;22630:34:82;;;;;;;;;;;22600:64;22678:23;:21;:23::i;:::-;:48;;;;:39;;:48;;-1:-1:-1;22678:48:82;;;:54;-1:-1:-1;;;;;22678:54:82;;22507:230::o;23287:439::-;23393:13;23409:17;23418:7;23409:8;:17::i;:::-;23393:33;;23437:13;23433:184;;;23485:5;-1:-1:-1;;;;;23462:28:82;:19;:17;:19::i;:::-;-1:-1:-1;;;;;23462:28:82;;23458:159;;23505:45;23523:5;23530:19;:17;:19::i;:::-;23505:17;:45::i;:::-;23500:117;;23571:35;;-1:-1:-1;;;23571:35:82;;;;;;;;;;;23500:117;23680:2;23623:23;:21;:23::i;:::-;:48;;;;:39;;;;;:48;;;;;;:59;;-1:-1:-1;;;;;;23623:59:82;-1:-1:-1;;;;;23623:59:82;;;;;;23693:28;23623:48;;23693:28;;;;;;;;;;23623:48;23693:28;23387:339;23287:439;;;:::o;2471:164:158:-;2551:31;2562:7;;;;;;;;;;;;2571:10;2551;:31::i;:::-;2546:85;;2599:25;;-1:-1:-1;;;2599:25:158;;;;;;;;;;;3340:242:82;3398:7;-1:-1:-1;;;;;3417:19:82;;3413:60;;3445:28;;-1:-1:-1;;;3445:28:82;;;;;;;;;;;3413:60;-1:-1:-1;;;;;3492:23:82;:21;:23::i;:::-;:42;;:49;3535:5;-1:-1:-1;;;;;3492:49:82;-1:-1:-1;;;;;3492:49:82;;;;;;;;;;;;;:85;3479:98;;3340:242;;;:::o;2985:351::-;3032:7;;3263:23;:21;:23::i;:::-;:36;;;3215:23;:21;:23::i;:::-;:37;:84;:110;;2985:351;-1:-1:-1;2985:351:82:o;4042:119::-;4097:7;4119:23;:21;:23::i;:::-;:37;;4042:119;-1:-1:-1;4042:119:82:o;1705:1357:182:-;1766:23;1792:21;-1:-1:-1;;;;;;;;;;;4258:42:182;;4176:129;1792:21;1766:47;;1824:15;1843:1;1824:20;1820:33;;1846:7;1705:1357;:::o;1820:33::-;-1:-1:-1;;;;;;;;;;;1974:14:182;1952:63;;;-1:-1:-1;;;1952:63:182;;;;-1:-1:-1;;;;;;;;;;;181:54:184;1859:35:182;;-1:-1:-1;;;;;1974:14:182;;;;1952:61;;:63;;;;;;;;;;;;;;;1974:14;1952:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1930:85;;2044:11;2026:15;:29;2022:75;;;2064:33;;-1:-1:-1;;;2064:33:182;;;;;;;;;;;2022:75;2149:14;;;;2127:62;;;-1:-1:-1;;;2127:62:182;;;;2104:20;;-1:-1:-1;;;;;2149:14:182;;2127:60;;:62;;;;;;;;;;;;;;2149:14;2127:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2104:85;;2195:13;2233:2;:14;;;;;;;;;;-1:-1:-1;;;;;2233:14:182;-1:-1:-1;;;;;2211:54:182;;:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2195:72;;2273:19;2317:2;:14;;;;;;;;;;-1:-1:-1;;;;;2317:14:182;-1:-1:-1;;;;;2295:59:182;;:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2273:83;-1:-1:-1;2363:15:182;2381:29;2399:11;2381:15;:29;:::i;:::-;2363:47;-1:-1:-1;2506:11:182;;2502:94;;2578:11;2563;2543:16;;;;:7;:16;:::i;:::-;2542:32;;;;:::i;:::-;2541:48;;;;:::i;:::-;2527:62;;2502:94;2705:21;;;;2664:134;;-1:-1:-1;;;;;2705:21:182;2734:5;2755:12;2781:11;2664:33;:134::i;:::-;2809:7;2820:1;2809:12;2805:25;;2823:7;;;;;;;1705:1357;:::o;2805:25::-;2933:21;;;;2983:25;;;;2892:165;;-1:-1:-1;;;;;2933:21:182;;;;2962:5;;2983:25;3022:29;3040:11;3022:15;:29;:::i;:::-;2892:33;:165::i;:::-;1760:1302;;;;;;;1705:1357;:::o;21752:104:82:-;21824:27;21834:2;21838:8;21824:27;;;;;;;;;;;;:9;:27::i;3240:183:182:-;-1:-1:-1;;;;;;;;;;;3346:38:182;3324:94;;;-1:-1:-1;;;3324:94:182;;;;3297:6;;-1:-1:-1;;;;;3346:38:182;;3324:92;;:94;;;;;;;;;;;;;;3346:38;3324:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;256:588:78:-;333:32;425:22;;;180:44:79;425:22:78;;;;;;;;180:44:79;;-1:-1:-1;;;;;425:22:78;;;;484;;;480:261;;532:34;558:8;539:15;532:34;:::i;:::-;516:50;;480:261;;;592:21;605:7;592:12;:21::i;:::-;587:96;;632:42;;-1:-1:-1;;;632:42:78;;;;;1904:25:446;;;1877:18;;632:42:78;1758:177:446;587:96:78;706:28;726:8;706:17;:28;:::i;:::-;690:44;;480:261;747:13;:22;;;;;;;;;;;;:38;;-1:-1:-1;;747:38:78;-1:-1:-1;;;;;747:38:78;;;;;;;;797:42;;10543:50:446;;;747:22:78;;797:42;;10516:18:446;797:42:78;;;;;;;327:517;;;256:588;;:::o;1009:129::-;1069:6;1090:43;;;180:44:79;1090:43:78;;;;;;-1:-1:-1;;;;;1090:43:78;;1009:129::o;676:189:62:-;738:67;;;;;;;;185::64;738::62;-1:-1:-1;;;;;738:67:62;;;;;;;;;;;;;818:42;;-1:-1:-1;;;818:42:62;;;;;1904:25:446;;;;818:42:62;;717:13;;818:30;;1877:18:446;;;;;818:42:62;;;;;;738:67;818:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7836:1497:82:-;7912:14;7983:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;;-1:-1:-1;;;;8069:24:82;;:29;;8065:1214;;8190:6;8200:1;8190:11;8186:833;;8230:23;:21;:23::i;:::-;:37;8219:48;;8215:104;;8288:31;;-1:-1:-1;;;8288:31:82;;;;;;;;;;;8215:104;8864:23;:21;:23::i;:::-;-1:-1:-1;;8906:9:82;;;8864:52;;;;:41;;;;;:52;;;;;;;;-1:-1:-1;8944:25:82;;8806:203;8944:25;7836:1497;;;:::o;8065:1214::-;9297:31;;-1:-1:-1;;;9297:31:82;;;;;;;;;;;12151:478;12247:27;12276:23;12309:38;12350:30;:28;:30::i;:::-;:62;;;;:53;;:62;;-1:-1:-1;;12350:62:82;;;;12593:26;;12350:62;;12593:26;;-1:-1:-1;12151:478:82:o;6775:100:183:-;6836:7;6858:12;:10;:12::i;6519:252::-;6727:39;6749:12;6763:2;1223:35:182;1294:27;;;-1:-1:-1;;;;;;;;;;;1294:27:182;;;;;;;;:36;;-1:-1:-1;;;;;;1294:36:182;-1:-1:-1;;;;;1294:36:182;;;;;;;;;1336:26;;;:18;:26;;;:36;1144:233;1544:157;-1:-1:-1;;;;;1646:50:182;1624:7;1646:50;;;:42;:50;;;;;;;1544:157::o;5286:256:183:-;5354:4;5366:13;5382:17;5391:7;5382:8;:17::i;:::-;5366:33;;5436:5;-1:-1:-1;;;;;5420:21:183;:12;:10;:12::i;:::-;-1:-1:-1;;;;;5420:21:183;;5419:71;;;;5452:38;5470:5;5477:12;:10;:12::i;5452:38::-;5419:118;;;;5525:12;:10;:12::i;:::-;-1:-1:-1;;;;;5500:37:183;:21;5513:7;5500:12;:21::i;:::-;-1:-1:-1;;;;;5500:37:183;;5406:131;5286:256;-1:-1:-1;;;5286:256:183:o;1037:299:81:-;186:68:46;1263:42:45;;;;;;1258:100;;1320:38;;-1:-1:-1;;;1320:38:45;;;;;;;;;;;1258:100;1159:25:81::1;-1:-1:-1::0;;;1159:13:81::1;:25::i;:::-;1224;-1:-1:-1::0;;;1224:13:81::1;:25::i;:::-;1297:34;1316:5;1323:7;1297:18;:34::i;23970:81:82:-:0;24025:21;24031:7;24040:5;24025;:21::i;848:157:78:-;180:44:79;916:34:78;:43;;;;;;;;;;;909:50;;-1:-1:-1;;909:50:78;;;970:30;10543:50:446;;;916:43:78;;970:30;;10516:18:446;970:30:78;;;;;;;848:157;:::o;14710:674:82:-;14851:4;14909:2;-1:-1:-1;;;;;14873:56:82;;14939:19;:17;:19::i;:::-;14968:4;14982:7;14999:5;14873:139;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14873:139:82;;;;;;;;-1:-1:-1;;14873:139:82;;;;;;;;;;;;:::i;:::-;;;14863:517;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15195:6;:13;15212:1;15195:18;15191:183;;15232:40;;-1:-1:-1;;;15232:40:82;;;;;;;;;;;15191:183;15348:6;15342:13;15333:6;15329:2;15325:15;15318:38;14863:517;-1:-1:-1;;;;;;15064:83:82;-1:-1:-1;;;15064:83:82;;-1:-1:-1;14863:517:82;14710:674;;;;;;:::o;11067:301::-;11132:4;11203:23;:21;:23::i;:::-;:37;11193:47;;11157:187;;;;;-1:-1:-1;;;11271:23:82;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;;:68;:73;11144:200;11067:301;-1:-1:-1;;11067:301:82:o;29576:1574::-;29649:17;30043:4;30036;30030:11;30026:22;30121:1;30115:4;30108:15;30182:4;30179:1;30175:12;30168:19;;;30250:1;30245:3;30238:14;30339:3;30549:5;30531:419;30596:1;30591:3;30587:11;30580:18;;30764:2;30758:4;30754:13;30750:2;30746:22;30741:3;30733:36;30856:2;30846:13;;30911:25;30531:419;30911:25;-1:-1:-1;30972:13:82;;;-1:-1:-1;;31073:14:82;;;31121:19;;;31073:14;29576:1574;-1:-1:-1;29576:1574:82:o;22317:186::-;22420:4;22439:23;:21;:23::i;:::-;-1:-1:-1;;;;;22439:49:82;;;;;;;:42;;;;;:49;;;;;;;;:59;;;;;;;;;;-1:-1:-1;22439:59:82;;;;;22317:186::o;2142:325:158:-;2248:4;2285:20;:18;:20::i;:::-;-1:-1:-1;;;;;2273:32:158;:8;:6;:8::i;:::-;-1:-1:-1;;;;;2273:32:158;;:189;;;-1:-1:-1;181:58:68;526:31:66;;;2316:10:158;:145;;;;;2338:123;2361:9;2382:20;:18;:20::i;:::-;2439:10;2422:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;2414:37;;;:::i;:::-;2338:11;:123::i;728:315:228:-;849:38;;874:7;849:38;-1:-1:-1;;;;;;;897:24:228;;;893:146;;931:35;955:2;959:6;931:23;:35::i;:::-;893:146;;;987:45;1005:8;1015:4;1021:2;1025:6;987:17;:45::i;21084:597:82:-;21192:19;21198:2;21202:8;21192:5;:19::i;:::-;-1:-1:-1;;;;;21240:14:82;;;:19;21236:435;;21271:11;21285:23;:21;:23::i;:::-;:37;;-1:-1:-1;21348:14:82;;;21372:189;21392:62;21431:1;21435:2;21439:7;;;;;;21448:5;21392:30;:62::i;:::-;21387:143;;21477:40;;-1:-1:-1;;;21477:40:82;;;;;;;;;;;21387:143;21556:3;21548:5;:11;21372:189;;21649:3;21608:23;:21;:23::i;:::-;:37;:44;21604:58;;21654:8;;;21604:58;21261:410;;21084:597;;;:::o;5908:159:183:-;5979:4;6047:15;6020:24;:22;:24::i;:::-;-1:-1:-1;;;;;6020:42:183;;;;;:::i;:::-;5998:19;6009:7;5998:10;:19::i;:::-;-1:-1:-1;;;;;5998:64:183;;;5908:159;-1:-1:-1;;5908:159:183:o;987:481:70:-;1032:14;1077:2;1058:8;:21;;;;:55;;;1083:30;1102:10;1083:18;:30::i;:::-;1054:410;;;-1:-1:-1;;;1391:14:70;1387:23;1374:37;1370:2;1366:46;987:481;:::o;1054:410::-;-1:-1:-1;1447:10:70;;987:481::o;271:282:48:-;-1:-1:-1;;;;;;940:62:48;;915:4;940:62;;;186:68:50;940:62:48;;;;;;;;:70;;:62;:70;329:182;;-1:-1:-1;;;;;;375:62:48;;:49;:62;;;186:68:50;375:62:48;;;;;:69;;-1:-1:-1;;375:69:48;440:4;375:69;;;329:182;;;472:32;;-1:-1:-1;;;472:32:48;;;;;;;;;;;329:182;521:27;;-1:-1:-1;;;;;;521:27:48;;;;;;;;271:282;:::o;2560:247:82:-;2657:32;2692:23;:21;:23::i;:::-;2657:58;-1:-1:-1;2722:8:82;;;:15;2733:4;2722:8;:15;:::i;:::-;-1:-1:-1;2743:10:82;;;:19;2756:6;2743:10;:19;:::i;:::-;-1:-1:-1;3948:7:82;2768:34;;-1:-1:-1;;2560:247:82:o;24246:2906::-;24321:27;24351;24370:7;24351:18;:27::i;:::-;24321:57;-1:-1:-1;24321:57:82;24385:12;;24519:35;24546:7;24519:26;:35::i;:::-;24444:110;;;;24565:13;24561:299;;;24672:68;24697:15;24714:4;24720:19;:17;:19::i;24672:68::-;24667:186;;24755:44;24773:4;24779:19;:17;:19::i;24755:44::-;24750:103;;24818:35;;-1:-1:-1;;;24818:35:82;;;;;;;;;;;24750:103;24866:51;24888:4;24902:1;24906:7;24915:1;24866:21;:51::i;:::-;24992:15;24989:135;;;25114:1;25093:19;25086:30;24989:135;25711:40;25651:23;:21;:23::i;:::-;-1:-1:-1;;;;;25651:48:82;;;;;;:42;;;;;:48;;;;;;:100;;;;;;;;;10232:11;10207:23;10203:41;10190:63;-1:-1:-1;;;10190:63:82;25946:23;:21;:23::i;:::-;:50;;;;:41;;;;;:50;;;;;:214;;;;-1:-1:-1;;;26265:47:82;;:52;;26261:625;;26361:1;26351:11;;26466:23;:21;:23::i;:::-;:54;;;;:41;;;;;:54;;;;;;:59;;26462:416;;26606:23;:21;:23::i;:::-;:37;26591:52;;26587:281;;26836:19;26751:23;:21;:23::i;:::-;:82;;;;:41;;;;;:82;;;;;:104;26587:281;26319:567;26261:625;26903:35;;26930:7;;26926:1;;-1:-1:-1;;;;;26903:35:82;;;-1:-1:-1;;;;;;;;;;;26903:35:82;26926:1;;26903:35;27103:23;:21;:23::i;:::-;:36;;;;:38;;;;;;;-1:-1:-1;;;;;;24246:2906:82:o;844:585:158:-;963:13;996:8;:6;:8::i;:::-;-1:-1:-1;;;;;988:16:158;:4;-1:-1:-1;;;;;988:16:158;;984:33;;-1:-1:-1;1013:4:158;1006:11;;984:33;288:48:172;1024:44:158;1147:24;:15;:22;:24::i;:::-;1120:51;;1183:9;1178:247;1202:16;1198:1;:20;1178:247;;;1259:21;:15;;;1278:1;1259:18;:21::i;:::-;-1:-1:-1;;;;;1246:46:158;;1304:9;1325:4;1341:10;1246:115;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1233:186;;;1391:4;1380:15;;1405:5;;1233:186;1220:3;;;;:::i;:::-;;;;1178:247;;;;978:451;;844:585;;;;;:::o;2569:178:228:-;2645:12;2663:2;-1:-1:-1;;;;;2663:7:228;2678:5;2663:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2644:44;;;2702:7;2694:48;;;;-1:-1:-1;;;2694:48:228;;15602:2:446;2694:48:228;;;15584:21:446;15641:2;15621:18;;;15614:30;15680;15660:18;;;15653:58;15728:18;;2694:48:228;15400:352:446;2195:315:228;2326:2;-1:-1:-1;;;;;2318:10:228;:4;-1:-1:-1;;;;;2318:10:228;;2314:37;2338:7;2314:37;2377:4;-1:-1:-1;;;;;2361:21:228;;;2357:149;;2392:38;-1:-1:-1;;;;;2392:26:228;;2419:2;2423:6;2392:26;:38::i;2357:149::-;2451:48;-1:-1:-1;;;;;2451:30:228;;2482:4;2488:2;2492:6;2451:30;:48::i;15802:2642:82:-;15870:20;15893:23;:21;:23::i;:::-;:37;;-1:-1:-1;15893:37:82;15940:13;;;15936:44;;15962:18;;-1:-1:-1;;;15962:18:82;;;;;;;;;;;15936:44;15987:61;16017:1;16021:2;16025:12;16039:8;15987:21;:61::i;:::-;16477:32;16457:53;;16399:23;:21;:23::i;:::-;-1:-1:-1;;;;;16399:46:82;;;;;;:42;;;;;:46;;;;;;:111;;;;;;;;;10232:11;10207:23;10203:41;-1:-1:-1;10627:15:82;;10601:24;10597:46;10200:52;10190:63;16710:23;:21;:23::i;:::-;:71;;;;:41;;;;;:71;;;;;:188;;;;-1:-1:-1;;;;;17419:25:82;;;16945:23;;;;16761:12;;17419:25;;-1:-1:-1;;;;;;;;;;;16710:71:82;;17491:260;18029:1;18015:12;18011:20;17980:275;18061:3;18052:7;18049:16;17980:275;;18237:7;18227:8;18224:1;-1:-1:-1;;;;;;;;;;;18194:1:82;18191;18186:59;18103:1;18090:15;17980:275;;;17984:57;18274:8;18286:1;18274:13;18270:45;;18296:19;;-1:-1:-1;;;18296:19:82;;;;;;;;;;;18270:45;18364:3;18324:23;:21;:23::i;:::-;:43;-1:-1:-1;18379:60:82;;-1:-1:-1;8396:348:81;9098:115:438;9161:7;9187:19;9195:3;4537:18;;4455:107;9555:156;9629:7;9679:22;9683:3;9695:5;9679:3;:22::i;763:205:420:-;902:58;;-1:-1:-1;;;;;15949:32:446;;902:58:420;;;15931:51:446;15998:18;;;15991:34;;;875:86:420;;895:5;;-1:-1:-1;;;925:23:420;15904:18:446;;902:58:420;;;;-1:-1:-1;;902:58:420;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:420;-1:-1:-1;;;;;;902:58:420;;;;;;;;;;875:19;:86::i;974:241::-;1139:68;;-1:-1:-1;;;;;16294:15:446;;;1139:68:420;;;16276:34:446;16346:15;;16326:18;;;16319:43;16378:18;;;16371:34;;;1112:96:420;;1132:5;;-1:-1:-1;;;1162:27:420;16211:18:446;;1139:68:420;16036:375:446;4904:118:438;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;3747:706:420:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:420;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:420;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:420;;16750:2:446;4351:85:420;;;16732:21:446;16789:2;16769:18;;;16762:30;16828:34;16808:18;;;16801:62;-1:-1:-1;;;16879:18:446;;;16872:40;16929:19;;4351:85:420;16548:406:446;3873:223:426;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4006;5241;5255:23;5282:6;-1:-1:-1;;;;;5282:11:426;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:426:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:426;;;7908:60;;;;-1:-1:-1;;;7908:60:426;;17860:2:446;7908:60:426;;;17842:21:446;17899:2;17879:18;;;17872:30;17938:31;17918:18;;;17911:59;17987:18;;7908:60:426;17658:353:446;7908:60:426;-1:-1:-1;8003:10:426;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:426;;;;;;;;:::i;14:180:446:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:446;;14:180;-1:-1:-1;14:180:446:o;199:250::-;284:1;294:113;308:6;305:1;302:13;294:113;;;384:11;;;378:18;365:11;;;358:39;330:2;323:10;294:113;;;-1:-1:-1;;441:1:446;423:16;;416:27;199:250::o;454:271::-;496:3;534:5;528:12;561:6;556:3;549:19;577:76;646:6;639:4;634:3;630:14;623:4;616:5;612:16;577:76;:::i;:::-;707:2;686:15;-1:-1:-1;;682:29:446;673:39;;;;714:4;669:50;;454:271;-1:-1:-1;;454:271:446:o;730:220::-;879:2;868:9;861:21;842:4;899:45;940:2;929:9;925:18;917:6;899:45;:::i;1163:131::-;-1:-1:-1;;;;;1238:31:446;;1228:42;;1218:70;;1284:1;1281;1274:12;1299:134;1367:20;;1396:31;1367:20;1396:31;:::i;1438:315::-;1506:6;1514;1567:2;1555:9;1546:7;1542:23;1538:32;1535:52;;;1583:1;1580;1573:12;1535:52;1622:9;1609:23;1641:31;1666:5;1641:31;:::i;:::-;1691:5;1743:2;1728:18;;;;1715:32;;-1:-1:-1;;;1438:315:446:o;1940:247::-;1999:6;2052:2;2040:9;2031:7;2027:23;2023:32;2020:52;;;2068:1;2065;2058:12;2020:52;2107:9;2094:23;2126:31;2151:5;2126:31;:::i;2192:456::-;2269:6;2277;2285;2338:2;2326:9;2317:7;2313:23;2309:32;2306:52;;;2354:1;2351;2344:12;2306:52;2393:9;2380:23;2412:31;2437:5;2412:31;:::i;:::-;2462:5;-1:-1:-1;2519:2:446;2504:18;;2491:32;2532:33;2491:32;2532:33;:::i;:::-;2192:456;;2584:7;;-1:-1:-1;;;2638:2:446;2623:18;;;;2610:32;;2192:456::o;2845:127::-;2906:10;2901:3;2897:20;2894:1;2887:31;2937:4;2934:1;2927:15;2961:4;2958:1;2951:15;2977:250;3044:2;3038:9;3086:6;3074:19;;-1:-1:-1;;;;;3108:34:446;;3144:22;;;3105:62;3102:88;;;3170:18;;:::i;:::-;3206:2;3199:22;2977:250;:::o;3232:632::-;3297:5;-1:-1:-1;;;;;3368:2:446;3360:6;3357:14;3354:40;;;3374:18;;:::i;:::-;3449:2;3443:9;3417:2;3503:15;;-1:-1:-1;;3499:24:446;;;3525:2;3495:33;3491:42;3479:55;;;3549:18;;;3569:22;;;3546:46;3543:72;;;3595:18;;:::i;:::-;3635:10;3631:2;3624:22;3664:6;3655:15;;3694:6;3686;3679:22;3734:3;3725:6;3720:3;3716:16;3713:25;3710:45;;;3751:1;3748;3741:12;3710:45;3801:6;3796:3;3789:4;3781:6;3777:17;3764:44;3856:1;3849:4;3840:6;3832;3828:19;3824:30;3817:41;;;;3232:632;;;;;:::o;3869:222::-;3912:5;3965:3;3958:4;3950:6;3946:17;3942:27;3932:55;;3983:1;3980;3973:12;3932:55;4005:80;4081:3;4072:6;4059:20;4052:4;4044:6;4040:17;4005:80;:::i;4096:1167::-;4188:6;4241:2;4229:9;4220:7;4216:23;4212:32;4209:52;;;4257:1;4254;4247:12;4209:52;4297:9;4284:23;-1:-1:-1;;;;;4367:2:446;4359:6;4356:14;4353:34;;;4383:1;4380;4373:12;4353:34;4406:22;;;;4462:6;4444:16;;;4440:29;4437:49;;;4482:1;4479;4472:12;4437:49;4508:17;;:::i;:::-;4561:2;4548:16;4541:5;4534:31;4618:2;4614;4610:11;4597:25;4592:2;4585:5;4581:14;4574:49;4655:31;4682:2;4678;4674:11;4655:31;:::i;:::-;4650:2;4643:5;4639:14;4632:55;4719:31;4746:2;4742;4738:11;4719:31;:::i;:::-;4714:2;4707:5;4703:14;4696:55;4784:32;4811:3;4807:2;4803:12;4784:32;:::i;:::-;4778:3;4771:5;4767:15;4760:57;4850:32;4877:3;4873:2;4869:12;4850:32;:::i;:::-;4844:3;4837:5;4833:15;4826:57;4929:3;4925:2;4921:12;4908:26;4959:2;4949:8;4946:16;4943:36;;;4975:1;4972;4965:12;4943:36;5012:45;5049:7;5038:8;5034:2;5030:17;5012:45;:::i;:::-;5006:3;4999:5;4995:15;4988:70;;5104:3;5100:2;5096:12;5083:26;5134:2;5124:8;5121:16;5118:36;;;5150:1;5147;5140:12;5118:36;5187:45;5224:7;5213:8;5209:2;5205:17;5187:45;:::i;:::-;5181:3;5170:15;;5163:70;-1:-1:-1;5174:5:446;4096:1167;-1:-1:-1;;;;;4096:1167:446:o;5268:118::-;5354:5;5347:13;5340:21;5333:5;5330:32;5320:60;;5376:1;5373;5366:12;5391:382;5456:6;5464;5517:2;5505:9;5496:7;5492:23;5488:32;5485:52;;;5533:1;5530;5523:12;5485:52;5572:9;5559:23;5591:31;5616:5;5591:31;:::i;:::-;5641:5;-1:-1:-1;5698:2:446;5683:18;;5670:32;5711:30;5670:32;5711:30;:::i;:::-;5760:7;5750:17;;;5391:382;;;;;:::o;5778:795::-;5873:6;5881;5889;5897;5950:3;5938:9;5929:7;5925:23;5921:33;5918:53;;;5967:1;5964;5957:12;5918:53;6006:9;5993:23;6025:31;6050:5;6025:31;:::i;:::-;6075:5;-1:-1:-1;6132:2:446;6117:18;;6104:32;6145:33;6104:32;6145:33;:::i;:::-;6197:7;-1:-1:-1;6251:2:446;6236:18;;6223:32;;-1:-1:-1;6306:2:446;6291:18;;6278:32;-1:-1:-1;;;;;6322:30:446;;6319:50;;;6365:1;6362;6355:12;6319:50;6388:22;;6441:4;6433:13;;6429:27;-1:-1:-1;6419:55:446;;6470:1;6467;6460:12;6419:55;6493:74;6559:7;6554:2;6541:16;6536:2;6532;6528:11;6493:74;:::i;:::-;6483:84;;;5778:795;;;;;;;:::o;6578:543::-;6666:6;6674;6727:2;6715:9;6706:7;6702:23;6698:32;6695:52;;;6743:1;6740;6733:12;6695:52;6783:9;6770:23;-1:-1:-1;;;;;6853:2:446;6845:6;6842:14;6839:34;;;6869:1;6866;6859:12;6839:34;6892:50;6934:7;6925:6;6914:9;6910:22;6892:50;:::i;:::-;6882:60;;6995:2;6984:9;6980:18;6967:32;6951:48;;7024:2;7014:8;7011:16;7008:36;;;7040:1;7037;7030:12;7008:36;;7063:52;7107:7;7096:8;7085:9;7081:24;7063:52;:::i;:::-;7053:62;;;6578:543;;;;;:::o;7126:388::-;7194:6;7202;7255:2;7243:9;7234:7;7230:23;7226:32;7223:52;;;7271:1;7268;7261:12;7223:52;7310:9;7297:23;7329:31;7354:5;7329:31;:::i;:::-;7379:5;-1:-1:-1;7436:2:446;7421:18;;7408:32;7449:33;7408:32;7449:33;:::i;7519:184::-;7589:6;7642:2;7630:9;7621:7;7617:23;7613:32;7610:52;;;7658:1;7655;7648:12;7610:52;-1:-1:-1;7681:16:446;;7519:184;-1:-1:-1;7519:184:446:o;7708:380::-;7787:1;7783:12;;;;7830;;;7851:61;;7905:4;7897:6;7893:17;7883:27;;7851:61;7958:2;7950:6;7947:14;7927:18;7924:38;7921:161;;8004:10;7999:3;7995:20;7992:1;7985:31;8039:4;8036:1;8029:15;8067:4;8064:1;8057:15;7921:161;;7708:380;;;:::o;8093:496::-;8272:3;8310:6;8304:13;8326:66;8385:6;8380:3;8373:4;8365:6;8361:17;8326:66;:::i;:::-;8455:13;;8414:16;;;;8477:70;8455:13;8414:16;8524:4;8512:17;;8477:70;:::i;:::-;8563:20;;8093:496;-1:-1:-1;;;;8093:496:446:o;8594:251::-;8664:6;8717:2;8705:9;8696:7;8692:23;8688:32;8685:52;;;8733:1;8730;8723:12;8685:52;8765:9;8759:16;8784:31;8809:5;8784:31;:::i;8850:276::-;8919:6;8972:2;8960:9;8951:7;8947:23;8943:32;8940:52;;;8988:1;8985;8978:12;8940:52;9020:9;9014:16;9070:6;9063:5;9059:18;9052:5;9049:29;9039:57;;9092:1;9089;9082:12;9131:127;9192:10;9187:3;9183:20;9180:1;9173:31;9223:4;9220:1;9213:15;9247:4;9244:1;9237:15;9263:128;9330:9;;;9351:11;;;9348:37;;;9365:18;;:::i;9396:168::-;9469:9;;;9500;;9517:15;;;9511:22;;9497:37;9487:71;;9538:18;;:::i;9569:217::-;9609:1;9635;9625:132;;9679:10;9674:3;9670:20;9667:1;9660:31;9714:4;9711:1;9704:15;9742:4;9739:1;9732:15;9625:132;-1:-1:-1;9771:9:446;;9569:217::o;9791:125::-;9856:9;;;9877:10;;;9874:36;;;9890:18;;:::i;9921:288::-;9990:6;10043:2;10031:9;10022:7;10018:23;10014:32;10011:52;;;10059:1;10056;10049:12;10011:52;10091:9;10085:16;-1:-1:-1;;;;;10134:5:446;10130:30;10123:5;10120:41;10110:69;;10175:1;10172;10165:12;10214:180;-1:-1:-1;;;;;10319:10:446;;;10331;;;10315:27;;10354:11;;;10351:37;;;10368:18;;:::i;:::-;10351:37;10214:180;;;;:::o;10818:489::-;-1:-1:-1;;;;;11087:15:446;;;11069:34;;11139:15;;11134:2;11119:18;;11112:43;11186:2;11171:18;;11164:34;;;11234:3;11229:2;11214:18;;11207:31;;;11012:4;;11255:46;;11281:19;;11273:6;11255:46;:::i;:::-;11247:54;10818:489;-1:-1:-1;;;;;;10818:489:446:o;11312:290::-;11381:6;11434:2;11422:9;11413:7;11409:23;11405:32;11402:52;;;11450:1;11447;11440:12;11402:52;11476:16;;-1:-1:-1;;;;;;11521:32:446;;11511:43;;11501:71;;11568:1;11565;11558:12;11607:289;11738:3;11776:6;11770:13;11792:66;11851:6;11846:3;11839:4;11831:6;11827:17;11792:66;:::i;:::-;11874:16;;;;;11607:289;-1:-1:-1;;11607:289:446:o;11901:297::-;12019:12;;12066:4;12055:16;;;12049:23;;12019:12;12084:16;;12081:111;;;-1:-1:-1;;12158:4:446;12154:17;;;;12151:1;12147:25;12143:38;12132:50;;11901:297;-1:-1:-1;11901:297:446:o;12329:545::-;12431:2;12426:3;12423:11;12420:448;;;12467:1;12492:5;12488:2;12481:17;12537:4;12533:2;12523:19;12607:2;12595:10;12591:19;12588:1;12584:27;12578:4;12574:38;12643:4;12631:10;12628:20;12625:47;;;-1:-1:-1;12666:4:446;12625:47;12721:2;12716:3;12712:12;12709:1;12705:20;12699:4;12695:31;12685:41;;12776:82;12794:2;12787:5;12784:13;12776:82;;;12839:17;;;12820:1;12809:13;12776:82;;13050:1352;13176:3;13170:10;-1:-1:-1;;;;;13195:6:446;13192:30;13189:56;;;13225:18;;:::i;:::-;13254:97;13344:6;13304:38;13336:4;13330:11;13304:38;:::i;:::-;13298:4;13254:97;:::i;:::-;13406:4;;13470:2;13459:14;;13487:1;13482:663;;;;14189:1;14206:6;14203:89;;;-1:-1:-1;14258:19:446;;;14252:26;14203:89;-1:-1:-1;;13007:1:446;13003:11;;;12999:24;12995:29;12985:40;13031:1;13027:11;;;12982:57;14305:81;;13452:944;;13482:663;12276:1;12269:14;;;12313:4;12300:18;;-1:-1:-1;;13518:20:446;;;13636:236;13650:7;13647:1;13644:14;13636:236;;;13739:19;;;13733:26;13718:42;;13831:27;;;;13799:1;13787:14;;;;13666:19;;13636:236;;;13640:3;13900:6;13891:7;13888:19;13885:201;;;13961:19;;;13955:26;-1:-1:-1;;14044:1:446;14040:14;;;14056:3;14036:24;14032:37;14028:42;14013:58;13998:74;;13885:201;-1:-1:-1;;;;;14132:1:446;14116:14;;;14112:22;14099:36;;-1:-1:-1;13050:1352:446:o;14407:388::-;14612:2;14601:9;14594:21;14575:4;14632:45;14673:2;14662:9;14658:18;14650:6;14632:45;:::i;:::-;-1:-1:-1;;;;;14713:32:446;;;;14708:2;14693:18;;14686:60;-1:-1:-1;14777:2:446;14762:18;14755:34;14624:53;14407:388;-1:-1:-1;14407:388:446:o;14800:245::-;14867:6;14920:2;14908:9;14899:7;14895:23;14891:32;14888:52;;;14936:1;14933;14926:12;14888:52;14968:9;14962:16;14987:28;15009:5;14987:28;:::i;15050:135::-;15089:3;15110:17;;;15107:43;;15130:18;;:::i;:::-;-1:-1:-1;15177:1:446;15166:13;;15050:135::o;16416:127::-;16477:10;16472:3;16468:20;16465:1;16458:31;16508:4;16505:1;16498:15;16532:4;16529:1;16522:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "__ERC721A_init(string,string)": "d2f01f19",
    "__Membership_init((uint256,uint256,address,address,address,address,string,string))": "6e43d05d",
    "_getMembershipCurrency()": "70251563",
    "_getMembershipFeeRecipient()": "1d214b4d",
    "_getMembershipLimit()": "1766bb7b",
    "_getMembershipPrice()": "1b3972f0",
    "_getTownFactory()": "5b312fce",
    "_setMembershipCurrency(address)": "b8307376",
    "_setMembershipFeeRecipient(address)": "62452006",
    "_setMembershipLimit(uint256)": "02b24da5",
    "_setMembershipPrice(uint256)": "0c3a01b1",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "cancelMembership(uint256)": "89def320",
    "expiresAt(uint256)": "17c95709",
    "getApproved(uint256)": "081812fc",
    "getMembershipCurrency()": "657e45e8",
    "getMembershipFeeRecipient()": "bf3bc878",
    "getMembershipLimit()": "95d600c8",
    "getMembershipPrice()": "1278076a",
    "getTownFactory()": "6340d096",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isTrustedForwarder(address)": "572b6c05",
    "joinTown(address)": "16a344b4",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "renewMembership(address)": "61a9c7df",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setMembershipCurrency(address)": "7d0567c4",
    "setMembershipFeeRecipient(address)": "18e5da65",
    "setMembershipLimit(uint256)": "97fb7c1e",
    "setMembershipPrice(uint256)": "69d5f38a",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC5643__DurationZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC5643__InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC5643__NotApprovedOrOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC5643__SubscriptionNotRenewable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Entitlement__InvalidValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Entitlement__NotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Entitlement__ValueAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initializable_InInitializingState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initializable_NotInInitializingState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Introspection_AlreadySupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Introspection_NotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__AlreadyMember\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__InsufficientPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__InvalidCurrency\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__InvalidFeeRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__InvalidLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__InvalidPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__LimitReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Membership__PriceTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Pausable__NotPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Pausable__Paused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuard__ReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"version\",\"type\":\"uint32\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"InterfaceAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"InterfaceRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"MembershipCurrencyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"MembershipFeeRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"MembershipLimitUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"MembershipPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"expiration\",\"type\":\"uint64\"}],\"name\":\"SubscriptionUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"name\":\"__ERC721A_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"membershipPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"membershipLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"membershipCurrency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"membershipFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"townFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"internalType\":\"struct IMembershipBase.MembershipInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"__Membership_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getMembershipCurrency\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getMembershipFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getMembershipLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getMembershipPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_getTownFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCurrency\",\"type\":\"address\"}],\"name\":\"_setMembershipCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"_setMembershipFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"_setMembershipLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"_setMembershipPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"expiresAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMembershipCurrency\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMembershipFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMembershipLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMembershipPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTownFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"joinTown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"renewMembership\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCurrency\",\"type\":\"address\"}],\"name\":\"setMembershipCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"setMembershipFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"setMembershipLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setMembershipPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"OwnershipTransferred(address,address)\":{\"details\":\"This emits when ownership of a contract changes.\"},\"SubscriptionUpdate(uint256,uint64)\":{\"details\":\"When a subscription is canceled, the expiration value should also be 0.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"_getMembershipPrice()\":{\"details\":\"Makes it virtual to allow other pricing strategies\"},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"cancelMembership(uint256)\":{\"params\":{\"tokenId\":\"The token id of the membership\"}},\"expiresAt(uint256)\":{\"params\":{\"tokenId\":\"The token id of the membership\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getMembershipCurrency()\":{\"returns\":{\"_0\":\"The membership currency\"}},\"getMembershipFeeRecipient()\":{\"returns\":{\"_0\":\"The membership fee recipient\"}},\"getMembershipLimit()\":{\"returns\":{\"_0\":\"The membership limit\"}},\"getMembershipPrice()\":{\"returns\":{\"_0\":\"The membership price\"}},\"getTownFactory()\":{\"returns\":{\"_0\":\"The town factory\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}},\"joinTown(address)\":{\"params\":{\"receiver\":\"The address of the receiver\"},\"returns\":{\"tokenId\":\"The token id of the membership\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renewMembership(address)\":{\"params\":{\"receiver\":\"The address of the receiver\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setMembershipCurrency(address)\":{\"params\":{\"newCurrency\":\"The new membership currency\"}},\"setMembershipFeeRecipient(address)\":{\"params\":{\"newRecipient\":\"The new membership fee recipient\"}},\"setMembershipLimit(uint256)\":{\"params\":{\"newLimit\":\"The new membership limit\"}},\"setMembershipPrice(uint256)\":{\"params\":{\"newPrice\":\"The new membership price\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"events\":{\"InterfaceAdded(bytes4)\":{\"notice\":\"Emitted when an interface is added to the contract via `_addInterface`.\"},\"InterfaceRemoved(bytes4)\":{\"notice\":\"Emitted when an interface is removed from the contract via `_removeInterface`.\"},\"SubscriptionUpdate(uint256,uint64)\":{\"notice\":\"Emitted when a subscription expiration changes\"}},\"kind\":\"user\",\"methods\":{\"cancelMembership(uint256)\":{\"notice\":\"Cancel a town membership\"},\"expiresAt(uint256)\":{\"notice\":\"Return the expiration date of a membership\"},\"getMembershipCurrency()\":{\"notice\":\"Get the membership currency\"},\"getMembershipFeeRecipient()\":{\"notice\":\"Get the membership fee recipient\"},\"getMembershipLimit()\":{\"notice\":\"Get the membership limit\"},\"getMembershipPrice()\":{\"notice\":\"Get the membership price\"},\"getTownFactory()\":{\"notice\":\"Get the town factory\"},\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"},\"joinTown(address)\":{\"notice\":\"Join a town\"},\"renewMembership(address)\":{\"notice\":\"Renew a town membership\"},\"setMembershipCurrency(address)\":{\"notice\":\"Set the membership currency\"},\"setMembershipFeeRecipient(address)\":{\"notice\":\"Set the membership fee recipient\"},\"setMembershipLimit(uint256)\":{\"notice\":\"Set the membership limit\"},\"setMembershipPrice(uint256)\":{\"notice\":\"Set the membership price\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/towns/facets/membership/MembershipFacet.sol\":\"MembershipFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC721A/=lib/ERC721A/contracts/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=lib/operator-filter-registry/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"contracts/src/diamond/facets/Facet.sol\":{\"keccak256\":\"0x8213b85d1271bc3c2aa9842979c8ad825066c4c9addc55296d53b6747e5198ba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b4e88e869c99e65f0caeb9d03938e78c578a869783b9f20c05f4ba52e7ca493d\",\"dweb:/ipfs/QmRqPmg8BYD1V6Cd8kfihCQ7nn2DAsgRjGW2MJvc7Evnjt\"]},\"contracts/src/diamond/facets/initializable/Initializable.sol\":{\"keccak256\":\"0x2a4f3a99b3b3ac6c2c18431cea80b40774c1d8265ddefac21b26da561e069096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36dbba730942b1fd345f242051ea7f33e979f70392fbd929d8522c0c9c6dd367\",\"dweb:/ipfs/QmYMvYnvg9zQJpDQX9yMHZ1AET9Vx7UXtDenXAs1JhfPpd\"]},\"contracts/src/diamond/facets/initializable/InitializableStorage.sol\":{\"keccak256\":\"0x99dfe047dbb8df48a7490f63939420dd990fb5fd3b3a03c42d0cb9c6f4f9eefa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e8f6d4bff257324e4544cacadd9fee42bada459f457fb707fef90bcfe0e895a\",\"dweb:/ipfs/QmYWEam5VcMt5ViNMKRkaxoD84MK2MewS5iWwSES589Vma\"]},\"contracts/src/diamond/facets/introspection/IERC165.sol\":{\"keccak256\":\"0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2\",\"dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV\"]},\"contracts/src/diamond/facets/introspection/IntrospectionBase.sol\":{\"keccak256\":\"0x503b6ce030f8a760e9a877545b35307d05bbb704b501095795ab2168fe40db59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://769658fed18c26f67dec9bf4ca18dd595c0343bc8ea21bb3e50595eca3401265\",\"dweb:/ipfs/QmVuqWH5eKqBJbNEtXzybgZ7ahtjTraMew8CMb4TuVUyo6\"]},\"contracts/src/diamond/facets/introspection/IntrospectionStorage.sol\":{\"keccak256\":\"0xd2ec3bbe4d15f9232006b41e0a80a5127006243ee596754af77bd3926045782a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8c47e18bfd34a687ce9ec75dc1f1fa5bca088e97e59aad2ac3fdb0989d06d7e6\",\"dweb:/ipfs/QmdktQXV7PKABzh43SZqemdTG25RxMaMsgpXTTUvZUxmfU\"]},\"contracts/src/diamond/facets/ownable/IERC173.sol\":{\"keccak256\":\"0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620\",\"dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol\":{\"keccak256\":\"0x61304bf241c1d14017416d3cc1742960f6157411d90a1464b8bde23bd322da89\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ac41ce2830e16be806340ea576a1885db9ecd02cc4f5002bfdeb4dfd4ac0115e\",\"dweb:/ipfs/QmXqE8xZjwkFA2YgfV3eExFVEMqHizVSBTxyNDhM9WVrEZ\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol\":{\"keccak256\":\"0xea4323b3cc8794cb9008bf79180555b0dc248c52e0b030024d6b4ac9fdd6af0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dce6d6130309fce1126b8a4b493cc14666c59d1f7685107f07fb685d2cf31773\",\"dweb:/ipfs/QmVrC5tmJWZYgZ7ruKW6uDU8QDeZgbh3QcZD9aWHrX2Duh\"]},\"contracts/src/diamond/facets/pausable/IPausable.sol\":{\"keccak256\":\"0x51faf4ca7fa88bc4bf2699bab34692f0a43a316d0b3f95a8d7271935ef243a78\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e4ff1050ba7ec1bc7de90f562d8ccf7875f4faea0f12ca5101f22619f2dd6de2\",\"dweb:/ipfs/QmeczRzWavYXmirfEbwGg5uLeLdXaENtFAzmxxFsggUHsW\"]},\"contracts/src/diamond/facets/pausable/PausableBase.sol\":{\"keccak256\":\"0xfdeeba59a9f9b6a31203aa45f9244767b5d790dbcf36c920cc0ec5471505e47f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72d6eb74b90e658834c9b9f6a9e391722c3eb3992aef2d4694c1a91473b291a1\",\"dweb:/ipfs/QmXVV8mTt8LmFDhzn3Lm3BMLXNdJTzUMbMrpBjnUaMzm5F\"]},\"contracts/src/diamond/facets/pausable/PausableStorage.sol\":{\"keccak256\":\"0x7aaa1baa71b080cf67876cb383b505be55ff2661b4bafc7f01428d509c201296\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://68231325f3a66baf6b96cb34d1432a675ff1d36fc15500cec97de12fc823bcd1\",\"dweb:/ipfs/QmVQb23iSSbYQJqk3EB9vT5fjSp6J8Uj2AwgEaHMSkF6wa\"]},\"contracts/src/diamond/facets/recipient/ERC2771RecipientBase.sol\":{\"keccak256\":\"0x8bc4ba2434fe953b044842bde8221e91986076bc7a2991e2326ad81eafc1c2df\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7e7abe4d785d77b1ada045857eebe50d94643b211716789a05e618f66af91681\",\"dweb:/ipfs/QmZhDnkSMu9TFWZhufwaG2hb6BH4MQuAXUm2FkT2Wv9xtk\"]},\"contracts/src/diamond/facets/recipient/ERC2771RecipientStorage.sol\":{\"keccak256\":\"0xbc05f921c7f0d4a61bde16443d89633eef695cc86715aeab4d356c5110fba2d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b35bb2b1b879c728be85655549ffe26a4f2b99c328f5b466656ffe323804f150\",\"dweb:/ipfs/QmRFaRnhiS4RgwsSWFQzhcQge4PGBDb9oUchDTZrFPGGbs\"]},\"contracts/src/diamond/facets/recipient/IERC2771Recipient.sol\":{\"keccak256\":\"0x5be5673df93a2162aa89c13802f0f4240fa889b2b8c6e57f372166d27ce779c1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3b276d85daa4373d0fc6e0bc6f29650903ac5b4ee00669e886bf828f5e075aaa\",\"dweb:/ipfs/QmRrCEXA3UwKpHEHtgEhsqwfMNXy3dMVhdDUd64fTqfesM\"]},\"contracts/src/diamond/facets/reentrancy/IReentrancyGuard.sol\":{\"keccak256\":\"0x507dfdcf6a41cf53878f7bd5ce7e1b0d6e55143eb6a797c7d898677c6ff745dd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://41eb17240f7ad1c9db7e3545aac935be523a2bce38ac82fe7105d55ac274b2ef\",\"dweb:/ipfs/QmeaSfDMhH4MzMyZLUeiC62S4yZKiUFo5xQnAxwzMKJRaW\"]},\"contracts/src/diamond/facets/reentrancy/ReentrancyGuard.sol\":{\"keccak256\":\"0x4d4a1255bdb69707eacf1268582e817b7df99f295fbe5600307324c3b9a98b9a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7032a949862a25195309aa00468e3ca98e1cd2debc24b917097bc1305ecb80f6\",\"dweb:/ipfs/QmWqZQtHJtUkx2Evw486iDWnTa6SEJffKyXcPScsV8VJXJ\"]},\"contracts/src/diamond/facets/reentrancy/ReentrancyGuardStorage.sol\":{\"keccak256\":\"0xe1adcec11c7ed6bfbbacfdf6807cd302e740728a579a89417e7f15a1f0f31916\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://76dbe11f006b449792ed47c699d266ea89706a2babe0e7177a287283aa9f15f1\",\"dweb:/ipfs/Qmd1AZpAYqzejHFBjpenbMwDWHFhYX7MQTNc18PKtDdoNd\"]},\"contracts/src/diamond/facets/token/ERC5643/ERC5643Base.sol\":{\"keccak256\":\"0x7775b07e89b00a68968273263fc1ddd0673be2d14873909ee5776749b6df7dff\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://83b4abf7a61b7225ce897e857f12c12a75dc2fdf14e0fa4360bbbc8a96741ff7\",\"dweb:/ipfs/QmcCyztsCfzAcTaH4LfrsdYSqkztNutqnoTGHoWNiH9s62\"]},\"contracts/src/diamond/facets/token/ERC5643/ERC5643Storage.sol\":{\"keccak256\":\"0x9c8a69b866bc3491d24758d6cf1c8a4b0514bfefd799867e0915a1c519d6ce10\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3d96033585fc705c542d8378fcb6f15feb7d94ee27854bb8650ba0f7af675a52\",\"dweb:/ipfs/QmSVwSN7BpysF5e5rTNEksedRWHb7fLGKfbWDbraxMp3e8\"]},\"contracts/src/diamond/facets/token/ERC5643/IERC5643.sol\":{\"keccak256\":\"0xd8bdaad94ddd9d05f4b124e4a616cbc0a9b7787169722252b45116c3b8ec4ed0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c03a38ce42b8636aefd8200e231864995ac34a61adca44ff885649efa3ac8272\",\"dweb:/ipfs/QmStu2XFdLd2GT6g9cko45SsyactK9w8zFs9gzh6VGK5GT\"]},\"contracts/src/diamond/facets/token/ERC721A/ERC721A.sol\":{\"keccak256\":\"0x321ea4cd6a2617d12cdf6bcd84095072de32ecfddfa95df83e58711c4684e325\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://95b09721ac18cc7d34859486008989238dfc9ff9bbafb300ce7a3b2ecfb201a1\",\"dweb:/ipfs/Qmcdzd3hLsafxVkDTYs2japBR5UpmeJ7VYWrNFbSf1kboX\"]},\"contracts/src/diamond/facets/token/ERC721A/ERC721ABase.sol\":{\"keccak256\":\"0x1e0f21db21117ca705182e671aca5f24d157ca9003268450582d3f49eb2b8ece\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4348c9408175707af61dd9d5d0eda909066c14eb35e1fc88604b9d58eed0d667\",\"dweb:/ipfs/QmUk514VMTYx1skNfooNs5q53x7SoxonHuEYpsDSwvoyEG\"]},\"contracts/src/diamond/facets/token/ERC721A/ERC721AStorage.sol\":{\"keccak256\":\"0xd6940108c888555331b972b7ea5d4842ddeb7c222feab4565c166c12f85900ba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecbc54202867c7b11e57ca2cbcbe33aa5701ea1593a70bfa82a0ccc358682767\",\"dweb:/ipfs/QmScG3JBtGEoDgxipmP8EbAgZxZF9F8aWaZ9gYBqqBweNH\"]},\"contracts/src/diamond/facets/token/ERC721A/IERC721A.sol\":{\"keccak256\":\"0x1473085ffec67f1e059e56baa36be6d3379f7b876147cd62b9854cea8f52cce9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6b3bd85f29ed8e16ad5622e40966c92b58baf988880da4a676142957462ded06\",\"dweb:/ipfs/QmSkGb7ByX4DTvNPh6egoSAs71b7w1NHoYfPUPT9LdtJY9\"]},\"contracts/src/towns/entitlements/IEntitlement.sol\":{\"keccak256\":\"0x3c3733f40dcf373c19ea564ec9cbf49b33e96c27a80012e9be6f8d6d24e76c46\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ba0686e15bc8bfac66d59f62e59832eaf6d4c1b636080f9b2367386d5dc72ecb\",\"dweb:/ipfs/QmemW17L8TkGWG9RHKWTpjq9WBtYX3dmZsiTtzDmYNNXwE\"]},\"contracts/src/towns/facets/Entitled.sol\":{\"keccak256\":\"0x7aa843d40e4efd1a09e1ec302af382911989aba7999e1a0ec2619293b0598710\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d60caab15dacfc58082c74dff1abfbb68b2415d30a88308772123ff16c5369\",\"dweb:/ipfs/QmdAx6MjAwMWyfK8rEFWCRohff49ELCND6vxmvU8hwZzNU\"]},\"contracts/src/towns/facets/Permissions.sol\":{\"keccak256\":\"0x71c581d53e94675ff22111bbdcb54d9238cb2476c1c87d22c1c8709643ca20c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://33571102d8b2339eea4e68cdb4461e6c46617fa2597bc7fc9d3bd085ed3b8939\",\"dweb:/ipfs/QmPsppLQ4sXNwh9QC3hPw1wSdWDXKHsTbeqVPkz97F7KMd\"]},\"contracts/src/towns/facets/entitlements/EntitlementsManagerStorage.sol\":{\"keccak256\":\"0x2fa49a3dea8314e57341b402894a053fe4c3e4f6f682d3f6cfae79e999919340\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ca673210755140e127ec9ed3c7716a3c4fc48d3c4cf66d6ccfca5144e2c9933d\",\"dweb:/ipfs/QmQajUVgwkg8dkeAb8Ext2dABL3PRPNsiDCxd7XXXuUdVD\"]},\"contracts/src/towns/facets/membership/IMembership.sol\":{\"keccak256\":\"0x3850a57d0605852c08b500c4ac18a097ac81295b3ba4c3a65061ba31454dc963\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f2f8ee5df52e748adb0f0ecbb6b49eef1616deb07c271d8fea2c991d225f6d26\",\"dweb:/ipfs/QmcbL9Wf8R9YxzFj8LZZUJq3D2XtndpTwaqLBsZqM9NBtz\"]},\"contracts/src/towns/facets/membership/MembershipBase.sol\":{\"keccak256\":\"0x0a44e7e067256359ad28633f0b0c425e6e41656da5698900f9e80687c88fd6cc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8df997b8c4e56cce846dcd6b13543462e5436ec4bdcdb6af320569424887be96\",\"dweb:/ipfs/QmaHbT7LuAPWm3Zmiynv4ocz6a5c5YechFkoAGaXFKX6Ts\"]},\"contracts/src/towns/facets/membership/MembershipFacet.sol\":{\"keccak256\":\"0x396c1896171b6c8a3ddbbec6b422a34e2884e7c59a92bf595e6d0c238906f193\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://733e89b8803883e3fe971dff781ba6047471bd41365f31d4004b2a664a66ff69\",\"dweb:/ipfs/QmbUCGFNrgpLFsTwcj6QPDbi48hN5WPwTfGfKXMA2yk1iL\"]},\"contracts/src/towns/facets/membership/MembershipStorage.sol\":{\"keccak256\":\"0xf61c275fd438990e41184171964bf5438ff347a1e654162b2c12bfe6f4973833\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ed7a0fc30e464a98a8c9876855066ecad26147bb055cee6e33a7f6a2ecec691\",\"dweb:/ipfs/QmSU45tU2HrDxbqY4Zj4JqQQnao3KS4yf89XxeqbmeDF64\"]},\"contracts/src/towns/facets/platform/requirements/IPlatformRequirements.sol\":{\"keccak256\":\"0x2b9abe044df8fad7a5e4427fbcee87b0bdbbb714bc7d9282e94fa4b0b0f5d514\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ee228bbd5cbaaba40e99001d5bc23e2b7f4b82647028ad383932470668ab0a12\",\"dweb:/ipfs/QmUziav1iLXZA5NjbF41bUWXBG6CfyCgjK6ET52gE4KdLm\"]},\"contracts/src/utils/interfaces/IWETH.sol\":{\"keccak256\":\"0xd274612ab96215dcdb6e3717a63e7a0f76c7facadff93b2b23ed278f6e7b3b00\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://12444da1f06a0fbe6d2d564d73d6d6bc58c09496af3aeea6988c3d3f9ee81c73\",\"dweb:/ipfs/QmTkpQ6cZmRYgvLUS4mqzLvFg5nabgQjpMnVK8JENboiA3\"]},\"contracts/src/utils/libraries/CurrencyTransfer.sol\":{\"keccak256\":\"0xedde3d732d497dd4600867be3540646cf731ac9e36323254233491cd567c1b2b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c30d846735bf111493739fc41a4d8826100108d220728d7e170c0567e5d22bc\",\"dweb:/ipfs/QmcLiTv1RgrEvLxFhYK2AaxwiZ3XXFkdY7XkDQtDGiz7cG\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ApprovalQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BalanceQueryForZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC5643__DurationZero"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC5643__InvalidTokenId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC5643__NotApprovedOrOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC5643__SubscriptionNotRenewable"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Entitlement__InvalidValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Entitlement__NotAllowed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Entitlement__ValueAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Initializable_InInitializingState"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Initializable_NotInInitializingState"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Introspection_AlreadySupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Introspection_NotSupported"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__AlreadyMember"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__InsufficientPayment"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__InvalidAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__InvalidCurrency"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__InvalidFeeRecipient"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__InvalidLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__InvalidPrice"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__LimitReached"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Membership__PriceTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintERC2309QuantityExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintZeroQuantity"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__ZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnerQueryForNonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnershipNotInitializedForExtraData"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Pausable__NotPaused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Pausable__Paused"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuard__ReentrantCall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferCallerNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferToZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "URIQueryForNonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConsecutiveTransfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "version",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "InterfaceAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "InterfaceRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "currency",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MembershipCurrencyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MembershipFeeRecipientUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MembershipLimitUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MembershipPriceUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "expiration",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SubscriptionUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name_",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol_",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "__ERC721A_init"
        },
        {
          "inputs": [
            {
              "internalType": "struct IMembershipBase.MembershipInfo",
              "name": "info",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "membershipPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "membershipLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "membershipCurrency",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "membershipFeeRecipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "townFactory",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "forwarder",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "__Membership_init"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_getMembershipCurrency",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_getMembershipFeeRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_getMembershipLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_getMembershipPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "_getTownFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newCurrency",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setMembershipCurrency"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setMembershipFeeRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newLimit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setMembershipLimit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setMembershipPrice"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancelMembership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "expiresAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembershipCurrency",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembershipFeeRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembershipLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMembershipPrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTownFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "joinTown",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "renewMembership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newCurrency",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMembershipCurrency"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMembershipFeeRecipient"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newLimit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMembershipLimit"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMembershipPrice"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "_getMembershipPrice()": {
            "details": "Makes it virtual to allow other pricing strategies"
          },
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
          },
          "cancelMembership(uint256)": {
            "params": {
              "tokenId": "The token id of the membership"
            }
          },
          "expiresAt(uint256)": {
            "params": {
              "tokenId": "The token id of the membership"
            }
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getMembershipCurrency()": {
            "returns": {
              "_0": "The membership currency"
            }
          },
          "getMembershipFeeRecipient()": {
            "returns": {
              "_0": "The membership fee recipient"
            }
          },
          "getMembershipLimit()": {
            "returns": {
              "_0": "The membership limit"
            }
          },
          "getMembershipPrice()": {
            "returns": {
              "_0": "The membership price"
            }
          },
          "getTownFactory()": {
            "returns": {
              "_0": "The town factory"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
          },
          "isTrustedForwarder(address)": {
            "params": {
              "forwarder": "The address of the Forwarder contract that is being used."
            },
            "returns": {
              "_0": "isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
            }
          },
          "joinTown(address)": {
            "params": {
              "receiver": "The address of the receiver"
            },
            "returns": {
              "tokenId": "The token id of the membership"
            }
          },
          "name()": {
            "details": "Returns the token collection name."
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "renewMembership(address)": {
            "params": {
              "receiver": "The address of the receiver"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "setMembershipCurrency(address)": {
            "params": {
              "newCurrency": "The new membership currency"
            }
          },
          "setMembershipFeeRecipient(address)": {
            "params": {
              "newRecipient": "The new membership fee recipient"
            }
          },
          "setMembershipLimit(uint256)": {
            "params": {
              "newLimit": "The new membership limit"
            }
          },
          "setMembershipPrice(uint256)": {
            "params": {
              "newPrice": "The new membership price"
            }
          },
          "symbol()": {
            "details": "Returns the token collection symbol."
          },
          "tokenURI(uint256)": {
            "details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
          },
          "totalSupply()": {
            "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "cancelMembership(uint256)": {
            "notice": "Cancel a town membership"
          },
          "expiresAt(uint256)": {
            "notice": "Return the expiration date of a membership"
          },
          "getMembershipCurrency()": {
            "notice": "Get the membership currency"
          },
          "getMembershipFeeRecipient()": {
            "notice": "Get the membership fee recipient"
          },
          "getMembershipLimit()": {
            "notice": "Get the membership limit"
          },
          "getMembershipPrice()": {
            "notice": "Get the membership price"
          },
          "getTownFactory()": {
            "notice": "Get the town factory"
          },
          "isTrustedForwarder(address)": {
            "notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."
          },
          "joinTown(address)": {
            "notice": "Join a town"
          },
          "renewMembership(address)": {
            "notice": "Renew a town membership"
          },
          "setMembershipCurrency(address)": {
            "notice": "Set the membership currency"
          },
          "setMembershipFeeRecipient(address)": {
            "notice": "Set the membership fee recipient"
          },
          "setMembershipLimit(uint256)": {
            "notice": "Set the membership limit"
          },
          "setMembershipPrice(uint256)": {
            "notice": "Set the membership price"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC721A/=lib/ERC721A/contracts/",
        "council/=lib/council/contracts/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "operator-filter-registry/=lib/operator-filter-registry/",
        "prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "contracts/src/towns/facets/membership/MembershipFacet.sol": "MembershipFacet"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/diamond/facets/Facet.sol": {
        "keccak256": "0x8213b85d1271bc3c2aa9842979c8ad825066c4c9addc55296d53b6747e5198ba",
        "urls": [
          "bzz-raw://b4e88e869c99e65f0caeb9d03938e78c578a869783b9f20c05f4ba52e7ca493d",
          "dweb:/ipfs/QmRqPmg8BYD1V6Cd8kfihCQ7nn2DAsgRjGW2MJvc7Evnjt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/initializable/Initializable.sol": {
        "keccak256": "0x2a4f3a99b3b3ac6c2c18431cea80b40774c1d8265ddefac21b26da561e069096",
        "urls": [
          "bzz-raw://36dbba730942b1fd345f242051ea7f33e979f70392fbd929d8522c0c9c6dd367",
          "dweb:/ipfs/QmYMvYnvg9zQJpDQX9yMHZ1AET9Vx7UXtDenXAs1JhfPpd"
        ],
        "license": "MIT"
      },
      "contracts/src/diamond/facets/initializable/InitializableStorage.sol": {
        "keccak256": "0x99dfe047dbb8df48a7490f63939420dd990fb5fd3b3a03c42d0cb9c6f4f9eefa",
        "urls": [
          "bzz-raw://5e8f6d4bff257324e4544cacadd9fee42bada459f457fb707fef90bcfe0e895a",
          "dweb:/ipfs/QmYWEam5VcMt5ViNMKRkaxoD84MK2MewS5iWwSES589Vma"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IERC165.sol": {
        "keccak256": "0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816",
        "urls": [
          "bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2",
          "dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IntrospectionBase.sol": {
        "keccak256": "0x503b6ce030f8a760e9a877545b35307d05bbb704b501095795ab2168fe40db59",
        "urls": [
          "bzz-raw://769658fed18c26f67dec9bf4ca18dd595c0343bc8ea21bb3e50595eca3401265",
          "dweb:/ipfs/QmVuqWH5eKqBJbNEtXzybgZ7ahtjTraMew8CMb4TuVUyo6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IntrospectionStorage.sol": {
        "keccak256": "0xd2ec3bbe4d15f9232006b41e0a80a5127006243ee596754af77bd3926045782a",
        "urls": [
          "bzz-raw://8c47e18bfd34a687ce9ec75dc1f1fa5bca088e97e59aad2ac3fdb0989d06d7e6",
          "dweb:/ipfs/QmdktQXV7PKABzh43SZqemdTG25RxMaMsgpXTTUvZUxmfU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/IERC173.sol": {
        "keccak256": "0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe",
        "urls": [
          "bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620",
          "dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol": {
        "keccak256": "0x61304bf241c1d14017416d3cc1742960f6157411d90a1464b8bde23bd322da89",
        "urls": [
          "bzz-raw://ac41ce2830e16be806340ea576a1885db9ecd02cc4f5002bfdeb4dfd4ac0115e",
          "dweb:/ipfs/QmXqE8xZjwkFA2YgfV3eExFVEMqHizVSBTxyNDhM9WVrEZ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol": {
        "keccak256": "0xea4323b3cc8794cb9008bf79180555b0dc248c52e0b030024d6b4ac9fdd6af0b",
        "urls": [
          "bzz-raw://dce6d6130309fce1126b8a4b493cc14666c59d1f7685107f07fb685d2cf31773",
          "dweb:/ipfs/QmVrC5tmJWZYgZ7ruKW6uDU8QDeZgbh3QcZD9aWHrX2Duh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/IPausable.sol": {
        "keccak256": "0x51faf4ca7fa88bc4bf2699bab34692f0a43a316d0b3f95a8d7271935ef243a78",
        "urls": [
          "bzz-raw://e4ff1050ba7ec1bc7de90f562d8ccf7875f4faea0f12ca5101f22619f2dd6de2",
          "dweb:/ipfs/QmeczRzWavYXmirfEbwGg5uLeLdXaENtFAzmxxFsggUHsW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/PausableBase.sol": {
        "keccak256": "0xfdeeba59a9f9b6a31203aa45f9244767b5d790dbcf36c920cc0ec5471505e47f",
        "urls": [
          "bzz-raw://72d6eb74b90e658834c9b9f6a9e391722c3eb3992aef2d4694c1a91473b291a1",
          "dweb:/ipfs/QmXVV8mTt8LmFDhzn3Lm3BMLXNdJTzUMbMrpBjnUaMzm5F"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/PausableStorage.sol": {
        "keccak256": "0x7aaa1baa71b080cf67876cb383b505be55ff2661b4bafc7f01428d509c201296",
        "urls": [
          "bzz-raw://68231325f3a66baf6b96cb34d1432a675ff1d36fc15500cec97de12fc823bcd1",
          "dweb:/ipfs/QmVQb23iSSbYQJqk3EB9vT5fjSp6J8Uj2AwgEaHMSkF6wa"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/recipient/ERC2771RecipientBase.sol": {
        "keccak256": "0x8bc4ba2434fe953b044842bde8221e91986076bc7a2991e2326ad81eafc1c2df",
        "urls": [
          "bzz-raw://7e7abe4d785d77b1ada045857eebe50d94643b211716789a05e618f66af91681",
          "dweb:/ipfs/QmZhDnkSMu9TFWZhufwaG2hb6BH4MQuAXUm2FkT2Wv9xtk"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/recipient/ERC2771RecipientStorage.sol": {
        "keccak256": "0xbc05f921c7f0d4a61bde16443d89633eef695cc86715aeab4d356c5110fba2d3",
        "urls": [
          "bzz-raw://b35bb2b1b879c728be85655549ffe26a4f2b99c328f5b466656ffe323804f150",
          "dweb:/ipfs/QmRFaRnhiS4RgwsSWFQzhcQge4PGBDb9oUchDTZrFPGGbs"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/recipient/IERC2771Recipient.sol": {
        "keccak256": "0x5be5673df93a2162aa89c13802f0f4240fa889b2b8c6e57f372166d27ce779c1",
        "urls": [
          "bzz-raw://3b276d85daa4373d0fc6e0bc6f29650903ac5b4ee00669e886bf828f5e075aaa",
          "dweb:/ipfs/QmRrCEXA3UwKpHEHtgEhsqwfMNXy3dMVhdDUd64fTqfesM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/reentrancy/IReentrancyGuard.sol": {
        "keccak256": "0x507dfdcf6a41cf53878f7bd5ce7e1b0d6e55143eb6a797c7d898677c6ff745dd",
        "urls": [
          "bzz-raw://41eb17240f7ad1c9db7e3545aac935be523a2bce38ac82fe7105d55ac274b2ef",
          "dweb:/ipfs/QmeaSfDMhH4MzMyZLUeiC62S4yZKiUFo5xQnAxwzMKJRaW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/reentrancy/ReentrancyGuard.sol": {
        "keccak256": "0x4d4a1255bdb69707eacf1268582e817b7df99f295fbe5600307324c3b9a98b9a",
        "urls": [
          "bzz-raw://7032a949862a25195309aa00468e3ca98e1cd2debc24b917097bc1305ecb80f6",
          "dweb:/ipfs/QmWqZQtHJtUkx2Evw486iDWnTa6SEJffKyXcPScsV8VJXJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/reentrancy/ReentrancyGuardStorage.sol": {
        "keccak256": "0xe1adcec11c7ed6bfbbacfdf6807cd302e740728a579a89417e7f15a1f0f31916",
        "urls": [
          "bzz-raw://76dbe11f006b449792ed47c699d266ea89706a2babe0e7177a287283aa9f15f1",
          "dweb:/ipfs/Qmd1AZpAYqzejHFBjpenbMwDWHFhYX7MQTNc18PKtDdoNd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC5643/ERC5643Base.sol": {
        "keccak256": "0x7775b07e89b00a68968273263fc1ddd0673be2d14873909ee5776749b6df7dff",
        "urls": [
          "bzz-raw://83b4abf7a61b7225ce897e857f12c12a75dc2fdf14e0fa4360bbbc8a96741ff7",
          "dweb:/ipfs/QmcCyztsCfzAcTaH4LfrsdYSqkztNutqnoTGHoWNiH9s62"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC5643/ERC5643Storage.sol": {
        "keccak256": "0x9c8a69b866bc3491d24758d6cf1c8a4b0514bfefd799867e0915a1c519d6ce10",
        "urls": [
          "bzz-raw://3d96033585fc705c542d8378fcb6f15feb7d94ee27854bb8650ba0f7af675a52",
          "dweb:/ipfs/QmSVwSN7BpysF5e5rTNEksedRWHb7fLGKfbWDbraxMp3e8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC5643/IERC5643.sol": {
        "keccak256": "0xd8bdaad94ddd9d05f4b124e4a616cbc0a9b7787169722252b45116c3b8ec4ed0",
        "urls": [
          "bzz-raw://c03a38ce42b8636aefd8200e231864995ac34a61adca44ff885649efa3ac8272",
          "dweb:/ipfs/QmStu2XFdLd2GT6g9cko45SsyactK9w8zFs9gzh6VGK5GT"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC721A/ERC721A.sol": {
        "keccak256": "0x321ea4cd6a2617d12cdf6bcd84095072de32ecfddfa95df83e58711c4684e325",
        "urls": [
          "bzz-raw://95b09721ac18cc7d34859486008989238dfc9ff9bbafb300ce7a3b2ecfb201a1",
          "dweb:/ipfs/Qmcdzd3hLsafxVkDTYs2japBR5UpmeJ7VYWrNFbSf1kboX"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC721A/ERC721ABase.sol": {
        "keccak256": "0x1e0f21db21117ca705182e671aca5f24d157ca9003268450582d3f49eb2b8ece",
        "urls": [
          "bzz-raw://4348c9408175707af61dd9d5d0eda909066c14eb35e1fc88604b9d58eed0d667",
          "dweb:/ipfs/QmUk514VMTYx1skNfooNs5q53x7SoxonHuEYpsDSwvoyEG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC721A/ERC721AStorage.sol": {
        "keccak256": "0xd6940108c888555331b972b7ea5d4842ddeb7c222feab4565c166c12f85900ba",
        "urls": [
          "bzz-raw://ecbc54202867c7b11e57ca2cbcbe33aa5701ea1593a70bfa82a0ccc358682767",
          "dweb:/ipfs/QmScG3JBtGEoDgxipmP8EbAgZxZF9F8aWaZ9gYBqqBweNH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/token/ERC721A/IERC721A.sol": {
        "keccak256": "0x1473085ffec67f1e059e56baa36be6d3379f7b876147cd62b9854cea8f52cce9",
        "urls": [
          "bzz-raw://6b3bd85f29ed8e16ad5622e40966c92b58baf988880da4a676142957462ded06",
          "dweb:/ipfs/QmSkGb7ByX4DTvNPh6egoSAs71b7w1NHoYfPUPT9LdtJY9"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/entitlements/IEntitlement.sol": {
        "keccak256": "0x3c3733f40dcf373c19ea564ec9cbf49b33e96c27a80012e9be6f8d6d24e76c46",
        "urls": [
          "bzz-raw://ba0686e15bc8bfac66d59f62e59832eaf6d4c1b636080f9b2367386d5dc72ecb",
          "dweb:/ipfs/QmemW17L8TkGWG9RHKWTpjq9WBtYX3dmZsiTtzDmYNNXwE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/Entitled.sol": {
        "keccak256": "0x7aa843d40e4efd1a09e1ec302af382911989aba7999e1a0ec2619293b0598710",
        "urls": [
          "bzz-raw://75d60caab15dacfc58082c74dff1abfbb68b2415d30a88308772123ff16c5369",
          "dweb:/ipfs/QmdAx6MjAwMWyfK8rEFWCRohff49ELCND6vxmvU8hwZzNU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/Permissions.sol": {
        "keccak256": "0x71c581d53e94675ff22111bbdcb54d9238cb2476c1c87d22c1c8709643ca20c3",
        "urls": [
          "bzz-raw://33571102d8b2339eea4e68cdb4461e6c46617fa2597bc7fc9d3bd085ed3b8939",
          "dweb:/ipfs/QmPsppLQ4sXNwh9QC3hPw1wSdWDXKHsTbeqVPkz97F7KMd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsManagerStorage.sol": {
        "keccak256": "0x2fa49a3dea8314e57341b402894a053fe4c3e4f6f682d3f6cfae79e999919340",
        "urls": [
          "bzz-raw://ca673210755140e127ec9ed3c7716a3c4fc48d3c4cf66d6ccfca5144e2c9933d",
          "dweb:/ipfs/QmQajUVgwkg8dkeAb8Ext2dABL3PRPNsiDCxd7XXXuUdVD"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/membership/IMembership.sol": {
        "keccak256": "0x3850a57d0605852c08b500c4ac18a097ac81295b3ba4c3a65061ba31454dc963",
        "urls": [
          "bzz-raw://f2f8ee5df52e748adb0f0ecbb6b49eef1616deb07c271d8fea2c991d225f6d26",
          "dweb:/ipfs/QmcbL9Wf8R9YxzFj8LZZUJq3D2XtndpTwaqLBsZqM9NBtz"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/membership/MembershipBase.sol": {
        "keccak256": "0x0a44e7e067256359ad28633f0b0c425e6e41656da5698900f9e80687c88fd6cc",
        "urls": [
          "bzz-raw://8df997b8c4e56cce846dcd6b13543462e5436ec4bdcdb6af320569424887be96",
          "dweb:/ipfs/QmaHbT7LuAPWm3Zmiynv4ocz6a5c5YechFkoAGaXFKX6Ts"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/membership/MembershipFacet.sol": {
        "keccak256": "0x396c1896171b6c8a3ddbbec6b422a34e2884e7c59a92bf595e6d0c238906f193",
        "urls": [
          "bzz-raw://733e89b8803883e3fe971dff781ba6047471bd41365f31d4004b2a664a66ff69",
          "dweb:/ipfs/QmbUCGFNrgpLFsTwcj6QPDbi48hN5WPwTfGfKXMA2yk1iL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/membership/MembershipStorage.sol": {
        "keccak256": "0xf61c275fd438990e41184171964bf5438ff347a1e654162b2c12bfe6f4973833",
        "urls": [
          "bzz-raw://8ed7a0fc30e464a98a8c9876855066ecad26147bb055cee6e33a7f6a2ecec691",
          "dweb:/ipfs/QmSU45tU2HrDxbqY4Zj4JqQQnao3KS4yf89XxeqbmeDF64"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/platform/requirements/IPlatformRequirements.sol": {
        "keccak256": "0x2b9abe044df8fad7a5e4427fbcee87b0bdbbb714bc7d9282e94fa4b0b0f5d514",
        "urls": [
          "bzz-raw://ee228bbd5cbaaba40e99001d5bc23e2b7f4b82647028ad383932470668ab0a12",
          "dweb:/ipfs/QmUziav1iLXZA5NjbF41bUWXBG6CfyCgjK6ET52gE4KdLm"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/utils/interfaces/IWETH.sol": {
        "keccak256": "0xd274612ab96215dcdb6e3717a63e7a0f76c7facadff93b2b23ed278f6e7b3b00",
        "urls": [
          "bzz-raw://12444da1f06a0fbe6d2d564d73d6d6bc58c09496af3aeea6988c3d3f9ee81c73",
          "dweb:/ipfs/QmTkpQ6cZmRYgvLUS4mqzLvFg5nabgQjpMnVK8JENboiA3"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/utils/libraries/CurrencyTransfer.sol": {
        "keccak256": "0xedde3d732d497dd4600867be3540646cf731ac9e36323254233491cd567c1b2b",
        "urls": [
          "bzz-raw://7c30d846735bf111493739fc41a4d8826100108d220728d7e170c0567e5d22bc",
          "dweb:/ipfs/QmcLiTv1RgrEvLxFhYK2AaxwiZ3XXFkdY7XkDQtDGiz7cG"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/towns/facets/membership/MembershipFacet.sol",
    "id": 35213,
    "exportedSymbols": {
      "ERC2771RecipientBase": [
        9451
      ],
      "ERC5643Base": [
        9906
      ],
      "ERC721A": [
        10457
      ],
      "Entitled": [
        30491
      ],
      "IMembership": [
        34279
      ],
      "MembershipBase": [
        34761
      ],
      "MembershipFacet": [
        35212
      ],
      "Permissions": [
        30503
      ],
      "ReentrancyGuard": [
        9623
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7035:183",
    "nodes": [
      {
        "id": 34763,
        "nodeType": "PragmaDirective",
        "src": "39:24:183",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 34765,
        "nodeType": "ImportDirective",
        "src": "79:46:183",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/membership/IMembership.sol",
        "file": "./IMembership.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35213,
        "sourceUnit": 34280,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34764,
              "name": "IMembership",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34279,
              "src": "87:11:183",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34767,
        "nodeType": "ImportDirective",
        "src": "140:71:183",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/Permissions.sol",
        "file": "contracts/src/towns/facets/Permissions.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35213,
        "sourceUnit": 30504,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34766,
              "name": "Permissions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30503,
              "src": "148:11:183",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34769,
        "nodeType": "ImportDirective",
        "src": "226:52:183",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/membership/MembershipBase.sol",
        "file": "./MembershipBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35213,
        "sourceUnit": 34762,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34768,
              "name": "MembershipBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34761,
              "src": "234:14:183",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34771,
        "nodeType": "ImportDirective",
        "src": "279:79:183",
        "nodes": [],
        "absolutePath": "contracts/src/diamond/facets/token/ERC721A/ERC721A.sol",
        "file": "contracts/src/diamond/facets/token/ERC721A/ERC721A.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35213,
        "sourceUnit": 10458,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34770,
              "name": "ERC721A",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10457,
              "src": "287:7:183",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34773,
        "nodeType": "ImportDirective",
        "src": "359:87:183",
        "nodes": [],
        "absolutePath": "contracts/src/diamond/facets/token/ERC5643/ERC5643Base.sol",
        "file": "contracts/src/diamond/facets/token/ERC5643/ERC5643Base.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35213,
        "sourceUnit": 9907,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34772,
              "name": "ERC5643Base",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9906,
              "src": "367:11:183",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34775,
        "nodeType": "ImportDirective",
        "src": "447:101:183",
        "nodes": [],
        "absolutePath": "contracts/src/diamond/facets/recipient/ERC2771RecipientBase.sol",
        "file": "contracts/src/diamond/facets/recipient/ERC2771RecipientBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35213,
        "sourceUnit": 9452,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34774,
              "name": "ERC2771RecipientBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9451,
              "src": "455:20:183",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34777,
        "nodeType": "ImportDirective",
        "src": "549:92:183",
        "nodes": [],
        "absolutePath": "contracts/src/diamond/facets/reentrancy/ReentrancyGuard.sol",
        "file": "contracts/src/diamond/facets/reentrancy/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35213,
        "sourceUnit": 9624,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34776,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9623,
              "src": "557:15:183",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34779,
        "nodeType": "ImportDirective",
        "src": "642:65:183",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/Entitled.sol",
        "file": "contracts/src/towns/facets/Entitled.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35213,
        "sourceUnit": 30492,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34778,
              "name": "Entitled",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30491,
              "src": "650:8:183",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35212,
        "nodeType": "ContractDefinition",
        "src": "709:6364:183",
        "nodes": [
          {
            "id": 34827,
            "nodeType": "FunctionDefinition",
            "src": "854:376:183",
            "nodes": [],
            "body": {
              "id": 34826,
              "nodeType": "Block",
              "src": "943:287:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34802,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34796,
                          "src": "978:4:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$34159_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 34803,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "983:15:183",
                        "memberName": "membershipPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34144,
                        "src": "978:20:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 34804,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34796,
                          "src": "1006:4:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$34159_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 34805,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1011:15:183",
                        "memberName": "membershipLimit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34146,
                        "src": "1006:20:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 34806,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34796,
                          "src": "1034:4:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$34159_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 34807,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1039:18:183",
                        "memberName": "membershipCurrency",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34148,
                        "src": "1034:23:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 34808,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34796,
                          "src": "1065:4:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$34159_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 34809,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1070:22:183",
                        "memberName": "membershipFeeRecipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34150,
                        "src": "1065:27:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 34810,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34796,
                          "src": "1100:4:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$34159_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 34811,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1105:11:183",
                        "memberName": "townFactory",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34152,
                        "src": "1100:16:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34801,
                      "name": "__MembershipBase_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34344,
                      "src": "949:21:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address,address,address)"
                      }
                    },
                    "id": 34812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "949:173:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34813,
                  "nodeType": "ExpressionStatement",
                  "src": "949:173:183"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34815,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34796,
                          "src": "1156:4:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$34159_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 34816,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1161:9:183",
                        "memberName": "forwarder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34154,
                        "src": "1156:14:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34814,
                      "name": "__ERC2771RecipientBase_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9361,
                      "src": "1128:27:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:43:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34818,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:43:183"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34820,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34796,
                          "src": "1202:4:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$34159_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 34821,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1207:4:183",
                        "memberName": "name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34156,
                        "src": "1202:9:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 34822,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34796,
                          "src": "1213:4:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MembershipInfo_$34159_memory_ptr",
                            "typeString": "struct IMembershipBase.MembershipInfo memory"
                          }
                        },
                        "id": 34823,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1218:6:183",
                        "memberName": "symbol",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34158,
                        "src": "1213:11:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 34819,
                      "name": "__ERC721A_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10045,
                      "src": "1177:24:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 34824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:48:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34825,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:48:183"
                }
              ]
            },
            "functionSelector": "6e43d05d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34799,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34798,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "926:16:183"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 7847,
                  "src": "926:16:183"
                },
                "nodeType": "ModifierInvocation",
                "src": "926:16:183"
              }
            ],
            "name": "__Membership_init",
            "nameLocation": "863:17:183",
            "parameters": {
              "id": 34797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34796,
                  "mutability": "mutable",
                  "name": "info",
                  "nameLocation": "908:4:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 34827,
                  "src": "886:26:183",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MembershipInfo_$34159_memory_ptr",
                    "typeString": "struct IMembershipBase.MembershipInfo"
                  },
                  "typeName": {
                    "id": 34795,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34794,
                      "name": "MembershipInfo",
                      "nameLocations": [
                        "886:14:183"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34159,
                      "src": "886:14:183"
                    },
                    "referencedDeclaration": 34159,
                    "src": "886:14:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MembershipInfo_$34159_storage_ptr",
                      "typeString": "struct IMembershipBase.MembershipInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "880:36:183"
            },
            "returnParameters": {
              "id": 34800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "943:0:183"
            },
            "scope": 35212,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34887,
            "nodeType": "FunctionDefinition",
            "src": "1438:710:183",
            "nodes": [],
            "body": {
              "id": 34886,
              "nodeType": "Block",
              "src": "1538:610:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 34838,
                          "name": "Permissions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30503,
                          "src": "1629:11:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Permissions_$30503_$",
                            "typeString": "type(library Permissions)"
                          }
                        },
                        "id": 34839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1641:8:183",
                        "memberName": "JoinTown",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30502,
                        "src": "1629:20:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 34837,
                      "name": "_validatePermission",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30443,
                        30462
                      ],
                      "referencedDeclaration": 30443,
                      "src": "1609:19:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 34840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1609:41:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34841,
                  "nodeType": "ExpressionStatement",
                  "src": "1609:41:183"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 34843,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34830,
                          "src": "1723:8:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 34842,
                        "name": "_balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10615,
                        "src": "1712:10:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 34844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1712:20:183",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 34845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1735:1:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1712:24:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34850,
                  "nodeType": "IfStatement",
                  "src": "1708:64:183",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34847,
                        "name": "Membership__AlreadyMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34171,
                        "src": "1745:25:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1745:27:183",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34849,
                    "nodeType": "RevertStatement",
                    "src": "1738:34:183"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 34860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 34851,
                          "name": "_getMembershipPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34608,
                          "src": "1869:19:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 34852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1869:21:183",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 34853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1894:1:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1869:26:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 34855,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10588,
                          "src": "1899:12:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 34856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1899:14:183",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 34857,
                          "name": "_getMembershipLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34679,
                          "src": "1917:19:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 34858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1917:21:183",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1899:39:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1869:69:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34865,
                  "nodeType": "IfStatement",
                  "src": "1865:123:183",
                  "trueBody": {
                    "id": 34864,
                    "nodeType": "Block",
                    "src": "1940:48:183",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 34861,
                            "name": "Membership__LimitReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34177,
                            "src": "1955:24:183",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 34862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1955:26:183",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34863,
                        "nodeType": "RevertStatement",
                        "src": "1948:33:183"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 34869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34866,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34835,
                      "src": "1994:7:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34867,
                        "name": "_nextTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10636,
                        "src": "2004:12:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 34868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2004:14:183",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1994:24:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34870,
                  "nodeType": "ExpressionStatement",
                  "src": "1994:24:183"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34872,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34830,
                        "src": "2047:8:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34871,
                      "name": "_collectMembershipFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34526,
                      "src": "2025:21:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2025:31:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34874,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:31:183"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34876,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34830,
                        "src": "2072:8:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 34877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2082:1:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 34875,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11446,
                        11461
                      ],
                      "referencedDeclaration": 11461,
                      "src": "2062:9:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 34878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2062:22:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34879,
                  "nodeType": "ExpressionStatement",
                  "src": "2062:22:183"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34881,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34835,
                        "src": "2109:7:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 34882,
                          "name": "_getMembershipDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34541,
                          "src": "2118:22:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
                            "typeString": "function () view returns (uint64)"
                          }
                        },
                        "id": 34883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2118:24:183",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 34880,
                      "name": "_renewSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9861,
                      "src": "2090:18:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint64)"
                      }
                    },
                    "id": 34884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2090:53:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34885,
                  "nodeType": "ExpressionStatement",
                  "src": "2090:53:183"
                }
              ]
            },
            "baseFunctions": [
              34204
            ],
            "documentation": {
              "id": 34828,
              "nodeType": "StructuredDocumentation",
              "src": "1408:27:183",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "16a344b4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34833,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34832,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1499:12:183"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9596,
                  "src": "1499:12:183"
                },
                "nodeType": "ModifierInvocation",
                "src": "1499:12:183"
              }
            ],
            "name": "joinTown",
            "nameLocation": "1447:8:183",
            "parameters": {
              "id": 34831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34830,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1469:8:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 34887,
                  "src": "1461:16:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:26:183"
            },
            "returnParameters": {
              "id": 34836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34835,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1529:7:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 34887,
                  "src": "1521:15:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1521:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1520:17:183"
            },
            "scope": 35212,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34930,
            "nodeType": "FunctionDefinition",
            "src": "2182:391:183",
            "nodes": [],
            "body": {
              "id": 34929,
              "nodeType": "Block",
              "src": "2255:318:183",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 34900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34895,
                      "name": "receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34890,
                      "src": "2265:8:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 34898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2285:1:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 34897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2277:7:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 34896,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2277:7:183",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2277:10:183",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2265:22:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34904,
                  "nodeType": "IfStatement",
                  "src": "2261:63:183",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34901,
                        "name": "Membership__InvalidAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34161,
                        "src": "2296:26:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2296:28:183",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34903,
                    "nodeType": "RevertStatement",
                    "src": "2289:35:183"
                  }
                },
                {
                  "assignments": [
                    34906
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34906,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "2339:7:183",
                      "nodeType": "VariableDeclaration",
                      "scope": 34929,
                      "src": "2331:15:183",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34905,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2331:7:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34910,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34908,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34890,
                        "src": "2373:8:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34907,
                      "name": "_getTokenIdByMembership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34407,
                      "src": "2349:23:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 34909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2349:33:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2331:51:183"
                },
                {
                  "condition": {
                    "id": 34914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2393:28:183",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 34912,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34906,
                          "src": "2413:7:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 34911,
                        "name": "_isApprovedOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35103,
                        "src": "2394:18:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 34913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2394:27:183",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34918,
                  "nodeType": "IfStatement",
                  "src": "2389:82:183",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34915,
                        "name": "ApprovalCallerNotOwnerNorApproved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11976,
                        "src": "2436:33:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2436:35:183",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34917,
                    "nodeType": "RevertStatement",
                    "src": "2429:42:183"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34920,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34890,
                        "src": "2500:8:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34919,
                      "name": "_collectMembershipFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34526,
                      "src": "2478:21:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2478:31:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34922,
                  "nodeType": "ExpressionStatement",
                  "src": "2478:31:183"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34924,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34906,
                        "src": "2534:7:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 34925,
                          "name": "_getMembershipDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34541,
                          "src": "2543:22:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
                            "typeString": "function () view returns (uint64)"
                          }
                        },
                        "id": 34926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2543:24:183",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 34923,
                      "name": "_renewSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9861,
                      "src": "2515:18:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,uint64)"
                      }
                    },
                    "id": 34927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2515:53:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34928,
                  "nodeType": "ExpressionStatement",
                  "src": "2515:53:183"
                }
              ]
            },
            "baseFunctions": [
              34210
            ],
            "documentation": {
              "id": 34888,
              "nodeType": "StructuredDocumentation",
              "src": "2152:27:183",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "61a9c7df",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34893,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34892,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2242:12:183"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9596,
                  "src": "2242:12:183"
                },
                "nodeType": "ModifierInvocation",
                "src": "2242:12:183"
              }
            ],
            "name": "renewMembership",
            "nameLocation": "2191:15:183",
            "parameters": {
              "id": 34891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34890,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2215:8:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 34930,
                  "src": "2207:16:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2206:18:183"
            },
            "returnParameters": {
              "id": 34894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2255:0:183"
            },
            "scope": 35212,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34955,
            "nodeType": "FunctionDefinition",
            "src": "2607:213:183",
            "nodes": [],
            "body": {
              "id": 34954,
              "nodeType": "Block",
              "src": "2672:148:183",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 34941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2682:28:183",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 34939,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34933,
                          "src": "2702:7:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 34938,
                        "name": "_isApprovedOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35103,
                        "src": "2683:18:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) view returns (bool)"
                        }
                      },
                      "id": 34940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2683:27:183",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34945,
                  "nodeType": "IfStatement",
                  "src": "2678:82:183",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34942,
                        "name": "ApprovalCallerNotOwnerNorApproved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11976,
                        "src": "2725:33:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 34943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2725:35:183",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 34944,
                    "nodeType": "RevertStatement",
                    "src": "2718:42:183"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34947,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34933,
                        "src": "2773:7:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34946,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11602,
                        11776
                      ],
                      "referencedDeclaration": 11602,
                      "src": "2767:5:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2767:14:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34949,
                  "nodeType": "ExpressionStatement",
                  "src": "2767:14:183"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34951,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34933,
                        "src": "2807:7:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34950,
                      "name": "_cancelSubscription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9880,
                      "src": "2787:19:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2787:28:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34953,
                  "nodeType": "ExpressionStatement",
                  "src": "2787:28:183"
                }
              ]
            },
            "baseFunctions": [
              34216
            ],
            "documentation": {
              "id": 34931,
              "nodeType": "StructuredDocumentation",
              "src": "2577:27:183",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "89def320",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34936,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34935,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2659:12:183"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9596,
                  "src": "2659:12:183"
                },
                "nodeType": "ModifierInvocation",
                "src": "2659:12:183"
              }
            ],
            "name": "cancelMembership",
            "nameLocation": "2616:16:183",
            "parameters": {
              "id": 34934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34933,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2641:7:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 34955,
                  "src": "2633:15:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2633:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2632:17:183"
            },
            "returnParameters": {
              "id": 34937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2672:0:183"
            },
            "scope": 35212,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34968,
            "nodeType": "FunctionDefinition",
            "src": "2854:105:183",
            "nodes": [],
            "body": {
              "id": 34967,
              "nodeType": "Block",
              "src": "2922:37:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34964,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34958,
                        "src": "2946:7:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34963,
                      "name": "_expiresAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9895,
                      "src": "2935:10:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint64_$",
                        "typeString": "function (uint256) view returns (uint64)"
                      }
                    },
                    "id": 34965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2935:19:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 34962,
                  "id": 34966,
                  "nodeType": "Return",
                  "src": "2928:26:183"
                }
              ]
            },
            "baseFunctions": [
              34224
            ],
            "documentation": {
              "id": 34956,
              "nodeType": "StructuredDocumentation",
              "src": "2824:27:183",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "17c95709",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "expiresAt",
            "nameLocation": "2863:9:183",
            "parameters": {
              "id": 34959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34958,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2881:7:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 34968,
                  "src": "2873:15:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2872:17:183"
            },
            "returnParameters": {
              "id": 34962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34961,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34968,
                  "src": "2913:7:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2913:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2912:9:183"
            },
            "scope": 35212,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34981,
            "nodeType": "FunctionDefinition",
            "src": "3167:105:183",
            "nodes": [],
            "body": {
              "id": 34980,
              "nodeType": "Block",
              "src": "3232:40:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34977,
                        "name": "newPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34971,
                        "src": "3258:8:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34976,
                      "name": "_setMembershipPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34596,
                      "src": "3238:19:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 34978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3238:29:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34979,
                  "nodeType": "ExpressionStatement",
                  "src": "3238:29:183"
                }
              ]
            },
            "baseFunctions": [
              34230
            ],
            "documentation": {
              "id": 34969,
              "nodeType": "StructuredDocumentation",
              "src": "3137:27:183",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "69d5f38a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34974,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34973,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3222:9:183"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8933,
                  "src": "3222:9:183"
                },
                "nodeType": "ModifierInvocation",
                "src": "3222:9:183"
              }
            ],
            "name": "setMembershipPrice",
            "nameLocation": "3176:18:183",
            "parameters": {
              "id": 34972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34971,
                  "mutability": "mutable",
                  "name": "newPrice",
                  "nameLocation": "3203:8:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 34981,
                  "src": "3195:16:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3195:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3194:18:183"
            },
            "returnParameters": {
              "id": 34975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3232:0:183"
            },
            "scope": 35212,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34991,
            "nodeType": "FunctionDefinition",
            "src": "3306:101:183",
            "nodes": [],
            "body": {
              "id": 34990,
              "nodeType": "Block",
              "src": "3368:39:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 34987,
                      "name": "_getMembershipPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34608,
                      "src": "3381:19:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 34988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3381:21:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34986,
                  "id": 34989,
                  "nodeType": "Return",
                  "src": "3374:28:183"
                }
              ]
            },
            "baseFunctions": [
              34236
            ],
            "documentation": {
              "id": 34982,
              "nodeType": "StructuredDocumentation",
              "src": "3276:27:183",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "1278076a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMembershipPrice",
            "nameLocation": "3315:18:183",
            "parameters": {
              "id": 34983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3333:2:183"
            },
            "returnParameters": {
              "id": 34986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34985,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34991,
                  "src": "3359:7:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3359:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3358:9:183"
            },
            "scope": 35212,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35004,
            "nodeType": "FunctionDefinition",
            "src": "3614:105:183",
            "nodes": [],
            "body": {
              "id": 35003,
              "nodeType": "Block",
              "src": "3679:40:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35000,
                        "name": "newLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34994,
                        "src": "3705:8:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34999,
                      "name": "_setMembershipLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34647,
                      "src": "3685:19:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 35001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3685:29:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35002,
                  "nodeType": "ExpressionStatement",
                  "src": "3685:29:183"
                }
              ]
            },
            "baseFunctions": [
              34242
            ],
            "documentation": {
              "id": 34992,
              "nodeType": "StructuredDocumentation",
              "src": "3584:27:183",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "97fb7c1e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34997,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34996,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3669:9:183"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8933,
                  "src": "3669:9:183"
                },
                "nodeType": "ModifierInvocation",
                "src": "3669:9:183"
              }
            ],
            "name": "setMembershipLimit",
            "nameLocation": "3623:18:183",
            "parameters": {
              "id": 34995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34994,
                  "mutability": "mutable",
                  "name": "newLimit",
                  "nameLocation": "3650:8:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 35004,
                  "src": "3642:16:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3642:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3641:18:183"
            },
            "returnParameters": {
              "id": 34998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3679:0:183"
            },
            "scope": 35212,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35014,
            "nodeType": "FunctionDefinition",
            "src": "3753:101:183",
            "nodes": [],
            "body": {
              "id": 35013,
              "nodeType": "Block",
              "src": "3815:39:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35010,
                      "name": "_getMembershipLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34679,
                      "src": "3828:19:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 35011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3828:21:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35009,
                  "id": 35012,
                  "nodeType": "Return",
                  "src": "3821:28:183"
                }
              ]
            },
            "baseFunctions": [
              34248
            ],
            "documentation": {
              "id": 35005,
              "nodeType": "StructuredDocumentation",
              "src": "3723:27:183",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "95d600c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMembershipLimit",
            "nameLocation": "3762:18:183",
            "parameters": {
              "id": 35006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3780:2:183"
            },
            "returnParameters": {
              "id": 35009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35008,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35014,
                  "src": "3806:7:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3806:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3805:9:183"
            },
            "scope": 35212,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35027,
            "nodeType": "FunctionDefinition",
            "src": "4063:117:183",
            "nodes": [],
            "body": {
              "id": 35026,
              "nodeType": "Block",
              "src": "4134:46:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35023,
                        "name": "newCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35017,
                        "src": "4163:11:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35022,
                      "name": "_setMembershipCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34703,
                      "src": "4140:22:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 35024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4140:35:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35025,
                  "nodeType": "ExpressionStatement",
                  "src": "4140:35:183"
                }
              ]
            },
            "baseFunctions": [
              34254
            ],
            "documentation": {
              "id": 35015,
              "nodeType": "StructuredDocumentation",
              "src": "4033:27:183",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "7d0567c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35020,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35019,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4124:9:183"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8933,
                  "src": "4124:9:183"
                },
                "nodeType": "ModifierInvocation",
                "src": "4124:9:183"
              }
            ],
            "name": "setMembershipCurrency",
            "nameLocation": "4072:21:183",
            "parameters": {
              "id": 35018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35017,
                  "mutability": "mutable",
                  "name": "newCurrency",
                  "nameLocation": "4102:11:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 35027,
                  "src": "4094:19:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35016,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4094:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4093:21:183"
            },
            "returnParameters": {
              "id": 35021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4134:0:183"
            },
            "scope": 35212,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35037,
            "nodeType": "FunctionDefinition",
            "src": "4214:107:183",
            "nodes": [],
            "body": {
              "id": 35036,
              "nodeType": "Block",
              "src": "4279:42:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35033,
                      "name": "_getMembershipCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34714,
                      "src": "4292:22:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 35034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4292:24:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 35032,
                  "id": 35035,
                  "nodeType": "Return",
                  "src": "4285:31:183"
                }
              ]
            },
            "baseFunctions": [
              34260
            ],
            "documentation": {
              "id": 35028,
              "nodeType": "StructuredDocumentation",
              "src": "4184:27:183",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "657e45e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMembershipCurrency",
            "nameLocation": "4223:21:183",
            "parameters": {
              "id": 35029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4244:2:183"
            },
            "returnParameters": {
              "id": 35032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35037,
                  "src": "4270:7:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4270:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4269:9:183"
            },
            "scope": 35212,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35050,
            "nodeType": "FunctionDefinition",
            "src": "4531:127:183",
            "nodes": [],
            "body": {
              "id": 35049,
              "nodeType": "Block",
              "src": "4607:51:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35046,
                        "name": "newRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35040,
                        "src": "4640:12:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35045,
                      "name": "_setMembershipFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34738,
                      "src": "4613:26:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 35047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4613:40:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35048,
                  "nodeType": "ExpressionStatement",
                  "src": "4613:40:183"
                }
              ]
            },
            "baseFunctions": [
              34266
            ],
            "documentation": {
              "id": 35038,
              "nodeType": "StructuredDocumentation",
              "src": "4501:27:183",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "18e5da65",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 35042,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4597:9:183"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8933,
                  "src": "4597:9:183"
                },
                "nodeType": "ModifierInvocation",
                "src": "4597:9:183"
              }
            ],
            "name": "setMembershipFeeRecipient",
            "nameLocation": "4540:25:183",
            "parameters": {
              "id": 35041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35040,
                  "mutability": "mutable",
                  "name": "newRecipient",
                  "nameLocation": "4574:12:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 35050,
                  "src": "4566:20:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4566:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4565:22:183"
            },
            "returnParameters": {
              "id": 35044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4607:0:183"
            },
            "scope": 35212,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35060,
            "nodeType": "FunctionDefinition",
            "src": "4692:115:183",
            "nodes": [],
            "body": {
              "id": 35059,
              "nodeType": "Block",
              "src": "4761:46:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35056,
                      "name": "_getMembershipFeeRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34749,
                      "src": "4774:26:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 35057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4774:28:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 35055,
                  "id": 35058,
                  "nodeType": "Return",
                  "src": "4767:35:183"
                }
              ]
            },
            "baseFunctions": [
              34272
            ],
            "documentation": {
              "id": 35051,
              "nodeType": "StructuredDocumentation",
              "src": "4662:27:183",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "bf3bc878",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMembershipFeeRecipient",
            "nameLocation": "4701:25:183",
            "parameters": {
              "id": 35052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4726:2:183"
            },
            "returnParameters": {
              "id": 35055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35054,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35060,
                  "src": "4752:7:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4752:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4751:9:183"
            },
            "scope": 35212,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35070,
            "nodeType": "FunctionDefinition",
            "src": "5015:93:183",
            "nodes": [],
            "body": {
              "id": 35069,
              "nodeType": "Block",
              "src": "5073:35:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35066,
                      "name": "_getTownFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34760,
                      "src": "5086:15:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 35067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5086:17:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 35065,
                  "id": 35068,
                  "nodeType": "Return",
                  "src": "5079:24:183"
                }
              ]
            },
            "baseFunctions": [
              34278
            ],
            "documentation": {
              "id": 35061,
              "nodeType": "StructuredDocumentation",
              "src": "4985:27:183",
              "text": "@inheritdoc IMembership"
            },
            "functionSelector": "6340d096",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTownFactory",
            "nameLocation": "5024:14:183",
            "parameters": {
              "id": 35062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5038:2:183"
            },
            "returnParameters": {
              "id": 35065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35064,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35070,
                  "src": "5064:7:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5064:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5063:9:183"
            },
            "scope": 35212,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35103,
            "nodeType": "FunctionDefinition",
            "src": "5286:256:183",
            "nodes": [],
            "body": {
              "id": 35102,
              "nodeType": "Block",
              "src": "5360:182:183",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    35078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 35078,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "5374:5:183",
                      "nodeType": "VariableDeclaration",
                      "scope": 35102,
                      "src": "5366:13:183",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 35077,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5366:7:183",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 35082,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 35080,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35072,
                        "src": "5391:7:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 35079,
                      "name": "_ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11479,
                      "src": "5382:8:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 35081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5382:17:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5366:33:183"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 35100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 35093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 35086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 35083,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9400,
                                "src": "5420:10:183",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 35084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5420:12:183",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 35085,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35078,
                              "src": "5436:5:183",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "5420:21:183",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 35087,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5419:23:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 35089,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35078,
                            "src": "5470:5:183",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 35090,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9400,
                              "src": "5477:10:183",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 35091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5477:12:183",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 35088,
                          "name": "_isApprovedForAll",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11499,
                          "src": "5452:17:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 35092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5452:38:183",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5419:71:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 35099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 35095,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35072,
                            "src": "5513:7:183",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 35094,
                          "name": "_getApproved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11523,
                          "src": "5500:12:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 35096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5500:21:183",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 35097,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9400,
                          "src": "5525:10:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 35098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5525:12:183",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5500:37:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5419:118:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 35076,
                  "id": 35101,
                  "nodeType": "Return",
                  "src": "5406:131:183"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "5295:18:183",
            "parameters": {
              "id": 35073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35072,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5322:7:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 35103,
                  "src": "5314:15:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5314:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5313:17:183"
            },
            "returnParameters": {
              "id": 35076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35075,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35103,
                  "src": "5354:4:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35074,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5354:4:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5353:6:183"
            },
            "scope": 35212,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35123,
            "nodeType": "FunctionDefinition",
            "src": "5908:159:183",
            "nodes": [],
            "body": {
              "id": 35122,
              "nodeType": "Block",
              "src": "5985:82:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 35113,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35106,
                          "src": "6009:7:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 35112,
                        "name": "_expiresAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9895,
                        "src": "5998:10:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint64_$",
                          "typeString": "function (uint256) view returns (uint64)"
                        }
                      },
                      "id": 35114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5998:19:183",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 35119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 35115,
                          "name": "_getMembershipDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34541,
                          "src": "6020:22:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint64_$",
                            "typeString": "function () view returns (uint64)"
                          }
                        },
                        "id": 35116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6020:24:183",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "expression": {
                          "id": 35117,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6047:5:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 35118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6053:9:183",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6047:15:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6020:42:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5998:64:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 35111,
                  "id": 35121,
                  "nodeType": "Return",
                  "src": "5991:71:183"
                }
              ]
            },
            "baseFunctions": [
              9905
            ],
            "documentation": {
              "id": 35104,
              "nodeType": "StructuredDocumentation",
              "src": "5745:160:183",
              "text": "@dev only renewable if the expiration of the current membership is less than the default duration + current time. To prevent people from renewing too early."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isRenewable",
            "nameLocation": "5917:12:183",
            "overrides": {
              "id": 35108,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5961:8:183"
            },
            "parameters": {
              "id": 35107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35106,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5938:7:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 35123,
                  "src": "5930:15:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5930:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5929:17:183"
            },
            "returnParameters": {
              "id": 35111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35110,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35123,
                  "src": "5979:4:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35109,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5979:4:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5978:6:183"
            },
            "scope": 35212,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35139,
            "nodeType": "FunctionDefinition",
            "src": "6071:80:183",
            "nodes": [],
            "body": {
              "id": 35138,
              "nodeType": "Block",
              "src": "6118:33:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 35132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 35130,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35125,
                        "src": "6131:1:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 35131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6136:1:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6131:6:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 35135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "-",
                      "prefix": true,
                      "src": "6144:2:183",
                      "subExpression": {
                        "id": 35134,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35125,
                        "src": "6145:1:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "id": 35136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6131:15:183",
                    "trueExpression": {
                      "id": 35133,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35125,
                      "src": "6140:1:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 35129,
                  "id": 35137,
                  "nodeType": "Return",
                  "src": "6124:22:183"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abs",
            "nameLocation": "6080:3:183",
            "parameters": {
              "id": 35126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35125,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "6088:1:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 35139,
                  "src": "6084:5:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 35124,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "6084:3:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6083:7:183"
            },
            "returnParameters": {
              "id": 35129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35128,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35139,
                  "src": "6113:3:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 35127,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "6113:3:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6112:5:183"
            },
            "scope": 35212,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 35164,
            "nodeType": "FunctionDefinition",
            "src": "6245:270:183",
            "nodes": [],
            "body": {
              "id": 35163,
              "nodeType": "Block",
              "src": "6320:195:183",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 35149,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35141,
                              "src": "6425:7:183",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 35148,
                            "name": "_getTokenIdByMembership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34407,
                            "src": "6401:23:183",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 35150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6401:32:183",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 35147,
                        "name": "_expiresAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9895,
                        "src": "6390:10:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint64_$",
                          "typeString": "function (uint256) view returns (uint64)"
                        }
                      },
                      "id": 35151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6390:44:183",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 35152,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6438:5:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 35153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6444:9:183",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6438:15:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6390:63:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35158,
                  "nodeType": "IfStatement",
                  "src": "6386:92:183",
                  "trueBody": {
                    "id": 35157,
                    "nodeType": "Block",
                    "src": "6455:23:183",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 35155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6470:1:183",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 35146,
                        "id": 35156,
                        "nodeType": "Return",
                        "src": "6463:8:183"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35160,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35141,
                        "src": "6502:7:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35159,
                      "name": "_balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10615,
                      "src": "6491:10:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 35161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6491:19:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35146,
                  "id": 35162,
                  "nodeType": "Return",
                  "src": "6484:26:183"
                }
              ]
            },
            "baseFunctions": [
              10068
            ],
            "functionSelector": "70a08231",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "6254:9:183",
            "overrides": {
              "id": 35143,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6293:8:183"
            },
            "parameters": {
              "id": 35142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35141,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6272:7:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 35164,
                  "src": "6264:15:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6264:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6263:17:183"
            },
            "returnParameters": {
              "id": 35146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35145,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35164,
                  "src": "6311:7:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6311:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6310:9:183"
            },
            "scope": 35212,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 35191,
            "nodeType": "FunctionDefinition",
            "src": "6519:252:183",
            "nodes": [],
            "body": {
              "id": 35190,
              "nodeType": "Block",
              "src": "6654:117:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35179,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35166,
                        "src": "6688:4:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35180,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35168,
                        "src": "6694:2:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 35181,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35170,
                        "src": "6698:12:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 35182,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35172,
                        "src": "6712:8:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 35176,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6660:5:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MembershipFacet_$35212_$",
                          "typeString": "type(contract super MembershipFacet)"
                        }
                      },
                      "id": 35178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6666:21:183",
                      "memberName": "_beforeTokenTransfers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11072,
                      "src": "6660:27:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 35183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6660:61:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35184,
                  "nodeType": "ExpressionStatement",
                  "src": "6660:61:183"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 35186,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35170,
                        "src": "6749:12:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 35187,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35168,
                        "src": "6763:2:183",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 35185,
                      "name": "_setMembershipTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34377,
                      "src": "6727:21:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 35188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6727:39:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 35189,
                  "nodeType": "ExpressionStatement",
                  "src": "6727:39:183"
                }
              ]
            },
            "baseFunctions": [
              11072
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "6528:21:183",
            "overrides": {
              "id": 35174,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6645:8:183"
            },
            "parameters": {
              "id": 35173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35166,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6563:4:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 35191,
                  "src": "6555:12:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6555:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35168,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6581:2:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 35191,
                  "src": "6573:10:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6573:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35170,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "6597:12:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 35191,
                  "src": "6589:20:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6589:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35172,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "6623:8:183",
                  "nodeType": "VariableDeclaration",
                  "scope": 35191,
                  "src": "6615:16:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6615:7:183",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6549:86:183"
            },
            "returnParameters": {
              "id": 35175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6654:0:183"
            },
            "scope": 35212,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35201,
            "nodeType": "FunctionDefinition",
            "src": "6775:100:183",
            "nodes": [],
            "body": {
              "id": 35200,
              "nodeType": "Block",
              "src": "6845:30:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35197,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9400,
                      "src": "6858:10:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 35198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6858:12:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 35196,
                  "id": 35199,
                  "nodeType": "Return",
                  "src": "6851:19:183"
                }
              ]
            },
            "baseFunctions": [
              11883
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSenderERC721A",
            "nameLocation": "6784:17:183",
            "overrides": {
              "id": 35193,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6818:8:183"
            },
            "parameters": {
              "id": 35192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6801:2:183"
            },
            "returnParameters": {
              "id": 35196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35195,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35201,
                  "src": "6836:7:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6836:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6835:9:183"
            },
            "scope": 35212,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 35211,
            "nodeType": "FunctionDefinition",
            "src": "6970:101:183",
            "nodes": [],
            "body": {
              "id": 35210,
              "nodeType": "Block",
              "src": "7041:30:183",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 35207,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9400,
                      "src": "7054:10:183",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 35208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7054:12:183",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 35206,
                  "id": 35209,
                  "nodeType": "Return",
                  "src": "7047:19:183"
                }
              ]
            },
            "baseFunctions": [
              30490
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSenderEntitled",
            "nameLocation": "6979:18:183",
            "overrides": {
              "id": 35203,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7014:8:183"
            },
            "parameters": {
              "id": 35202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6997:2:183"
            },
            "returnParameters": {
              "id": 35206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35205,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35211,
                  "src": "7032:7:183",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7032:7:183",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7031:9:183"
            },
            "scope": 35212,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34780,
              "name": "IMembership",
              "nameLocations": [
                "739:11:183"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34279,
              "src": "739:11:183"
            },
            "id": 34781,
            "nodeType": "InheritanceSpecifier",
            "src": "739:11:183"
          },
          {
            "baseName": {
              "id": 34782,
              "name": "MembershipBase",
              "nameLocations": [
                "754:14:183"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34761,
              "src": "754:14:183"
            },
            "id": 34783,
            "nodeType": "InheritanceSpecifier",
            "src": "754:14:183"
          },
          {
            "baseName": {
              "id": 34784,
              "name": "ERC5643Base",
              "nameLocations": [
                "772:11:183"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9906,
              "src": "772:11:183"
            },
            "id": 34785,
            "nodeType": "InheritanceSpecifier",
            "src": "772:11:183"
          },
          {
            "baseName": {
              "id": 34786,
              "name": "ERC2771RecipientBase",
              "nameLocations": [
                "787:20:183"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9451,
              "src": "787:20:183"
            },
            "id": 34787,
            "nodeType": "InheritanceSpecifier",
            "src": "787:20:183"
          },
          {
            "baseName": {
              "id": 34788,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "811:15:183"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9623,
              "src": "811:15:183"
            },
            "id": 34789,
            "nodeType": "InheritanceSpecifier",
            "src": "811:15:183"
          },
          {
            "baseName": {
              "id": 34790,
              "name": "ERC721A",
              "nameLocations": [
                "830:7:183"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10457,
              "src": "830:7:183"
            },
            "id": 34791,
            "nodeType": "InheritanceSpecifier",
            "src": "830:7:183"
          },
          {
            "baseName": {
              "id": 34792,
              "name": "Entitled",
              "nameLocations": [
                "841:8:183"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30491,
              "src": "841:8:183"
            },
            "id": 34793,
            "nodeType": "InheritanceSpecifier",
            "src": "841:8:183"
          }
        ],
        "canonicalName": "MembershipFacet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35212,
          30491,
          9196,
          9105,
          9005,
          8457,
          28306,
          10457,
          6943,
          8074,
          7977,
          7935,
          11894,
          12163,
          12051,
          9623,
          9561,
          9451,
          9556,
          9906,
          9953,
          34761,
          34279,
          34194
        ],
        "name": "MembershipFacet",
        "nameLocation": "718:15:183",
        "scope": 35213,
        "usedErrors": [
          7715,
          7717,
          7964,
          7966,
          8445,
          8449,
          9094,
          9096,
          9560,
          9937,
          9941,
          9943,
          9945,
          11976,
          11979,
          11982,
          11985,
          11988,
          11991,
          11994,
          11997,
          12000,
          12003,
          12006,
          12009,
          12012,
          28301,
          28303,
          28305,
          34161,
          34163,
          34165,
          34167,
          34169,
          34171,
          34173,
          34175,
          34177
        ],
        "usedEvents": [
          7721,
          7971,
          7976,
          8456,
          9100,
          9104,
          9952,
          12021,
          12030,
          12039,
          12050,
          34181,
          34185,
          34189,
          34193
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 183
}
{
  "abi": [
    {
      "inputs": [],
      "name": "EntitlementsService__EntitlementAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__EntitlementDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__ImmutableEntitlement",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__InvalidEntitlementAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementsService__InvalidEntitlementInterface",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "TokenOwnable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entitlement",
          "type": "address"
        }
      ],
      "name": "addEntitlement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "entitlements",
          "type": "address[]"
        }
      ],
      "name": "addImmutableEntitlements",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entitlement",
          "type": "address"
        }
      ],
      "name": "getEntitlement",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "moduleType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isImmutable",
              "type": "bool"
            }
          ],
          "internalType": "struct IEntitlementsStructs.Entitlement",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntitlements",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "moduleType",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isImmutable",
              "type": "bool"
            }
          ],
          "internalType": "struct IEntitlementsStructs.Entitlement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "channelId",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "permission",
          "type": "string"
        }
      ],
      "name": "isEntitledToChannel",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "permission",
          "type": "string"
        }
      ],
      "name": "isEntitledToTown",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entitlement",
          "type": "address"
        }
      ],
      "name": "removeEntitlement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506111c7806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638bfc820f1161005b5780638bfc820f146100d8578063c9b968cd146100eb578063cea632bc146100fe578063fba4ff9d1461011157600080fd5b80632c90a84014610082578063487dc38c146100975780634ff8eb71146100b5575b600080fd5b610095610090366004610ca9565b610131565b005b61009f61013d565b6040516100ac9190610d6f565b60405180910390f35b6100c86100c3366004610e1a565b61014c565b60405190151581526020016100ac565b6100956100e6366004610eb6565b610163565b6100956100f9366004610ca9565b61016c565b6100c861010c366004610f68565b610175565b61012461011f366004610ca9565b61018e565b6040516100ac9190610fed565b61013a816101a5565b50565b60606101476101c1565b905090565b60006101598484846102c6565b90505b9392505050565b61013a816102d3565b61013a81610343565b6000610184868686868661035d565b9695505050505050565b610196610c61565b61019f826103a3565b92915050565b6101ad6103f5565b6101b681610436565b61013a8160006104ff565b606060006101cd6105ad565b9050805167ffffffffffffffff8111156101e9576101e9610e6f565b60405190808252806020026020018201604052801561022257816020015b61020f610c61565b8152602001906001900390816102075790505b50915060005b81518110156102c15760008060008061025986868151811061024c5761024c611000565b60200260200101516105d8565b93509350935093506040518060800160405280858152602001846001600160a01b0316815260200183815260200182151581525087868151811061029f5761029f611000565b60200260200101819052505050505080806102b99061102c565b915050610228565b505090565b600061015984848461073f565b6102db6103f5565b60005b815181101561033f576103098282815181106102fc576102fc611000565b6020026020010151610436565b61032d82828151811061031e5761031e611000565b602002602001015160016104ff565b806103378161102c565b9150506102de565b5050565b61034b6103f5565b61035481610436565b61013a81610785565b600061018486868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250879150869050610848565b6103ab610c61565b6103b482610436565b6000806000806103c3866105d8565b604080516080810182529485526001600160a01b03909316602085015291830152151560608201529695505050505050565b6103fd61086b565b6001600160a01b0316336001600160a01b0316146104345760405163851d062360e01b815233600482015260240160405180910390fd5b565b6001600160a01b03811661045d57604051630706e15760e51b815260040160405180910390fd5b6040516301ffc9a760e01b815263df76a3d360e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa9250505080156104c4575060408051601f3d908101601f191682019092526104c191810190611045565b60015b6104e15760405163f58a5f2760e01b815260040160405180910390fd5b8061033f5760405163f58a5f2760e01b815260040160405180910390fd5b6001600160a01b0382811660009081526000805160206111a783398151915260208190526040909120549091161561054a57604051632406020960e01b815260040160405180910390fd5b6105576001820184610935565b506040805180820182526001600160a01b03948516808252931515602080830191825260009586529390935292209151825491511515600160a01b026001600160a81b0319909216931692909217919091179055565b60606101477f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb855961094a565b606060008181806000805160206111a78339815191526001600160a01b03878116600090815260208390526040902054919250166106295760405163017ab33760e71b815260040160405180910390fd5b856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610667573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261068f9190810190611067565b6001600160a01b03808816600081815260208590526040808220548151636465e69f60e01b81529151941693636465e69f926004808401939192918290030181865afa1580156106e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261070b9190810190611067565b6001600160a01b03989098166000908152602093909352604090922054909791969550600160a01b900460ff169350915050565b6000610159604051806020016040528060008152508585856040516020016107689291906110fb565b6040516020818303038152906040526107809061110b565b610957565b6001600160a01b0381811660009081526000805160206111a783398151915260208190526040909120549091166107cf5760405163017ab33760e71b815260040160405180910390fd5b6001600160a01b038216600090815260208290526040902054600160a01b900460ff161561081057604051636045809760e11b815260040160405180910390fd5b61081d6001820183610a6e565b506001600160a01b0390911660009081526020919091526040902080546001600160a81b0319169055565b6000610862858585856040516020016107689291906110fb565b95945050505050565b6040805180820182527fdbd5af3db28136204db6a4cff1462f270d2d08a00327c8f96c7d68d8c530903f546001600160a01b03168082527fdbd5af3db28136204db6a4cff1462f270d2d08a00327c8f96c7d68d8c530904054602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa15801561090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092f9190611132565b91505090565b600061015c836001600160a01b038416610a83565b6060600061015c83610ad2565b600061096161086b565b6001600160a01b0316836001600160a01b0316036109815750600161015c565b6000805160206111a783398151915260006109bb7f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610b2e565b905060005b81811015610a64576109d56001840182610b38565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b8152600401610a039392919061114f565b602060405180830381865afa158015610a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a449190611045565b15610a525760019350610a64565b80610a5c8161102c565b9150506109c0565b5050509392505050565b600061015c836001600160a01b038416610b44565b6000818152600183016020526040812054610aca5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561019f565b50600061019f565b606081600001805480602002602001604051908101604052809291908181526020018280548015610b2257602002820191906000526020600020905b815481526020019060010190808311610b0e575b50505050509050919050565b600061019f825490565b600061015c8383610c37565b60008181526001830160205260408120548015610c2d576000610b6860018361117d565b8554909150600090610b7c9060019061117d565b9050818114610be1576000866000018281548110610b9c57610b9c611000565b9060005260206000200154905080876000018481548110610bbf57610bbf611000565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610bf257610bf2611190565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061019f565b600091505061019f565b6000826000018281548110610c4e57610c4e611000565b9060005260206000200154905092915050565b60405180608001604052806060815260200160006001600160a01b03168152602001606081526020016000151581525090565b6001600160a01b038116811461013a57600080fd5b600060208284031215610cbb57600080fd5b813561015c81610c94565b60005b83811015610ce1578181015183820152602001610cc9565b50506000910152565b60008151808452610d02816020860160208601610cc6565b601f01601f19169290920160200192915050565b6000815160808452610d2b6080850182610cea565b905060018060a01b03602084015116602085015260408301518482036040860152610d568282610cea565b9150506060830151151560608501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610dc457603f19888603018452610db2858351610d16565b94509285019290850190600101610d96565b5092979650505050505050565b60008083601f840112610de357600080fd5b50813567ffffffffffffffff811115610dfb57600080fd5b602083019150836020828501011115610e1357600080fd5b9250929050565b600080600060408486031215610e2f57600080fd5b8335610e3a81610c94565b9250602084013567ffffffffffffffff811115610e5657600080fd5b610e6286828701610dd1565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610eae57610eae610e6f565b604052919050565b60006020808385031215610ec957600080fd5b823567ffffffffffffffff80821115610ee157600080fd5b818501915085601f830112610ef557600080fd5b813581811115610f0757610f07610e6f565b8060051b9150610f18848301610e85565b8181529183018401918481019088841115610f3257600080fd5b938501935b83851015610f5c5784359250610f4c83610c94565b8282529385019390850190610f37565b98975050505050505050565b600080600080600060608688031215610f8057600080fd5b853567ffffffffffffffff80821115610f9857600080fd5b610fa489838a01610dd1565b909750955060208801359150610fb982610c94565b90935060408701359080821115610fcf57600080fd5b50610fdc88828901610dd1565b969995985093965092949392505050565b60208152600061015c6020830184610d16565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161103e5761103e611016565b5060010190565b60006020828403121561105757600080fd5b8151801515811461015c57600080fd5b60006020828403121561107957600080fd5b815167ffffffffffffffff8082111561109157600080fd5b818401915084601f8301126110a557600080fd5b8151818111156110b7576110b7610e6f565b6110ca601f8201601f1916602001610e85565b91508082528560208285010111156110e157600080fd5b6110f2816020840160208601610cc6565b50949350505050565b8183823760009101908152919050565b8051602080830151919081101561112c576000198160200360031b1b821691505b50919050565b60006020828403121561114457600080fd5b815161015c81610c94565b6060815260006111626060830186610cea565b6001600160a01b039490941660208301525060400152919050565b8181038181111561019f5761019f611016565b634e487b7160e01b600052603160045260246000fdfe2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8558",
    "sourceMap": "216:1025:220:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638bfc820f1161005b5780638bfc820f146100d8578063c9b968cd146100eb578063cea632bc146100fe578063fba4ff9d1461011157600080fd5b80632c90a84014610082578063487dc38c146100975780634ff8eb71146100b5575b600080fd5b610095610090366004610ca9565b610131565b005b61009f61013d565b6040516100ac9190610d6f565b60405180910390f35b6100c86100c3366004610e1a565b61014c565b60405190151581526020016100ac565b6100956100e6366004610eb6565b610163565b6100956100f9366004610ca9565b61016c565b6100c861010c366004610f68565b610175565b61012461011f366004610ca9565b61018e565b6040516100ac9190610fed565b61013a816101a5565b50565b60606101476101c1565b905090565b60006101598484846102c6565b90505b9392505050565b61013a816102d3565b61013a81610343565b6000610184868686868661035d565b9695505050505050565b610196610c61565b61019f826103a3565b92915050565b6101ad6103f5565b6101b681610436565b61013a8160006104ff565b606060006101cd6105ad565b9050805167ffffffffffffffff8111156101e9576101e9610e6f565b60405190808252806020026020018201604052801561022257816020015b61020f610c61565b8152602001906001900390816102075790505b50915060005b81518110156102c15760008060008061025986868151811061024c5761024c611000565b60200260200101516105d8565b93509350935093506040518060800160405280858152602001846001600160a01b0316815260200183815260200182151581525087868151811061029f5761029f611000565b60200260200101819052505050505080806102b99061102c565b915050610228565b505090565b600061015984848461073f565b6102db6103f5565b60005b815181101561033f576103098282815181106102fc576102fc611000565b6020026020010151610436565b61032d82828151811061031e5761031e611000565b602002602001015160016104ff565b806103378161102c565b9150506102de565b5050565b61034b6103f5565b61035481610436565b61013a81610785565b600061018486868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250879150869050610848565b6103ab610c61565b6103b482610436565b6000806000806103c3866105d8565b604080516080810182529485526001600160a01b03909316602085015291830152151560608201529695505050505050565b6103fd61086b565b6001600160a01b0316336001600160a01b0316146104345760405163851d062360e01b815233600482015260240160405180910390fd5b565b6001600160a01b03811661045d57604051630706e15760e51b815260040160405180910390fd5b6040516301ffc9a760e01b815263df76a3d360e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa9250505080156104c4575060408051601f3d908101601f191682019092526104c191810190611045565b60015b6104e15760405163f58a5f2760e01b815260040160405180910390fd5b8061033f5760405163f58a5f2760e01b815260040160405180910390fd5b6001600160a01b0382811660009081526000805160206111a783398151915260208190526040909120549091161561054a57604051632406020960e01b815260040160405180910390fd5b6105576001820184610935565b506040805180820182526001600160a01b03948516808252931515602080830191825260009586529390935292209151825491511515600160a01b026001600160a81b0319909216931692909217919091179055565b60606101477f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb855961094a565b606060008181806000805160206111a78339815191526001600160a01b03878116600090815260208390526040902054919250166106295760405163017ab33760e71b815260040160405180910390fd5b856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610667573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261068f9190810190611067565b6001600160a01b03808816600081815260208590526040808220548151636465e69f60e01b81529151941693636465e69f926004808401939192918290030181865afa1580156106e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261070b9190810190611067565b6001600160a01b03989098166000908152602093909352604090922054909791969550600160a01b900460ff169350915050565b6000610159604051806020016040528060008152508585856040516020016107689291906110fb565b6040516020818303038152906040526107809061110b565b610957565b6001600160a01b0381811660009081526000805160206111a783398151915260208190526040909120549091166107cf5760405163017ab33760e71b815260040160405180910390fd5b6001600160a01b038216600090815260208290526040902054600160a01b900460ff161561081057604051636045809760e11b815260040160405180910390fd5b61081d6001820183610a6e565b506001600160a01b0390911660009081526020919091526040902080546001600160a81b0319169055565b6000610862858585856040516020016107689291906110fb565b95945050505050565b6040805180820182527fdbd5af3db28136204db6a4cff1462f270d2d08a00327c8f96c7d68d8c530903f546001600160a01b03168082527fdbd5af3db28136204db6a4cff1462f270d2d08a00327c8f96c7d68d8c530904054602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa15801561090b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092f9190611132565b91505090565b600061015c836001600160a01b038416610a83565b6060600061015c83610ad2565b600061096161086b565b6001600160a01b0316836001600160a01b0316036109815750600161015c565b6000805160206111a783398151915260006109bb7f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559610b2e565b905060005b81811015610a64576109d56001840182610b38565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b8152600401610a039392919061114f565b602060405180830381865afa158015610a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a449190611045565b15610a525760019350610a64565b80610a5c8161102c565b9150506109c0565b5050509392505050565b600061015c836001600160a01b038416610b44565b6000818152600183016020526040812054610aca5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561019f565b50600061019f565b606081600001805480602002602001604051908101604052809291908181526020018280548015610b2257602002820191906000526020600020905b815481526020019060010190808311610b0e575b50505050509050919050565b600061019f825490565b600061015c8383610c37565b60008181526001830160205260408120548015610c2d576000610b6860018361117d565b8554909150600090610b7c9060019061117d565b9050818114610be1576000866000018281548110610b9c57610b9c611000565b9060005260206000200154905080876000018481548110610bbf57610bbf611000565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610bf257610bf2611190565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061019f565b600091505061019f565b6000826000018281548110610c4e57610c4e611000565b9060005260206000200154905092915050565b60405180608001604052806060815260200160006001600160a01b03168152602001606081526020016000151581525090565b6001600160a01b038116811461013a57600080fd5b600060208284031215610cbb57600080fd5b813561015c81610c94565b60005b83811015610ce1578181015183820152602001610cc9565b50506000910152565b60008151808452610d02816020860160208601610cc6565b601f01601f19169290920160200192915050565b6000815160808452610d2b6080850182610cea565b905060018060a01b03602084015116602085015260408301518482036040860152610d568282610cea565b9150506060830151151560608501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610dc457603f19888603018452610db2858351610d16565b94509285019290850190600101610d96565b5092979650505050505050565b60008083601f840112610de357600080fd5b50813567ffffffffffffffff811115610dfb57600080fd5b602083019150836020828501011115610e1357600080fd5b9250929050565b600080600060408486031215610e2f57600080fd5b8335610e3a81610c94565b9250602084013567ffffffffffffffff811115610e5657600080fd5b610e6286828701610dd1565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610eae57610eae610e6f565b604052919050565b60006020808385031215610ec957600080fd5b823567ffffffffffffffff80821115610ee157600080fd5b818501915085601f830112610ef557600080fd5b813581811115610f0757610f07610e6f565b8060051b9150610f18848301610e85565b8181529183018401918481019088841115610f3257600080fd5b938501935b83851015610f5c5784359250610f4c83610c94565b8282529385019390850190610f37565b98975050505050505050565b600080600080600060608688031215610f8057600080fd5b853567ffffffffffffffff80821115610f9857600080fd5b610fa489838a01610dd1565b909750955060208801359150610fb982610c94565b90935060408701359080821115610fcf57600080fd5b50610fdc88828901610dd1565b969995985093965092949392505050565b60208152600061015c6020830184610d16565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161103e5761103e611016565b5060010190565b60006020828403121561105757600080fd5b8151801515811461015c57600080fd5b60006020828403121561107957600080fd5b815167ffffffffffffffff8082111561109157600080fd5b818401915084601f8301126110a557600080fd5b8151818111156110b7576110b7610e6f565b6110ca601f8201601f1916602001610e85565b91508082528560208285010111156110e157600080fd5b6110f2816020840160208601610cc6565b50949350505050565b8183823760009101908152919050565b8051602080830151919081101561112c576000198160200360031b1b821691505b50919050565b60006020828403121561114457600080fd5b815161015c81610c94565b6060815260006111626060830186610cea565b6001600160a01b039490941660208301525060400152919050565b8181038181111561019f5761019f611016565b634e487b7160e01b600052603160045260246000fdfe2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8558",
    "sourceMap": "216:1025:220:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;405:93;;;;;;:::i;:::-;;:::i;:::-;;605:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;863:162;;;;;;:::i;:::-;;:::i;:::-;;;3410:14:362;;3403:22;3385:41;;3373:2;3358:18;863:162:220;3245:187:362;277:124:220;;;;;;:::i;:::-;;:::i;502:99::-;;;;;;:::i;:::-;;:::i;1029:210::-;;;;;;:::i;:::-;;:::i;717:142::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;405:93::-;465:28;481:11;465:15;:28::i;:::-;405:93;:::o;605:108::-;655:20;690:18;:16;:18::i;:::-;683:25;;605:108;:::o;863:162::-;966:4;985:35;1003:4;1009:10;;985:17;:35::i;:::-;978:42;;863:162;;;;;;:::o;277:124::-;357:39;383:12;357:25;:39::i;502:99::-;565:31;584:11;565:18;:31::i;1029:210::-;1166:4;1185:49;1206:9;;1217:4;1223:10;;1185:20;:49::i;:::-;1178:56;1029:210;-1:-1:-1;;;;;;1029:210:220:o;717:142::-;793:18;;:::i;:::-;826:28;842:11;826:15;:28::i;:::-;819:35;717:142;-1:-1:-1;;717:142:220:o;1159:296:221:-;1247:32;:30;:32::i;:::-;1314:52;1354:11;1314:39;:52::i;:::-;1396:54;1431:11;1444:5;1396:34;:54::i;2264:659::-;2327:28;2365:29;2397:37;:35;:37::i;:::-;2365:69;;2469:12;:19;2451:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2441:48;;2501:9;2496:423;2520:12;:19;2516:1;:23;2496:423;;;2564:18;2592:26;2628:24;2662:16;2689:51;2724:12;2737:1;2724:15;;;;;;;;:::i;:::-;;;;;;;2689:34;:51::i;:::-;2554:186;;;;;;;;2762:150;;;;;;;;2790:4;2762:150;;;;2819:18;-1:-1:-1;;;;;2762:150:221;;;;;2859:10;2762:150;;;;2892:11;2762:150;;;;;2749:7;2757:1;2749:10;;;;;;;;:::i;:::-;;;;;;:163;;;;2546:373;;;;2541:3;;;;;:::i;:::-;;;;2496:423;;;;2359:564;2264:659;:::o;425:182::-;529:4;548:54;585:4;591:10;;548:36;:54::i;845:310::-;926:32;:30;:32::i;:::-;970:9;965:186;989:12;:19;985:1;:23;965:186;;;1023:56;1063:12;1076:1;1063:15;;;;;;;;:::i;:::-;;;;;;;1023:39;:56::i;:::-;1087:57;1122:12;1135:1;1122:15;;;;;;;;:::i;:::-;;;;;;;1139:4;1087:34;:57::i;:::-;1010:3;;;;:::i;:::-;;;;965:186;;;;845:310;:::o;1459:295::-;1550:32;:30;:32::i;:::-;1617:52;1657:11;1617:39;:52::i;:::-;1699:50;1737:11;1699:37;:50::i;611:230::-;749:4;768:68;808:9;;768:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;819:4:221;;-1:-1:-1;825:10:221;;-1:-1:-1;825:10:221;;-1:-1:-1;768:39:221;:68::i;1758:502::-;1835:25;;:::i;:::-;1868:52;1908:11;1868:39;:52::i;:::-;1935:18;1961:26;1995:24;2027:16;2052:47;2087:11;2052:34;:47::i;:::-;2115:140;;;;;;;;;;;-1:-1:-1;;;;;2115:140:221;;;;;;;;;;;;;;;;;;1758:502;-1:-1:-1;;;;;;1758:502:221:o;753:129:143:-;813:7;:5;:7::i;:::-;-1:-1:-1;;;;;799:21:143;:10;-1:-1:-1;;;;;799:21:143;;795:83;;837:34;;-1:-1:-1;;;837:34:143;;860:10;837:34;;;6563:51:362;6536:18;;837:34:143;;;;;;;795:83;753:129::o;3449:476:222:-;-1:-1:-1;;;;;3523:25:222;;3519:101;;3565:48;;-1:-1:-1;;;3565:48:222;;;;;;;;;;;3519:101;3636:70;;-1:-1:-1;;;3636:70:222;;-1:-1:-1;;;3636:70:222;;;6769:52:362;-1:-1:-1;;;;;3636:38:222;;;;;6742:18:362;;3636:70:222;;;;;;;;;;;;;;;;;;-1:-1:-1;3636:70:222;;;;;;;;-1:-1:-1;;3636:70:222;;;;;;;;;;;;:::i;:::-;;;3626:295;;3864:50;;-1:-1:-1;;;3864:50:222;;;;;;;;;;;3626:295;3749:9;3744:92;;3777:50;;-1:-1:-1;;;3777:50:222;;;;;;;;;;;1411:481;-1:-1:-1;;;;;1568:36:222;;;1489:37;1568:36;;;-1:-1:-1;;;;;;;;;;;1568:36:222;;;;;;;;:48;281::223;;1568::222;:62;1564:137;;1647:47;;-1:-1:-1;;;1647:47:222;;;;;;;;;;;1564:137;1707:32;:15;;;1727:11;1707:19;:32::i;:::-;-1:-1:-1;1784:103:222;;;;;;;;-1:-1:-1;;;;;1784:103:222;;;;;;;;;;;;;;;;-1:-1:-1;1745:36:222;;;;;;;;;:142;;;;;;;;-1:-1:-1;;;1745:142:222;-1:-1:-1;;;;;;1745:142:222;;;;;;;;;;;;;;;1411:481::o;3105:163::-;3167:29;3213:50;:41;:48;:50::i;2455:646::-;2550:18;2576:21;2550:18;2576:21;;-1:-1:-1;;;;;;;;;;;;;;;;2747:36:222;;;2807:1;2747:36;;;;;;;;;;:48;2668:68;;-1:-1:-1;2747:48:222;2743:136;;2826:46;;-1:-1:-1;;;2826:46:222;;;;;;;;;;;2743:136;2913:11;-1:-1:-1;;;;;2900:30:222;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2900:32:222;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2940:36:222;;;:23;:36;;;;;;;;;;;:48;2996:38;;-1:-1:-1;;;2996:38:222;;;;2940:48;;;2996:36;;:38;;;;;2940:23;;2996:38;;;;;;2940:36;2996:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2996:38:222;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3042:36:222;;;;:23;:36;;;;;;;;;;;;:48;2885:211;;;;3042:36;-1:-1:-1;;;;3042:48:222;;;;;-1:-1:-1;2455:646:222;-1:-1:-1;;2455:646:222:o;5250:191::-;5353:4;5372:64;5383:7;;;;;;;;;;;;5392:4;5423:10;;5406:28;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5398:37;;;:::i;:::-;5372:10;:64::i;1896:555::-;-1:-1:-1;;;;;2038:36:222;;;1959:37;2038:36;;;-1:-1:-1;;;;;;;;;;;2038:36:222;;;;;;;;:48;281::223;;2038::222;2034:136;;2117:46;;-1:-1:-1;;;2117:46:222;;;;;;;;;;;2034:136;-1:-1:-1;;;;;2180:36:222;;:23;:36;;;;;;;;;;:48;-1:-1:-1;;;2180:48:222;;;;2176:119;;;2245:43;;-1:-1:-1;;;2245:43:222;;;;;;;;;;;2176:119;2301:35;:15;;;2324:11;2301:22;:35::i;:::-;-1:-1:-1;;;;;;2349:36:222;;;:23;:36;;;;;;;;;;;2342:55;;-1:-1:-1;;;;;;2403:43:222;;;1896:555::o;5445:225::-;5580:4;5599:66;5610:9;5621:4;5652:10;;5635:28;;;;;;;;;:::i;5599:66::-;5592:73;5445:225;-1:-1:-1;;;;;5445:225:222:o;567:182:143:-;622:67;;;;;;;;185:49:144;622:67:143;-1:-1:-1;;;;;622:67:143;;;;;;;;;;;;;702:42;;-1:-1:-1;;;702:42:143;;;;;8564:25:362;;;;702:42:143;;607:7;;702:30;;8537:18:362;;;;;702:42:143;;;;;;622:67;702:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;695:49;;;567:182;:::o;8297:150:81:-;8367:4;8390:50;8395:3;-1:-1:-1;;;;;8415:23:81;;8390:4;:50::i;10251:300::-;10314:16;10342:22;10367:19;10375:3;10367:7;:19::i;4664:582:222:-;4782:13;4815:27;:25;:27::i;:::-;-1:-1:-1;;;;;4807:35:222;:4;-1:-1:-1;;;;;4807:35:222;;4803:52;;-1:-1:-1;4851:4:222;4844:11;;4803:52;-1:-1:-1;;;;;;;;;;;4862:37:222;4964:24;:15;:22;:24::i;:::-;4937:51;;5000:9;4995:247;5019:16;5015:1;:20;4995:247;;;5076:21;:15;;;5095:1;5076:18;:21::i;:::-;-1:-1:-1;;;;;5063:46:222;;5121:9;5142:4;5158:10;5063:115;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5050:186;;;5208:4;5197:15;;5222:5;;5050:186;5037:3;;;;:::i;:::-;;;;4995:247;;;;4797:449;;4664:582;;;;;:::o;8615:156:81:-;8688:4;8711:53;8719:3;-1:-1:-1;;;;;8739:23:81;;8711:7;:53::i;2206:404::-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:81;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:81;2581:12;;5562:109;5618:16;5653:3;:11;;5646:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5562:109;;;:::o;9098:115::-;9161:7;9187:19;9195:3;4537:18;;4455:107;9555:156;9629:7;9679:22;9683:3;9695:5;9679:3;:22::i;2778:1388::-;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:81;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;4904:118;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:362:-;-1:-1:-1;;;;;89:31:362;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;402:250::-;487:1;497:113;511:6;508:1;505:13;497:113;;;587:11;;;581:18;568:11;;;561:39;533:2;526:10;497:113;;;-1:-1:-1;;644:1:362;626:16;;619:27;402:250::o;657:271::-;699:3;737:5;731:12;764:6;759:3;752:19;780:76;849:6;842:4;837:3;833:14;826:4;819:5;815:16;780:76;:::i;:::-;910:2;889:15;-1:-1:-1;;885:29:362;876:39;;;;917:4;872:50;;657:271;-1:-1:-1;;657:271:362:o;933:543::-;987:3;1031:5;1025:12;1058:4;1053:3;1046:17;1084:47;1125:4;1120:3;1116:14;1102:12;1084:47;:::i;:::-;1072:59;;1209:1;1205;1200:3;1196:11;1192:19;1184:4;1177:5;1173:16;1167:23;1163:49;1156:4;1151:3;1147:14;1140:73;1261:4;1254:5;1250:16;1244:23;1309:3;1303:4;1299:14;1292:4;1287:3;1283:14;1276:38;1337:39;1371:4;1355:14;1337:39;:::i;:::-;1323:53;;;1439:4;1432:5;1428:16;1422:23;1415:31;1408:39;1401:4;1396:3;1392:14;1385:63;1464:6;1457:13;;;933:543;;;;:::o;1481:855::-;1683:4;1712:2;1752;1741:9;1737:18;1782:2;1771:9;1764:21;1805:6;1840;1834:13;1871:6;1863;1856:22;1909:2;1898:9;1894:18;1887:25;;1971:2;1961:6;1958:1;1954:14;1943:9;1939:30;1935:39;1921:53;;2009:2;2001:6;1997:15;2030:1;2040:267;2054:6;2051:1;2048:13;2040:267;;;2147:2;2143:7;2131:9;2123:6;2119:22;2115:36;2110:3;2103:49;2175:52;2220:6;2211;2205:13;2175:52;:::i;:::-;2165:62;-1:-1:-1;2285:12:362;;;;2250:15;;;;2076:1;2069:9;2040:267;;;-1:-1:-1;2324:6:362;;1481:855;-1:-1:-1;;;;;;;1481:855:362:o;2341:348::-;2393:8;2403:6;2457:3;2450:4;2442:6;2438:17;2434:27;2424:55;;2475:1;2472;2465:12;2424:55;-1:-1:-1;2498:20:362;;2541:18;2530:30;;2527:50;;;2573:1;2570;2563:12;2527:50;2610:4;2602:6;2598:17;2586:29;;2662:3;2655:4;2646:6;2638;2634:19;2630:30;2627:39;2624:59;;;2679:1;2676;2669:12;2624:59;2341:348;;;;;:::o;2694:546::-;2774:6;2782;2790;2843:2;2831:9;2822:7;2818:23;2814:32;2811:52;;;2859:1;2856;2849:12;2811:52;2898:9;2885:23;2917:31;2942:5;2917:31;:::i;:::-;2967:5;-1:-1:-1;3023:2:362;3008:18;;2995:32;3050:18;3039:30;;3036:50;;;3082:1;3079;3072:12;3036:50;3121:59;3172:7;3163:6;3152:9;3148:22;3121:59;:::i;:::-;2694:546;;3199:8;;-1:-1:-1;3095:85:362;;-1:-1:-1;;;;2694:546:362:o;3437:127::-;3498:10;3493:3;3489:20;3486:1;3479:31;3529:4;3526:1;3519:15;3553:4;3550:1;3543:15;3569:275;3640:2;3634:9;3705:2;3686:13;;-1:-1:-1;;3682:27:362;3670:40;;3740:18;3725:34;;3761:22;;;3722:62;3719:88;;;3787:18;;:::i;:::-;3823:2;3816:22;3569:275;;-1:-1:-1;3569:275:362:o;3849:1021::-;3933:6;3964:2;4007;3995:9;3986:7;3982:23;3978:32;3975:52;;;4023:1;4020;4013:12;3975:52;4063:9;4050:23;4092:18;4133:2;4125:6;4122:14;4119:34;;;4149:1;4146;4139:12;4119:34;4187:6;4176:9;4172:22;4162:32;;4232:7;4225:4;4221:2;4217:13;4213:27;4203:55;;4254:1;4251;4244:12;4203:55;4290:2;4277:16;4312:2;4308;4305:10;4302:36;;;4318:18;;:::i;:::-;4364:2;4361:1;4357:10;4347:20;;4387:28;4411:2;4407;4403:11;4387:28;:::i;:::-;4449:15;;;4519:11;;;4515:20;;;4480:12;;;;4547:19;;;4544:39;;;4579:1;4576;4569:12;4544:39;4603:11;;;;4623:217;4639:6;4634:3;4631:15;4623:217;;;4719:3;4706:17;4693:30;;4736:31;4761:5;4736:31;:::i;:::-;4780:18;;;4656:12;;;;4818;;;;4623:217;;;4859:5;3849:1021;-1:-1:-1;;;;;;;;3849:1021:362:o;4875:856::-;4976:6;4984;4992;5000;5008;5061:2;5049:9;5040:7;5036:23;5032:32;5029:52;;;5077:1;5074;5067:12;5029:52;5117:9;5104:23;5146:18;5187:2;5179:6;5176:14;5173:34;;;5203:1;5200;5193:12;5173:34;5242:59;5293:7;5284:6;5273:9;5269:22;5242:59;:::i;:::-;5320:8;;-1:-1:-1;5216:85:362;-1:-1:-1;5405:2:362;5390:18;;5377:32;;-1:-1:-1;5418:31:362;5377:32;5418:31;:::i;:::-;5468:5;;-1:-1:-1;5526:2:362;5511:18;;5498:32;;5542:16;;;5539:36;;;5571:1;5568;5561:12;5539:36;;5610:61;5663:7;5652:8;5641:9;5637:24;5610:61;:::i;:::-;4875:856;;;;-1:-1:-1;4875:856:362;;-1:-1:-1;5690:8:362;;5584:87;4875:856;-1:-1:-1;;;4875:856:362:o;5736:272::-;5925:2;5914:9;5907:21;5888:4;5945:57;5998:2;5987:9;5983:18;5975:6;5945:57;:::i;6013:127::-;6074:10;6069:3;6065:20;6062:1;6055:31;6105:4;6102:1;6095:15;6129:4;6126:1;6119:15;6145:127;6206:10;6201:3;6197:20;6194:1;6187:31;6237:4;6234:1;6227:15;6261:4;6258:1;6251:15;6277:135;6316:3;6337:17;;;6334:43;;6357:18;;:::i;:::-;-1:-1:-1;6404:1:362;6393:13;;6277:135::o;6832:277::-;6899:6;6952:2;6940:9;6931:7;6927:23;6923:32;6920:52;;;6968:1;6965;6958:12;6920:52;7000:9;6994:16;7053:5;7046:13;7039:21;7032:5;7029:32;7019:60;;7075:1;7072;7065:12;7114:719;7194:6;7247:2;7235:9;7226:7;7222:23;7218:32;7215:52;;;7263:1;7260;7253:12;7215:52;7296:9;7290:16;7325:18;7366:2;7358:6;7355:14;7352:34;;;7382:1;7379;7372:12;7352:34;7420:6;7409:9;7405:22;7395:32;;7465:7;7458:4;7454:2;7450:13;7446:27;7436:55;;7487:1;7484;7477:12;7436:55;7516:2;7510:9;7538:2;7534;7531:10;7528:36;;;7544:18;;:::i;:::-;7586:53;7629:2;7610:13;;-1:-1:-1;;7606:27:362;7635:2;7602:36;7586:53;:::i;:::-;7573:66;;7662:2;7655:5;7648:17;7702:7;7697:2;7692;7688;7684:11;7680:20;7677:33;7674:53;;;7723:1;7720;7713:12;7674:53;7736:67;7800:2;7795;7788:5;7784:14;7779:2;7775;7771:11;7736:67;:::i;:::-;-1:-1:-1;7822:5:362;7114:719;-1:-1:-1;;;;7114:719:362:o;7838:273::-;8023:6;8015;8010:3;7997:33;7979:3;8049:16;;8074:13;;;8049:16;7838:273;-1:-1:-1;7838:273:362:o;8116:297::-;8234:12;;8281:4;8270:16;;;8264:23;;8234:12;8299:16;;8296:111;;;8393:1;8389:6;8379;8373:4;8369:17;8366:1;8362:25;8358:38;8351:5;8347:50;8338:59;;8296:111;;8116:297;;;:::o;8600:251::-;8670:6;8723:2;8711:9;8702:7;8698:23;8694:32;8691:52;;;8739:1;8736;8729:12;8691:52;8771:9;8765:16;8790:31;8815:5;8790:31;:::i;8856:388::-;9061:2;9050:9;9043:21;9024:4;9081:45;9122:2;9111:9;9107:18;9099:6;9081:45;:::i;:::-;-1:-1:-1;;;;;9162:32:362;;;;9157:2;9142:18;;9135:60;-1:-1:-1;9226:2:362;9211:18;9204:34;9073:53;8856:388;-1:-1:-1;8856:388:362:o;9249:128::-;9316:9;;;9337:11;;;9334:37;;;9351:18;;:::i;9382:127::-;9443:10;9438:3;9434:20;9431:1;9424:31;9474:4;9471:1;9464:15;9498:4;9495:1;9488:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addEntitlement(address)": "2c90a840",
    "addImmutableEntitlements(address[])": "8bfc820f",
    "getEntitlement(address)": "fba4ff9d",
    "getEntitlements()": "487dc38c",
    "isEntitledToChannel(string,address,string)": "cea632bc",
    "isEntitledToTown(address,string)": "4ff8eb71",
    "removeEntitlement(address)": "c9b968cd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EntitlementsService__EntitlementAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__EntitlementDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__ImmutableEntitlement\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__InvalidEntitlementAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementsService__InvalidEntitlementInterface\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"TokenOwnable__NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entitlement\",\"type\":\"address\"}],\"name\":\"addEntitlement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"entitlements\",\"type\":\"address[]\"}],\"name\":\"addImmutableEntitlements\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entitlement\",\"type\":\"address\"}],\"name\":\"getEntitlement\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"moduleType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isImmutable\",\"type\":\"bool\"}],\"internalType\":\"struct IEntitlementsStructs.Entitlement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntitlements\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"moduleType\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isImmutable\",\"type\":\"bool\"}],\"internalType\":\"struct IEntitlementsStructs.Entitlement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"channelId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"permission\",\"type\":\"string\"}],\"name\":\"isEntitledToChannel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"permission\",\"type\":\"string\"}],\"name\":\"isEntitledToTown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entitlement\",\"type\":\"address\"}],\"name\":\"removeEntitlement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addEntitlement(address)\":{\"params\":{\"entitlement\":\"The entitlement to add\"}},\"addImmutableEntitlements(address[])\":{\"params\":{\"entitlements\":\"The entitlements to add\"}},\"getEntitlement(address)\":{\"params\":{\"entitlement\":\"The entitlement to get\"},\"returns\":{\"_0\":\"The entitlement module address\"}},\"getEntitlements()\":{\"returns\":{\"_0\":\"The entitlement modules\"}},\"isEntitledToChannel(string,address,string)\":{\"params\":{\"channelId\":\"The channel to check\",\"permission\":\"The permission to check\",\"user\":\"The user to check\"},\"returns\":{\"_0\":\"True if the user is entitled to the permission, false otherwise\"}},\"isEntitledToTown(address,string)\":{\"params\":{\"permission\":\"The permission to check\",\"user\":\"The user to check\"},\"returns\":{\"_0\":\"True if the user is entitled to the permission, false otherwise\"}},\"removeEntitlement(address)\":{\"params\":{\"entitlement\":\"The entitlement to remove\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addEntitlement(address)\":{\"notice\":\"Adds an entitlement to the town\"},\"addImmutableEntitlements(address[])\":{\"notice\":\"Allows the town owner to add immutable entitlements to the town\"},\"getEntitlement(address)\":{\"notice\":\"Gets an entitlement from the town\"},\"getEntitlements()\":{\"notice\":\"Gets all entitlements from the town\"},\"isEntitledToChannel(string,address,string)\":{\"notice\":\"Checks if a user is entitled to a permission in a channel\"},\"isEntitledToTown(address,string)\":{\"notice\":\"Checks if a user is entitled to a permission in the town\"},\"removeEntitlement(address)\":{\"notice\":\"Removes an entitlement from the town\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/towns/facets/entitlements/Entitlements.sol\":\"Entitlements\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@towns/=node_modules/@towns/\",\":ERC721A/=lib/ERC721A/contracts/\",\":contracts/=packages/contracts/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=lib/operator-filter-registry/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"packages/contracts/src/diamond/facets/introspection/IERC165.sol\":{\"keccak256\":\"0x58edff5c7238d9d543c9611a4446c50128cb74f469d143d0f7828b9e22d278e7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://90c2ce08be09894c3ffc8ebdbb4c78d4c14e00fdcc2f6ccf12ea6b6ab067ad1f\",\"dweb:/ipfs/QmVg7hTxFt9Wt3ghGcY9ZxQuYPd99ujG1f9o7BnvhR15TZ\"]},\"packages/contracts/src/diamond/facets/ownable/token/TokenOwnableService.sol\":{\"keccak256\":\"0x2c7c3a8dab7a2df427d8e2308479bda133ae087cad424f57158c2f80e4f6b002\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8c5aaebaf78cb9f0123c9b3c06a5ccdb36db5154afec9e58d69266ac2371d3d2\",\"dweb:/ipfs/QmaeK8XXgTNztuvK7forU3irLxCV7yjZTmx1Ms4zKP8RqB\"]},\"packages/contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol\":{\"keccak256\":\"0x2b2faf5bcef525168a81dae1dee57bb1bfc528eb9a0bacb1b3254947d309be53\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://688eebe7a7c0979410684bba7e8b141264bfc5a06464e49d87916be51447aee3\",\"dweb:/ipfs/QmbPHUGMG9tRrnRfRPE8LWySd1pgjb8c7G6mMzTS7VuRCY\"]},\"packages/contracts/src/diamond/facets/pausable/PausableService.sol\":{\"keccak256\":\"0x52fcddf400039ee33960f3296578a31f420a5f689e45ce8f550058cbb5065346\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://965b0df3ccf92fbd2e9d8324ce0b7258c73d6b9a7ca4517d78f64bb838de4197\",\"dweb:/ipfs/QmZkcT61oD8xxYeMXF1dCK3mfHh5iHRow8URJfgvci4kXY\"]},\"packages/contracts/src/diamond/facets/pausable/PausableStorage.sol\":{\"keccak256\":\"0x3a165ce6df5c2f3a4d02fb3feca8121cc697f418fb935520d5c6198141d9b44f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a53c0be8eb3bf4d4312c0f3a93c33772fef87ace9302320a881a810f3d04abfe\",\"dweb:/ipfs/QmUGj6BkHSHDVWP5DELc9tLP57myr5JbR7wm6dTqLb2jMA\"]},\"packages/contracts/src/towns/entitlements/IEntitlement.sol\":{\"keccak256\":\"0x3f9ece409fddb53843218cb1a742face8577de97e9e9257f882d40c556ce0263\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3e0c6972be5a1b9f13bead1486f33e1264560cd5e70e44a2f225924846b47541\",\"dweb:/ipfs/Qmcqoufht7VmmUxpKTdZ9aHcs4sC6us45pirBaUqnL1VtH\"]},\"packages/contracts/src/towns/facets/entitlements/Entitlements.sol\":{\"keccak256\":\"0xac4ba963d833b579b76b1ad4fbfbc0c3405c194c2e4776b1408f934c1336b364\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://50a666c56c533757b91189c93a5ca7d30cdfec3c6cd790fb628079067075b49a\",\"dweb:/ipfs/QmXQzeh2KzqB7pCESPYbAX7Maa7Bsx3ZgXLpAG8guM6yVK\"]},\"packages/contracts/src/towns/facets/entitlements/EntitlementsBase.sol\":{\"keccak256\":\"0x74e24a0eaa41cd10264d0efc0e8850d241f54ec37477675b341a1d30b492c798\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3a46e5d6427d8ef5aaaa191fa841338f79a081cf37502215f35827ae13b68c8d\",\"dweb:/ipfs/QmeZRcLVY5TEFGBJ4zg9y3i7ynA6Lj19wHA6u7ZEXka5ki\"]},\"packages/contracts/src/towns/facets/entitlements/EntitlementsService.sol\":{\"keccak256\":\"0x438ea6c27084f09c737e027e42643debb64bddc8a3a06bf2ceb0341406dc98e6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://21d883948be017290dcd5235d400db352c301c96c6e887e6f9a13316c4e11656\",\"dweb:/ipfs/QmdPQh7YvEFiFhFbC59n5ziSaYMeZVPEE5xh1mQEfhEcPc\"]},\"packages/contracts/src/towns/facets/entitlements/EntitlementsStorage.sol\":{\"keccak256\":\"0x6a8cd3a19ff1c836849d48be28f94b08f2864b4f26823a3af3e5741ff106a2a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3950f0448e01b6dbe94b4e3ea84ff8c5bc5d3da4966c1e848da5d40738b0a647\",\"dweb:/ipfs/QmbTtp8PdYYZbsuuseRVJeUVQHUKJwfwDXWqtFQRDz9yDp\"]},\"packages/contracts/src/towns/facets/entitlements/IEntitlements.sol\":{\"keccak256\":\"0xda53380106ba136165aecd967565b11d43893adad98961bf5930843e42a0a71e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://89302f9533f5c357a05a013f510a245de4a078eefb7eef5052a01659b46a02fa\",\"dweb:/ipfs/Qma2qXeX1NzhruByPEHcwXQ329LnjLp53RrzAGNYd9r2SW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__EntitlementAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__EntitlementDoesNotExist"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__ImmutableEntitlement"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__InvalidEntitlementAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementsService__InvalidEntitlementInterface"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "TokenOwnable__NotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "entitlement",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addEntitlement"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "entitlements",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addImmutableEntitlements"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "entitlement",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitlement",
          "outputs": [
            {
              "internalType": "struct IEntitlementsStructs.Entitlement",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "moduleType",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "isImmutable",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitlements",
          "outputs": [
            {
              "internalType": "struct IEntitlementsStructs.Entitlement[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "moduleType",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "isImmutable",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "channelId",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "permission",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEntitledToChannel",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "permission",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEntitledToTown",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "entitlement",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeEntitlement"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addEntitlement(address)": {
            "params": {
              "entitlement": "The entitlement to add"
            }
          },
          "addImmutableEntitlements(address[])": {
            "params": {
              "entitlements": "The entitlements to add"
            }
          },
          "getEntitlement(address)": {
            "params": {
              "entitlement": "The entitlement to get"
            },
            "returns": {
              "_0": "The entitlement module address"
            }
          },
          "getEntitlements()": {
            "returns": {
              "_0": "The entitlement modules"
            }
          },
          "isEntitledToChannel(string,address,string)": {
            "params": {
              "channelId": "The channel to check",
              "permission": "The permission to check",
              "user": "The user to check"
            },
            "returns": {
              "_0": "True if the user is entitled to the permission, false otherwise"
            }
          },
          "isEntitledToTown(address,string)": {
            "params": {
              "permission": "The permission to check",
              "user": "The user to check"
            },
            "returns": {
              "_0": "True if the user is entitled to the permission, false otherwise"
            }
          },
          "removeEntitlement(address)": {
            "params": {
              "entitlement": "The entitlement to remove"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addEntitlement(address)": {
            "notice": "Adds an entitlement to the town"
          },
          "addImmutableEntitlements(address[])": {
            "notice": "Allows the town owner to add immutable entitlements to the town"
          },
          "getEntitlement(address)": {
            "notice": "Gets an entitlement from the town"
          },
          "getEntitlements()": {
            "notice": "Gets all entitlements from the town"
          },
          "isEntitledToChannel(string,address,string)": {
            "notice": "Checks if a user is entitled to a permission in a channel"
          },
          "isEntitledToTown(address,string)": {
            "notice": "Checks if a user is entitled to a permission in the town"
          },
          "removeEntitlement(address)": {
            "notice": "Removes an entitlement from the town"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/test/=lib/prb-test/src/",
        "@towns/=node_modules/@towns/",
        "ERC721A/=lib/ERC721A/contracts/",
        "contracts/=packages/contracts/",
        "council/=lib/council/contracts/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "operator-filter-registry/=lib/operator-filter-registry/",
        "prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "packages/contracts/src/towns/facets/entitlements/Entitlements.sol": "Entitlements"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      },
      "packages/contracts/src/diamond/facets/introspection/IERC165.sol": {
        "keccak256": "0x58edff5c7238d9d543c9611a4446c50128cb74f469d143d0f7828b9e22d278e7",
        "urls": [
          "bzz-raw://90c2ce08be09894c3ffc8ebdbb4c78d4c14e00fdcc2f6ccf12ea6b6ab067ad1f",
          "dweb:/ipfs/QmVg7hTxFt9Wt3ghGcY9ZxQuYPd99ujG1f9o7BnvhR15TZ"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/diamond/facets/ownable/token/TokenOwnableService.sol": {
        "keccak256": "0x2c7c3a8dab7a2df427d8e2308479bda133ae087cad424f57158c2f80e4f6b002",
        "urls": [
          "bzz-raw://8c5aaebaf78cb9f0123c9b3c06a5ccdb36db5154afec9e58d69266ac2371d3d2",
          "dweb:/ipfs/QmaeK8XXgTNztuvK7forU3irLxCV7yjZTmx1Ms4zKP8RqB"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol": {
        "keccak256": "0x2b2faf5bcef525168a81dae1dee57bb1bfc528eb9a0bacb1b3254947d309be53",
        "urls": [
          "bzz-raw://688eebe7a7c0979410684bba7e8b141264bfc5a06464e49d87916be51447aee3",
          "dweb:/ipfs/QmbPHUGMG9tRrnRfRPE8LWySd1pgjb8c7G6mMzTS7VuRCY"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/diamond/facets/pausable/PausableService.sol": {
        "keccak256": "0x52fcddf400039ee33960f3296578a31f420a5f689e45ce8f550058cbb5065346",
        "urls": [
          "bzz-raw://965b0df3ccf92fbd2e9d8324ce0b7258c73d6b9a7ca4517d78f64bb838de4197",
          "dweb:/ipfs/QmZkcT61oD8xxYeMXF1dCK3mfHh5iHRow8URJfgvci4kXY"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/diamond/facets/pausable/PausableStorage.sol": {
        "keccak256": "0x3a165ce6df5c2f3a4d02fb3feca8121cc697f418fb935520d5c6198141d9b44f",
        "urls": [
          "bzz-raw://a53c0be8eb3bf4d4312c0f3a93c33772fef87ace9302320a881a810f3d04abfe",
          "dweb:/ipfs/QmUGj6BkHSHDVWP5DELc9tLP57myr5JbR7wm6dTqLb2jMA"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/towns/entitlements/IEntitlement.sol": {
        "keccak256": "0x3f9ece409fddb53843218cb1a742face8577de97e9e9257f882d40c556ce0263",
        "urls": [
          "bzz-raw://3e0c6972be5a1b9f13bead1486f33e1264560cd5e70e44a2f225924846b47541",
          "dweb:/ipfs/Qmcqoufht7VmmUxpKTdZ9aHcs4sC6us45pirBaUqnL1VtH"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/towns/facets/entitlements/Entitlements.sol": {
        "keccak256": "0xac4ba963d833b579b76b1ad4fbfbc0c3405c194c2e4776b1408f934c1336b364",
        "urls": [
          "bzz-raw://50a666c56c533757b91189c93a5ca7d30cdfec3c6cd790fb628079067075b49a",
          "dweb:/ipfs/QmXQzeh2KzqB7pCESPYbAX7Maa7Bsx3ZgXLpAG8guM6yVK"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/towns/facets/entitlements/EntitlementsBase.sol": {
        "keccak256": "0x74e24a0eaa41cd10264d0efc0e8850d241f54ec37477675b341a1d30b492c798",
        "urls": [
          "bzz-raw://3a46e5d6427d8ef5aaaa191fa841338f79a081cf37502215f35827ae13b68c8d",
          "dweb:/ipfs/QmeZRcLVY5TEFGBJ4zg9y3i7ynA6Lj19wHA6u7ZEXka5ki"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/towns/facets/entitlements/EntitlementsService.sol": {
        "keccak256": "0x438ea6c27084f09c737e027e42643debb64bddc8a3a06bf2ceb0341406dc98e6",
        "urls": [
          "bzz-raw://21d883948be017290dcd5235d400db352c301c96c6e887e6f9a13316c4e11656",
          "dweb:/ipfs/QmdPQh7YvEFiFhFbC59n5ziSaYMeZVPEE5xh1mQEfhEcPc"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/towns/facets/entitlements/EntitlementsStorage.sol": {
        "keccak256": "0x6a8cd3a19ff1c836849d48be28f94b08f2864b4f26823a3af3e5741ff106a2a1",
        "urls": [
          "bzz-raw://3950f0448e01b6dbe94b4e3ea84ff8c5bc5d3da4966c1e848da5d40738b0a647",
          "dweb:/ipfs/QmbTtp8PdYYZbsuuseRVJeUVQHUKJwfwDXWqtFQRDz9yDp"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/towns/facets/entitlements/IEntitlements.sol": {
        "keccak256": "0xda53380106ba136165aecd967565b11d43893adad98961bf5930843e42a0a71e",
        "urls": [
          "bzz-raw://89302f9533f5c357a05a013f510a245de4a078eefb7eef5052a01659b46a02fa",
          "dweb:/ipfs/Qma2qXeX1NzhruByPEHcwXQ329LnjLp53RrzAGNYd9r2SW"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "packages/contracts/src/towns/facets/entitlements/Entitlements.sol",
    "id": 70056,
    "exportedSymbols": {
      "Entitlements": [
        70055
      ],
      "EntitlementsBase": [
        70293
      ],
      "IEntitlements": [
        70950
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1203:220",
    "nodes": [
      {
        "id": 69958,
        "nodeType": "PragmaDirective",
        "src": "39:24:220",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 69960,
        "nodeType": "ImportDirective",
        "src": "79:50:220",
        "nodes": [],
        "absolutePath": "packages/contracts/src/towns/facets/entitlements/IEntitlements.sol",
        "file": "./IEntitlements.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70056,
        "sourceUnit": 70951,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69959,
              "name": "IEntitlements",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70950,
              "src": "87:13:220",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69962,
        "nodeType": "ImportDirective",
        "src": "158:56:220",
        "nodes": [],
        "absolutePath": "packages/contracts/src/towns/facets/entitlements/EntitlementsBase.sol",
        "file": "./EntitlementsBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70056,
        "sourceUnit": 70294,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69961,
              "name": "EntitlementsBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70293,
              "src": "166:16:220",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70055,
        "nodeType": "ContractDefinition",
        "src": "216:1025:220",
        "nodes": [
          {
            "id": 69977,
            "nodeType": "FunctionDefinition",
            "src": "277:124:220",
            "nodes": [],
            "body": {
              "id": 69976,
              "nodeType": "Block",
              "src": "351:50:220",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 69973,
                        "name": "entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69969,
                        "src": "383:12:220",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 69972,
                      "name": "_addImmutableEntitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70142,
                      "src": "357:25:220",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory)"
                      }
                    },
                    "id": 69974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "357:39:220",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69975,
                  "nodeType": "ExpressionStatement",
                  "src": "357:39:220"
                }
              ]
            },
            "baseFunctions": [
              70898
            ],
            "functionSelector": "8bfc820f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addImmutableEntitlements",
            "nameLocation": "286:24:220",
            "parameters": {
              "id": 69970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69969,
                  "mutability": "mutable",
                  "name": "entitlements",
                  "nameLocation": "328:12:220",
                  "nodeType": "VariableDeclaration",
                  "scope": 69977,
                  "src": "311:29:220",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 69967,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "311:7:220",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 69968,
                    "nodeType": "ArrayTypeName",
                    "src": "311:9:220",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "310:31:220"
            },
            "returnParameters": {
              "id": 69971,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "351:0:220"
            },
            "scope": 70055,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 69987,
            "nodeType": "FunctionDefinition",
            "src": "405:93:220",
            "nodes": [],
            "body": {
              "id": 69986,
              "nodeType": "Block",
              "src": "459:39:220",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 69983,
                        "name": "entitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69979,
                        "src": "481:11:220",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 69982,
                      "name": "_addEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70166,
                      "src": "465:15:220",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 69984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "465:28:220",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69985,
                  "nodeType": "ExpressionStatement",
                  "src": "465:28:220"
                }
              ]
            },
            "baseFunctions": [
              70926
            ],
            "functionSelector": "2c90a840",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addEntitlement",
            "nameLocation": "414:14:220",
            "parameters": {
              "id": 69980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69979,
                  "mutability": "mutable",
                  "name": "entitlement",
                  "nameLocation": "437:11:220",
                  "nodeType": "VariableDeclaration",
                  "scope": 69987,
                  "src": "429:19:220",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "429:7:220",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "428:21:220"
            },
            "returnParameters": {
              "id": 69981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:0:220"
            },
            "scope": 70055,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 69997,
            "nodeType": "FunctionDefinition",
            "src": "502:99:220",
            "nodes": [],
            "body": {
              "id": 69996,
              "nodeType": "Block",
              "src": "559:42:220",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 69993,
                        "name": "entitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69989,
                        "src": "584:11:220",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 69992,
                      "name": "_removeEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70189,
                      "src": "565:18:220",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 69994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "565:31:220",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69995,
                  "nodeType": "ExpressionStatement",
                  "src": "565:31:220"
                }
              ]
            },
            "baseFunctions": [
              70932
            ],
            "functionSelector": "c9b968cd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeEntitlement",
            "nameLocation": "511:17:220",
            "parameters": {
              "id": 69990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69989,
                  "mutability": "mutable",
                  "name": "entitlement",
                  "nameLocation": "537:11:220",
                  "nodeType": "VariableDeclaration",
                  "scope": 69997,
                  "src": "529:19:220",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:7:220",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "528:21:220"
            },
            "returnParameters": {
              "id": 69991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:0:220"
            },
            "scope": 70055,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70008,
            "nodeType": "FunctionDefinition",
            "src": "605:108:220",
            "nodes": [],
            "body": {
              "id": 70007,
              "nodeType": "Block",
              "src": "677:36:220",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 70004,
                      "name": "_getEntitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70292,
                      "src": "690:16:220",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_struct$_Entitlement_$70888_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (struct IEntitlementsStructs.Entitlement memory[] memory)"
                      }
                    },
                    "id": 70005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "690:18:220",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Entitlement_$70888_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IEntitlementsStructs.Entitlement memory[] memory"
                    }
                  },
                  "functionReturnParameters": 70003,
                  "id": 70006,
                  "nodeType": "Return",
                  "src": "683:25:220"
                }
              ]
            },
            "baseFunctions": [
              70949
            ],
            "functionSelector": "487dc38c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntitlements",
            "nameLocation": "614:15:220",
            "parameters": {
              "id": 69998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:2:220"
            },
            "returnParameters": {
              "id": 70003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70002,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70008,
                  "src": "655:20:220",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Entitlement_$70888_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IEntitlementsStructs.Entitlement[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 70000,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 69999,
                        "name": "Entitlement",
                        "nameLocations": [
                          "655:11:220"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 70888,
                        "src": "655:11:220"
                      },
                      "referencedDeclaration": 70888,
                      "src": "655:11:220",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Entitlement_$70888_storage_ptr",
                        "typeString": "struct IEntitlementsStructs.Entitlement"
                      }
                    },
                    "id": 70001,
                    "nodeType": "ArrayTypeName",
                    "src": "655:13:220",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Entitlement_$70888_storage_$dyn_storage_ptr",
                      "typeString": "struct IEntitlementsStructs.Entitlement[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:22:220"
            },
            "scope": 70055,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70021,
            "nodeType": "FunctionDefinition",
            "src": "717:142:220",
            "nodes": [],
            "body": {
              "id": 70020,
              "nodeType": "Block",
              "src": "813:46:220",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70017,
                        "name": "entitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70010,
                        "src": "842:11:220",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 70016,
                      "name": "_getEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70226,
                      "src": "826:15:220",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_Entitlement_$70888_memory_ptr_$",
                        "typeString": "function (address) view returns (struct IEntitlementsStructs.Entitlement memory)"
                      }
                    },
                    "id": 70018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "826:28:220",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Entitlement_$70888_memory_ptr",
                      "typeString": "struct IEntitlementsStructs.Entitlement memory"
                    }
                  },
                  "functionReturnParameters": 70015,
                  "id": 70019,
                  "nodeType": "Return",
                  "src": "819:35:220"
                }
              ]
            },
            "baseFunctions": [
              70941
            ],
            "functionSelector": "fba4ff9d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEntitlement",
            "nameLocation": "726:14:220",
            "parameters": {
              "id": 70011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70010,
                  "mutability": "mutable",
                  "name": "entitlement",
                  "nameLocation": "754:11:220",
                  "nodeType": "VariableDeclaration",
                  "scope": 70021,
                  "src": "746:19:220",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "746:7:220",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "740:29:220"
            },
            "returnParameters": {
              "id": 70015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70014,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70021,
                  "src": "793:18:220",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Entitlement_$70888_memory_ptr",
                    "typeString": "struct IEntitlementsStructs.Entitlement"
                  },
                  "typeName": {
                    "id": 70013,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 70012,
                      "name": "Entitlement",
                      "nameLocations": [
                        "793:11:220"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 70888,
                      "src": "793:11:220"
                    },
                    "referencedDeclaration": 70888,
                    "src": "793:11:220",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Entitlement_$70888_storage_ptr",
                      "typeString": "struct IEntitlementsStructs.Entitlement"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "792:20:220"
            },
            "scope": 70055,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70036,
            "nodeType": "FunctionDefinition",
            "src": "863:162:220",
            "nodes": [],
            "body": {
              "id": 70035,
              "nodeType": "Block",
              "src": "972:53:220",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70031,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70023,
                        "src": "1003:4:220",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70032,
                        "name": "permission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70025,
                        "src": "1009:10:220",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 70030,
                      "name": "_isEntitledToTown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70081,
                      "src": "985:17:220",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_string_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,string calldata) view returns (bool)"
                      }
                    },
                    "id": 70033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "985:35:220",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 70029,
                  "id": 70034,
                  "nodeType": "Return",
                  "src": "978:42:220"
                }
              ]
            },
            "baseFunctions": [
              70908
            ],
            "functionSelector": "4ff8eb71",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isEntitledToTown",
            "nameLocation": "872:16:220",
            "parameters": {
              "id": 70026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70023,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "902:4:220",
                  "nodeType": "VariableDeclaration",
                  "scope": 70036,
                  "src": "894:12:220",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:7:220",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70025,
                  "mutability": "mutable",
                  "name": "permission",
                  "nameLocation": "928:10:220",
                  "nodeType": "VariableDeclaration",
                  "scope": 70036,
                  "src": "912:26:220",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70024,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:6:220",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "888:54:220"
            },
            "returnParameters": {
              "id": 70029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70028,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70036,
                  "src": "966:4:220",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 70027,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:4:220",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "965:6:220"
            },
            "scope": 70055,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70054,
            "nodeType": "FunctionDefinition",
            "src": "1029:210:220",
            "nodes": [],
            "body": {
              "id": 70053,
              "nodeType": "Block",
              "src": "1172:67:220",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 70048,
                        "name": "channelId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70038,
                        "src": "1206:9:220",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 70049,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70040,
                        "src": "1217:4:220",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 70050,
                        "name": "permission",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70042,
                        "src": "1223:10:220",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 70047,
                      "name": "_isEntitledToChannel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70100,
                      "src": "1185:20:220",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_calldata_ptr_$_t_address_$_t_string_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (string calldata,address,string calldata) view returns (bool)"
                      }
                    },
                    "id": 70051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1185:49:220",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 70046,
                  "id": 70052,
                  "nodeType": "Return",
                  "src": "1178:56:220"
                }
              ]
            },
            "baseFunctions": [
              70920
            ],
            "functionSelector": "cea632bc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isEntitledToChannel",
            "nameLocation": "1038:19:220",
            "parameters": {
              "id": 70043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70038,
                  "mutability": "mutable",
                  "name": "channelId",
                  "nameLocation": "1079:9:220",
                  "nodeType": "VariableDeclaration",
                  "scope": 70054,
                  "src": "1063:25:220",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70037,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1063:6:220",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70040,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1102:4:220",
                  "nodeType": "VariableDeclaration",
                  "scope": 70054,
                  "src": "1094:12:220",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:220",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 70042,
                  "mutability": "mutable",
                  "name": "permission",
                  "nameLocation": "1128:10:220",
                  "nodeType": "VariableDeclaration",
                  "scope": 70054,
                  "src": "1112:26:220",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 70041,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:6:220",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1057:85:220"
            },
            "returnParameters": {
              "id": 70046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70045,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 70054,
                  "src": "1166:4:220",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 70044,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:4:220",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1165:6:220"
            },
            "scope": 70055,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 69963,
              "name": "EntitlementsBase",
              "nameLocations": [
                "241:16:220"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70293,
              "src": "241:16:220"
            },
            "id": 69964,
            "nodeType": "InheritanceSpecifier",
            "src": "241:16:220"
          },
          {
            "baseName": {
              "id": 69965,
              "name": "IEntitlements",
              "nameLocations": [
                "259:13:220"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70950,
              "src": "259:13:220"
            },
            "id": 69966,
            "nodeType": "InheritanceSpecifier",
            "src": "259:13:220"
          }
        ],
        "canonicalName": "Entitlements",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          70055,
          70950,
          70293,
          70889
        ],
        "name": "Entitlements",
        "nameLocation": "225:12:220",
        "scope": 70056,
        "usedErrors": [
          49958,
          70309,
          70311,
          70315,
          70317,
          70319
        ],
        "usedEvents": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 220
}
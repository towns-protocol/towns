{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "DiamondCut_FunctionAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "facet",
          "type": "address"
        }
      ],
      "name": "DiamondCut_FunctionDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "DiamondCut_FunctionFromSameFacetAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondCut_ImmutableFacet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "init",
          "type": "address"
        }
      ],
      "name": "DiamondCut_InvalidContract",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "facet",
          "type": "address"
        }
      ],
      "name": "DiamondCut_InvalidFacet",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondCut_InvalidFacetCutAction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondCut_InvalidFacetCutLength",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "facet",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "DiamondCut_InvalidFacetRemoval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "facet",
          "type": "address"
        }
      ],
      "name": "DiamondCut_InvalidFacetSelectors",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DiamondCut_InvalidSelector",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamond.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDiamond.FacetCut[]",
          "name": "facetCuts",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "init",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "initPayload",
          "type": "bytes"
        }
      ],
      "name": "DiamondCut",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "facetAddress",
              "type": "address"
            },
            {
              "internalType": "enum IDiamond.FacetCutAction",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "bytes4[]",
              "name": "functionSelectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct IDiamond.FacetCut[]",
          "name": "facetCuts",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "init",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "initPayload",
          "type": "bytes"
        }
      ],
      "name": "diamondCut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "376:452:115:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610c95565b610045565b005b61004d610081565b610071576040516365f4906560e01b81523360048201526024015b60405180910390fd5b61007c8383836100c4565b505050565b6000336100b57f79ae75762492beaf6e592c7e395674410f8f73b3120cc73dfae9d6c73528681c546001600160a01b031690565b6001600160a01b031614905090565b6100cd83610210565b60005b83518110156101c95760008482815181106100ed576100ed610e4c565b6020026020010151905061010081610235565b60008160200151600281111561011857610118610e62565b036101345761012f81600001518260400151610325565b6101b6565b60018160200151600281111561014c5761014c610e62565b036101755761016381600001518260400151610464565b61012f81600001518260400151610472565b60028160200151600281111561018d5761018d610e62565b036101b6576101a481600001518260400151610464565b6101b681600001518260400151610651565b50806101c181610e8e565b9150506100d0565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516101fd93929190610ef7565b60405180910390a161007c8383836107f4565b805160000361023257604051632795bfe160e11b815260040160405180910390fd5b50565b60028160200151600281111561024d5761024d610e62565b111561026c57604051633c328e0d60e21b815260040160405180910390fd5b80516001600160a01b03166102a25780516040516344ae58e160e01b81526001600160a01b039091166004820152602401610068565b80516001600160a01b031630148015906102c5575080516001600160a01b03163b155b156102f15780516040516344ae58e160e01b81526001600160a01b039091166004820152602401610068565b8060400151516000036102325780516040516305fb96cb60e41b81526001600160a01b039091166004820152602401610068565b7fae24967f9660c5498f462855176ea6b99ad85fda43b6d7af2d9f8c6e5b2b9a93610350818461084f565b6103605761035e8184610876565b505b815160005b8181101561045d57600084828151811061038157610381610e4c565b602090810291909101015190506001600160e01b031981166103b6576040516347518c8160e01b815260040160405180910390fd5b6001600160e01b0319811660009081526002850160205260409020546001600160a01b03161561040557604051630e6c4db160e41b81526001600160e01b031982166004820152602401610068565b6001600160e01b031981166000818152600286016020908152604080832080546001600160a01b0319166001600160a01b038c1690811790915583526003880190915290206104539161088b565b5050600101610365565b5050505050565b61046e8282610897565b5050565b7fae24967f9660c5498f462855176ea6b99ad85fda43b6d7af2d9f8c6e5b2b9a9361049d818461084f565b6104ad576104ab8184610876565b505b815160005b8181101561045d5760008482815181106104ce576104ce610e4c565b602090810291909101015190506001600160e01b03198116610503576040516347518c8160e01b815260040160405180910390fd5b6001600160e01b0319811660009081526002850160205260409020546001600160a01b0316806105515760405163126f174360e11b81526001600160a01b0388166004820152602401610068565b866001600160a01b0316816001600160a01b03160361058f57604051631403eec360e21b81526001600160e01b031983166004820152602401610068565b6001600160e01b031982166000818152600287016020908152604080832080546001600160a01b0319166001600160a01b038d811691909117909155851683526003890190915290206105e1916108c0565b506001600160a01b03871660009081526003860160205260409020610610906001600160e01b0319841661088b565b506001600160a01b03811660009081526003860160205260409020610634906108cc565b6000036106475761064585826108d6565b505b50506001016104b2565b7fae24967f9660c5498f462855176ea6b99ad85fda43b6d7af2d9f8c6e5b2b9a9361067c818461084f565b6106a4576040516344ae58e160e01b81526001600160a01b0384166004820152602401610068565b60005b82518110156107b95760008382815181106106c4576106c4610e4c565b602090810291909101015190506001600160e01b031981166106f9576040516347518c8160e01b815260040160405180910390fd5b6001600160e01b0319811660009081526002840160205260409020546001600160a01b0386811691161461075a5760405162062efb60e51b81526001600160a01b03861660048201526001600160e01b031982166024820152604401610068565b6001600160e01b031981166000818152600285016020908152604080832080546001600160a01b03191690556001600160a01b03891683526003870190915290206107a4916108c0565b505080806107b190610e8e565b9150506106a7565b506001600160a01b038316600090815260038201602052604090206107dd906108cc565b60000361007c576107ee81846108d6565b50505050565b6001600160a01b03821661080757505050565b6001600160a01b0382163b61083a57604051633b367e1560e21b81526001600160a01b0383166004820152602401610068565b61084482826108eb565b503d6000803e3d6000f35b6001600160a01b038116600090815260018301602052604081205415155b90505b92915050565b600061086d836001600160a01b038416610910565b600061086d8383610910565b306001600160a01b0383160361046e57604051630e7ce30960e11b815260040160405180910390fd5b600061086d838361095f565b6000610870825490565b600061086d836001600160a01b03841661095f565b606061086d838360405180606001604052806027815260200161105060279139610a52565b600081815260018301602052604081205461095757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610870565b506000610870565b60008181526001830160205260408120548015610a48576000610983600183610ff7565b855490915060009061099790600190610ff7565b90508181146109fc5760008660000182815481106109b7576109b7610e4c565b90600052602060002001549050808760000184815481106109da576109da610e4c565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610a0d57610a0d61100a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610870565b6000915050610870565b6060600080856001600160a01b031685604051610a6f9190611020565b600060405180830381855af49150503d8060008114610aaa576040519150601f19603f3d011682016040523d82523d6000602084013e610aaf565b606091505b5091509150610ac086838387610aca565b9695505050505050565b60608315610b39578251600003610b32576001600160a01b0385163b610b325760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610068565b5081610b43565b610b438383610b4b565b949350505050565b815115610b5b5781518083602001fd5b8060405162461bcd60e51b8152600401610068919061103c565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610bae57610bae610b75565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610bdd57610bdd610b75565b604052919050565b600067ffffffffffffffff821115610bff57610bff610b75565b5060051b60200190565b80356001600160a01b0381168114610c2057600080fd5b919050565b600082601f830112610c3657600080fd5b813567ffffffffffffffff811115610c5057610c50610b75565b610c63601f8201601f1916602001610bb4565b818152846020838601011115610c7857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610caa57600080fd5b67ffffffffffffffff8085351115610cc157600080fd5b8435850186601f820112610cd457600080fd5b610ce6610ce18235610be5565b610bb4565b81358082526020808301929160051b84010189811115610d0557600080fd5b602084015b81811015610e0d578581351115610d2057600080fd5b803585016060818d03601f19011215610d3857600080fd5b610d40610b8b565b610d4c60208301610c09565b8152604082013560038110610d6057600080fd5b6020820152606082013588811115610d7757600080fd5b8083019250508c603f830112610d8c57600080fd5b6020820135610d9d610ce182610be5565b81815260059190911b83016040019060208101908f831115610dbe57600080fd5b6040850194505b82851015610df75784356001600160e01b0319811614610de457600080fd5b8435825260209485019490910190610dc5565b6040840152505085525060209384019301610d0a565b5050809650505050610e2160208601610c09565b9250604085013581811115610e3557600080fd5b610e4187828801610c25565b925050509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610ea057610ea0610e78565b5060010190565b60005b83811015610ec2578181015183820152602001610eaa565b50506000910152565b60008151808452610ee3816020860160208601610ea7565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015610fc757898403607f19018652815180516001600160a01b03168552838101518986019060038110610f6657634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015610fb25783516001600160e01b0319168252928601926001929092019190860190610f88565b50978501979550505090820190600101610f20565b50506001600160a01b038a16908801528681036040880152610fe98189610ecb565b9a9950505050505050505050565b8181038181111561087057610870610e78565b634e487b7160e01b600052603160045260246000fd5b60008251611032818460208701610ea7565b9190910192915050565b60208152600061086d6020830184610ecb56fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
    "sourceMap": "376:452:115:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;461:242;;;;;;:::i;:::-;;:::i;:::-;;;595:18;:16;:18::i;:::-;590:61;;622:29;;-1:-1:-1;;;622:29:115;;640:10;622:29;;;4429:51:370;4402:18;;622:29:115;;;;;;;;590:61;657:41;669:9;680:4;686:11;657;:41::i;:::-;461:242;;;:::o;707:119::-;766:4;811:10;785:22;180:44:139;323:29:138;-1:-1:-1;;;;;323:29:138;;261:96;785:22:115;-1:-1:-1;;;;;785:36:115;;778:43;;707:119;:::o;403:1193:116:-;533:46;569:9;533:35;:46::i;:::-;591:9;586:879;606:9;:16;602:1;:20;586:879;;;637:33;673:9;683:1;673:12;;;;;;;;:::i;:::-;;;;;;;637:48;;694:44;729:8;694:34;:44::i;:::-;770:27;751:8;:15;;;:46;;;;;;;;:::i;:::-;;747:712;;809:107;847:8;:21;;;880:8;:26;;;809;:107::i;:::-;747:712;;;954:31;935:8;:15;;;:50;;;;;;;;:::i;:::-;;931:528;;997:66;1013:8;:21;;;1036:8;:26;;;997:15;:66::i;:::-;1073:111;1115:8;:21;;;1148:8;:26;;;1073:30;:111::i;931:528::-;1222:30;1203:8;:15;;;:49;;;;;;;;:::i;:::-;;1199:260;;1264:66;1280:8;:21;;;1303:8;:26;;;1264:15;:66::i;:::-;1340:110;1381:8;:21;;;1414:8;:26;;;1340:29;:110::i;:::-;-1:-1:-1;624:3:116;;;;:::i;:::-;;;;586:879;;;;1476:40;1487:9;1498:4;1504:11;1476:40;;;;;;;;:::i;:::-;;;;;;;;1523:68;1562:9;1573:4;1579:11;1523:38;:68::i;4036:166:118:-;4133:9;:16;4153:1;4133:21;4129:68;;4163:34;;-1:-1:-1;;;4163:34:118;;;;;;;;;;;4129:68;4036:166;:::o;4289:599::-;4401:1;4382:8;:15;;;4374:24;;;;;;;;:::i;:::-;:28;4370:90;;;4419:34;;-1:-1:-1;;;4419:34:118;;;;;;;;;;;4370:90;4470:21;;-1:-1:-1;;;;;4470:35:118;4466:109;;4546:21;;4522:46;;-1:-1:-1;;;4522:46:118;;-1:-1:-1;;;;;4447:32:370;;;4522:46:118;;;4429:51:370;4402:18;;4522:46:118;4283:203:370;4466:109:118;4592:21;;-1:-1:-1;;;;;4592:38:118;4625:4;4592:38;;;;:90;;-1:-1:-1;4660:21:118;;-1:-1:-1;;;;;1465:19:69;;:23;4592:90:118;4581:176;;;4728:21;;4704:46;;-1:-1:-1;;;4704:46:118;;-1:-1:-1;;;;;4447:32:370;;;4704:46:118;;;4429:51:370;4402:18;;4704:46:118;4283:203:370;4581:176:118;4767:8;:26;;;:33;4804:1;4767:38;4763:121;;4855:21;;4822:55;;-1:-1:-1;;;4822:55:118;;-1:-1:-1;;;;;4447:32:370;;;4822:55:118;;;4429:51:370;4402:18;;4822:55:118;4283:203:370;1255:760:118;358:47:119;1442:25:118;358:47:119;1461:5:118;1442:18;:25::i;:::-;1437:52;;1469:20;:2;1483:5;1469:13;:20::i;:::-;;1437:52;1520:16;;1496:21;1583:428;1603:13;1599:1;:17;1583:428;;;1628:15;1646:9;1656:1;1646:12;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;;1671:21:118;;1667:81;;1711:28;;-1:-1:-1;;;1711:28:118;;;;;;;;;;;1667:81;-1:-1:-1;;;;;;1760:28:118;;1800:1;1760:28;;;:18;;;:28;;;;;;-1:-1:-1;;;;;1760:28:118;:42;1756:116;;1821:42;;-1:-1:-1;;;1821:42:118;;-1:-1:-1;;;;;;7816:33:370;;1821:42:118;;;7798:52:370;7771:18;;1821:42:118;7654:202:370;1756:116:118;-1:-1:-1;;;;;;1880:28:118;;;;;;:18;;;:28;;;;;;;;:36;;-1:-1:-1;;;;;;1880:36:118;-1:-1:-1;;;;;1880:36:118;;;;;;;;1924:26;;:19;;;:26;;;;;:40;;:30;:40::i;:::-;-1:-1:-1;;1993:3:118;;1583:428;;;;1324:691;;1255:760;;:::o;1666:154:116:-;1765:50;1798:5;1805:9;1765:32;:50::i;:::-;1666:154;;:::o;3001:1031:118:-;358:47:119;3156:25:118;358:47:119;3175:5:118;3156:18;:25::i;:::-;3151:52;;3183:20;:2;3197:5;3183:13;:20::i;:::-;;3151:52;3234:16;;3210:21;3257:771;3277:13;3273:1;:17;3257:771;;;3302:15;3320:9;3330:1;3320:12;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;;3345:21:118;;3341:81;;3385:28;;-1:-1:-1;;;3385:28:118;;;;;;;;;;;3341:81;-1:-1:-1;;;;;;3449:28:118;;3430:16;3449:28;;;:18;;;:28;;;;;;-1:-1:-1;;;;;3449:28:118;;3486:92;;3531:38;;-1:-1:-1;;;3531:38:118;;-1:-1:-1;;;;;4447:32:370;;3531:38:118;;;4429:51:370;4402:18;;3531:38:118;4283:203:370;3486:92:118;3602:5;-1:-1:-1;;;;;3590:17:118;:8;-1:-1:-1;;;;;3590:17:118;;3586:104;;3626:55;;-1:-1:-1;;;3626:55:118;;-1:-1:-1;;;;;;7816:33:370;;3626:55:118;;;7798:52:370;7771:18;;3626:55:118;7654:202:370;3586:104:118;-1:-1:-1;;;;;;3739:28:118;;;;;;:18;;;:28;;;;;;;;:36;;-1:-1:-1;;;;;;3739:36:118;-1:-1:-1;;;;;3739:36:118;;;;;;;;;;3784:29;;;;:19;;;:29;;;;;:46;;:36;:46::i;:::-;-1:-1:-1;;;;;;3839:26:118;;;;;;:19;;;:26;;;;;:40;;-1:-1:-1;;;;;;3839:40:118;;:30;:40::i;:::-;-1:-1:-1;;;;;;3892:29:118;;;;;;:19;;;:29;;;;;:38;;:36;:38::i;:::-;3934:1;3892:43;3888:94;;3947:26;:2;3964:8;3947:16;:26::i;:::-;;3888:94;-1:-1:-1;;4010:3:118;;3257:771;;2152:716;358:47:119;2306:25:118;358:47:119;2325:5:118;2306:18;:25::i;:::-;2301:69;;2340:30;;-1:-1:-1;;;2340:30:118;;-1:-1:-1;;;;;4447:32:370;;2340:30:118;;;4429:51:370;4402:18;;2340:30:118;4283:203:370;2301:69:118;2382:9;2377:397;2397:9;:16;2393:1;:20;2377:397;;;2428:15;2446:9;2456:1;2446:12;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;;2471:21:118;;2467:81;;2511:28;;-1:-1:-1;;;2511:28:118;;;;;;;;;;;2467:81;-1:-1:-1;;;;;;2560:28:118;;;;;;:18;;;:28;;;;;;-1:-1:-1;;;;;2560:37:118;;;:28;;:37;2556:116;;2616:47;;-1:-1:-1;;;2616:47:118;;-1:-1:-1;;;;;8051:32:370;;2616:47:118;;;8033:51:370;-1:-1:-1;;;;;;8120:33:370;;8100:18;;;8093:61;8006:18;;2616:47:118;7861:299:370;2556:116:118;-1:-1:-1;;;;;;2687:28:118;;;;;;:18;;;:28;;;;;;;;2680:35;;-1:-1:-1;;;;;;2680:35:118;;;-1:-1:-1;;;;;2724:26:118;;;;:19;;;:26;;;;;:43;;:33;:43::i;:::-;;2420:354;2415:3;;;;;:::i;:::-;;;;2377:397;;;-1:-1:-1;;;;;;2784:26:118;;;;;;:19;;;:26;;;;;:35;;:33;:35::i;:::-;2823:1;2784:40;2780:84;;2834:23;:2;2851:5;2834:16;:23::i;:::-;;2224:644;2152:716;;:::o;5230:545::-;-1:-1:-1;;;;;5363:18:118;;5359:31;;5230:545;;;:::o;5359:31::-;-1:-1:-1;;;;;1465:19:69;;;5396:85:118;;5442:32;;-1:-1:-1;;;5442:32:118;;-1:-1:-1;;;;;4447:32:370;;5442::118;;;4429:51:370;4402:18;;5442:32:118;4283:203:370;5396:85:118;5487:47;5516:4;5522:11;5487:28;:47::i;:::-;;5657:16;5654:1;;5636:38;5748:16;5654:1;5738:27;8852:165:81;-1:-1:-1;;;;;8985:23:81;;8932:4;4343:19;;;:12;;;:19;;;;;;:24;;8955:55;8948:62;;8852:165;;;;;:::o;8297:150::-;8367:4;8390:50;8395:3;-1:-1:-1;;;;;8415:23:81;;8390:4;:50::i;5911:123::-;5981:4;6004:23;6009:3;6021:5;6004:4;:23::i;4961:143:118:-;5058:4;-1:-1:-1;;;;;5041:22:118;;;5037:62;;5072:27;;-1:-1:-1;;;5072:27:118;;;;;;;;;;;6202:129:81;6275:4;6298:26;6306:3;6318:5;6298:7;:26::i;6631:115::-;6694:7;6720:19;6728:3;4537:18;;4455:107;8615:156;8688:4;8711:53;8719:3;-1:-1:-1;;;;;8739:23:81;;8711:7;:53::i;6469:198:69:-;6552:12;6583:77;6604:6;6612:4;6583:77;;;;;;;;;;;;;;;;;:20;:77::i;2206:404:81:-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:81;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:81;2581:12;;2778:1388;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:81;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;6853:325:69;6994:12;7019;7033:23;7060:6;-1:-1:-1;;;;;7060:19:69;7080:4;7060:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7018:67;;;;7102:69;7129:6;7137:7;7146:10;7158:12;7102:26;:69::i;:::-;7095:76;6853:325;-1:-1:-1;;;;;;6853:325:69:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:69;;;7908:60;;;;-1:-1:-1;;;7908:60:69;;8924:2:370;7908:60:69;;;8906:21:370;8963:2;8943:18;;;8936:30;9002:31;8982:18;;;8975:59;9051:18;;7908:60:69;8722:353:370;7908:60:69;-1:-1:-1;8003:10:69;7996:17;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;:::o;8616:540::-;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:69;;;;;;;;:::i;14:127:370:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:251;218:2;212:9;260:2;248:15;;293:18;278:34;;314:22;;;275:62;272:88;;;340:18;;:::i;:::-;376:2;369:22;146:251;:::o;402:275::-;473:2;467:9;538:2;519:13;;-1:-1:-1;;515:27:370;503:40;;573:18;558:34;;594:22;;;555:62;552:88;;;620:18;;:::i;:::-;656:2;649:22;402:275;;-1:-1:-1;402:275:370:o;682:191::-;750:4;783:18;775:6;772:30;769:56;;;805:18;;:::i;:::-;-1:-1:-1;850:1:370;846:14;862:4;842:25;;682:191::o;878:173::-;946:20;;-1:-1:-1;;;;;995:31:370;;985:42;;975:70;;1041:1;1038;1031:12;975:70;878:173;;;:::o;1056:530::-;1098:5;1151:3;1144:4;1136:6;1132:17;1128:27;1118:55;;1169:1;1166;1159:12;1118:55;1205:6;1192:20;1231:18;1227:2;1224:26;1221:52;;;1253:18;;:::i;:::-;1297:55;1340:2;1321:13;;-1:-1:-1;;1317:27:370;1346:4;1313:38;1297:55;:::i;:::-;1377:2;1368:7;1361:19;1423:3;1416:4;1411:2;1403:6;1399:15;1395:26;1392:35;1389:55;;;1440:1;1437;1430:12;1389:55;1505:2;1498:4;1490:6;1486:17;1479:4;1470:7;1466:18;1453:55;1553:1;1528:16;;;1546:4;1524:27;1517:38;;;;1532:7;1056:530;-1:-1:-1;;;1056:530:370:o;1591:2578::-;1729:6;1737;1745;1798:2;1786:9;1777:7;1773:23;1769:32;1766:52;;;1814:1;1811;1804:12;1766:52;1837:18;1895:2;1883:9;1870:23;1867:31;1864:51;;;1911:1;1908;1901:12;1864:51;1962:9;1949:23;1938:9;1934:39;2011:7;2004:4;2000:2;1996:13;1992:27;1982:55;;2033:1;2030;2023:12;1982:55;2057:82;2073:65;2134:2;2121:16;2073:65;:::i;:::-;2057:82;:::i;:::-;2185:16;;2173:29;;;2227:4;2218:14;;;;2161:3;2271:1;2267:24;2259:33;;2255:44;2311:19;;;2308:39;;;2343:1;2340;2333:12;2308:39;2375:4;2371:2;2367:13;2389:1519;2405:6;2400:3;2397:15;2389:1519;;;2486:2;2480:3;2467:17;2464:25;2461:45;;;2502:1;2499;2492:12;2461:45;2537:17;;2529:26;;2607:2;2579:16;;;-1:-1:-1;;2575:30:370;2571:39;2568:59;;;2623:1;2620;2613:12;2568:59;2653:22;;:::i;:::-;2702:33;2729:4;2725:2;2721:13;2702:33;:::i;:::-;2695:5;2688:48;2785:2;2781;2777:11;2764:25;2824:1;2815:7;2812:14;2802:42;;2840:1;2837;2830:12;2802:42;2875:4;2864:16;;2857:33;2938:2;2930:11;;2917:25;2958:14;;;2955:34;;;2985:1;2982;2975:12;2955:34;3020:6;3016:2;3012:15;3002:25;;;3067:7;3062:2;3058;3054:11;3050:25;3040:53;;3089:1;3086;3079:12;3040:53;3137:4;3133:2;3129:13;3116:27;3169:68;3185:51;3233:2;3185:51;:::i;3169:68::-;3281:17;;;3381:1;3377:10;;;;3369:19;;3390:2;3365:28;;3331:4;3320:16;;;3409:21;;;3406:41;;;3443:1;3440;3433:12;3406:41;3481:2;3477;3473:11;3460:24;;3497:294;3515:8;3508:5;3505:19;3497:294;;;3623:19;;-1:-1:-1;;;;;;3619:46:370;;3595:71;3585:99;;3680:1;3677;3670:12;3585:99;3715:19;;3701:34;;3772:4;3536:16;;;;3761;;;;3497:294;;;3822:2;3811:14;;3804:29;-1:-1:-1;;3846:18:370;;-1:-1:-1;3893:4:370;3884:14;;;;2422;2389:1519;;;2393:3;;3927:5;3917:15;;;;;3951:40;3985:4;3974:9;3970:20;3951:40;:::i;:::-;3941:50;;4044:2;4033:9;4029:18;4016:32;4073:2;4063:8;4060:16;4057:36;;;4089:1;4086;4079:12;4057:36;4112:51;4155:7;4144:8;4133:9;4129:24;4112:51;:::i;:::-;4102:61;;;;1591:2578;;;;;:::o;4491:127::-;4552:10;4547:3;4543:20;4540:1;4533:31;4583:4;4580:1;4573:15;4607:4;4604:1;4597:15;4623:127;4684:10;4679:3;4675:20;4672:1;4665:31;4715:4;4712:1;4705:15;4739:4;4736:1;4729:15;4755:127;4816:10;4811:3;4807:20;4804:1;4797:31;4847:4;4844:1;4837:15;4871:4;4868:1;4861:15;4887:135;4926:3;4947:17;;;4944:43;;4967:18;;:::i;:::-;-1:-1:-1;5014:1:370;5003:13;;4887:135::o;5027:250::-;5112:1;5122:113;5136:6;5133:1;5130:13;5122:113;;;5212:11;;;5206:18;5193:11;;;5186:39;5158:2;5151:10;5122:113;;;-1:-1:-1;;5269:1:370;5251:16;;5244:27;5027:250::o;5282:270::-;5323:3;5361:5;5355:12;5388:6;5383:3;5376:19;5404:76;5473:6;5466:4;5461:3;5457:14;5450:4;5443:5;5439:16;5404:76;:::i;:::-;5534:2;5513:15;-1:-1:-1;;5509:29:370;5500:39;;;;5541:4;5496:50;;5282:270;-1:-1:-1;;5282:270:370:o;5557:2092::-;5827:4;5856:2;5896;5885:9;5881:18;5926:2;5915:9;5908:21;5949:6;5984;5978:13;6015:6;6007;6000:22;6041:3;6031:13;;6075:2;6064:9;6060:18;6053:25;;6137:2;6127:6;6124:1;6120:14;6109:9;6105:30;6101:39;6159:4;6198:2;6190:6;6186:15;6219:1;6229:1249;6243:6;6240:1;6237:13;6229:1249;;;6308:22;;;-1:-1:-1;;6304:37:370;6292:50;;6365:13;;6452:9;;-1:-1:-1;;;;;6448:35:370;6433:51;;6523:11;;;6517:18;6405:15;;;;6575:1;6558:19;;6548:170;;6628:10;6623:3;6619:20;6616:1;6609:31;6667:4;6664:1;6657:15;6699:4;6696:1;6689:15;6548:170;6738:15;;;6731:37;6791:4;6836:11;;;6830:18;6868:15;;;6861:27;;;6949:21;;6983:24;;;;7073:23;;;;-1:-1:-1;;7029:15:370;;;;7134:236;7150:8;7145:3;7142:17;7134:236;;;7231:15;;-1:-1:-1;;;;;;7227:42:370;7213:57;;7339:17;;;;7178:1;7169:11;;;;;7296:14;;;;7134:236;;;-1:-1:-1;7456:12:370;;;;7393:5;-1:-1:-1;;;7421:15:370;;;;6265:1;6258:9;6229:1249;;;-1:-1:-1;;;;;;;4240:31:370;;7514:18;;;4228:44;7571:22;;;7564:4;7549:20;;7542:52;7611:32;7575:6;7628;7611:32;:::i;:::-;7603:40;5557:2092;-1:-1:-1;;;;;;;;;;5557:2092:370:o;8165:128::-;8232:9;;;8253:11;;;8250:37;;;8267:18;;:::i;8298:127::-;8359:10;8354:3;8350:20;8347:1;8340:31;8390:4;8387:1;8380:15;8414:4;8411:1;8404:15;8430:287;8559:3;8597:6;8591:13;8613:66;8672:6;8667:3;8660:4;8652:6;8648:17;8613:66;:::i;:::-;8695:16;;;;;8430:287;-1:-1:-1;;8430:287:370:o;9080:219::-;9229:2;9218:9;9211:21;9192:4;9249:44;9289:2;9278:9;9274:18;9266:6;9249:44;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"DiamondCut_FunctionAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"DiamondCut_FunctionDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"DiamondCut_FunctionFromSameFacetAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondCut_ImmutableFacet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"init\",\"type\":\"address\"}],\"name\":\"DiamondCut_InvalidContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"DiamondCut_InvalidFacet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondCut_InvalidFacetCutAction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondCut_InvalidFacetCutLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"DiamondCut_InvalidFacetRemoval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"DiamondCut_InvalidFacetSelectors\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondCut_InvalidSelector\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamond.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"initPayload\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamond.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initPayload\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DiamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"facetCuts\":\"Facet addresses and function selectors.\",\"init\":\"Address of contract or facet to execute initPayload.\",\"initPayload\":\"A function call, including function selector and arguments.\"}}},\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"facetCuts\":\"Facet addresses and function selectors.\",\"init\":\"Address of contract or facet to execute initPayload.\",\"initPayload\":\"A function call, including function selector and arguments. Executed with delegatecall on init address.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"DiamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Event emitted when facets are added/removed/replaced\"}},\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Add/replace/remove any number of functions and optionally execute a function with delegatecall\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/diamond/facets/cut/DiamondCut.sol\":\"DiamondCut\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/prb-test/src/\",\":@towns/=node_modules/@towns/\",\":ERC721A/=lib/ERC721A/contracts/\",\":contracts/=packages/contracts/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=lib/operator-filter-registry/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"packages/contracts/src/diamond/IDiamond.sol\":{\"keccak256\":\"0x0c42a7a49bd97b80da729467d943c19a3f859068f38504ab6acb7e90fc88be64\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c7417201588ddb0c7682a3d46e972a8fdb433f792484e042cd1ffe1268ddca2a\",\"dweb:/ipfs/QmRrpJX1PiGm214AhocX8C4fGQA9po9pUzrdHwDEJSWp9T\"]},\"packages/contracts/src/diamond/facets/cut/DiamondCut.sol\":{\"keccak256\":\"0xf20dcad9c44dd05172617b1ca70b5c48528a5b75a950ce5579efebafc55034f9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39c93c9ab065ac67655a699f20db41d5934c93039929207539dc87dac1d8a7d6\",\"dweb:/ipfs/QmWzM3FDLF4u45hyME3sBHRzGHKoggo4RBqTaiQHVK8A3k\"]},\"packages/contracts/src/diamond/facets/cut/DiamondCutBase.sol\":{\"keccak256\":\"0x7de925593fcf9cc691e173ba7cc6657734278805c42a38b03cab113b7265b425\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2ca0e8cd7cb727ebf50c835b83d215fc11fbd30878ec1cf0748b4bd59e990011\",\"dweb:/ipfs/QmeZJx3yeKDnxVmVhcvVS59FQWDyvNev6gMhvz3w1ytmeF\"]},\"packages/contracts/src/diamond/facets/cut/DiamondCutService.sol\":{\"keccak256\":\"0x7b29f14ee2aef63e35bee47cf99f81caff05f9bf0d20a05c9e8a18ce66c7faf1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fddf8fa31f3f3365f62184ace7e7ef4701aa7c0ae330688b676743f48a1eedf8\",\"dweb:/ipfs/QmXHcAjrKsuiswyDbrGMDSLd69bgMLeB6iFFu5uDhHMuPR\"]},\"packages/contracts/src/diamond/facets/cut/DiamondCutStorage.sol\":{\"keccak256\":\"0x3cf36b6969ab8d7e6d5e5c1a8f3c11e11e816e33c613d7348688905978696038\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://721c6299b843700935a816ffb8683e4c229a031fec4f2080d8329088f16f6b19\",\"dweb:/ipfs/QmU24KkiiZEk9o6WaSABLcrvrSxS96yZyHjGpwWr1jy5bU\"]},\"packages/contracts/src/diamond/facets/cut/IDiamondCut.sol\":{\"keccak256\":\"0xa021842fac782d0a630ce55190bd623a3c1c590ec7495530539505e390002717\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6273de44f89673c53a1c8a7bb97aafb0bb68a3b2752c973e1511fe937f0a32b6\",\"dweb:/ipfs/QmPfJx17gye1NLHgJnKBKN5LEnZs7mhfBkyQ9H8xayfvcw\"]},\"packages/contracts/src/diamond/facets/ownable/OwnableService.sol\":{\"keccak256\":\"0xc96ea2c75519d986a75fb86a1c3ec08794fee823c5303da8c03869bfb505185d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b19857cd8fe0c892052300a78ba670ae98048a42fc69f0d2da946c03dc671900\",\"dweb:/ipfs/QmVecFwkx6zhcn6MiCFoisMVWs6Y6t94n4H4Xwf5tSgdto\"]},\"packages/contracts/src/diamond/facets/ownable/OwnableStorage.sol\":{\"keccak256\":\"0xf37c305730d5f4c38242252303efcf273a4e81554637e2346db593e45d6cd551\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b78ac1b163b9d8a9f39d47f86f3ec562398038c1ea217bdece38dbcd90b07a22\",\"dweb:/ipfs/QmQB25TBF1VSNtpfHBzfs8FLANeGoGfj7Zz5hQmzaE7zFH\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "DiamondCut_FunctionAlreadyExists"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "facet",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "DiamondCut_FunctionDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "DiamondCut_FunctionFromSameFacetAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondCut_ImmutableFacet"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "init",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "DiamondCut_InvalidContract"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "facet",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "DiamondCut_InvalidFacet"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondCut_InvalidFacetCutAction"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondCut_InvalidFacetCutLength"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "facet",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "type": "error",
          "name": "DiamondCut_InvalidFacetRemoval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "facet",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "DiamondCut_InvalidFacetSelectors"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DiamondCut_InvalidSelector"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "struct IDiamond.FacetCut[]",
              "name": "facetCuts",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamond.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "init",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "initPayload",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DiamondCut",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IDiamond.FacetCut[]",
              "name": "facetCuts",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamond.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "init",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "initPayload",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "diamondCut"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "params": {
              "facetCuts": "Facet addresses and function selectors.",
              "init": "Address of contract or facet to execute initPayload.",
              "initPayload": "A function call, including function selector and arguments. Executed with delegatecall on init address."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
            "notice": "Add/replace/remove any number of functions and optionally execute a function with delegatecall"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/test/=lib/prb-test/src/",
        "@towns/=node_modules/@towns/",
        "ERC721A/=lib/ERC721A/contracts/",
        "contracts/=packages/contracts/",
        "council/=lib/council/contracts/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "operator-filter-registry/=lib/operator-filter-registry/",
        "prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "packages/contracts/src/diamond/facets/cut/DiamondCut.sol": "DiamondCut"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      },
      "packages/contracts/src/diamond/IDiamond.sol": {
        "keccak256": "0x0c42a7a49bd97b80da729467d943c19a3f859068f38504ab6acb7e90fc88be64",
        "urls": [
          "bzz-raw://c7417201588ddb0c7682a3d46e972a8fdb433f792484e042cd1ffe1268ddca2a",
          "dweb:/ipfs/QmRrpJX1PiGm214AhocX8C4fGQA9po9pUzrdHwDEJSWp9T"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/diamond/facets/cut/DiamondCut.sol": {
        "keccak256": "0xf20dcad9c44dd05172617b1ca70b5c48528a5b75a950ce5579efebafc55034f9",
        "urls": [
          "bzz-raw://39c93c9ab065ac67655a699f20db41d5934c93039929207539dc87dac1d8a7d6",
          "dweb:/ipfs/QmWzM3FDLF4u45hyME3sBHRzGHKoggo4RBqTaiQHVK8A3k"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/diamond/facets/cut/DiamondCutBase.sol": {
        "keccak256": "0x7de925593fcf9cc691e173ba7cc6657734278805c42a38b03cab113b7265b425",
        "urls": [
          "bzz-raw://2ca0e8cd7cb727ebf50c835b83d215fc11fbd30878ec1cf0748b4bd59e990011",
          "dweb:/ipfs/QmeZJx3yeKDnxVmVhcvVS59FQWDyvNev6gMhvz3w1ytmeF"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/diamond/facets/cut/DiamondCutService.sol": {
        "keccak256": "0x7b29f14ee2aef63e35bee47cf99f81caff05f9bf0d20a05c9e8a18ce66c7faf1",
        "urls": [
          "bzz-raw://fddf8fa31f3f3365f62184ace7e7ef4701aa7c0ae330688b676743f48a1eedf8",
          "dweb:/ipfs/QmXHcAjrKsuiswyDbrGMDSLd69bgMLeB6iFFu5uDhHMuPR"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/diamond/facets/cut/DiamondCutStorage.sol": {
        "keccak256": "0x3cf36b6969ab8d7e6d5e5c1a8f3c11e11e816e33c613d7348688905978696038",
        "urls": [
          "bzz-raw://721c6299b843700935a816ffb8683e4c229a031fec4f2080d8329088f16f6b19",
          "dweb:/ipfs/QmU24KkiiZEk9o6WaSABLcrvrSxS96yZyHjGpwWr1jy5bU"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/diamond/facets/cut/IDiamondCut.sol": {
        "keccak256": "0xa021842fac782d0a630ce55190bd623a3c1c590ec7495530539505e390002717",
        "urls": [
          "bzz-raw://6273de44f89673c53a1c8a7bb97aafb0bb68a3b2752c973e1511fe937f0a32b6",
          "dweb:/ipfs/QmPfJx17gye1NLHgJnKBKN5LEnZs7mhfBkyQ9H8xayfvcw"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/diamond/facets/ownable/OwnableService.sol": {
        "keccak256": "0xc96ea2c75519d986a75fb86a1c3ec08794fee823c5303da8c03869bfb505185d",
        "urls": [
          "bzz-raw://b19857cd8fe0c892052300a78ba670ae98048a42fc69f0d2da946c03dc671900",
          "dweb:/ipfs/QmVecFwkx6zhcn6MiCFoisMVWs6Y6t94n4H4Xwf5tSgdto"
        ],
        "license": "Apache-2.0"
      },
      "packages/contracts/src/diamond/facets/ownable/OwnableStorage.sol": {
        "keccak256": "0xf37c305730d5f4c38242252303efcf273a4e81554637e2346db593e45d6cd551",
        "urls": [
          "bzz-raw://b78ac1b163b9d8a9f39d47f86f3ec562398038c1ea217bdece38dbcd90b07a22",
          "dweb:/ipfs/QmQB25TBF1VSNtpfHBzfs8FLANeGoGfj7Zz5hQmzaE7zFH"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "packages/contracts/src/diamond/facets/cut/DiamondCut.sol",
    "id": 47714,
    "exportedSymbols": {
      "DiamondCut": [
        47713
      ],
      "DiamondCutBase": [
        47867
      ],
      "IDiamond": [
        47656
      ],
      "IDiamondCut": [
        48637
      ],
      "OwnableService": [
        49893
      ],
      "Ownable__NotOwner": [
        49826
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:790:115",
    "nodes": [
      {
        "id": 47658,
        "nodeType": "PragmaDirective",
        "src": "39:24:115",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 47660,
        "nodeType": "ImportDirective",
        "src": "79:60:115",
        "nodes": [],
        "absolutePath": "packages/contracts/src/diamond/IDiamond.sol",
        "file": "contracts/src/diamond/IDiamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47714,
        "sourceUnit": 47657,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47659,
              "name": "IDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47656,
              "src": "87:8:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47662,
        "nodeType": "ImportDirective",
        "src": "140:46:115",
        "nodes": [],
        "absolutePath": "packages/contracts/src/diamond/facets/cut/IDiamondCut.sol",
        "file": "./IDiamondCut.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47714,
        "sourceUnit": 48638,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47661,
              "name": "IDiamondCut",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48637,
              "src": "148:11:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47664,
        "nodeType": "ImportDirective",
        "src": "215:52:115",
        "nodes": [],
        "absolutePath": "packages/contracts/src/diamond/facets/cut/DiamondCutBase.sol",
        "file": "./DiamondCutBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47714,
        "sourceUnit": 47868,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47663,
              "name": "DiamondCutBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47867,
              "src": "223:14:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47667,
        "nodeType": "ImportDirective",
        "src": "268:106:115",
        "nodes": [],
        "absolutePath": "packages/contracts/src/diamond/facets/ownable/OwnableService.sol",
        "file": "contracts/src/diamond/facets/ownable/OwnableService.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47714,
        "sourceUnit": 49894,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47665,
              "name": "OwnableService",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49893,
              "src": "276:14:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 47666,
              "name": "Ownable__NotOwner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49826,
              "src": "292:17:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47713,
        "nodeType": "ContractDefinition",
        "src": "376:452:115",
        "nodes": [
          {
            "id": 47699,
            "nodeType": "FunctionDefinition",
            "src": "461:242:115",
            "nodes": [],
            "body": {
              "id": 47698,
              "nodeType": "Block",
              "src": "584:119:115",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 47685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "594:19:115",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47683,
                        "name": "_checkDiamondCut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47712,
                        "src": "595:16:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                          "typeString": "function () view returns (bool)"
                        }
                      },
                      "id": 47684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "595:18:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47691,
                  "nodeType": "IfStatement",
                  "src": "590:61:115",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 47687,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "640:3:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "644:6:115",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "640:10:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47686,
                        "name": "Ownable__NotOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49826,
                        "src": "622:17:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                          "typeString": "function (address) pure"
                        }
                      },
                      "id": 47689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "622:29:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47690,
                    "nodeType": "RevertStatement",
                    "src": "615:36:115"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47693,
                        "name": "facetCuts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47676,
                        "src": "669:9:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$47655_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        }
                      },
                      {
                        "id": 47694,
                        "name": "init",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47678,
                        "src": "680:4:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47695,
                        "name": "initPayload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47680,
                        "src": "686:11:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$47655_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 47692,
                      "name": "_diamondCut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47849,
                      "src": "657:11:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$47655_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (struct IDiamond.FacetCut memory[] memory,address,bytes memory)"
                      }
                    },
                    "id": 47696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:41:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47697,
                  "nodeType": "ExpressionStatement",
                  "src": "657:41:115"
                }
              ]
            },
            "baseFunctions": [
              48636
            ],
            "documentation": {
              "id": 47672,
              "nodeType": "StructuredDocumentation",
              "src": "431:27:115",
              "text": "@inheritdoc IDiamondCut"
            },
            "functionSelector": "1f931c1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "diamondCut",
            "nameLocation": "470:10:115",
            "parameters": {
              "id": 47681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47676,
                  "mutability": "mutable",
                  "name": "facetCuts",
                  "nameLocation": "513:9:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 47699,
                  "src": "486:36:115",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_FacetCut_$47655_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct IDiamond.FacetCut[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47674,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 47673,
                        "name": "IDiamond.FacetCut",
                        "nameLocations": [
                          "486:8:115",
                          "495:8:115"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 47655,
                        "src": "486:17:115"
                      },
                      "referencedDeclaration": 47655,
                      "src": "486:17:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$47655_storage_ptr",
                        "typeString": "struct IDiamond.FacetCut"
                      }
                    },
                    "id": 47675,
                    "nodeType": "ArrayTypeName",
                    "src": "486:19:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$47655_storage_$dyn_storage_ptr",
                      "typeString": "struct IDiamond.FacetCut[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47678,
                  "mutability": "mutable",
                  "name": "init",
                  "nameLocation": "536:4:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 47699,
                  "src": "528:12:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47680,
                  "mutability": "mutable",
                  "name": "initPayload",
                  "nameLocation": "559:11:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 47699,
                  "src": "546:24:115",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47679,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "546:5:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "480:94:115"
            },
            "returnParameters": {
              "id": 47682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:0:115"
            },
            "scope": 47713,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47712,
            "nodeType": "FunctionDefinition",
            "src": "707:119:115",
            "nodes": [],
            "body": {
              "id": 47711,
              "nodeType": "Block",
              "src": "772:54:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 47704,
                          "name": "OwnableService",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49893,
                          "src": "785:14:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OwnableService_$49893_$",
                            "typeString": "type(library OwnableService)"
                          }
                        },
                        "id": 47705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "800:5:115",
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49837,
                        "src": "785:20:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 47706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "785:22:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 47707,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "811:3:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 47708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "815:6:115",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "811:10:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "785:36:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 47703,
                  "id": 47710,
                  "nodeType": "Return",
                  "src": "778:43:115"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkDiamondCut",
            "nameLocation": "716:16:115",
            "parameters": {
              "id": 47700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "732:2:115"
            },
            "returnParameters": {
              "id": 47703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47702,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47712,
                  "src": "766:4:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47701,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:4:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "765:6:115"
            },
            "scope": 47713,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47668,
              "name": "IDiamondCut",
              "nameLocations": [
                "399:11:115"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48637,
              "src": "399:11:115"
            },
            "id": 47669,
            "nodeType": "InheritanceSpecifier",
            "src": "399:11:115"
          },
          {
            "baseName": {
              "id": 47670,
              "name": "DiamondCutBase",
              "nameLocations": [
                "412:14:115"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47867,
              "src": "412:14:115"
            },
            "id": 47671,
            "nodeType": "InheritanceSpecifier",
            "src": "412:14:115"
          }
        ],
        "canonicalName": "DiamondCut",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47713,
          47867,
          48637,
          48622
        ],
        "name": "DiamondCut",
        "nameLocation": "385:10:115",
        "scope": 47714,
        "usedErrors": [
          48033,
          48035,
          48039,
          48043,
          48049,
          48053,
          48055,
          48059,
          48063,
          48065,
          48069,
          49826
        ],
        "usedEvents": [
          48621
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 115
}
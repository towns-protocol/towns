/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Member, MemberInterface } from "../Member";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "name_",
        type: "string",
        internalType: "string",
      },
      {
        name: "symbol_",
        type: "string",
        internalType: "string",
      },
      {
        name: "baseURI_",
        type: "string",
        internalType: "string",
      },
      {
        name: "merkleRoot_",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "MINT_PRICE",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "TOTAL_SUPPLY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "_hasMinted",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "baseURI",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "currentTokenId",
    inputs: [],
    outputs: [
      {
        name: "_value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getApproved",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownerOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "privateMint",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
      {
        name: "allowance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "proof",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "publicMint",
    inputs: [
      {
        name: "recipient",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setBaseURI",
    inputs: [
      {
        name: "baseURI_",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startPublicMint",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "startWaitlistMint",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenURI",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawPayments",
    inputs: [
      {
        name: "payee",
        type: "address",
        internalType: "address payable",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "MintStateChanged",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "prevState",
        type: "uint8",
        indexed: true,
        internalType: "enum IMember.MintState",
      },
      {
        name: "newState",
        type: "uint8",
        indexed: true,
        internalType: "enum IMember.MintState",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Minted",
    inputs: [
      {
        name: "recipient",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "timestamp",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyMinted",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidMintState",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidProof",
    inputs: [],
  },
  {
    type: "error",
    name: "MaxSupplyReached",
    inputs: [],
  },
  {
    type: "error",
    name: "MintPriceNotPaid",
    inputs: [],
  },
  {
    type: "error",
    name: "NonExistentTokenURI",
    inputs: [],
  },
  {
    type: "error",
    name: "NotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "WithdrawTransfer",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200212d3803806200212d8339810160408190526200003491620001b0565b83836000620000448382620002d8565b506001620000538282620002d8565b505050620000706200006a6200009560201b60201c565b62000099565b60076200007e8382620002d8565b5060805250506009805460ff1916905550620003a4565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011357600080fd5b81516001600160401b0380821115620001305762000130620000eb565b604051601f8301601f19908116603f011681019082821181831017156200015b576200015b620000eb565b816040528381526020925086838588010111156200017857600080fd5b600091505b838210156200019c57858201830151818301840152908201906200017d565b600093810190920192909252949350505050565b60008060008060808587031215620001c757600080fd5b84516001600160401b0380821115620001df57600080fd5b620001ed8883890162000101565b955060208701519150808211156200020457600080fd5b620002128883890162000101565b945060408701519150808211156200022957600080fd5b50620002388782880162000101565b606096909601519497939650505050565b600181811c908216806200025e57607f821691505b6020821081036200027f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d357600081815260208120601f850160051c81016020861015620002ae5750805b601f850160051c820191505b81811015620002cf57828155600101620002ba565b5050505b505050565b81516001600160401b03811115620002f457620002f4620000eb565b6200030c8162000305845462000249565b8462000285565b602080601f8311600181146200034457600084156200032b5750858301515b600019600386901b1c1916600185901b178555620002cf565b600085815260208120601f198616915b82811015620003755788860151825594840194600190910190840162000354565b5085821015620003945787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051611d6d620003c06000396000610aa00152611d6d6000f3fe60806040526004361061019b5760003560e01c8063715018a6116100ec578063a839e5011161008a578063c87b56dd11610064578063c87b56dd14610455578063d92d1bd614610475578063e985e9c5146104a5578063f2fde38b146104ee57600080fd5b8063a839e50114610404578063b88d4fde14610419578063c002d23d1461043957600080fd5b8063902d55a5116100c6578063902d55a5146103a657806395d89b41146103bc5780639886a902146103d1578063a22cb465146103e457600080fd5b8063715018a61461035e57806376c64c62146103735780638da5cb5b1461038857600080fd5b806331b3eb941161015957806355f804b31161013357806355f804b3146102e95780636352211e146103095780636c0360eb1461032957806370a082311461033e57600080fd5b806331b3eb941461029657806332a93a3a146102b657806342842e0e146102c957600080fd5b80629a9b7b146101a057806301ffc9a7146101ca57806306fdde03146101fa578063081812fc1461021c578063095ea7b31461025457806323b872dd14610276575b600080fd5b3480156101ac57600080fd5b50600a546101b79081565b6040519081526020015b60405180910390f35b3480156101d657600080fd5b506101ea6101e536600461168c565b61050e565b60405190151581526020016101c1565b34801561020657600080fd5b5061020f610560565b6040516101c191906116ef565b34801561022857600080fd5b5061023c610237366004611702565b6105f2565b6040516001600160a01b0390911681526020016101c1565b34801561026057600080fd5b5061027461026f366004611730565b610619565b005b34801561028257600080fd5b5061027461029136600461175c565b610733565b3480156102a257600080fd5b506102746102b136600461179d565b610764565b6101b76102c436600461179d565b6107e0565b3480156102d557600080fd5b506102746102e436600461175c565b610817565b3480156102f557600080fd5b50610274610304366004611846565b610832565b34801561031557600080fd5b5061023c610324366004611702565b61084a565b34801561033557600080fd5b5061020f6108aa565b34801561034a57600080fd5b506101b761035936600461179d565b610938565b34801561036a57600080fd5b506102746109be565b34801561037f57600080fd5b506102746109d2565b34801561039457600080fd5b506006546001600160a01b031661023c565b3480156103b257600080fd5b506101b76109c481565b3480156103c857600080fd5b5061020f6109ee565b6101b76103df36600461188f565b6109fd565b3480156103f057600080fd5b506102746103ff36600461191b565b610afd565b34801561041057600080fd5b50610274610b08565b34801561042557600080fd5b50610274610434366004611959565b610b24565b34801561044557600080fd5b506101b767011c37937e08000081565b34801561046157600080fd5b5061020f610470366004611702565b610b5c565b34801561048157600080fd5b506101ea61049036600461179d565b60086020526000908152604090205460ff1681565b3480156104b157600080fd5b506101ea6104c03660046119d9565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156104fa57600080fd5b5061027461050936600461179d565b610be2565b60006001600160e01b031982166380ac58cd60e01b148061053f57506001600160e01b03198216635b5e139f60e01b145b8061055a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461056f90611a07565b80601f016020809104026020016040519081016040528092919081815260200182805461059b90611a07565b80156105e85780601f106105bd576101008083540402835291602001916105e8565b820191906000526020600020905b8154815290600101906020018083116105cb57829003601f168201915b5050505050905090565b60006105fd82610c5b565b506000908152600460205260409020546001600160a01b031690565b60006106248261084a565b9050806001600160a01b0316836001600160a01b0316036106965760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106b257506106b281336104c0565b6107245760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161068d565b61072e8383610cba565b505050565b61073d3382610d28565b6107595760405162461bcd60e51b815260040161068d90611a41565b61072e838383610da6565b61076c610f0a565b60405147906000906001600160a01b0384169083908381818185875af1925050503d80600081146107b9576040519150601f19603f3d011682016040523d82523d6000602084013e6107be565b606091505b505090508061072e5760405163d23a9e8960e01b815260040160405180910390fd5b60006107eb82610f64565b6107f3610f8b565b6107fb610fb3565b61080482610fdd565b61080e6002611017565b61055a8261105e565b61072e83838360405180602001604052806000815250610b24565b61083a610f0a565b60076108468282611adc565b5050565b6000818152600260205260408120546001600160a01b03168061055a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161068d565b600780546108b790611a07565b80601f01602080910402602001604051908101604052809291908181526020018280546108e390611a07565b80156109305780601f1061090557610100808354040283529160200191610930565b820191906000526020600020905b81548152906001019060200180831161091357829003601f168201915b505050505081565b60006001600160a01b0382166109a25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161068d565b506001600160a01b031660009081526003602052604090205490565b6109c6610f0a565b6109d060006110ee565b565b6109da610f0a565b6109e46001611017565b6109d06002611140565b60606001805461056f90611a07565b6000610a0885610f64565b610a10610f8b565b610a18610fb3565b610a2185610fdd565b610a2a846111c5565b6040516bffffffffffffffffffffffff19606087901b16602082015260348101859052600090605401604051602081830303815290604052805190602001209050610acb8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f0000000000000000000000000000000000000000000000000000000000000000925085915061120a9050565b610ae8576040516309bde33960e01b815260040160405180910390fd5b610af18661105e565b9150505b949350505050565b610846338383611220565b610b10610f0a565b610b1a6000611017565b6109d06001611140565b610b2e3383610d28565b610b4a5760405162461bcd60e51b815260040161068d90611a41565b610b56848484846112ee565b50505050565b60606000610b698361084a565b6001600160a01b031603610b905760405163d872946b60e01b815260040160405180910390fd5b600060078054610b9f90611a07565b905011610bbb576040518060200160405280600081525061055a565b6007604051602001610bcd9190611b9c565b60405160208183030381529060405292915050565b610bea610f0a565b6001600160a01b038116610c4f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161068d565b610c58816110ee565b50565b6000818152600260205260409020546001600160a01b0316610c585760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161068d565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610cef8261084a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d348361084a565b9050806001600160a01b0316846001600160a01b03161480610d7b57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610af55750836001600160a01b0316610d94846105f2565b6001600160a01b031614949350505050565b826001600160a01b0316610db98261084a565b6001600160a01b031614610ddf5760405162461bcd60e51b815260040161068d90611c29565b6001600160a01b038216610e415760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161068d565b826001600160a01b0316610e548261084a565b6001600160a01b031614610e7a5760405162461bcd60e51b815260040161068d90611c29565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146109d05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161068d565b6001600160a01b038116610c585760405163e6c4247b60e01b815260040160405180910390fd5b67011c37937e08000034146109d0576040516310f0c8f160e11b815260040160405180910390fd5b6109c4610fbf600a5490565b106109d05760405163d05cb60960e01b815260040160405180910390fd5b6001600160a01b03811660009081526008602052604090205460ff1615610c5857604051631bbdf5c560e31b815260040160405180910390fd5b80600281111561102957611029611c6e565b60095460ff16600281111561104057611040611c6e565b14610c585760405163a1f6623960e01b815260040160405180910390fd5b6001600160a01b0381166000908152600860205260408120805460ff191660011790558061108b600a5490565b905061109b600a80546001019055565b6110a58382611321565b604080518281524260208201526001600160a01b038516917f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff910160405180910390a292915050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6009805460ff811691839160ff1916600183600281111561116357611163611c6e565b021790555081600281111561117a5761117a611c6e565b81600281111561118c5761118c611c6e565b60405142815233907f7a5907205f46c7df4a68b33c1da8921886b57f025f0ec67a42c38d2c2013a7849060200160405180910390a45050565b600060095460ff1660028111156111de576111de611c6e565b1480156111ec575080600114155b15610c5857604051631eb49d6d60e11b815260040160405180910390fd5b600082611217858461133b565b14949350505050565b816001600160a01b0316836001600160a01b0316036112815760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161068d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6112f9848484610da6565b61130584848484611388565b610b565760405162461bcd60e51b815260040161068d90611c84565b610846828260405180602001604052806000815250611486565b600081815b84518110156113805761136c8286838151811061135f5761135f611cd6565b60200260200101516114b9565b91508061137881611cec565b915050611340565b509392505050565b60006001600160a01b0384163b1561147e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906113cc903390899088908890600401611d13565b6020604051808303816000875af1925050508015611407575060408051601f3d908101601f1916820190925261140491810190611d50565b60015b611464573d808015611435576040519150601f19603f3d011682016040523d82523d6000602084013e61143a565b606091505b50805160000361145c5760405162461bcd60e51b815260040161068d90611c84565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610af5565b506001610af5565b61149083836114eb565b61149d6000848484611388565b61072e5760405162461bcd60e51b815260040161068d90611c84565b60008183106114d55760008281526020849052604090206114e4565b60008381526020839052604090205b9392505050565b6001600160a01b0382166115415760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161068d565b6000818152600260205260409020546001600160a01b0316156115a65760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161068d565b6000818152600260205260409020546001600160a01b03161561160b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161068d565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610c5857600080fd5b60006020828403121561169e57600080fd5b81356114e481611676565b6000815180845260005b818110156116cf576020818501810151868301820152016116b3565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006114e460208301846116a9565b60006020828403121561171457600080fd5b5035919050565b6001600160a01b0381168114610c5857600080fd5b6000806040838503121561174357600080fd5b823561174e8161171b565b946020939093013593505050565b60008060006060848603121561177157600080fd5b833561177c8161171b565b9250602084013561178c8161171b565b929592945050506040919091013590565b6000602082840312156117af57600080fd5b81356114e48161171b565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156117eb576117eb6117ba565b604051601f8501601f19908116603f01168101908282118183101715611813576118136117ba565b8160405280935085815286868601111561182c57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561185857600080fd5b813567ffffffffffffffff81111561186f57600080fd5b8201601f8101841361188057600080fd5b610af5848235602084016117d0565b600080600080606085870312156118a557600080fd5b84356118b08161171b565b935060208501359250604085013567ffffffffffffffff808211156118d457600080fd5b818701915087601f8301126118e857600080fd5b8135818111156118f757600080fd5b8860208260051b850101111561190c57600080fd5b95989497505060200194505050565b6000806040838503121561192e57600080fd5b82356119398161171b565b91506020830135801515811461194e57600080fd5b809150509250929050565b6000806000806080858703121561196f57600080fd5b843561197a8161171b565b9350602085013561198a8161171b565b925060408501359150606085013567ffffffffffffffff8111156119ad57600080fd5b8501601f810187136119be57600080fd5b6119cd878235602084016117d0565b91505092959194509250565b600080604083850312156119ec57600080fd5b82356119f78161171b565b9150602083013561194e8161171b565b600181811c90821680611a1b57607f821691505b602082108103611a3b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b601f82111561072e57600081815260208120601f850160051c81016020861015611ab55750805b601f850160051c820191505b81811015611ad457828155600101611ac1565b505050505050565b815167ffffffffffffffff811115611af657611af66117ba565b611b0a81611b048454611a07565b84611a8e565b602080601f831160018114611b3f5760008415611b275750858301515b600019600386901b1c1916600185901b178555611ad4565b600085815260208120601f198616915b82811015611b6e57888601518255948401946001909101908401611b4f565b5085821015611b8c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354611baa81611a07565b60018281168015611bc25760018114611bd757611c06565b60ff1984168752821515830287019450611c06565b8760005260208060002060005b85811015611bfd5781548a820152908401908201611be4565b50505082870194505b50506e636f756e63696c6d6574616461746160881b83525050600f019392505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060018201611d0c57634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611d46908301846116a9565b9695505050505050565b600060208284031215611d6257600080fd5b81516114e48161167656";

type MemberConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MemberConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Member__factory extends ContractFactory {
  constructor(...args: MemberConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    baseURI_: PromiseOrValue<string>,
    merkleRoot_: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Member> {
    return super.deploy(
      name_,
      symbol_,
      baseURI_,
      merkleRoot_,
      overrides || {}
    ) as Promise<Member>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    baseURI_: PromiseOrValue<string>,
    merkleRoot_: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      baseURI_,
      merkleRoot_,
      overrides || {}
    );
  }
  override attach(address: string): Member {
    return super.attach(address) as Member;
  }
  override connect(signer: Signer): Member__factory {
    return super.connect(signer) as Member__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MemberInterface {
    return new utils.Interface(_abi) as MemberInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Member {
    return new Contract(address, _abi, signerOrProvider) as Member;
  }
}

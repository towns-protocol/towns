/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MembershipFacet,
  MembershipFacetInterface,
} from "../MembershipFacet";

const _abi = [
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC5643__DurationZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC5643__InvalidTokenId",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC5643__NotApprovedOrOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC5643__SubscriptionNotRenewable",
    type: "error",
  },
  {
    inputs: [],
    name: "Entitlement__InvalidValue",
    type: "error",
  },
  {
    inputs: [],
    name: "Entitlement__NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "Entitlement__ValueAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "Initializable_InInitializingState",
    type: "error",
  },
  {
    inputs: [],
    name: "Initializable_NotInInitializingState",
    type: "error",
  },
  {
    inputs: [],
    name: "Introspection_AlreadySupported",
    type: "error",
  },
  {
    inputs: [],
    name: "Introspection_NotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__AlreadyMember",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InsufficientPayment",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidCurrency",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidFeeRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidFreeAllocation",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__PriceTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "Pausable__NotPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "Pausable__Paused",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuard__ReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "version",
        type: "uint32",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "InterfaceAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "InterfaceRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "MembershipCurrencyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "MembershipFeeRecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "allocation",
        type: "uint256",
      },
    ],
    name: "MembershipFreeAllocationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "MembershipLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "MembershipPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "expiration",
        type: "uint64",
      },
    ],
    name: "SubscriptionUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "__ERC721A_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "duration",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "freeAllocation",
            type: "uint256",
          },
        ],
        internalType: "struct IMembershipBase.MembershipInfo",
        name: "info",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "townFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "__Membership_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_getMembershipCurrency",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getMembershipFeeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getMembershipFreeAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getMembershipPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getMembershipSupplyLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getTownFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCurrency",
        type: "address",
      },
    ],
    name: "_setMembershipCurrency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "_setMembershipFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newAllocation",
        type: "uint256",
      },
    ],
    name: "_setMembershipFreeAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "_setMembershipPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "_setMembershipSupplyLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelMembership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "expiresAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembershipCurrency",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembershipDuration",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembershipFeeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembershipFreeAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembershipLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembershipPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTownFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "joinTown",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "renewMembership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCurrency",
        type: "address",
      },
    ],
    name: "setMembershipCurrency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "newDuration",
        type: "uint64",
      },
    ],
    name: "setMembershipDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "setMembershipFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newAllocation",
        type: "uint256",
      },
    ],
    name: "setMembershipFreeAllocation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "setMembershipLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setMembershipPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b620000ca565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de8054640100000000900460ff16156200006f576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff9081161015620000c757805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b6136dd80620000da6000396000f3fe6080604052600436106102675760003560e01c8063702515631161014457806395d89b41116100b6578063b88d4fde1161007a578063b88d4fde146106ac578063bf3bc878146106bf578063c87b56dd146106d4578063d2f01f19146106f4578063e985e9c514610714578063f9d5d22c1461073457600080fd5b806395d89b411461062257806397fb7c1e14610637578063a22cb46514610657578063b3a5be6d14610677578063b83073761461068c57600080fd5b80638120f0ba116101085780638120f0ba1461056b57806383f3f0dc146105985780638934207f146105b857806389def320146105cd5780638aefd434146105ed57806395d600c81461060d57600080fd5b806370251563146104e1578063706b8e09146104f657806370a082311461050b57806373fc5a051461052b5780637d0567c41461054b57600080fd5b806323b872dd116101dd57806361a9c7df116101a157806361a9c7df1461044457806362452006146104575780636340d096146104775780636352211e1461048c578063657e45e8146104ac57806369d5f38a146104c157600080fd5b806323b872dd146103b957806342842e0e146103cc578063572b6c05146103df5780635b312fce1461040f5780635becd24a1461042457600080fd5b806316a344b41161022f57806316a344b41461032757806317c957091461033a57806318160ddd1461035a57806318e5da651461036f5780631b3972f01461038f5780631d214b4d146103a457600080fd5b806306fdde031461026c578063081812fc14610297578063095ea7b3146102cf5780630c3a01b1146102e45780631278076a14610304575b600080fd5b34801561027857600080fd5b50610281610754565b60405161028e9190612eb7565b60405180910390f35b3480156102a357600080fd5b506102b76102b2366004612eca565b6107ef565b6040516001600160a01b03909116815260200161028e565b6102e26102dd366004612f03565b610800565b005b3480156102f057600080fd5b506102e26102ff366004612eca565b610810565b34801561031057600080fd5b50610319610820565b60405190815260200161028e565b610319610335366004612f2f565b61082f565b34801561034657600080fd5b50610319610355366004612eca565b610958565b34801561036657600080fd5b50610319610972565b34801561037b57600080fd5b506102e261038a366004612f2f565b61097c565b34801561039b57600080fd5b506103196109d1565b3480156103b057600080fd5b506102b76109e4565b6102e26103c7366004612f4c565b610a00565b6102e26103da366004612f4c565b610bf5565b3480156103eb57600080fd5b506103ff6103fa366004612f2f565b610c15565b604051901515815260200161028e565b34801561041b57600080fd5b506102b7610c52565b34801561043057600080fd5b506102e261043f366004612eca565b610c6e565b6102e2610452366004612f2f565b610cf3565b34801561046357600080fd5b506102e2610472366004612f2f565b610dc1565b34801561048357600080fd5b506102b7610dee565b34801561049857600080fd5b506102b76104a7366004612eca565b610df8565b3480156104b857600080fd5b506102b7610e03565b3480156104cd57600080fd5b506102e26104dc366004612eca565b610e0d565b3480156104ed57600080fd5b506102b7610e6a565b34801561050257600080fd5b50610319610e86565b34801561051757600080fd5b50610319610526366004612f2f565b610e90565b34801561053757600080fd5b506102e2610546366004612eca565b610ec3565b34801561055757600080fd5b506102e2610566366004612f2f565b610ed3565b34801561057757600080fd5b50610580610f20565b6040516001600160401b03909116815260200161028e565b3480156105a457600080fd5b506102e26105b3366004612fad565b610f2a565b3480156105c457600080fd5b50610319610f77565b3480156105d957600080fd5b506102e26105e8366004612eca565b610f8a565b3480156105f957600080fd5b506102e261060836600461309e565b611020565b34801561061957600080fd5b506103196110cd565b34801561062e57600080fd5b506102816110d7565b34801561064357600080fd5b506102e2610652366004612eca565b6110ef565b34801561066357600080fd5b506102e26106723660046131b1565b611144565b34801561068357600080fd5b506103196111e6565b34801561069857600080fd5b506102e26106a7366004612f2f565b611288565b6102e26106ba3660046131ea565b6112b5565b3480156106cb57600080fd5b506102b76112ff565b3480156106e057600080fd5b506102816106ef366004612eca565b611309565b34801561070057600080fd5b506102e261070f366004613269565b61139a565b34801561072057600080fd5b506103ff61072f3660046132cc565b6113ee565b34801561074057600080fd5b506102e261074f366004612eca565b6113fa565b606061075e61143d565b600201805461076c906132fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610798906132fa565b80156107e55780601f106107ba576101008083540402835291602001916107e5565b820191906000526020600020905b8154815290600101906020018083116107c857829003601f168201915b5050505050905090565b60006107fa82611461565b92915050565b61080c828260016114ae565b5050565b8061081961157a565b6002015550565b600061082a6109d1565b905090565b6000600260008051602061369d833981519152540361086157604051635db5c7cd60e11b815260040160405180910390fd5b610878600260008051602061369d83398151915255565b6108a1604051806040016040528060088152602001672537b4b72a37bbb760c11b81525061159e565b60006108ac836115d4565b11156108cb576040516316d9a23f60e31b815260040160405180910390fd5b6108d3610f77565b158015906108ef57506108e4610f77565b6108ec61163c565b10155b1561090d57604051637efcdb4960e01b815260040160405180910390fd5b61091561165b565b90506109208261166b565b61092b826001611936565b61093c81610937611950565b611a0a565b610953600160008051602061369d83398151915255565b919050565b600061096382611afc565b6001600160401b031692915050565b600061082a61163c565b610984611b36565b6001600160a01b0316336001600160a01b0316146109bc576040516365f4906560e01b81523360048201526024015b60405180910390fd5b6109c581611bfa565b6109ce81610dc1565b50565b60006109db61157a565b60020154905090565b60006109ee61157a565b600501546001600160a01b0316919050565b6000610a0b82611c21565b9050836001600160a01b0316816001600160a01b031614610a3e5760405162a1148160e81b815260040160405180910390fd5b600080610a4a84611cc5565b91509150610a708187610a5b611ced565b6001600160a01b039081169116811491141790565b610a9d57610a808661072f611ced565b610a9d57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610ac457604051633a954ecd60e21b815260040160405180910390fd5b610ad18686866001611cf7565b8015610adc57600082555b610ae461143d565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610b1061143d565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b17610b4761143d565b60008681526004919091016020526040812091909155600160e11b84169003610bbd5760018401610b7661143d565b600082815260049190910160205260408120549003610bbb57610b9761143d565b548114610bbb5783610ba761143d565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b03166000805160206136bd83398151915260405160405180910390a45b505050505050565b610c10838383604051806020016040528060008152506112b5565b505050565b6001600160a01b031660009081527f9be1203d7c008407e47cf520c8f15f54b074f0a2af3750145c254290338afc3f602052604090205460ff1690565b6000610c5c61157a565b600601546001600160a01b0316919050565b610c76611b36565b6001600160a01b0316336001600160a01b031614610ca9576040516365f4906560e01b81523360048201526024016109b3565b6000610cb3610f77565b90508015801590610cc357508082115b15610ce15760405163c3983b9160e01b815260040160405180910390fd5b610cea82611d01565b61080c826113fa565b600260008051602061369d8339815191525403610d2357604051635db5c7cd60e11b815260040160405180910390fd5b610d3a600260008051602061369d83398151915255565b6001600160a01b038116610d6157604051635fbd571760e01b815260040160405180910390fd5b6000610d6c82611da6565b9050610d7781611dd2565b610d94576040516367d9dca160e11b815260040160405180910390fd5b610d9d8261166b565b610da981610937611950565b506109ce600160008051602061369d83398151915255565b80610dca61157a565b60050180546001600160a01b0319166001600160a01b039290921691909117905550565b600061082a610c52565b60006107fa82611c21565b600061082a610e6a565b610e15611b36565b6001600160a01b0316336001600160a01b031614610e48576040516365f4906560e01b81523360048201526024016109b3565b610e58610e53610e6a565b611e3f565b610e6181611e66565b6109ce81610810565b6000610e7461157a565b600401546001600160a01b0316919050565b600061082a6111e6565b600042610ea4610e9f84611da6565b611afc565b6001600160401b031611610eba57506000919050565b6107fa826115d4565b80610ecc61157a565b6003015550565b610edb611b36565b6001600160a01b0316336001600160a01b031614610f0e576040516365f4906560e01b81523360048201526024016109b3565b610f1781611e3f565b6109ce81611288565b600061082a611950565b610f32611b36565b6001600160a01b0316336001600160a01b031614610f65576040516365f4906560e01b81523360048201526024016109b3565b610f6e81611ef4565b6109ce81611f8f565b6000610f8161157a565b60030154905090565b600260008051602061369d8339815191525403610fba57604051635db5c7cd60e11b815260040160405180910390fd5b610fd1600260008051602061369d83398151915255565b610fda81611dd2565b610ff7576040516367d9dca160e11b815260040160405180910390fd5b61100081611fc2565b61100981611fcd565b6109ce600160008051602061369d83398151915255565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff1661106a57604051630ef4733760e31b815260040160405180910390fd5b6110748383612040565b61108683600001518460200151612152565b610c10816001600160a01b031660009081527f9be1203d7c008407e47cf520c8f15f54b074f0a2af3750145c254290338afc3f60205260409020805460ff19166001179055565b600061082a610f77565b60606110e161143d565b600301805461076c906132fa565b6110f7611b36565b6001600160a01b0316336001600160a01b03161461112a576040516365f4906560e01b81523360048201526024016109b3565b61113b8161113661163c565b6121c6565b6109ce81610ec3565b8061114d61143d565b600701600061115a611ced565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561119e611ced565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111da911515815260200190565b60405180910390a35050565b6000806111f161157a565b600701549050801561120257919050565b61120a61157a565b60060160009054906101000a90046001600160a01b03166001600160a01b0316632cbb9d136040518163ffffffff1660e01b8152600401602060405180830381865afa15801561125e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112829190613334565b91505090565b8061129161157a565b60040180546001600160a01b0319166001600160a01b039290921691909117905550565b6112c0848484610a00565b6001600160a01b0383163b156112f9576112dc8484848461220e565b6112f9576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b600061082a6109e4565b606061131482612300565b61133157604051630a14c4b560e41b815260040160405180910390fd5b600061134860408051602081019091526000815290565b905080516000036113685760405180602001604052806000815250611393565b806113728461233c565b60405160200161138392919061334d565b6040516020818303038152906040525b9392505050565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff166113e457604051630ef4733760e31b815260040160405180910390fd5b61080c8282612152565b60006113938383612380565b600061140461157a565b6007810183905560405190915082907fab14a23e88fb272313490d4f20d63098e64fd38304c0e07a377db98c2b39b92f90600090a25050565b7f234d8962d7c9a6a6604d7f98797e6ad6d7a886804f7409feb26422e27bf8125490565b600061146c82612300565b611489576040516333d1c03960e21b815260040160405180910390fd5b61149161143d565b60009283526006016020525060409020546001600160a01b031690565b60006114b983610df8565b9050811561150f57806001600160a01b03166114d3611ced565b6001600160a01b03161461150f576114f2816114ed611ced565b612380565b61150f576040516367d9dca160e11b815260040160405180910390fd5b8361151861143d565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b7f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600d90565b6115b760405180602001604052806000815250826123bd565b6109ce57604051630ce39a4b60e21b815260040160405180910390fd5b60006001600160a01b0382166115fd576040516323d3ad8160e21b815260040160405180910390fd5b6001600160401b0361160d61143d565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b60008061164761143d565b6001015461165361143d565b540303919050565b600061166561143d565b54919050565b60006116756109d1565b905080600003611683575050565b600061168d61157a565b905060008160060160009054906101000a90046001600160a01b03166001600160a01b0316630eac306d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061170a9190613334565b90508083101561172d57604051635894b54560e11b815260040160405180910390fd5b6006820154604080516301332c8360e61b815290516000926001600160a01b031691634ccb20c09160048083019260209291908290030181865afa158015611779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179d919061337c565b905060008360060160009054906101000a90046001600160a01b03166001600160a01b0316639f6542aa6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181a9190613399565b905060008460060160009054906101000a90046001600160a01b03166001600160a01b031663190eaaba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118979190613334565b905060006118a585886133d3565b905080156118d45784826118bd61ffff8616846133e6565b6118c791906133fd565b6118d1919061341f565b94505b60048601546118ee906001600160a01b031689868861244f565b80600003611900575050505050505050565b6004860154600587015461192c916001600160a01b03908116918b9116611927898c6133d3565b61244f565b5050505050505050565b61080c828260405180602001604052806000815250612495565b60008061195b61157a565b6006810154909150600160a01b90046001600160401b0316156119915760060154600160a01b90046001600160401b0316919050565b8060060160009054906101000a90046001600160a01b03166001600160a01b0316638120f0ba6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112829190613432565b60008281527f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e3616020819052604082205490916001600160401b0390911690818103611a6057611a59844261344f565b9050611a96565b611a6985612512565b611a8957604051637be9098d60e11b8152600481018690526024016109b3565b611a93848361344f565b90505b60008581526020848152604091829020805467ffffffffffffffff19166001600160401b038516908117909155915191825286917f2ec2be2c4b90c2cf13ecb6751a24daed6bb741ae5ed3f7371aabf9402f6d62e8910160405180910390a25050505050565b60009081527f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e36160205260409020546001600160401b031690565b6040805180820182527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d0546001600160a01b03168082527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d154602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa158015611bd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611282919061337c565b6001600160a01b0381166109ce57604051631492df6160e21b815260040160405180910390fd5b6000611c2b61143d565b600083815260049190910160205260408120549150600160e01b82169003611cac578060000361095357611c5d61143d565b548210611c7d57604051636f96cda160e11b815260040160405180910390fd5b611c8561143d565b600019909201600081815260049390930160205260409092205490508015611c7d57919050565b604051636f96cda160e11b815260040160405180910390fd5b6000806000611cd261143d565b60009485526006016020525050604090912080549092909150565b600061082a612549565b6112f98284612577565b6000611d0b61157a565b90508060060160009054906101000a90046001600160a01b03166001600160a01b0316632cbb9d136040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d869190613334565b82111561080c5760405163c3983b9160e01b815260040160405180910390fd5b6000611db061157a565b6001600160a01b03909216600090815260019290920160205250604090205490565b600080611dde83610df8565b9050806001600160a01b0316611df2612549565b6001600160a01b03161480611e0e5750611e0e816114ed612549565b806113935750611e1c612549565b6001600160a01b0316611e2e84611461565b6001600160a01b0316149392505050565b6001600160a01b0381166109ce57604051636da3122b60e01b815260040160405180910390fd5b6000611e70610c52565b6001600160a01b0316630eac306d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ead573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ed19190613334565b90508082101561080c57604051631a23d64760e11b815260040160405180910390fd5b611efc610c52565b6001600160a01b0316638120f0ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5d9190613432565b6001600160401b0316816001600160401b031611156109ce576040516341191e9760e11b815260040160405180910390fd5b80611f9861157a565b60060160146101000a8154816001600160401b0302191690836001600160401b0316021790555050565b6109ce8160006125c3565b7f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e361600082815260209182526040808220805467ffffffffffffffff191690555190815282917f2ec2be2c4b90c2cf13ecb6751a24daed6bb741ae5ed3f7371aabf9402f6d62e8910160405180910390a250565b600061204a61157a565b6006810180546001600160a01b0319166001600160a01b038516179055608084015190915061207890611ef4565b6120858360c00151611bfa565b6120928360e00151611d01565b6060830151600382015560a08301516001600160a01b0316156120b9578260a001516120cf565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee5b6004820180546001600160a01b039283166001600160a01b0319918216179091556040850151600284015560808501516006840180546001600160401b03909216600160a01b0267ffffffffffffffff60a01b1990921691909117905560c085015160058401805491909316911617905560e09092015160079092019190915550565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff1661219c57604051630ef4733760e31b815260040160405180910390fd5b6121ac6380ac58cd60e01b612744565b6121bc635b5e139f60e01b612744565b61080c8282612822565b808210156121e757604051636664d51760e11b815260040160405180910390fd5b6121ef610f77565b821161080c57604051636664d51760e11b815260040160405180910390fd5b6000836001600160a01b031663150b7a02612227611ced565b8786866040518563ffffffff1660e01b81526004016122499493929190613476565b6020604051808303816000875af1925050508015612284575060408051601f3d908101601f19168201909252612281918101906134b3565b60015b6122e2573d8080156122b2576040519150601f19603f3d011682016040523d82523d6000602084013e6122b7565b606091505b5080516000036122da576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b600061230a61143d565b54821080156107fa5750600160e01b61232161143d565b60008481526004919091016020526040902054161592915050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806123565750819003601f19909101908152919050565b600061238a61143d565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b60006123c7611ced565b6001600160a01b03166123d8611b36565b6001600160a01b0316148061139357507ff421ea548af7158b1d71ba0aeccf57104c067038bd8fd214edd05c09eb4f735b5460ff16158015611393575061139383612421611ced565b8460405160200161243291906134dd565b60405160208183030381529060405261244a906134f9565b612854565b80156112f95773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0385160161248957612484828261297d565b6112f9565b6112f984848484612a20565b61249f8383612a73565b6001600160a01b0383163b15610c105760006124b961143d565b5490508281035b6124d3600086838060010194508661220e565b6124f0576040516368d2bf6b60e11b815260040160405180910390fd5b8181106124c0578161250061143d565b541461250b57600080fd5b5050505050565b60004261251d611950565b6001600160401b0316612530919061341f565b61253983611afc565b6001600160401b03161092915050565b600060143610801590612560575061256033610c15565b15612572575060131936013560601c90565b503390565b600061258161157a565b60008481526020828152604080832080546001600160a01b039097166001600160a01b0319909716871790559482526001909201909152919091209190915550565b60006125ce83611c21565b9050806000806125dd86611cc5565b915091508415612621576125f48184610a5b611ced565b61262157612604836114ed611ced565b61262157604051632ce44b5f60e11b815260040160405180910390fd5b61262f836000886001611cf7565b801561263a57600082555b6fffffffffffffffffffffffffffffffff61265361143d565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b17600360e01b1761268c61143d565b60008881526004919091016020526040812091909155600160e11b8516900361270257600186016126bb61143d565b600082815260049190910160205260408120549003612700576126dc61143d565b54811461270057846126ec61143d565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b038616906000805160206136bd833981519152908390a461273061143d565b600190810180549091019055505050505050565b6001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c4602052604090205460ff1615156001146127d1576001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c460205260409020805460ff191660011790556127ea565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b600061282c61143d565b90506002810161283c8482613563565b506003810161284b8382613563565b50600090555050565b600061285e611b36565b6001600160a01b0316836001600160a01b03160361287e57506001611393565b7f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb855860006128ca7f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb8559612b97565b905060005b81811015612973576128e46001840182612ba1565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b815260040161291293929190613622565b602060405180830381865afa15801561292f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129539190613650565b156129615760019350612973565b8061296b8161366d565b9150506128cf565b5050509392505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146129ca576040519150601f19603f3d011682016040523d82523d6000602084013e6129cf565b606091505b5050905080610c105760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c65640000000060448201526064016109b3565b816001600160a01b0316836001600160a01b031603156112f957306001600160a01b03841603612a5e576124846001600160a01b0385168383612bad565b6112f96001600160a01b038516848484612c10565b6000612a7d61143d565b5490506000829003612aa25760405163b562e8dd60e01b815260040160405180910390fd5b612aaf6000848385611cf7565b680100000000000000018202612ac361143d565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b1717612afe61143d565b600083815260049190910160205260408120919091556001600160a01b0384169083830190839083906000805160206136bd8339815191528180a4600183015b818114612b6457808360006000805160206136bd833981519152600080a4600101612b3e565b5081600003612b8557604051622e076360e81b815260040160405180910390fd5b80612b8e61143d565b5550610c109050565b60006107fa825490565b60006113938383612c48565b6040516001600160a01b038316602482015260448101829052610c1090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612c72565b6040516001600160a01b03808516602483015283166044820152606481018290526112f99085906323b872dd60e01b90608401612bd9565b6000826000018281548110612c5f57612c5f613686565b9060005260206000200154905092915050565b6000612cc7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612d449092919063ffffffff16565b805190915015610c105780806020019051810190612ce59190613650565b610c105760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109b3565b60606122f8848460008585600080866001600160a01b03168587604051612d6b91906134dd565b60006040518083038185875af1925050503d8060008114612da8576040519150601f19603f3d011682016040523d82523d6000602084013e612dad565b606091505b5091509150612dbe87838387612dc9565b979650505050505050565b60608315612e38578251600003612e31576001600160a01b0385163b612e315760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109b3565b50816122f8565b6122f88383815115612e4d5781518083602001fd5b8060405162461bcd60e51b81526004016109b39190612eb7565b60005b83811015612e82578181015183820152602001612e6a565b50506000910152565b60008151808452612ea3816020860160208601612e67565b601f01601f19169290920160200192915050565b6020815260006113936020830184612e8b565b600060208284031215612edc57600080fd5b5035919050565b6001600160a01b03811681146109ce57600080fd5b803561095381612ee3565b60008060408385031215612f1657600080fd5b8235612f2181612ee3565b946020939093013593505050565b600060208284031215612f4157600080fd5b813561139381612ee3565b600080600060608486031215612f6157600080fd5b8335612f6c81612ee3565b92506020840135612f7c81612ee3565b929592945050506040919091013590565b6001600160401b03811681146109ce57600080fd5b803561095381612f8d565b600060208284031215612fbf57600080fd5b813561139381612f8d565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b038111828210171561300357613003612fca565b60405290565b60006001600160401b038084111561302357613023612fca565b604051601f8501601f19908116603f0116810190828211818310171561304b5761304b612fca565b8160405280935085815286868601111561306457600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261308f57600080fd5b61139383833560208501613009565b6000806000606084860312156130b357600080fd5b83356001600160401b03808211156130ca57600080fd5b9085019061010082880312156130df57600080fd5b6130e7612fe0565b8235828111156130f657600080fd5b6131028982860161307e565b82525060208301358281111561311757600080fd5b6131238982860161307e565b602083015250604083013560408201526060830135606082015261314960808401612fa2565b608082015261315a60a08401612ef8565b60a082015261316b60c08401612ef8565b60c082015260e083013560e082015280955050505061318c60208501612ef8565b915061319a60408501612ef8565b90509250925092565b80151581146109ce57600080fd5b600080604083850312156131c457600080fd5b82356131cf81612ee3565b915060208301356131df816131a3565b809150509250929050565b6000806000806080858703121561320057600080fd5b843561320b81612ee3565b9350602085013561321b81612ee3565b92506040850135915060608501356001600160401b0381111561323d57600080fd5b8501601f8101871361324e57600080fd5b61325d87823560208401613009565b91505092959194509250565b6000806040838503121561327c57600080fd5b82356001600160401b038082111561329357600080fd5b61329f8683870161307e565b935060208501359150808211156132b557600080fd5b506132c28582860161307e565b9150509250929050565b600080604083850312156132df57600080fd5b82356132ea81612ee3565b915060208301356131df81612ee3565b600181811c9082168061330e57607f821691505b60208210810361332e57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561334657600080fd5b5051919050565b6000835161335f818460208801612e67565b835190830190613373818360208801612e67565b01949350505050565b60006020828403121561338e57600080fd5b815161139381612ee3565b6000602082840312156133ab57600080fd5b815161ffff8116811461139357600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156107fa576107fa6133bd565b80820281158282048414176107fa576107fa6133bd565b60008261341a57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156107fa576107fa6133bd565b60006020828403121561344457600080fd5b815161139381612f8d565b6001600160401b0381811683821601908082111561346f5761346f6133bd565b5092915050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906134a990830184612e8b565b9695505050505050565b6000602082840312156134c557600080fd5b81516001600160e01b03198116811461139357600080fd5b600082516134ef818460208701612e67565b9190910192915050565b8051602080830151919081101561332e5760001960209190910360031b1b16919050565b601f821115610c1057600081815260208120601f850160051c810160208610156135445750805b601f850160051c820191505b81811015610bed57828155600101613550565b81516001600160401b0381111561357c5761357c612fca565b6135908161358a84546132fa565b8461351d565b602080601f8311600181146135c557600084156135ad5750858301515b600019600386901b1c1916600185901b178555610bed565b600085815260208120601f198616915b828110156135f4578886015182559484019460019091019084016135d5565b50858210156136125787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6060815260006136356060830186612e8b565b6001600160a01b039490941660208301525060400152919050565b60006020828403121561366257600080fd5b8151611393816131a3565b60006001820161367f5761367f6133bd565b5060010190565b634e487b7160e01b600052603260045260246000fdfe50b052c8fb38984269a818b2b593d0584a81b1b99245abc0fab04abc7afb010fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type MembershipFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MembershipFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MembershipFacet__factory extends ContractFactory {
  constructor(...args: MembershipFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MembershipFacet> {
    return super.deploy(overrides || {}) as Promise<MembershipFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MembershipFacet {
    return super.attach(address) as MembershipFacet;
  }
  override connect(signer: Signer): MembershipFacet__factory {
    return super.connect(signer) as MembershipFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MembershipFacetInterface {
    return new utils.Interface(_abi) as MembershipFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MembershipFacet {
    return new Contract(address, _abi, signerOrProvider) as MembershipFacet;
  }
}

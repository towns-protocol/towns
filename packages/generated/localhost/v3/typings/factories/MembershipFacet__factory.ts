/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MembershipFacet,
  MembershipFacetInterface,
} from "../MembershipFacet";

const _abi = [
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC5643__DurationZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC5643__InvalidTokenId",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC5643__NotApprovedOrOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC5643__SubscriptionNotRenewable",
    type: "error",
  },
  {
    inputs: [],
    name: "Entitlement__InvalidValue",
    type: "error",
  },
  {
    inputs: [],
    name: "Entitlement__NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "Entitlement__ValueAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "Initializable_InInitializingState",
    type: "error",
  },
  {
    inputs: [],
    name: "Initializable_NotInInitializingState",
    type: "error",
  },
  {
    inputs: [],
    name: "Introspection_AlreadySupported",
    type: "error",
  },
  {
    inputs: [],
    name: "Introspection_NotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__AlreadyMember",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InsufficientPayment",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidCurrency",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidDuration",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidFeeRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidMaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__InvalidPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "Membership__PriceTooLow",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "Pausable__NotPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "Pausable__Paused",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuard__ReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "version",
        type: "uint32",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "InterfaceAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "InterfaceRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "MembershipCurrencyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "MembershipFeeRecipientUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "MembershipLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "MembershipPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "expiration",
        type: "uint64",
      },
    ],
    name: "SubscriptionUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "__ERC721A_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxSupply",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "duration",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address",
          },
        ],
        internalType: "struct IMembershipBase.MembershipInfo",
        name: "info",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "townFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "__Membership_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "_getMembershipCurrency",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getMembershipFeeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getMembershipPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getMembershipSupplyLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_getTownFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCurrency",
        type: "address",
      },
    ],
    name: "_setMembershipCurrency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "_setMembershipFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "_setMembershipPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "_setMembershipSupplyLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelMembership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "expiresAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembershipCurrency",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembershipDuration",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembershipFeeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembershipLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembershipPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTownFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "joinTown",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "renewMembership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCurrency",
        type: "address",
      },
    ],
    name: "setMembershipCurrency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "newDuration",
        type: "uint64",
      },
    ],
    name: "setMembershipDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "setMembershipFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "setMembershipLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setMembershipPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b620000ca565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de8054640100000000900460ff16156200006f576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff9081161015620000c757805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b61358a80620000da6000396000f3fe60806040526004361061023b5760003560e01c8063657e45e81161012e57806395d600c8116100ab578063b88d4fde1161006f578063b88d4fde146106b1578063bf3bc878146106c4578063c87b56dd146106d9578063d2f01f19146106f9578063e985e9c51461071957600080fd5b806395d600c81461062757806395d89b411461063c57806397fb7c1e14610651578063a22cb46514610671578063b83073761461069157600080fd5b80637d0567c4116100f25780637d0567c4146105785780638120f0ba1461059857806383f3f0dc146105c55780638934207f146105e557806389def3201461060757600080fd5b8063657e45e8146104cb57806369d5f38a146104e0578063702515631461050057806370a082311461052b57806373fc5a051461054b57600080fd5b80631b3972f0116101bc5780635b312fce116101805780635b312fce1461043857806361a9c7df1461046357806362452006146104765780636340d096146104965780636352211e146104ab57600080fd5b80631b3972f0146103835780631d214b4d146103a557806323b872dd146103e257806342842e0e146103f5578063572b6c051461040857600080fd5b80631278076a116102035780631278076a146102f857806316a344b41461031b57806317c957091461032e57806318160ddd1461034e57806318e5da651461036357600080fd5b806306fdde0314610240578063081812fc1461026b578063095ea7b3146102a35780630c3a01b1146102b857806310c57b46146102d8575b600080fd5b34801561024c57600080fd5b50610255610739565b6040516102629190612cd1565b60405180910390f35b34801561027757600080fd5b5061028b610286366004612ce4565b6107d4565b6040516001600160a01b039091168152602001610262565b6102b66102b1366004612d1d565b6107e5565b005b3480156102c457600080fd5b506102b66102d3366004612ce4565b6107f5565b3480156102e457600080fd5b506102b66102f3366004612e3c565b6108d5565b34801561030457600080fd5b5061030d610987565b604051908152602001610262565b61030d610329366004612f35565b6109a4565b34801561033a57600080fd5b5061030d610349366004612ce4565b610add565b34801561035a57600080fd5b5061030d610af7565b34801561036f57600080fd5b506102b661037e366004612f35565b610b01565b34801561038f57600080fd5b5060008051602061356a8339815191525461030d565b3480156103b157600080fd5b507f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a6012546001600160a01b031661028b565b6102b66103f0366004612f52565b610b4d565b6102b6610403366004612f52565b610d42565b34801561041457600080fd5b50610428610423366004612f35565b610d5d565b6040519015158152602001610262565b34801561044457600080fd5b5060008051602061354a833981519152546001600160a01b031661028b565b6102b6610471366004612f35565b610d9a565b34801561048257600080fd5b506102b6610491366004612f35565b610e68565b3480156104a257600080fd5b5061028b610ed0565b3480156104b757600080fd5b5061028b6104c6366004612ce4565b610ef1565b3480156104d757600080fd5b5061028b610efc565b3480156104ec57600080fd5b506102b66104fb366004612ce4565b610f1d565b34801561050c57600080fd5b506000805160206134aa833981519152546001600160a01b031661028b565b34801561053757600080fd5b5061030d610546366004612f35565b610f61565b34801561055757600080fd5b506102b6610566366004612ce4565b6000805160206134ea83398151915255565b34801561058457600080fd5b506102b6610593366004612f35565b610f94565b3480156105a457600080fd5b506105ad610fd8565b6040516001600160401b039091168152602001610262565b3480156105d157600080fd5b506102b66105e0366004612f93565b610fe2565b3480156105f157600080fd5b506000805160206134ea8339815191525461030d565b34801561061357600080fd5b506102b6610622366004612ce4565b611026565b34801561063357600080fd5b5061030d6110bc565b34801561064857600080fd5b506102556110d4565b34801561065d57600080fd5b506102b661066c366004612ce4565b6110ec565b34801561067d57600080fd5b506102b661068c366004612fbe565b611194565b34801561069d57600080fd5b506102b66106ac366004612f35565b611236565b6102b66106bf366004612ff7565b61128c565b3480156106d057600080fd5b5061028b6112d6565b3480156106e557600080fd5b506102556106f4366004612ce4565b611309565b34801561070557600080fd5b506102b6610714366004613076565b61139a565b34801561072557600080fd5b506104286107343660046130d9565b6113ee565b60606107436113fa565b600201805461075190613107565b80601f016020809104026020016040519081016040528092919081815260200182805461077d90613107565b80156107ca5780601f1061079f576101008083540402835291602001916107ca565b820191906000526020600020905b8154815290600101906020018083116107ad57829003601f168201915b5050505050905090565b60006107df8261141e565b92915050565b6107f18282600161146b565b5050565b6000805160206134aa833981519152546000805160206134ca833981519152906001600160a01b031661083b57604051636da3122b60e01b815260040160405180910390fd5b600681015460408051630eac306d60e01b815290516000926001600160a01b031691630eac306d9160048083019260209291908290030181865afa158015610887573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ab9190613141565b9050808310156108ce57604051631a23d64760e11b815260040160405180910390fd5b5060020155565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff1661091f57604051630ef4733760e31b815260040160405180910390fd5b6109298383611537565b61093b8360000151846020015161162b565b610982816001600160a01b031660009081527f9be1203d7c008407e47cf520c8f15f54b074f0a2af3750145c254290338afc3f60205260409020805460ff19166001179055565b505050565b600061099f60008051602061356a8339815191525490565b905090565b6000600260008051602061350a83398151915254036109d657604051635db5c7cd60e11b815260040160405180910390fd5b6109ed600260008051602061350a83398151915255565b610a16604051806040016040528060088152602001672537b4b72a37bbb760c11b81525061169f565b6000610a21836116d5565b1115610a40576040516316d9a23f60e31b815260040160405180910390fd5b6000805160206134ea8339815191525415801590610a7457506000805160206134ea83398151915254610a7161173d565b10155b15610a9257604051637efcdb4960e01b815260040160405180910390fd5b610a9a61175c565b9050610aa58261176c565b610ab0826001611a4c565b610ac181610abc611a66565b611b38565b610ad8600160008051602061350a83398151915255565b919050565b6000610ae882611c2a565b6001600160401b031692915050565b600061099f61173d565b610b09611c64565b6001600160a01b0316336001600160a01b031614610b41576040516365f4906560e01b81523360048201526024015b60405180910390fd5b610b4a81610e68565b50565b6000610b5882611d28565b9050836001600160a01b0316816001600160a01b031614610b8b5760405162a1148160e81b815260040160405180910390fd5b600080610b9784611dcc565b91509150610bbd8187610ba8611df4565b6001600160a01b039081169116811491141790565b610bea57610bcd86610734611df4565b610bea57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610c1157604051633a954ecd60e21b815260040160405180910390fd5b610c1e8686866001611dfe565b8015610c2957600082555b610c316113fa565b6001600160a01b0387166000908152600591909101602052604090208054600019019055610c5d6113fa565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b17610c946113fa565b60008681526004919091016020526040812091909155600160e11b84169003610d0a5760018401610cc36113fa565b600082815260049190910160205260408120549003610d0857610ce46113fa565b548114610d085783610cf46113fa565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b031660008051602061352a83398151915260405160405180910390a45b505050505050565b6109828383836040518060200160405280600081525061128c565b6001600160a01b031660009081527f9be1203d7c008407e47cf520c8f15f54b074f0a2af3750145c254290338afc3f602052604090205460ff1690565b600260008051602061350a8339815191525403610dca57604051635db5c7cd60e11b815260040160405180910390fd5b610de1600260008051602061350a83398151915255565b6001600160a01b038116610e0857604051635fbd571760e01b815260040160405180910390fd5b6000610e1382611e68565b9050610e1e81611ea2565b610e3b576040516367d9dca160e11b815260040160405180910390fd5b610e448261176c565b610e5081610abc611a66565b50610b4a600160008051602061350a83398151915255565b6001600160a01b038116610e8f57604051631492df6160e21b815260040160405180910390fd5b7f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a601280546001600160a01b0319166001600160a01b0392909216919091179055565b600061099f60008051602061354a833981519152546001600160a01b031690565b60006107df82611d28565b600061099f6000805160206134aa833981519152546001600160a01b031690565b610f25611c64565b6001600160a01b0316336001600160a01b031614610f58576040516365f4906560e01b8152336004820152602401610b38565b610b4a816107f5565b600042610f75610f7084611e68565b611c2a565b6001600160401b031611610f8b57506000919050565b6107df826116d5565b610f9c611c64565b6001600160a01b0316336001600160a01b031614610fcf576040516365f4906560e01b8152336004820152602401610b38565b610b4a81611236565b600061099f611a66565b610fea611c64565b6001600160a01b0316336001600160a01b03161461101d576040516365f4906560e01b8152336004820152602401610b38565b610b4a81611f0f565b600260008051602061350a833981519152540361105657604051635db5c7cd60e11b815260040160405180910390fd5b61106d600260008051602061350a83398151915255565b61107681611ea2565b611093576040516367d9dca160e11b815260040160405180910390fd5b61109c81611ff6565b6110a581612001565b610b4a600160008051602061350a83398151915255565b600061099f6000805160206134ea8339815191525490565b60606110de6113fa565b600301805461075190613107565b6110f4611c64565b6001600160a01b0316336001600160a01b031614611127576040516365f4906560e01b8152336004820152602401610b38565b61112f61173d565b81101561114f57604051636664d51760e11b815260040160405180910390fd5b6000805160206134ea83398151915254811161117e57604051636664d51760e11b815260040160405180910390fd5b610b4a816000805160206134ea83398151915255565b8061119d6113fa565b60070160006111aa611df4565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556111ee611df4565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161122a911515815260200190565b60405180910390a35050565b6001600160a01b03811661125d57604051636da3122b60e01b815260040160405180910390fd5b6000805160206134aa83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611297848484610b4d565b6001600160a01b0383163b156112d0576112b384848484612074565b6112d0576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b600061099f7f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a6012546001600160a01b031690565b606061131482612166565b61133157604051630a14c4b560e41b815260040160405180910390fd5b600061134860408051602081019091526000815290565b905080516000036113685760405180602001604052806000815250611393565b80611372846121a2565b60405160200161138392919061315a565b6040516020818303038152906040525b9392505050565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff166113e457604051630ef4733760e31b815260040160405180910390fd5b6107f1828261162b565b600061139383836121e6565b7f234d8962d7c9a6a6604d7f98797e6ad6d7a886804f7409feb26422e27bf8125490565b600061142982612166565b611446576040516333d1c03960e21b815260040160405180910390fd5b61144e6113fa565b60009283526006016020525060409020546001600160a01b031690565b600061147683610ef1565b905081156114cc57806001600160a01b0316611490611df4565b6001600160a01b0316146114cc576114af816114aa611df4565b6121e6565b6114cc576040516367d9dca160e11b815260040160405180910390fd5b836114d56113fa565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b604082015160008051602061356a8339815191525560608201516000805160206134ea83398151915255608082015160008051602061354a83398151915280546001600160401b03909216600160a01b0267ffffffffffffffff60a01b1990921691909117905560a08201516000805160206134ca833981519152906001600160a01b0316156115cb578260a001516115e1565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee5b6004820180546001600160a01b03199081166001600160a01b039384161790915560c094909401516005830180548616918316919091179055600690910180549093169116179055565b7f2d0d21306acfe8e9bb163a4573e95aff6cef95dc1102c6a16d5f19eac08cc4de54640100000000900460ff1661167557604051630ef4733760e31b815260040160405180910390fd5b6116856380ac58cd60e01b612223565b611695635b5e139f60e01b612223565b6107f18282612301565b6116b86040518060200160405280600081525082612333565b610b4a57604051630ce39a4b60e21b815260040160405180910390fd5b60006001600160a01b0382166116fe576040516323d3ad8160e21b815260040160405180910390fd5b6001600160401b0361170e6113fa565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b6000806117486113fa565b600101546117546113fa565b540303919050565b60006117666113fa565b54919050565b600061178460008051602061356a8339815191525490565b905080600003611792575050565b60008051602061354a8339815191525460408051630eac306d60e01b815290516000805160206134ca833981519152926000926001600160a01b0390911691630eac306d916004808201926020929091908290030181865afa1580156117fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118209190613141565b90508083101561184357604051635894b54560e11b815260040160405180910390fd5b6006820154604080516301332c8360e61b815290516000926001600160a01b031691634ccb20c09160048083019260209291908290030181865afa15801561188f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b39190613189565b905060008360060160009054906101000a90046001600160a01b03166001600160a01b0316639f6542aa6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561190c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193091906131a6565b905060008460060160009054906101000a90046001600160a01b03166001600160a01b031663190eaaba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ad9190613141565b905060006119bb85886131e0565b905080156119ea5784826119d361ffff8616846131f3565b6119dd919061320a565b6119e7919061322c565b94505b6004860154611a04906001600160a01b03168986886123c5565b80600003611a16575050505050505050565b60048601546005870154611a42916001600160a01b03908116918b9116611a3d898c6131e0565b6123c5565b5050505050505050565b6107f182826040518060200160405280600081525061240b565b60008051602061354a833981519152546000906000805160206134ca83398151915290600160a01b90046001600160401b031615611ab75760060154600160a01b90046001600160401b0316919050565b60008051602061354a8339815191525460408051634090785d60e11b815290516001600160a01b0390921691638120f0ba916004808201926020929091908290030181865afa158015611b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b32919061323f565b91505090565b60008281527f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e3616020819052604082205490916001600160401b0390911690818103611b8e57611b87844261325c565b9050611bc4565b611b9785612488565b611bb757604051637be9098d60e11b815260048101869052602401610b38565b611bc1848361325c565b90505b60008581526020848152604091829020805467ffffffffffffffff19166001600160401b038516908117909155915191825286917f2ec2be2c4b90c2cf13ecb6751a24daed6bb741ae5ed3f7371aabf9402f6d62e8910160405180910390a25050505050565b60009081527f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e36160205260409020546001600160401b031690565b6040805180820182527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d0546001600160a01b03168082527f9bd0e1a7aef81c47cff971a2fee48406b20f55522326b2e2616c49c24aa506d154602080840182905284516331a9108f60e11b815260048101929092529351600094636352211e92602480820193918290030181865afa158015611d04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b329190613189565b6000611d326113fa565b600083815260049190910160205260408120549150600160e01b82169003611db35780600003610ad857611d646113fa565b548210611d8457604051636f96cda160e11b815260040160405180910390fd5b611d8c6113fa565b600019909201600081815260049390930160205260409092205490508015611d8457919050565b604051636f96cda160e11b815260040160405180910390fd5b6000806000611dd96113fa565b60009485526006016020525050604090912080549092909150565b600061099f6124bf565b6112d0828460008281526000805160206134ca8339815191526020908152604080832080546001600160a01b0319166001600160a01b039590951694851790559282527f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600e90522055565b6001600160a01b031660009081527f9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600e602052604090205490565b600080611eae83610ef1565b9050806001600160a01b0316611ec26124bf565b6001600160a01b03161480611ede5750611ede816114aa6124bf565b806113935750611eec6124bf565b6001600160a01b0316611efe8461141e565b6001600160a01b0316149392505050565b60008051602061354a8339815191525460408051634090785d60e11b815290516001600160a01b0390921691638120f0ba916004808201926020929091908290030181865afa158015611f66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f8a919061323f565b6001600160401b0316816001600160401b03161115611fbc576040516341191e9760e11b815260040160405180910390fd5b60008051602061354a83398151915280546001600160401b03909216600160a01b0267ffffffffffffffff60a01b19909216919091179055565b610b4a8160006124ed565b7f62df4f6c50e7f750c679c064ab345c286dd49de6e39940ae1538c75b44a0e361600082815260209182526040808220805467ffffffffffffffff191690555190815282917f2ec2be2c4b90c2cf13ecb6751a24daed6bb741ae5ed3f7371aabf9402f6d62e8910160405180910390a250565b6000836001600160a01b031663150b7a0261208d611df4565b8786866040518563ffffffff1660e01b81526004016120af9493929190613283565b6020604051808303816000875af19250505080156120ea575060408051601f3d908101601f191682019092526120e7918101906132c0565b60015b612148573d808015612118576040519150601f19603f3d011682016040523d82523d6000602084013e61211d565b606091505b508051600003612140576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b60006121706113fa565b54821080156107df5750600160e01b6121876113fa565b60008481526004919091016020526040902054161592915050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806121bc5750819003601f19909101908152919050565b60006121f06113fa565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b6001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c4602052604090205460ff1615156001146122b0576001600160e01b0319811660009081527fbc7de460bcfb6afd0c415c8c610d408bd914b18d7d0feec0da9e25348087a5c460205260409020805460ff191660011790556122c9565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b600061230b6113fa565b90506002810161231b8482613330565b506003810161232a8382613330565b50600090555050565b600061233d611df4565b6001600160a01b031661234e611c64565b6001600160a01b0316148061139357507ff421ea548af7158b1d71ba0aeccf57104c067038bd8fd214edd05c09eb4f735b5460ff16158015611393575061139383612397611df4565b846040516020016123a891906133ef565b6040516020818303038152906040526123c09061340b565b61266e565b80156112d05773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b038516016123ff576123fa8282612797565b6112d0565b6112d08484848461283a565b612415838361288d565b6001600160a01b0383163b1561098257600061242f6113fa565b5490508281035b6124496000868380600101945086612074565b612466576040516368d2bf6b60e11b815260040160405180910390fd5b81811061243657816124766113fa565b541461248157600080fd5b5050505050565b600042612493611a66565b6001600160401b03166124a6919061322c565b6124af83611c2a565b6001600160401b03161092915050565b6000601436108015906124d657506124d633610d5d565b156124e8575060131936013560601c90565b503390565b60006124f883611d28565b90508060008061250786611dcc565b91509150841561254b5761251e8184610ba8611df4565b61254b5761252e836114aa611df4565b61254b57604051632ce44b5f60e11b815260040160405180910390fd5b612559836000886001611dfe565b801561256457600082555b6fffffffffffffffffffffffffffffffff61257d6113fa565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b17600360e01b176125b66113fa565b60008881526004919091016020526040812091909155600160e11b8516900361262c57600186016125e56113fa565b60008281526004919091016020526040812054900361262a576126066113fa565b54811461262a57846126166113fa565b600083815260049190910160205260409020555b505b60405186906000906001600160a01b0386169060008051602061352a833981519152908390a461265a6113fa565b600190810180549091019055505050505050565b6000612678611c64565b6001600160a01b0316836001600160a01b03160361269857506001611393565b7f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb855860006126e47f2df4f8e2489b335ef09ede56990b0838afbcdea6c639a41af44b533474fb85596129b1565b905060005b8181101561278d576126fe60018401826129bb565b6001600160a01b031662b4eaa88888886040518463ffffffff1660e01b815260040161272c9392919061342f565b602060405180830381865afa158015612749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061276d919061345d565b1561277b576001935061278d565b806127858161347a565b9150506126e9565b5050509392505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146127e4576040519150601f19603f3d011682016040523d82523d6000602084013e6127e9565b606091505b50509050806109825760405162461bcd60e51b815260206004820152601c60248201527f6e617469766520746f6b656e207472616e73666572206661696c6564000000006044820152606401610b38565b816001600160a01b0316836001600160a01b031603156112d057306001600160a01b03841603612878576123fa6001600160a01b03851683836129c7565b6112d06001600160a01b038516848484612a2a565b60006128976113fa565b54905060008290036128bc5760405163b562e8dd60e01b815260040160405180910390fd5b6128c96000848385611dfe565b6801000000000000000182026128dd6113fa565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b17176129186113fa565b600083815260049190910160205260408120919091556001600160a01b03841690838301908390839060008051602061352a8339815191528180a4600183015b81811461297e578083600060008051602061352a833981519152600080a4600101612958565b508160000361299f57604051622e076360e81b815260040160405180910390fd5b806129a86113fa565b55506109829050565b60006107df825490565b60006113938383612a62565b6040516001600160a01b03831660248201526044810182905261098290849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612a8c565b6040516001600160a01b03808516602483015283166044820152606481018290526112d09085906323b872dd60e01b906084016129f3565b6000826000018281548110612a7957612a79613493565b9060005260206000200154905092915050565b6000612ae1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612b5e9092919063ffffffff16565b8051909150156109825780806020019051810190612aff919061345d565b6109825760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b38565b606061215e848460008585600080866001600160a01b03168587604051612b8591906133ef565b60006040518083038185875af1925050503d8060008114612bc2576040519150601f19603f3d011682016040523d82523d6000602084013e612bc7565b606091505b5091509150612bd887838387612be3565b979650505050505050565b60608315612c52578251600003612c4b576001600160a01b0385163b612c4b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b38565b508161215e565b61215e8383815115612c675781518083602001fd5b8060405162461bcd60e51b8152600401610b389190612cd1565b60005b83811015612c9c578181015183820152602001612c84565b50506000910152565b60008151808452612cbd816020860160208601612c81565b601f01601f19169290920160200192915050565b6020815260006113936020830184612ca5565b600060208284031215612cf657600080fd5b5035919050565b6001600160a01b0381168114610b4a57600080fd5b8035610ad881612cfd565b60008060408385031215612d3057600080fd5b8235612d3b81612cfd565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b0381118282101715612d8157612d81612d49565b60405290565b60006001600160401b0380841115612da157612da1612d49565b604051601f8501601f19908116603f01168101908282118183101715612dc957612dc9612d49565b81604052809350858152868686011115612de257600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112612e0d57600080fd5b61139383833560208501612d87565b6001600160401b0381168114610b4a57600080fd5b8035610ad881612e1c565b600080600060608486031215612e5157600080fd5b83356001600160401b0380821115612e6857600080fd5b9085019060e08288031215612e7c57600080fd5b612e84612d5f565b823582811115612e9357600080fd5b612e9f89828601612dfc565b825250602083013582811115612eb457600080fd5b612ec089828601612dfc565b6020830152506040830135604082015260608301356060820152612ee660808401612e31565b6080820152612ef760a08401612d12565b60a0820152612f0860c08401612d12565b60c08201529450612f1e91505060208501612d12565b9150612f2c60408501612d12565b90509250925092565b600060208284031215612f4757600080fd5b813561139381612cfd565b600080600060608486031215612f6757600080fd5b8335612f7281612cfd565b92506020840135612f8281612cfd565b929592945050506040919091013590565b600060208284031215612fa557600080fd5b813561139381612e1c565b8015158114610b4a57600080fd5b60008060408385031215612fd157600080fd5b8235612fdc81612cfd565b91506020830135612fec81612fb0565b809150509250929050565b6000806000806080858703121561300d57600080fd5b843561301881612cfd565b9350602085013561302881612cfd565b92506040850135915060608501356001600160401b0381111561304a57600080fd5b8501601f8101871361305b57600080fd5b61306a87823560208401612d87565b91505092959194509250565b6000806040838503121561308957600080fd5b82356001600160401b03808211156130a057600080fd5b6130ac86838701612dfc565b935060208501359150808211156130c257600080fd5b506130cf85828601612dfc565b9150509250929050565b600080604083850312156130ec57600080fd5b82356130f781612cfd565b91506020830135612fec81612cfd565b600181811c9082168061311b57607f821691505b60208210810361313b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561315357600080fd5b5051919050565b6000835161316c818460208801612c81565b835190830190613180818360208801612c81565b01949350505050565b60006020828403121561319b57600080fd5b815161139381612cfd565b6000602082840312156131b857600080fd5b815161ffff8116811461139357600080fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156107df576107df6131ca565b80820281158282048414176107df576107df6131ca565b60008261322757634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156107df576107df6131ca565b60006020828403121561325157600080fd5b815161139381612e1c565b6001600160401b0381811683821601908082111561327c5761327c6131ca565b5092915050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906132b690830184612ca5565b9695505050505050565b6000602082840312156132d257600080fd5b81516001600160e01b03198116811461139357600080fd5b601f82111561098257600081815260208120601f850160051c810160208610156133115750805b601f850160051c820191505b81811015610d3a5782815560010161331d565b81516001600160401b0381111561334957613349612d49565b61335d816133578454613107565b846132ea565b602080601f831160018114613392576000841561337a5750858301515b600019600386901b1c1916600185901b178555610d3a565b600085815260208120601f198616915b828110156133c1578886015182559484019460019091019084016133a2565b50858210156133df5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008251613401818460208701612c81565b9190910192915050565b8051602080830151919081101561313b5760001960209190910360031b1b16919050565b6060815260006134426060830186612ca5565b6001600160a01b039490941660208301525060400152919050565b60006020828403121561346f57600080fd5b815161139381612fb0565b60006001820161348c5761348c6131ca565b5060010190565b634e487b7160e01b600052603260045260246000fdfe9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60119b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600d9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a601050b052c8fb38984269a818b2b593d0584a81b1b99245abc0fab04abc7afb010fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a60139b35df16c33a6c0e085c9ebd55fb367f81c58c2ed7e9bed98cc622f3308a600f";

type MembershipFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MembershipFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MembershipFacet__factory extends ContractFactory {
  constructor(...args: MembershipFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MembershipFacet> {
    return super.deploy(overrides || {}) as Promise<MembershipFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MembershipFacet {
    return super.attach(address) as MembershipFacet;
  }
  override connect(signer: Signer): MembershipFacet__factory {
    return super.connect(signer) as MembershipFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MembershipFacetInterface {
    return new utils.Interface(_abi) as MembershipFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MembershipFacet {
    return new Contract(address, _abi, signerOrProvider) as MembershipFacet;
  }
}

{
  "abi": [
    {
      "inputs": [],
      "name": "EntitlementChecker_InsufficientNumberOfNodes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementChecker_NodeAlreadyRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementChecker_NodeNotRegistered",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "callerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "transactionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "selectedNodes",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "EntitlementCheckRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "NodeRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "NodeUnregistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "transactionId",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "selectedNodes",
          "type": "address[]"
        }
      ],
      "name": "emitEntitlementCheckRequested",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestedNodeCount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "requestingContract",
          "type": "address"
        }
      ],
      "name": "getRandomNodes",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nodeCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unregisterNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610863806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631680b35c1461005c57806320f36dae146100665780633d385cf51461008f5780636da49b8314610097578063f22f8d2e146100ad575b600080fd5b6100646100c0565b005b610079610074366004610625565b6100cd565b6040516100869190610695565b60405180910390f35b6100646100e2565b61009f6100ed565b604051908152602001610086565b6100646100bb3660046106be565b6100fc565b6100cb336001610145565b565b60606100d98383610243565b90505b92915050565b6100cb336000610145565b60006100f76103b0565b905090565b326001600160a01b03167f58529d9ba9cbe2a11e905b3c701769d5265641ce084d196095a7692839481a4b8383336040516101399392919061078f565b60405180910390a25050565b7ffc7acd906223ea4362cec2df6e927b10b0448ae1bf045557e5b57490cab1e1bc81156101d85761017681846103db565b156101945760405163d1922fc160e01b815260040160405180910390fd5b61019e81846103fd565b506040516001600160a01b038416907f564728e6a7c8edd446557d94e0339d5e6ca2e05f42188914efdbdc87bcbbabf690600090a2505050565b6101e281846103db565b6101ff576040516317e3e0b960e01b815260040160405180910390fd5b6102098184610412565b506040516001600160a01b038416907fb1864577e4f285436a80ebc833984755393e2450d58622a65fb4fce87ea3573a90600090a2505050565b60607ffc7acd906223ea4362cec2df6e927b10b0448ae1bf045557e5b57490cab1e1bc8361027082610427565b101561028f57604051631762997d60e01b815260040160405180910390fd5b8367ffffffffffffffff8111156102a8576102a86106a8565b6040519080825280602002602001820160405280156102d1578160200160208202803683370190505b50915060005b84811015610325576102e98282610431565b8382815181106102fb576102fb6107c0565b6001600160a01b03909216602092830291909101909101528061031d816107ec565b9150506102d7565b50835b61033182610427565b8110156103a857600061034e610348836001610805565b8661043d565b905085811015610395576103628383610431565b848281518110610374576103746107c0565b60200260200101906001600160a01b031690816001600160a01b0316815250505b50806103a0816107ec565b915050610328565b505092915050565b60006100f77ffc7acd906223ea4362cec2df6e927b10b0448ae1bf045557e5b57490cab1e1bc610427565b6001600160a01b038116600090815260018301602052604081205415156100d9565b60006100d9836001600160a01b03841661049d565b60006100d9836001600160a01b0384166104ec565b60006100dc825490565b60006100d983836105df565b6040805144602082015242918101919091526bffffffffffffffffffffffff1932606090811b82168184015283901b16607482015260009083906088016040516020818303038152906040528051906020012060001c6100d99190610818565b60008181526001830160205260408120546104e4575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556100dc565b5060006100dc565b600081815260018301602052604081205480156105d557600061051060018361083a565b85549091506000906105249060019061083a565b9050818114610589576000866000018281548110610544576105446107c0565b9060005260206000200154905080876000018481548110610567576105676107c0565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061059a5761059a61084d565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506100dc565b60009150506100dc565b60008260000182815481106105f6576105f66107c0565b9060005260206000200154905092915050565b80356001600160a01b038116811461062057600080fd5b919050565b6000806040838503121561063857600080fd5b8235915061064860208401610609565b90509250929050565b600081518084526020808501945080840160005b8381101561068a5781516001600160a01b031687529582019590820190600101610665565b509495945050505050565b6020815260006100d96020830184610651565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156106d157600080fd5b8235915060208084013567ffffffffffffffff808211156106f157600080fd5b818601915086601f83011261070557600080fd5b813581811115610717576107176106a8565b8060051b604051601f19603f8301168101818110858211171561073c5761073c6106a8565b60405291825284820192508381018501918983111561075a57600080fd5b938501935b8285101561077f5761077085610609565b8452938501939285019261075f565b8096505050505050509250929050565b8381526060602082015260006107a86060830185610651565b905060018060a01b0383166040830152949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016107fe576107fe6107d6565b5060010190565b808201808211156100dc576100dc6107d6565b60008261083557634e487b7160e01b600052601260045260246000fd5b500690565b818103818111156100dc576100dc6107d6565b634e487b7160e01b600052603160045260246000fd",
    "sourceMap": "240:771:31:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80631680b35c1461005c57806320f36dae146100665780633d385cf51461008f5780636da49b8314610097578063f22f8d2e146100ad575b600080fd5b6100646100c0565b005b610079610074366004610625565b6100cd565b6040516100869190610695565b60405180910390f35b6100646100e2565b61009f6100ed565b604051908152602001610086565b6100646100bb3660046106be565b6100fc565b6100cb336001610145565b565b60606100d98383610243565b90505b92915050565b6100cb336000610145565b60006100f76103b0565b905090565b326001600160a01b03167f58529d9ba9cbe2a11e905b3c701769d5265641ce084d196095a7692839481a4b8383336040516101399392919061078f565b60405180910390a25050565b7ffc7acd906223ea4362cec2df6e927b10b0448ae1bf045557e5b57490cab1e1bc81156101d85761017681846103db565b156101945760405163d1922fc160e01b815260040160405180910390fd5b61019e81846103fd565b506040516001600160a01b038416907f564728e6a7c8edd446557d94e0339d5e6ca2e05f42188914efdbdc87bcbbabf690600090a2505050565b6101e281846103db565b6101ff576040516317e3e0b960e01b815260040160405180910390fd5b6102098184610412565b506040516001600160a01b038416907fb1864577e4f285436a80ebc833984755393e2450d58622a65fb4fce87ea3573a90600090a2505050565b60607ffc7acd906223ea4362cec2df6e927b10b0448ae1bf045557e5b57490cab1e1bc8361027082610427565b101561028f57604051631762997d60e01b815260040160405180910390fd5b8367ffffffffffffffff8111156102a8576102a86106a8565b6040519080825280602002602001820160405280156102d1578160200160208202803683370190505b50915060005b84811015610325576102e98282610431565b8382815181106102fb576102fb6107c0565b6001600160a01b03909216602092830291909101909101528061031d816107ec565b9150506102d7565b50835b61033182610427565b8110156103a857600061034e610348836001610805565b8661043d565b905085811015610395576103628383610431565b848281518110610374576103746107c0565b60200260200101906001600160a01b031690816001600160a01b0316815250505b50806103a0816107ec565b915050610328565b505092915050565b60006100f77ffc7acd906223ea4362cec2df6e927b10b0448ae1bf045557e5b57490cab1e1bc610427565b6001600160a01b038116600090815260018301602052604081205415156100d9565b60006100d9836001600160a01b03841661049d565b60006100d9836001600160a01b0384166104ec565b60006100dc825490565b60006100d983836105df565b6040805144602082015242918101919091526bffffffffffffffffffffffff1932606090811b82168184015283901b16607482015260009083906088016040516020818303038152906040528051906020012060001c6100d99190610818565b60008181526001830160205260408120546104e4575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556100dc565b5060006100dc565b600081815260018301602052604081205480156105d557600061051060018361083a565b85549091506000906105249060019061083a565b9050818114610589576000866000018281548110610544576105446107c0565b9060005260206000200154905080876000018481548110610567576105676107c0565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061059a5761059a61084d565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506100dc565b60009150506100dc565b60008260000182815481106105f6576105f66107c0565b9060005260206000200154905092915050565b80356001600160a01b038116811461062057600080fd5b919050565b6000806040838503121561063857600080fd5b8235915061064860208401610609565b90509250929050565b600081518084526020808501945080840160005b8381101561068a5781516001600160a01b031687529582019590820190600101610665565b509495945050505050565b6020815260006100d96020830184610651565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156106d157600080fd5b8235915060208084013567ffffffffffffffff808211156106f157600080fd5b818601915086601f83011261070557600080fd5b813581811115610717576107176106a8565b8060051b604051601f19603f8301168101818110858211171561073c5761073c6106a8565b60405291825284820192508381018501918983111561075a57600080fd5b938501935b8285101561077f5761077085610609565b8452938501939285019261075f565b8096505050505050509250929050565b8381526060602082015260006107a86060830185610651565b905060018060a01b0383166040830152949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016107fe576107fe6107d6565b5060010190565b808201808211156100dc576100dc6107d6565b60008261083557634e487b7160e01b600052601260045260246000fd5b500690565b818103818111156100dc576100dc6107d6565b634e487b7160e01b600052603160045260246000fd",
    "sourceMap": "240:771:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:70;;;:::i;:::-;;560:206;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;393:73;;;:::i;470:86::-;;;:::i;:::-;;;1329:25:438;;;1317:2;1302:18;470:86:31;1183:177:438;770:239:31;;;;;;:::i;:::-;;:::i;319:70::-;358:26;367:10;379:4;358:8;:26::i;:::-;319:70::o;560:206::-;675:16;706:55;722:18;742;706:15;:55::i;:::-;699:62;;560:206;;;;;:::o;393:73::-;434:27;443:10;455:5;434:8;:27::i;470:86::-;514:7;536:15;:13;:15::i;:::-;529:22;;470:86;:::o;770:239::-;929:9;-1:-1:-1;;;;;896:108:31;;946:13;967;988:10;896:108;;;;;;;;:::i;:::-;;;;;;;;770:239;;:::o;2918:496:32:-;287:49:33;3071:339:32;;;;3094:23;:2;3112:4;3094:17;:23::i;:::-;3090:86;;;3134:42;;-1:-1:-1;;;3134:42:32;;;;;;;;;;;3090:86;3184:18;:2;3197:4;3184:12;:18::i;:::-;-1:-1:-1;3215:20:32;;-1:-1:-1;;;;;3215:20:32;;;;;;;;2971:443;2918:496;;:::o;3071:339::-;3261:23;:2;3279:4;3261:17;:23::i;:::-;3256:83;;3301:38;;-1:-1:-1;;;3301:38:32;;;;;;;;;;;3256:83;3347:21;:2;3363:4;3347:15;:21::i;:::-;-1:-1:-1;3381:22:32;;-1:-1:-1;;;;;3381:22:32;;;;;;;;2971:443;2918:496;;:::o;2240:674::-;2344:28;287:49:33;2498:9:32;2478:17;287:49:33;2478:15:32;:17::i;:::-;:29;2474:94;;;2522:46;;-1:-1:-1;;;2522:46:32;;;;;;;;;;;2474:94;2603:9;2589:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2589:24:32;;2575:38;;2624:9;2619:86;2643:9;2639:1;:13;2619:86;;;2684:14;:2;2696:1;2684:11;:14::i;:::-;2667:11;2679:1;2667:14;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2667:31:32;;;:14;;;;;;;;;;;:31;2654:3;;;;:::i;:::-;;;;2619:86;;;-1:-1:-1;2728:9:32;2711:199;2743:17;:2;:15;:17::i;:::-;2739:1;:21;2711:199;;;2775:9;2787:40;2804:5;:1;2808;2804:5;:::i;:::-;2811:15;2787:16;:40::i;:::-;2775:52;;2843:9;2839:1;:13;2835:69;;;2881:14;:2;2893:1;2881:11;:14::i;:::-;2864:11;2876:1;2864:14;;;;;;;;:::i;:::-;;;;;;:31;-1:-1:-1;;;;;2864:31:32;;;-1:-1:-1;;;;;2864:31:32;;;;;2835:69;-1:-1:-1;2762:3:32;;;;:::i;:::-;;;;2711:199;;;;2374:540;2240:674;;;;:::o;3418:124::-;3466:7;3488:49;287::33;3488:47:32;:49::i;8852:165:430:-;-1:-1:-1;;;;;8985:23:430;;8932:4;4343:19;;;:12;;;:19;;;;;;:24;;8955:55;4247:127;8297:150;8367:4;8390:50;8395:3;-1:-1:-1;;;;;8415:23:430;;8390:4;:50::i;8615:156::-;8688:4;8711:53;8719:3;-1:-1:-1;;;;;8739:23:430;;8711:7;:53::i;9098:115::-;9161:7;9187:19;9195:3;4537:18;;4455:107;9555:156;9629:7;9679:22;9683:3;9695:5;9679:3;:22::i;462:489:32:-;770:139;;;800:16;770:139;;;3872:19:438;830:15:32;3907:12:438;;;3900:28;;;;-1:-1:-1;;859:9:32;4016:2:438;4012:15;;;4008:24;;3994:12;;;3987:46;4067:15;;;4063:24;4049:12;;;4042:46;565:17:32;;936:10;;4104:13:438;;770:139:32;;;;;;;;;;;;749:170;;;;;;735:192;;:211;;;;:::i;2206:404:430:-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:430;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:430;2581:12;;2778:1388;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:430;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;4904:118;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;14:173:438:-;82:20;;-1:-1:-1;;;;;131:31:438;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;373:9;360:23;350:33;;402:38;436:2;425:9;421:18;402:38;:::i;:::-;392:48;;192:254;;;;;:::o;451:461::-;504:3;542:5;536:12;569:6;564:3;557:19;595:4;624:2;619:3;615:12;608:19;;661:2;654:5;650:14;682:1;692:195;706:6;703:1;700:13;692:195;;;771:13;;-1:-1:-1;;;;;767:39:438;755:52;;827:12;;;;862:15;;;;803:1;721:9;692:195;;;-1:-1:-1;903:3:438;;451:461;-1:-1:-1;;;;;451:461:438:o;917:261::-;1096:2;1085:9;1078:21;1059:4;1116:56;1168:2;1157:9;1153:18;1145:6;1116:56;:::i;1365:127::-;1426:10;1421:3;1417:20;1414:1;1407:31;1457:4;1454:1;1447:15;1481:4;1478:1;1471:15;1497:1189;1590:6;1598;1651:2;1639:9;1630:7;1626:23;1622:32;1619:52;;;1667:1;1664;1657:12;1619:52;1703:9;1690:23;1680:33;;1732:2;1785;1774:9;1770:18;1757:32;1808:18;1849:2;1841:6;1838:14;1835:34;;;1865:1;1862;1855:12;1835:34;1903:6;1892:9;1888:22;1878:32;;1948:7;1941:4;1937:2;1933:13;1929:27;1919:55;;1970:1;1967;1960:12;1919:55;2006:2;1993:16;2028:2;2024;2021:10;2018:36;;;2034:18;;:::i;:::-;2080:2;2077:1;2073:10;2112:2;2106:9;2175:2;2171:7;2166:2;2162;2158:11;2154:25;2146:6;2142:38;2230:6;2218:10;2215:22;2210:2;2198:10;2195:18;2192:46;2189:72;;;2241:18;;:::i;:::-;2277:2;2270:22;2327:18;;;2361:15;;;;-1:-1:-1;2403:11:438;;;2399:20;;;2431:19;;;2428:39;;;2463:1;2460;2453:12;2428:39;2487:11;;;;2507:148;2523:6;2518:3;2515:15;2507:148;;;2589:23;2608:3;2589:23;:::i;:::-;2577:36;;2540:12;;;;2633;;;;2507:148;;;2674:6;2664:16;;;;;;;;1497:1189;;;;;:::o;2691:429::-;2926:6;2915:9;2908:25;2969:2;2964;2953:9;2949:18;2942:30;2889:4;2989:56;3041:2;3030:9;3026:18;3018:6;2989:56;:::i;:::-;2981:64;;3110:1;3106;3101:3;3097:11;3093:19;3085:6;3081:32;3076:2;3065:9;3061:18;3054:60;2691:429;;;;;;:::o;3125:127::-;3186:10;3181:3;3177:20;3174:1;3167:31;3217:4;3214:1;3207:15;3241:4;3238:1;3231:15;3257:127;3318:10;3313:3;3309:20;3306:1;3299:31;3349:4;3346:1;3339:15;3373:4;3370:1;3363:15;3389:135;3428:3;3449:17;;;3446:43;;3469:18;;:::i;:::-;-1:-1:-1;3516:1:438;3505:13;;3389:135::o;3529:125::-;3594:9;;;3615:10;;;3612:36;;;3628:18;;:::i;4128:209::-;4160:1;4186;4176:132;;4230:10;4225:3;4221:20;4218:1;4211:31;4265:4;4262:1;4255:15;4293:4;4290:1;4283:15;4176:132;-1:-1:-1;4322:9:438;;4128:209::o;4342:128::-;4409:9;;;4430:11;;;4427:37;;;4444:18;;:::i;4475:127::-;4536:10;4531:3;4527:20;4524:1;4517:31;4567:4;4564:1;4557:15;4591:4;4588:1;4581:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "emitEntitlementCheckRequested(bytes32,address[])": "f22f8d2e",
    "getRandomNodes(uint256,address)": "20f36dae",
    "nodeCount()": "6da49b83",
    "registerNode()": "1680b35c",
    "unregisterNode()": "3d385cf5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EntitlementChecker_InsufficientNumberOfNodes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementChecker_NodeAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementChecker_NodeNotRegistered\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"selectedNodes\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"EntitlementCheckRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"NodeRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"NodeUnregistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"selectedNodes\",\"type\":\"address[]\"}],\"name\":\"emitEntitlementCheckRequested\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedNodeCount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"requestingContract\",\"type\":\"address\"}],\"name\":\"getRandomNodes\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nodeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unregisterNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/crosschain/checker/EntitlementChecker.sol\":\"EntitlementChecker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC721A/=lib/ERC721A/contracts/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=lib/operator-filter-registry/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"contracts/src/crosschain/checker/EntitlementChecker.sol\":{\"keccak256\":\"0x3786a42f409bbc6110b0fa0c8da2432da887aa69c5ca8467f8231d4e8b993c09\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ba796edab43ee7d751d55e67d91d842a0f1ecd39080278ee3c8bf348405423d0\",\"dweb:/ipfs/QmbznscDXHz5dE9rVBt67zNmME8FXbDsD7wg4ve7Xt3QW8\"]},\"contracts/src/crosschain/checker/EntitlementCheckerBase.sol\":{\"keccak256\":\"0xa68eca83ddee09c7b614729189af87b9cf1c06b41e2e3b055514139e643da29d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://53df49fe76c010d592ba009030aa42dd92c0353e8d86b9d129074730a16a779d\",\"dweb:/ipfs/QmWHpC2Dpfjh5MkgF5vAQbNBpCy3wUkrXGS51BafvZgLXr\"]},\"contracts/src/crosschain/checker/EntitlementCheckerStorage.sol\":{\"keccak256\":\"0x31800262b31c904ac1e7bd21b5ccbb2ef0d35dd9329a07828d4382bb1cf7896a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a58f0963f1c405771f2bbeceda8c7b41b7cbfa533b46db082cc6cb3c3d3e68a4\",\"dweb:/ipfs/QmUTti16QXFXK9rjCDJg3WBJTb4GTKPCYwuxXDv7f2UH3y\"]},\"contracts/src/crosschain/checker/IEntitlementChecker.sol\":{\"keccak256\":\"0x409247398c6bfce94d86a3d7f12b6e86dc9c008546f95b9f511ddfffd9e2b222\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9b22629977cdc607ba80e2b3e9d4e0d8ffa125eb66d75ea0e920a0685e5a9\",\"dweb:/ipfs/Qmcn5V1iGQMVgvnFkQv8Qrz7oMdrxSsPu1txGwsHsUwHVR\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementChecker_InsufficientNumberOfNodes"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementChecker_NodeAlreadyRegistered"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementChecker_NodeNotRegistered"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "callerAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "transactionId",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "selectedNodes",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EntitlementCheckRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "nodeAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NodeRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "nodeAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NodeUnregistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "transactionId",
              "type": "bytes32"
            },
            {
              "internalType": "address[]",
              "name": "selectedNodes",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "emitEntitlementCheckRequested"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requestedNodeCount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "requestingContract",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRandomNodes",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nodeCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerNode"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unregisterNode"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC721A/=lib/ERC721A/contracts/",
        "council/=lib/council/contracts/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "operator-filter-registry/=lib/operator-filter-registry/",
        "prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "contracts/src/crosschain/checker/EntitlementChecker.sol": "EntitlementChecker"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/crosschain/checker/EntitlementChecker.sol": {
        "keccak256": "0x3786a42f409bbc6110b0fa0c8da2432da887aa69c5ca8467f8231d4e8b993c09",
        "urls": [
          "bzz-raw://ba796edab43ee7d751d55e67d91d842a0f1ecd39080278ee3c8bf348405423d0",
          "dweb:/ipfs/QmbznscDXHz5dE9rVBt67zNmME8FXbDsD7wg4ve7Xt3QW8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/crosschain/checker/EntitlementCheckerBase.sol": {
        "keccak256": "0xa68eca83ddee09c7b614729189af87b9cf1c06b41e2e3b055514139e643da29d",
        "urls": [
          "bzz-raw://53df49fe76c010d592ba009030aa42dd92c0353e8d86b9d129074730a16a779d",
          "dweb:/ipfs/QmWHpC2Dpfjh5MkgF5vAQbNBpCy3wUkrXGS51BafvZgLXr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/crosschain/checker/EntitlementCheckerStorage.sol": {
        "keccak256": "0x31800262b31c904ac1e7bd21b5ccbb2ef0d35dd9329a07828d4382bb1cf7896a",
        "urls": [
          "bzz-raw://a58f0963f1c405771f2bbeceda8c7b41b7cbfa533b46db082cc6cb3c3d3e68a4",
          "dweb:/ipfs/QmUTti16QXFXK9rjCDJg3WBJTb4GTKPCYwuxXDv7f2UH3y"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/crosschain/checker/IEntitlementChecker.sol": {
        "keccak256": "0x409247398c6bfce94d86a3d7f12b6e86dc9c008546f95b9f511ddfffd9e2b222",
        "urls": [
          "bzz-raw://85d9b22629977cdc607ba80e2b3e9d4e0d8ffa125eb66d75ea0e920a0685e5a9",
          "dweb:/ipfs/Qmcn5V1iGQMVgvnFkQv8Qrz7oMdrxSsPu1txGwsHsUwHVR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/crosschain/checker/EntitlementChecker.sol",
    "id": 5943,
    "exportedSymbols": {
      "EntitlementChecker": [
        5942
      ],
      "EntitlementCheckerBase": [
        6181
      ],
      "IEntitlementChecker": [
        6267
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:973:31",
    "nodes": [
      {
        "id": 5870,
        "nodeType": "PragmaDirective",
        "src": "39:24:31",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 5872,
        "nodeType": "ImportDirective",
        "src": "79:62:31",
        "nodes": [],
        "absolutePath": "contracts/src/crosschain/checker/IEntitlementChecker.sol",
        "file": "./IEntitlementChecker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5943,
        "sourceUnit": 6268,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5871,
              "name": "IEntitlementChecker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6267,
              "src": "87:19:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5874,
        "nodeType": "ImportDirective",
        "src": "170:68:31",
        "nodes": [],
        "absolutePath": "contracts/src/crosschain/checker/EntitlementCheckerBase.sol",
        "file": "./EntitlementCheckerBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5943,
        "sourceUnit": 6182,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5873,
              "name": "EntitlementCheckerBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6181,
              "src": "178:22:31",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5942,
        "nodeType": "ContractDefinition",
        "src": "240:771:31",
        "nodes": [
          {
            "id": 5888,
            "nodeType": "FunctionDefinition",
            "src": "319:70:31",
            "nodes": [],
            "body": {
              "id": 5887,
              "nodeType": "Block",
              "src": "352:37:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5882,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "367:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "371:6:31",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "367:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 5884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "379:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5881,
                      "name": "_setNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6149,
                      "src": "358:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 5885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "358:26:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5886,
                  "nodeType": "ExpressionStatement",
                  "src": "358:26:31"
                }
              ]
            },
            "baseFunctions": [
              6240
            ],
            "functionSelector": "1680b35c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerNode",
            "nameLocation": "328:12:31",
            "parameters": {
              "id": 5879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "340:2:31"
            },
            "returnParameters": {
              "id": 5880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "352:0:31"
            },
            "scope": 5942,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5898,
            "nodeType": "FunctionDefinition",
            "src": "393:73:31",
            "nodes": [],
            "body": {
              "id": 5897,
              "nodeType": "Block",
              "src": "428:38:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5892,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "443:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "447:6:31",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "443:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 5894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "455:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5891,
                      "name": "_setNode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6149,
                      "src": "434:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 5895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "434:27:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5896,
                  "nodeType": "ExpressionStatement",
                  "src": "434:27:31"
                }
              ]
            },
            "baseFunctions": [
              6243
            ],
            "functionSelector": "3d385cf5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unregisterNode",
            "nameLocation": "402:14:31",
            "parameters": {
              "id": 5889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "416:2:31"
            },
            "returnParameters": {
              "id": 5890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "428:0:31"
            },
            "scope": 5942,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5907,
            "nodeType": "FunctionDefinition",
            "src": "470:86:31",
            "nodes": [],
            "body": {
              "id": 5906,
              "nodeType": "Block",
              "src": "523:33:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5903,
                      "name": "_getNodeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6162,
                      "src": "536:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 5904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "536:15:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5902,
                  "id": 5905,
                  "nodeType": "Return",
                  "src": "529:22:31"
                }
              ]
            },
            "baseFunctions": [
              6248
            ],
            "functionSelector": "6da49b83",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nodeCount",
            "nameLocation": "479:9:31",
            "parameters": {
              "id": 5899,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "488:2:31"
            },
            "returnParameters": {
              "id": 5902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5901,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5907,
                  "src": "514:7:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "513:9:31"
            },
            "scope": 5942,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5923,
            "nodeType": "FunctionDefinition",
            "src": "560:206:31",
            "nodes": [],
            "body": {
              "id": 5922,
              "nodeType": "Block",
              "src": "693:73:31",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5918,
                        "name": "requestedNodeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5909,
                        "src": "722:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5919,
                        "name": "requestingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5911,
                        "src": "742:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5917,
                      "name": "_getRandomNodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6085,
                      "src": "706:15:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,address) view returns (address[] memory)"
                      }
                    },
                    "id": 5920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "706:55:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 5916,
                  "id": 5921,
                  "nodeType": "Return",
                  "src": "699:62:31"
                }
              ]
            },
            "baseFunctions": [
              6258
            ],
            "functionSelector": "20f36dae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomNodes",
            "nameLocation": "569:14:31",
            "parameters": {
              "id": 5912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5909,
                  "mutability": "mutable",
                  "name": "requestedNodeCount",
                  "nameLocation": "597:18:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 5923,
                  "src": "589:26:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5911,
                  "mutability": "mutable",
                  "name": "requestingContract",
                  "nameLocation": "629:18:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 5923,
                  "src": "621:26:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "583:68:31"
            },
            "returnParameters": {
              "id": 5916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5915,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5923,
                  "src": "675:16:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5913,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "675:7:31",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5914,
                    "nodeType": "ArrayTypeName",
                    "src": "675:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "674:18:31"
            },
            "scope": 5942,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5941,
            "nodeType": "FunctionDefinition",
            "src": "770:239:31",
            "nodes": [],
            "body": {
              "id": 5940,
              "nodeType": "Block",
              "src": "885:124:31",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5932,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "929:2:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 5933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "932:6:31",
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "929:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5934,
                        "name": "transactionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5925,
                        "src": "946:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 5935,
                        "name": "selectedNodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5928,
                        "src": "967:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 5936,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "988:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "992:6:31",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "988:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5931,
                      "name": "EntitlementCheckRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6234,
                      "src": "896:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address[] memory,address)"
                      }
                    },
                    "id": 5938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "896:108:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5939,
                  "nodeType": "EmitStatement",
                  "src": "891:113:31"
                }
              ]
            },
            "baseFunctions": [
              6266
            ],
            "functionSelector": "f22f8d2e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emitEntitlementCheckRequested",
            "nameLocation": "779:29:31",
            "parameters": {
              "id": 5929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5925,
                  "mutability": "mutable",
                  "name": "transactionId",
                  "nameLocation": "822:13:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 5941,
                  "src": "814:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5924,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5928,
                  "mutability": "mutable",
                  "name": "selectedNodes",
                  "nameLocation": "858:13:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 5941,
                  "src": "841:30:31",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5926,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "841:7:31",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5927,
                    "nodeType": "ArrayTypeName",
                    "src": "841:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "808:67:31"
            },
            "returnParameters": {
              "id": 5930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "885:0:31"
            },
            "scope": 5942,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5875,
              "name": "IEntitlementChecker",
              "nameLocations": [
                "271:19:31"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6267,
              "src": "271:19:31"
            },
            "id": 5876,
            "nodeType": "InheritanceSpecifier",
            "src": "271:19:31"
          },
          {
            "baseName": {
              "id": 5877,
              "name": "EntitlementCheckerBase",
              "nameLocations": [
                "292:22:31"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6181,
              "src": "292:22:31"
            },
            "id": 5878,
            "nodeType": "InheritanceSpecifier",
            "src": "292:22:31"
          }
        ],
        "canonicalName": "EntitlementChecker",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5942,
          6181,
          6267,
          6235
        ],
        "name": "EntitlementChecker",
        "nameLocation": "249:18:31",
        "scope": 5943,
        "usedErrors": [
          6211,
          6213,
          6215
        ],
        "usedEvents": [
          6219,
          6223,
          6234
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 31
}
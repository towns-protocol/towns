{
  "abi": [
    {
      "inputs": [],
      "name": "EntitlementChecker_InsufficientNumberOfNodes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementChecker_NodeAlreadyRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EntitlementChecker_NodeNotRegistered",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "callerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "transactionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "selectedNodes",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "EntitlementCheckRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "err",
          "type": "string"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "LogAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "value",
          "type": "address[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool[]",
          "name": "value",
          "type": "bool[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "value",
          "type": "bytes32[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "value",
          "type": "int256[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "value",
          "type": "string[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "value",
          "type": "uint256[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "LogBytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "value",
          "type": "bytes32"
        }
      ],
      "name": "LogBytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "value",
          "type": "int256"
        }
      ],
      "name": "LogInt256",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "LogNamedAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "value",
          "type": "address[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool[]",
          "name": "value",
          "type": "bool[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "value",
          "type": "bytes32[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "value",
          "type": "int256[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "value",
          "type": "string[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "value",
          "type": "uint256[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "LogNamedBytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "value",
          "type": "bytes32"
        }
      ],
      "name": "LogNamedBytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "value",
          "type": "int256"
        }
      ],
      "name": "LogNamedInt256",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "LogNamedString",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "LogNamedUint256",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "LogString",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "LogUint256",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "NodeRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nodeAddress",
          "type": "address"
        }
      ],
      "name": "NodeUnregistered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NATIVE_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "s1",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "s2",
          "type": "string"
        }
      ],
      "name": "_isEqual",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "s1",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s2",
          "type": "bytes32"
        }
      ],
      "name": "_isEqual",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checker",
      "outputs": [
        {
          "internalType": "contract IEntitlementChecker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nodeKeys",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRandomNodes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_getRandomNodes_revert_insufficientNumberOfNodes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_registerNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_registerNode_revert_nodeAlreadyRegistered",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_unregisterNode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_unregisterNode_revert_nodeNotRegistered",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b50604051631eac91f760e11b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d90633d5923ee9061007e9060040160408082526007908201526654455354494e4760c81b6060820152608060208201819052600490820152637472756560e01b60a082015260c00190565b600060405180830381600087803b15801561009857600080fd5b505af11580156100ac573d6000803e3d6000fd5b5050505032326001600160a01b0316314342415a604080516001600160a01b039788166020820152908101959095526060850193909352608084019190915290921660a082015260c081019190915260e00160408051601f198184030181529190528051602090910120608052608051612086610134600039600061125b01526120866000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637967fd701161008c578063bf65b20111610066578063bf65b201146101af578063caa11abb146101b7578063cf5303cf146101bf578063fa7626d4146101d257600080fd5b80637967fd701461018c578063ba414fa614610194578063be7e3bd41461019c57600080fd5b806331f7d964116100c857806331f7d964146101095780633b34fb1b146101415780634eba864114610164578063661de07d1461016c57600080fd5b80630a9254e4146100ef57806329f32092146100f95780632a3c4cf014610101575b600080fd5b6100f76101d9565b005b6100f7610224565b6100f76102b5565b61012473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6040516001600160a01b0390911681526020015b60405180910390f35b61015461014f366004611386565b610391565b6040519015158152602001610138565b6100f76103ea565b61017f61017a3660046113ff565b6105fd565b6040516101389190611440565b6100f7610697565b61015461096b565b6101546101aa366004611473565b610a80565b6100f7610aba565b6100f7610cbf565b600854610124906001600160a01b031681565b6001610154565b6040516101e5906112b4565b604051809103906000f080158015610201573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b61022c610de8565b600854604051631079b6d760e11b8152600560048201523060248201526000916001600160a01b0316906320f36dae90604401600060405180830381865afa15801561027c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102a49190810190611495565b90506102b28151600561100f565b50565b604051630618f58760e51b8152631762997d60e01b60048201526000805160206120668339815191529063c31eb0e090602401600060405180830381600087803b15801561030257600080fd5b505af1158015610316573d6000803e3d6000fd5b5050600854604051631079b6d760e11b8152601a60048201523060248201526001600160a01b0390911692506320f36dae9150604401600060405180830381865afa158015610369573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102b29190810190611495565b6000816040516020016103a49190611547565b60405160208183030381529060405280519060200120836040516020016103cb9190611547565b6040516020818303038152906040528051906020012014905092915050565b60006103f4611137565b60405163ca669fa760e01b81526001600160a01b03821660048201529091506000805160206120668339815191529063ca669fa790602401600060405180830381600087803b15801561044657600080fd5b505af115801561045a573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b0316631680b35c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104ae57600080fd5b505af11580156104c2573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020612066833981519152925063ca669fa79150602401600060405180830381600087803b15801561051557600080fd5b505af1158015610529573d6000803e3d6000fd5b5050604051630618f58760e51b815263d1922fc160e01b6004820152600080516020612066833981519152925063c31eb0e09150602401600060405180830381600087803b15801561057a57600080fd5b505af115801561058e573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b0316631680b35c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105e257600080fd5b505af11580156105f6573d6000803e3d6000fd5b5050505050565b6009602052600090815260409020805461061690611563565b80601f016020809104026020016040519081016040528092919081815260200182805461064290611563565b801561068f5780601f106106645761010080835404028352916020019161068f565b820191906000526020600020905b81548152906001019060200180831161067257829003601f168201915b505050505081565b60006106a1611137565b60405163ca669fa760e01b81526001600160a01b03821660048201529091506000805160206120668339815191529063ca669fa790602401600060405180830381600087803b1580156106f357600080fd5b505af1158015610707573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b0316631680b35c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561075b57600080fd5b505af115801561076f573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020612066833981519152925063ca669fa79150602401600060405180830381600087803b1580156107c257600080fd5b505af11580156107d6573d6000803e3d6000fd5b505060405163248e63e160e11b815260016004820181905260248201819052604482018190526064820152600080516020612066833981519152925063491cc7c29150608401600060405180830381600087803b15801561083657600080fd5b505af115801561084a573d6000803e3d6000fd5b50506040516001600160a01b03841692507fb1864577e4f285436a80ebc833984755393e2450d58622a65fb4fce87ea3573a9150600090a2600860009054906101000a90046001600160a01b03166001600160a01b0316633d385cf56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108d257600080fd5b505af11580156108e6573d6000803e3d6000fd5b505050506102b2600860009054906101000a90046001600160a01b03166001600160a01b0316636da49b836040518163ffffffff1660e01b8152600401602060405180830381865afa158015610940573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610964919061159d565b600061100f565b6000805460ff161561097d5750600190565b6000805160206120668339815191523b15610a7a5760408051600080516020612066833981519152602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916109fd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016115b6565b60408051601f1981840301815290829052610a1791611547565b6000604051808303816000865af19150503d8060008114610a54576040519150601f19603f3d011682016040523d82523d6000602084013e610a59565b606091505b50915050600081806020019051810190610a7391906115e7565b9392505050565b50600090565b600081604051602001610a9591815260200190565b60408051601f19818403018152828252805160209182012090830186905291016103cb565b6000610ac4611137565b60405163ca669fa760e01b81526001600160a01b03821660048201529091506000805160206120668339815191529063ca669fa790602401600060405180830381600087803b158015610b1657600080fd5b505af1158015610b2a573d6000803e3d6000fd5b505060405163248e63e160e11b815260016004820181905260248201819052604482018190526064820152600080516020612066833981519152925063491cc7c29150608401600060405180830381600087803b158015610b8a57600080fd5b505af1158015610b9e573d6000803e3d6000fd5b50506040516001600160a01b03841692507f564728e6a7c8edd446557d94e0339d5e6ca2e05f42188914efdbdc87bcbbabf69150600090a2600860009054906101000a90046001600160a01b03166001600160a01b0316631680b35c6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c2657600080fd5b505af1158015610c3a573d6000803e3d6000fd5b505050506102b2600860009054906101000a90046001600160a01b03166001600160a01b0316636da49b836040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb8919061159d565b600161100f565b6000610cc9611137565b60405163ca669fa760e01b81526001600160a01b03821660048201529091506000805160206120668339815191529063ca669fa790602401600060405180830381600087803b158015610d1b57600080fd5b505af1158015610d2f573d6000803e3d6000fd5b5050604051630618f58760e51b81526317e3e0b960e01b6004820152600080516020612066833981519152925063c31eb0e09150602401600060405180830381600087803b158015610d8057600080fd5b505af1158015610d94573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b0316633d385cf56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105e257600080fd5b60005b600a811015610f97576000610dfe611137565b60405163348051d760e11b81526004810184905290915060008051602061206683398151915290636900a3ae90602401600060405180830381865afa158015610e4b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e739190810190611609565b604051602001610e839190611680565b60408051601f198184030181529181526001600160a01b038316600090815260096020522090610eb390826116fb565b5060405163ca669fa760e01b81526001600160a01b03821660048201526000805160206120668339815191529063ca669fa790602401600060405180830381600087803b158015610f0357600080fd5b505af1158015610f17573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b0316631680b35c6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f6b57600080fd5b505af1158015610f7f573d6000803e3d6000fd5b50505050508080610f8f906117bb565b915050610deb565b5060085460408051636da49b8360e01b815290516000926001600160a01b031691636da49b839160048083019260209291908290030181865afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611006919061159d565b90506102b281600a5b808214611133577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516110839060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015264743235365d60d81b606082015260800190565b60405180910390a160408051818152600781830152660808081319599d60ca1b60608201526020810184905290517fe41397d8de5007c5d2f4564ba72bd2a8a09a8fdb658da682e22bcfa1193bb1d19181900360800190a160408051818152600781830152660808149a59da1d60ca1b60608201526020810183905290517fe41397d8de5007c5d2f4564ba72bd2a8a09a8fdb658da682e22bcfa1193bb1d19181900360800190a1611133611146565b5050565b6000611141611247565b905090565b6000805160206120668339815191523b60000361115f57565b60408051600080516020612066833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526111d892916020016115b6565b60408051601f19818403018152908290526111f291611547565b6000604051808303816000865af19150503d806000811461122f576040519150601f19603f3d011682016040523d82523d6000602084013e611234565b606091505b50506000805460ff191660011790555050565b6000611251611256565b919050565b6000807f0000000000000000000000000000000000000000000000000000000000000000425a604080516020810194909452830191909152606082015260800160408051601f19818403018152919052805160209091012092915050565b610883806117e383390190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611300576113006112c1565b604052919050565b600067ffffffffffffffff821115611322576113226112c1565b50601f01601f191660200190565b600082601f83011261134157600080fd5b813561135461134f82611308565b6112d7565b81815284602083860101111561136957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561139957600080fd5b823567ffffffffffffffff808211156113b157600080fd5b6113bd86838701611330565b935060208501359150808211156113d357600080fd5b506113e085828601611330565b9150509250929050565b6001600160a01b03811681146102b257600080fd5b60006020828403121561141157600080fd5b8135610a73816113ea565b60005b8381101561143757818101518382015260200161141f565b50506000910152565b602081526000825180602084015261145f81604085016020870161141c565b601f01601f19169190910160400192915050565b6000806040838503121561148657600080fd5b50508035926020909101359150565b600060208083850312156114a857600080fd5b825167ffffffffffffffff808211156114c057600080fd5b818501915085601f8301126114d457600080fd5b8151818111156114e6576114e66112c1565b8060051b91506114f78483016112d7565b818152918301840191848101908884111561151157600080fd5b938501935b8385101561153b578451925061152b836113ea565b8282529385019390850190611516565b98975050505050505050565b6000825161155981846020870161141c565b9190910192915050565b600181811c9082168061157757607f821691505b60208210810361159757634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156115af57600080fd5b5051919050565b6001600160e01b03198316815281516000906115d981600485016020870161141c565b919091016004019392505050565b6000602082840312156115f957600080fd5b81518015158114610a7357600080fd5b60006020828403121561161b57600080fd5b815167ffffffffffffffff81111561163257600080fd5b8201601f8101841361164357600080fd5b805161165161134f82611308565b81815285602083850101111561166657600080fd5b61167782602083016020860161141c565b95945050505050565b636e6f646560e01b81526000825161169f81600485016020870161141c565b9190910160040192915050565b601f8211156116f657600081815260208120601f850160051c810160208610156116d35750805b601f850160051c820191505b818110156116f2578281556001016116df565b5050505b505050565b815167ffffffffffffffff811115611715576117156112c1565b611729816117238454611563565b846116ac565b602080601f83116001811461175e57600084156117465750858301515b600019600386901b1c1916600185901b1785556116f2565b600085815260208120601f198616915b8281101561178d5788860151825594840194600190910190840161176e565b50858210156117ab5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000600182016117db57634e487b7160e01b600052601160045260246000fd5b506001019056fe608060405234801561001057600080fd5b50610863806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631680b35c1461005c57806320f36dae146100665780633d385cf51461008f5780636da49b8314610097578063f22f8d2e146100ad575b600080fd5b6100646100c0565b005b610079610074366004610625565b6100cd565b6040516100869190610695565b60405180910390f35b6100646100e2565b61009f6100ed565b604051908152602001610086565b6100646100bb3660046106be565b6100fc565b6100cb336001610145565b565b60606100d98383610243565b90505b92915050565b6100cb336000610145565b60006100f76103b0565b905090565b326001600160a01b03167f58529d9ba9cbe2a11e905b3c701769d5265641ce084d196095a7692839481a4b8383336040516101399392919061078f565b60405180910390a25050565b7ffc7acd906223ea4362cec2df6e927b10b0448ae1bf045557e5b57490cab1e1bc81156101d85761017681846103db565b156101945760405163d1922fc160e01b815260040160405180910390fd5b61019e81846103fd565b506040516001600160a01b038416907f564728e6a7c8edd446557d94e0339d5e6ca2e05f42188914efdbdc87bcbbabf690600090a2505050565b6101e281846103db565b6101ff576040516317e3e0b960e01b815260040160405180910390fd5b6102098184610412565b506040516001600160a01b038416907fb1864577e4f285436a80ebc833984755393e2450d58622a65fb4fce87ea3573a90600090a2505050565b60607ffc7acd906223ea4362cec2df6e927b10b0448ae1bf045557e5b57490cab1e1bc8361027082610427565b101561028f57604051631762997d60e01b815260040160405180910390fd5b8367ffffffffffffffff8111156102a8576102a86106a8565b6040519080825280602002602001820160405280156102d1578160200160208202803683370190505b50915060005b84811015610325576102e98282610431565b8382815181106102fb576102fb6107c0565b6001600160a01b03909216602092830291909101909101528061031d816107ec565b9150506102d7565b50835b61033182610427565b8110156103a857600061034e610348836001610805565b8661043d565b905085811015610395576103628383610431565b848281518110610374576103746107c0565b60200260200101906001600160a01b031690816001600160a01b0316815250505b50806103a0816107ec565b915050610328565b505092915050565b60006100f77ffc7acd906223ea4362cec2df6e927b10b0448ae1bf045557e5b57490cab1e1bc610427565b6001600160a01b038116600090815260018301602052604081205415156100d9565b60006100d9836001600160a01b03841661049d565b60006100d9836001600160a01b0384166104ec565b60006100dc825490565b60006100d983836105df565b6040805144602082015242918101919091526bffffffffffffffffffffffff1932606090811b82168184015283901b16607482015260009083906088016040516020818303038152906040528051906020012060001c6100d99190610818565b60008181526001830160205260408120546104e4575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556100dc565b5060006100dc565b600081815260018301602052604081205480156105d557600061051060018361083a565b85549091506000906105249060019061083a565b9050818114610589576000866000018281548110610544576105446107c0565b9060005260206000200154905080876000018481548110610567576105676107c0565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061059a5761059a61084d565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506100dc565b60009150506100dc565b60008260000182815481106105f6576105f66107c0565b9060005260206000200154905092915050565b80356001600160a01b038116811461062057600080fd5b919050565b6000806040838503121561063857600080fd5b8235915061064860208401610609565b90509250929050565b600081518084526020808501945080840160005b8381101561068a5781516001600160a01b031687529582019590820190600101610665565b509495945050505050565b6020815260006100d96020830184610651565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156106d157600080fd5b8235915060208084013567ffffffffffffffff808211156106f157600080fd5b818601915086601f83011261070557600080fd5b813581811115610717576107176106a8565b8060051b604051601f19603f8301168101818110858211171561073c5761073c6106a8565b60405291825284820192508381018501918983111561075a57600080fd5b938501935b8285101561077f5761077085610609565b8452938501939285019261075f565b8096505050505050509250929050565b8381526060602082015260006107a86060830185610651565b905060018060a01b0383166040830152949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016107fe576107fe6107d6565b5060010190565b808201808211156100dc576100dc6107d6565b60008261083557634e487b7160e01b600052601260045260246000fd5b500690565b818103818111156100dc576100dc6107d6565b634e487b7160e01b600052603160045260246000fd0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d",
    "sourceMap": "461:2689:207:-:0;;;;;;;;;;;;-1:-1:-1;470:28:321;;-1:-1:-1;;;470:28:321;;:9;;;;:28;;;;317:2:412;299:21;;;356:1;336:18;;;329:29;-1:-1:-1;;;389:2:412;374:18;;367:37;442:3;435:4;420:20;;413:33;;;483:1;462:19;;;455:30;-1:-1:-1;;;516:3:412;501:19;;494:35;561:3;546:19;;14:557;470:28:321;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;593:9;614;-1:-1:-1;;;;;614:17:321;;643:12;667:15;694:14;720:9;571:168;;;-1:-1:-1;;;;;935:15:412;;;571:168:321;;;917:34:412;967:18;;;960:34;;;;1010:18;;;1003:34;;;;1053:18;;;1046:34;;;;1117:15;;;1096:19;;;1089:44;1149:19;;;1142:35;;;;851:19;;571:168:321;;;-1:-1:-1;;571:168:321;;;;;;;;;552:195;;571:168;552:195;;;;528:225;;461:2689:207;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80637967fd701161008c578063bf65b20111610066578063bf65b201146101af578063caa11abb146101b7578063cf5303cf146101bf578063fa7626d4146101d257600080fd5b80637967fd701461018c578063ba414fa614610194578063be7e3bd41461019c57600080fd5b806331f7d964116100c857806331f7d964146101095780633b34fb1b146101415780634eba864114610164578063661de07d1461016c57600080fd5b80630a9254e4146100ef57806329f32092146100f95780632a3c4cf014610101575b600080fd5b6100f76101d9565b005b6100f7610224565b6100f76102b5565b61012473eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6040516001600160a01b0390911681526020015b60405180910390f35b61015461014f366004611386565b610391565b6040519015158152602001610138565b6100f76103ea565b61017f61017a3660046113ff565b6105fd565b6040516101389190611440565b6100f7610697565b61015461096b565b6101546101aa366004611473565b610a80565b6100f7610aba565b6100f7610cbf565b600854610124906001600160a01b031681565b6001610154565b6040516101e5906112b4565b604051809103906000f080158015610201573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055565b61022c610de8565b600854604051631079b6d760e11b8152600560048201523060248201526000916001600160a01b0316906320f36dae90604401600060405180830381865afa15801561027c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102a49190810190611495565b90506102b28151600561100f565b50565b604051630618f58760e51b8152631762997d60e01b60048201526000805160206120668339815191529063c31eb0e090602401600060405180830381600087803b15801561030257600080fd5b505af1158015610316573d6000803e3d6000fd5b5050600854604051631079b6d760e11b8152601a60048201523060248201526001600160a01b0390911692506320f36dae9150604401600060405180830381865afa158015610369573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102b29190810190611495565b6000816040516020016103a49190611547565b60405160208183030381529060405280519060200120836040516020016103cb9190611547565b6040516020818303038152906040528051906020012014905092915050565b60006103f4611137565b60405163ca669fa760e01b81526001600160a01b03821660048201529091506000805160206120668339815191529063ca669fa790602401600060405180830381600087803b15801561044657600080fd5b505af115801561045a573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b0316631680b35c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104ae57600080fd5b505af11580156104c2573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020612066833981519152925063ca669fa79150602401600060405180830381600087803b15801561051557600080fd5b505af1158015610529573d6000803e3d6000fd5b5050604051630618f58760e51b815263d1922fc160e01b6004820152600080516020612066833981519152925063c31eb0e09150602401600060405180830381600087803b15801561057a57600080fd5b505af115801561058e573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b0316631680b35c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105e257600080fd5b505af11580156105f6573d6000803e3d6000fd5b5050505050565b6009602052600090815260409020805461061690611563565b80601f016020809104026020016040519081016040528092919081815260200182805461064290611563565b801561068f5780601f106106645761010080835404028352916020019161068f565b820191906000526020600020905b81548152906001019060200180831161067257829003601f168201915b505050505081565b60006106a1611137565b60405163ca669fa760e01b81526001600160a01b03821660048201529091506000805160206120668339815191529063ca669fa790602401600060405180830381600087803b1580156106f357600080fd5b505af1158015610707573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b0316631680b35c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561075b57600080fd5b505af115801561076f573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020612066833981519152925063ca669fa79150602401600060405180830381600087803b1580156107c257600080fd5b505af11580156107d6573d6000803e3d6000fd5b505060405163248e63e160e11b815260016004820181905260248201819052604482018190526064820152600080516020612066833981519152925063491cc7c29150608401600060405180830381600087803b15801561083657600080fd5b505af115801561084a573d6000803e3d6000fd5b50506040516001600160a01b03841692507fb1864577e4f285436a80ebc833984755393e2450d58622a65fb4fce87ea3573a9150600090a2600860009054906101000a90046001600160a01b03166001600160a01b0316633d385cf56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156108d257600080fd5b505af11580156108e6573d6000803e3d6000fd5b505050506102b2600860009054906101000a90046001600160a01b03166001600160a01b0316636da49b836040518163ffffffff1660e01b8152600401602060405180830381865afa158015610940573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610964919061159d565b600061100f565b6000805460ff161561097d5750600190565b6000805160206120668339815191523b15610a7a5760408051600080516020612066833981519152602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916109fd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016115b6565b60408051601f1981840301815290829052610a1791611547565b6000604051808303816000865af19150503d8060008114610a54576040519150601f19603f3d011682016040523d82523d6000602084013e610a59565b606091505b50915050600081806020019051810190610a7391906115e7565b9392505050565b50600090565b600081604051602001610a9591815260200190565b60408051601f19818403018152828252805160209182012090830186905291016103cb565b6000610ac4611137565b60405163ca669fa760e01b81526001600160a01b03821660048201529091506000805160206120668339815191529063ca669fa790602401600060405180830381600087803b158015610b1657600080fd5b505af1158015610b2a573d6000803e3d6000fd5b505060405163248e63e160e11b815260016004820181905260248201819052604482018190526064820152600080516020612066833981519152925063491cc7c29150608401600060405180830381600087803b158015610b8a57600080fd5b505af1158015610b9e573d6000803e3d6000fd5b50506040516001600160a01b03841692507f564728e6a7c8edd446557d94e0339d5e6ca2e05f42188914efdbdc87bcbbabf69150600090a2600860009054906101000a90046001600160a01b03166001600160a01b0316631680b35c6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610c2657600080fd5b505af1158015610c3a573d6000803e3d6000fd5b505050506102b2600860009054906101000a90046001600160a01b03166001600160a01b0316636da49b836040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb8919061159d565b600161100f565b6000610cc9611137565b60405163ca669fa760e01b81526001600160a01b03821660048201529091506000805160206120668339815191529063ca669fa790602401600060405180830381600087803b158015610d1b57600080fd5b505af1158015610d2f573d6000803e3d6000fd5b5050604051630618f58760e51b81526317e3e0b960e01b6004820152600080516020612066833981519152925063c31eb0e09150602401600060405180830381600087803b158015610d8057600080fd5b505af1158015610d94573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b0316633d385cf56040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105e257600080fd5b60005b600a811015610f97576000610dfe611137565b60405163348051d760e11b81526004810184905290915060008051602061206683398151915290636900a3ae90602401600060405180830381865afa158015610e4b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e739190810190611609565b604051602001610e839190611680565b60408051601f198184030181529181526001600160a01b038316600090815260096020522090610eb390826116fb565b5060405163ca669fa760e01b81526001600160a01b03821660048201526000805160206120668339815191529063ca669fa790602401600060405180830381600087803b158015610f0357600080fd5b505af1158015610f17573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b0316631680b35c6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f6b57600080fd5b505af1158015610f7f573d6000803e3d6000fd5b50505050508080610f8f906117bb565b915050610deb565b5060085460408051636da49b8360e01b815290516000926001600160a01b031691636da49b839160048083019260209291908290030181865afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611006919061159d565b90506102b281600a5b808214611133577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516110839060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015264743235365d60d81b606082015260800190565b60405180910390a160408051818152600781830152660808081319599d60ca1b60608201526020810184905290517fe41397d8de5007c5d2f4564ba72bd2a8a09a8fdb658da682e22bcfa1193bb1d19181900360800190a160408051818152600781830152660808149a59da1d60ca1b60608201526020810183905290517fe41397d8de5007c5d2f4564ba72bd2a8a09a8fdb658da682e22bcfa1193bb1d19181900360800190a1611133611146565b5050565b6000611141611247565b905090565b6000805160206120668339815191523b60000361115f57565b60408051600080516020612066833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526111d892916020016115b6565b60408051601f19818403018152908290526111f291611547565b6000604051808303816000865af19150503d806000811461122f576040519150601f19603f3d011682016040523d82523d6000602084013e611234565b606091505b50506000805460ff191660011790555050565b6000611251611256565b919050565b6000807f0000000000000000000000000000000000000000000000000000000000000000425a604080516020810194909452830191909152606082015260800160408051601f19818403018152919052805160209091012092915050565b610883806117e383390190565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611300576113006112c1565b604052919050565b600067ffffffffffffffff821115611322576113226112c1565b50601f01601f191660200190565b600082601f83011261134157600080fd5b813561135461134f82611308565b6112d7565b81815284602083860101111561136957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561139957600080fd5b823567ffffffffffffffff808211156113b157600080fd5b6113bd86838701611330565b935060208501359150808211156113d357600080fd5b506113e085828601611330565b9150509250929050565b6001600160a01b03811681146102b257600080fd5b60006020828403121561141157600080fd5b8135610a73816113ea565b60005b8381101561143757818101518382015260200161141f565b50506000910152565b602081526000825180602084015261145f81604085016020870161141c565b601f01601f19169190910160400192915050565b6000806040838503121561148657600080fd5b50508035926020909101359150565b600060208083850312156114a857600080fd5b825167ffffffffffffffff808211156114c057600080fd5b818501915085601f8301126114d457600080fd5b8151818111156114e6576114e66112c1565b8060051b91506114f78483016112d7565b818152918301840191848101908884111561151157600080fd5b938501935b8385101561153b578451925061152b836113ea565b8282529385019390850190611516565b98975050505050505050565b6000825161155981846020870161141c565b9190910192915050565b600181811c9082168061157757607f821691505b60208210810361159757634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156115af57600080fd5b5051919050565b6001600160e01b03198316815281516000906115d981600485016020870161141c565b919091016004019392505050565b6000602082840312156115f957600080fd5b81518015158114610a7357600080fd5b60006020828403121561161b57600080fd5b815167ffffffffffffffff81111561163257600080fd5b8201601f8101841361164357600080fd5b805161165161134f82611308565b81815285602083850101111561166657600080fd5b61167782602083016020860161141c565b95945050505050565b636e6f646560e01b81526000825161169f81600485016020870161141c565b9190910160040192915050565b601f8211156116f657600081815260208120601f850160051c810160208610156116d35750805b601f850160051c820191505b818110156116f2578281556001016116df565b5050505b505050565b815167ffffffffffffffff811115611715576117156112c1565b611729816117238454611563565b846116ac565b602080601f83116001811461175e57600084156117465750858301515b600019600386901b1c1916600185901b1785556116f2565b600085815260208120601f198616915b8281101561178d5788860151825594840194600190910190840161176e565b50858210156117ab5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000600182016117db57634e487b7160e01b600052601160045260246000fd5b506001019056fe608060405234801561001057600080fd5b50610863806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631680b35c1461005c57806320f36dae146100665780633d385cf51461008f5780636da49b8314610097578063f22f8d2e146100ad575b600080fd5b6100646100c0565b005b610079610074366004610625565b6100cd565b6040516100869190610695565b60405180910390f35b6100646100e2565b61009f6100ed565b604051908152602001610086565b6100646100bb3660046106be565b6100fc565b6100cb336001610145565b565b60606100d98383610243565b90505b92915050565b6100cb336000610145565b60006100f76103b0565b905090565b326001600160a01b03167f58529d9ba9cbe2a11e905b3c701769d5265641ce084d196095a7692839481a4b8383336040516101399392919061078f565b60405180910390a25050565b7ffc7acd906223ea4362cec2df6e927b10b0448ae1bf045557e5b57490cab1e1bc81156101d85761017681846103db565b156101945760405163d1922fc160e01b815260040160405180910390fd5b61019e81846103fd565b506040516001600160a01b038416907f564728e6a7c8edd446557d94e0339d5e6ca2e05f42188914efdbdc87bcbbabf690600090a2505050565b6101e281846103db565b6101ff576040516317e3e0b960e01b815260040160405180910390fd5b6102098184610412565b506040516001600160a01b038416907fb1864577e4f285436a80ebc833984755393e2450d58622a65fb4fce87ea3573a90600090a2505050565b60607ffc7acd906223ea4362cec2df6e927b10b0448ae1bf045557e5b57490cab1e1bc8361027082610427565b101561028f57604051631762997d60e01b815260040160405180910390fd5b8367ffffffffffffffff8111156102a8576102a86106a8565b6040519080825280602002602001820160405280156102d1578160200160208202803683370190505b50915060005b84811015610325576102e98282610431565b8382815181106102fb576102fb6107c0565b6001600160a01b03909216602092830291909101909101528061031d816107ec565b9150506102d7565b50835b61033182610427565b8110156103a857600061034e610348836001610805565b8661043d565b905085811015610395576103628383610431565b848281518110610374576103746107c0565b60200260200101906001600160a01b031690816001600160a01b0316815250505b50806103a0816107ec565b915050610328565b505092915050565b60006100f77ffc7acd906223ea4362cec2df6e927b10b0448ae1bf045557e5b57490cab1e1bc610427565b6001600160a01b038116600090815260018301602052604081205415156100d9565b60006100d9836001600160a01b03841661049d565b60006100d9836001600160a01b0384166104ec565b60006100dc825490565b60006100d983836105df565b6040805144602082015242918101919091526bffffffffffffffffffffffff1932606090811b82168184015283901b16607482015260009083906088016040516020818303038152906040528051906020012060001c6100d99190610818565b60008181526001830160205260408120546104e4575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556100dc565b5060006100dc565b600081815260018301602052604081205480156105d557600061051060018361083a565b85549091506000906105249060019061083a565b9050818114610589576000866000018281548110610544576105446107c0565b9060005260206000200154905080876000018481548110610567576105676107c0565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061059a5761059a61084d565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506100dc565b60009150506100dc565b60008260000182815481106105f6576105f66107c0565b9060005260206000200154905092915050565b80356001600160a01b038116811461062057600080fd5b919050565b6000806040838503121561063857600080fd5b8235915061064860208401610609565b90509250929050565b600081518084526020808501945080840160005b8381101561068a5781516001600160a01b031687529582019590820190600101610665565b509495945050505050565b6020815260006100d96020830184610651565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156106d157600080fd5b8235915060208084013567ffffffffffffffff808211156106f157600080fd5b818601915086601f83011261070557600080fd5b813581811115610717576107176106a8565b8060051b604051601f19603f8301168101818110858211171561073c5761073c6106a8565b60405291825284820192508381018501918983111561075a57600080fd5b938501935b8285101561077f5761077085610609565b8452938501939285019261075f565b8096505050505050509250929050565b8381526060602082015260006107a86060830185610651565b905060018060a01b0383166040830152949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016107fe576107fe6107d6565b5060010190565b808201808211156100dc576100dc6107d6565b60008261083557634e487b7160e01b600052601260045260246000fd5b500690565b818103818111156100dc576100dc6107d6565b634e487b7160e01b600052603160045260246000fd0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d",
    "sourceMap": "461:2689:207:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;621:71;;;:::i;:::-;;2282:170;;;:::i;2456:201::-;;;:::i;275:94:321:-;;326:42;275:94;;;;;-1:-1:-1;;;;;178:32:412;;;160:51;;148:2;133:18;275:94:321;;;;;;;;1843:177;;;;;;:::i;:::-;;:::i;:::-;;;2008:14:412;;2001:22;1983:41;;1971:2;1956:18;1843:177:321;:187:412;1117:279:207;;;:::i;574:42::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1576:297::-;;;:::i;4324:564:410:-;;;:::i;2024:153:321:-;;;;;;:::i;:::-;;:::i;871:242:207:-;;;:::i;1877:226::-;;;:::i;535:34::-;;;;;-1:-1:-1;;;;;535:34:207;;;2763:84:410;2836:4;2763:84;;621:71:207;663:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;653:7:207;:34;;-1:-1:-1;;;;;;653:34:207;-1:-1:-1;;;;;653:34:207;;;;;;;;;;621:71::o;2282:170::-;2328:16;:14;:16::i;:::-;2376:7;;:40;;-1:-1:-1;;;2376:40:207;;2399:1;2376:40;;;3750:25:412;2410:4:207;3791:18:412;;;3784:60;2351:22:207;;-1:-1:-1;;;;;2376:7:207;;:22;;3723:18:412;;2376:40:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2376:40:207;;;;;;;;;;;;:::i;:::-;2351:65;;2422:25;2431:5;:12;2445:1;2422:8;:25::i;:::-;2322:130;2282:170::o;2456:201::-;2535:70;;-1:-1:-1;;;2535:70:207;;-1:-1:-1;;;2535:70:207;;;5015:52:412;-1:-1:-1;;;;;;;;;;;2535:15:207;;;4988:18:412;;2535:70:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2611:7:207;;:41;;-1:-1:-1;;;2611:41:207;;2634:2;2611:41;;;3750:25:412;2646:4:207;3791:18:412;;;3784:60;-1:-1:-1;;;;;2611:7:207;;;;-1:-1:-1;2611:22:207;;-1:-1:-1;3723:18:412;;2611:41:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2611:41:207;;;;;;;;;;;;:::i;1843:177:321:-;1930:4;2011:2;1994:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;1984:31;;;;;;1976:2;1959:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;1949:31;;;;;;:66;1942:73;;1843:177;;;;:::o;1117:279:207:-;1190:12;1205:16;:14;:16::i;:::-;1228:14;;-1:-1:-1;;;1228:14:207;;-1:-1:-1;;;;;178:32:412;;1228:14:207;;;160:51:412;1190:31:207;;-1:-1:-1;;;;;;;;;;;;1228:8:207;;;133:18:412;;1228:14:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:7;;;;;;;;;-1:-1:-1;;;;;1248:7:207;-1:-1:-1;;;;;1248:20:207;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1277:14:207;;-1:-1:-1;;;1277:14:207;;-1:-1:-1;;;;;178:32:412;;1277:14:207;;;160:51:412;-1:-1:-1;;;;;;;;;;;1277:8:207;-1:-1:-1;1277:8:207;;-1:-1:-1;133:18:412;;1277:14:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1297:66:207;;-1:-1:-1;;;1297:66:207;;-1:-1:-1;;;1297:66:207;;;5015:52:412;-1:-1:-1;;;;;;;;;;;1297:15:207;-1:-1:-1;1297:15:207;;-1:-1:-1;4988:18:412;;1297:66:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1369:7;;;;;;;;;-1:-1:-1;;;;;1369:7:207;-1:-1:-1;;;;;1369:20:207;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1184:212;1117:279::o;574:42::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1576:297::-;1622:12;1637:16;:14;:16::i;:::-;1660:14;;-1:-1:-1;;;1660:14:207;;-1:-1:-1;;;;;178:32:412;;1660:14:207;;;160:51:412;1622:31:207;;-1:-1:-1;;;;;;;;;;;;1660:8:207;;;133:18:412;;1660:14:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1680:7;;;;;;;;;-1:-1:-1;;;;;1680:7:207;-1:-1:-1;;;;;1680:20:207;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1709:14:207;;-1:-1:-1;;;1709:14:207;;-1:-1:-1;;;;;178:32:412;;1709:14:207;;;160:51:412;-1:-1:-1;;;;;;;;;;;1709:8:207;-1:-1:-1;1709:8:207;;-1:-1:-1;133:18:412;;1709:14:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1729:37:207;;-1:-1:-1;;;1729:37:207;;1743:4;1729:37;;;6252:41:412;;;6309:18;;;6302:50;;;6368:18;;;6361:50;;;6427:18;;;6420:50;-1:-1:-1;;;;;;;;;;;1729:13:207;-1:-1:-1;1729:13:207;;-1:-1:-1;6224:19:412;;1729:37:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1777:22:207;;-1:-1:-1;;;;;1777:22:207;;;-1:-1:-1;1777:22:207;;-1:-1:-1;1777:22:207;;;1805:7;;;;;;;;;-1:-1:-1;;;;;1805:7:207;-1:-1:-1;;;;;1805:22:207;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:32;1845:7;;;;;;;;;-1:-1:-1;;;;;1845:7:207;-1:-1:-1;;;;;1845:17:207;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1866:1;1836:8;:32::i;4324:564:410:-;4358:4;4378:7;;;;4374:49;;;-1:-1:-1;4408:4:410;;4324:564::o;4374:49::-;-1:-1:-1;;;;;;;;;;;4509:22:410;:26;4505:377;;4675:41;;;-1:-1:-1;;;;;;;;;;;4675:41:410;;;6844:51:412;;;-1:-1:-1;;;6911:18:412;;;6904:34;4675:41:410;;;;;;;;;6817:18:412;;;4675:41:410;;;-1:-1:-1;;4581:15:410;;4614:103;;4638:34;;4614:103;;;:::i;:::-;;;;-1:-1:-1;;4614:103:410;;;;;;;;;;4581:150;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4551:180;;;4745:17;4776:10;4765:30;;;;;;;;;;;;:::i;:::-;4745:50;4324:564;-1:-1:-1;;;4324:564:410:o;4505:377::-;-1:-1:-1;4866:5:410;;4324:564::o;2024:153:321:-;2087:4;2168:2;2151:20;;;;;;8041:19:412;;8085:2;8076:12;;7912:182;2151:20:321;;;;-1:-1:-1;;2151:20:321;;;;;;;;;2141:31;;2151:20;2141:31;;;;2116:20;;;8041:19:412;;;2141:31:321;8076:12:412;2116:20:321;7912:182:412;871:242:207;915:12;930:16;:14;:16::i;:::-;953:14;;-1:-1:-1;;;953:14:207;;-1:-1:-1;;;;;178:32:412;;953:14:207;;;160:51:412;915:31:207;;-1:-1:-1;;;;;;;;;;;;953:8:207;;;133:18:412;;953:14:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;973:37:207;;-1:-1:-1;;;973:37:207;;987:4;973:37;;;6252:41:412;;;6309:18;;;6302:50;;;6368:18;;;6361:50;;;6427:18;;;6420:50;-1:-1:-1;;;;;;;;;;;973:13:207;-1:-1:-1;973:13:207;;-1:-1:-1;6224:19:412;;973:37:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1021:20:207;;-1:-1:-1;;;;;1021:20:207;;;-1:-1:-1;1021:20:207;;-1:-1:-1;1021:20:207;;;1047:7;;;;;;;;;-1:-1:-1;;;;;1047:7:207;-1:-1:-1;;;;;1047:20:207;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1076:32;1085:7;;;;;;;;;-1:-1:-1;;;;;1085:7:207;-1:-1:-1;;;;;1085:17:207;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1106:1;1076:8;:32::i;1877:226::-;1948:12;1963:16;:14;:16::i;:::-;1986:14;;-1:-1:-1;;;1986:14:207;;-1:-1:-1;;;;;178:32:412;;1986:14:207;;;160:51:412;1948:31:207;;-1:-1:-1;;;;;;;;;;;;1986:8:207;;;133:18:412;;1986:14:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2006:62:207;;-1:-1:-1;;;2006:62:207;;-1:-1:-1;;;2006:62:207;;;5015:52:412;-1:-1:-1;;;;;;;;;;;2006:15:207;-1:-1:-1;2006:15:207;;-1:-1:-1;4988:18:412;;2006:62:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:7;;;;;;;;;-1:-1:-1;;;;;2074:7:207;-1:-1:-1;;;;;2074:22:207;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2835:313;2881:9;2876:205;2900:2;2896:1;:6;2876:205;;;2917:12;2932:16;:14;:16::i;:::-;3005:14;;-1:-1:-1;;;3005:14:207;;;;;8245:25:412;;;2917:31:207;;-1:-1:-1;;;;;;;;;;;;3005:11:207;;;8218:18:412;;3005:14:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3005:14:207;;;;;;;;;;;;:::i;:::-;2980:40;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2980:40:207;;;;;;;;;-1:-1:-1;;;;;2956:14:207;;;;;;:8;2980:40;2956:14;;;:65;;:14;:65;:::i;:::-;-1:-1:-1;3030:14:207;;-1:-1:-1;;;3030:14:207;;-1:-1:-1;;;;;178:32:412;;3030:14:207;;;160:51:412;-1:-1:-1;;;;;;;;;;;3030:8:207;;;133:18:412;;3030:14:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3052:7;;;;;;;;;-1:-1:-1;;;;;3052:7:207;-1:-1:-1;;;;;3052:20:207;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2909:172;2904:3;;;;;:::i;:::-;;;;2876:205;;;-1:-1:-1;3101:7:207;;:19;;;-1:-1:-1;;;3101:19:207;;;;3087:11;;-1:-1:-1;;;;;3101:7:207;;:17;;:19;;;;;;;;;;;;;;:7;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3087:33;;3126:17;3135:3;3140:2;16844:275:410;16920:1;16915;:6;16911:202;;16942:44;;;;;12017:2:412;11999:21;;;12056:2;12036:18;;;12029:30;12095:34;12090:2;12075:18;;12068:62;-1:-1:-1;;;12161:2:412;12146:18;;12139:35;12206:3;12191:19;;11815:401;16942:44:410;;;;;;;;17005:29;;;12433:21:412;;;12490:1;12470:18;;;12463:29;-1:-1:-1;;;12523:2:412;12508:18;;12501:37;12605:4;12590:20;;12583:36;;;17005:29:410;;;;;;;12570:3:412;17005:29:410;;;17053;;;12842:21:412;;;12899:1;12879:18;;;12872:29;-1:-1:-1;;;12932:2:412;12917:18;;12910:37;13014:4;12999:20;;12992:36;;;17053:29:410;;;;;;;12979:3:412;17053:29:410;;;17096:6;:4;:6::i;:::-;16844:275;;:::o;1184:127:321:-;1233:15;1287:16;:14;:16::i;:::-;1256:50;;1184:127;:::o;5197:636:410:-;-1:-1:-1;;;;;;;;;;;5287:22:410;3540:37;5287:27;5283:64;;5197:636::o;5283:64::-;5581:65;;;-1:-1:-1;;;;;;;;;;;5581:65:410;;;13241:51:412;;;-1:-1:-1;;;13308:18:412;;;13301:34;;;;5639:4:410;13351:18:412;;;13344:34;5433:11:410;;5449:15;5519:43;;13214:18:412;;5581:65:410;;;-1:-1:-1;;5581:65:410;;;;;;;;;;5478:182;;;5581:65;5478:182;;:::i;:::-;;;;-1:-1:-1;;5478:182:410;;;;;;;;;;5449:221;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5812:7:410;:14;;-1:-1:-1;;5812:14:410;5822:4;5812:14;;;-1:-1:-1;;5197:636:410:o;1079:101:321:-;1128:7;1158:16;:14;:16::i;:::-;1150:25;1079:101;-1:-1:-1;1079:101:321:o;912:163::-;961:7;976:17;1007:6;1015:15;1032:9;996:46;;;;;;13591:25:412;;;;13632:18;;13625:34;;;;13675:18;;;13668:34;13564:18;;996:46:321;;;-1:-1:-1;;996:46:321;;;;;;;;;1055:15;;996:46;1055:15;;;;;912:163;-1:-1:-1;;912:163:321:o;-1:-1:-1:-;;;;;;;;:::o;222:127:412:-;283:10;278:3;274:20;271:1;264:31;314:4;311:1;304:15;338:4;335:1;328:15;354:275;425:2;419:9;490:2;471:13;;-1:-1:-1;;467:27:412;455:40;;525:18;510:34;;546:22;;;507:62;504:88;;;572:18;;:::i;:::-;608:2;601:22;354:275;;-1:-1:-1;354:275:412:o;634:187::-;683:4;716:18;708:6;705:30;702:56;;;738:18;;:::i;:::-;-1:-1:-1;804:2:412;783:15;-1:-1:-1;;779:29:412;810:4;775:40;;634:187::o;826:464::-;869:5;922:3;915:4;907:6;903:17;899:27;889:55;;940:1;937;930:12;889:55;976:6;963:20;1007:49;1023:32;1052:2;1023:32;:::i;:::-;1007:49;:::i;:::-;1081:2;1072:7;1065:19;1127:3;1120:4;1115:2;1107:6;1103:15;1099:26;1096:35;1093:55;;;1144:1;1141;1134:12;1093:55;1209:2;1202:4;1194:6;1190:17;1183:4;1174:7;1170:18;1157:55;1257:1;1232:16;;;1250:4;1228:27;1221:38;;;;1236:7;826:464;-1:-1:-1;;;826:464:412:o;1295:543::-;1383:6;1391;1444:2;1432:9;1423:7;1419:23;1415:32;1412:52;;;1460:1;1457;1450:12;1412:52;1500:9;1487:23;1529:18;1570:2;1562:6;1559:14;1556:34;;;1586:1;1583;1576:12;1556:34;1609:50;1651:7;1642:6;1631:9;1627:22;1609:50;:::i;:::-;1599:60;;1712:2;1701:9;1697:18;1684:32;1668:48;;1741:2;1731:8;1728:16;1725:36;;;1757:1;1754;1747:12;1725:36;;1780:52;1824:7;1813:8;1802:9;1798:24;1780:52;:::i;:::-;1770:62;;;1295:543;;;;;:::o;2035:131::-;-1:-1:-1;;;;;2110:31:412;;2100:42;;2090:70;;2156:1;2153;2146:12;2171:247;2230:6;2283:2;2271:9;2262:7;2258:23;2254:32;2251:52;;;2299:1;2296;2289:12;2251:52;2338:9;2325:23;2357:31;2382:5;2357:31;:::i;2423:250::-;2508:1;2518:113;2532:6;2529:1;2526:13;2518:113;;;2608:11;;;2602:18;2589:11;;;2582:39;2554:2;2547:10;2518:113;;;-1:-1:-1;;2665:1:412;2647:16;;2640:27;2423:250::o;2678:396::-;2827:2;2816:9;2809:21;2790:4;2859:6;2853:13;2902:6;2897:2;2886:9;2882:18;2875:34;2918:79;2990:6;2985:2;2974:9;2970:18;2965:2;2957:6;2953:15;2918:79;:::i;:::-;3058:2;3037:15;-1:-1:-1;;3033:29:412;3018:45;;;;3065:2;3014:54;;2678:396;-1:-1:-1;;2678:396:412:o;3079:248::-;3147:6;3155;3208:2;3196:9;3187:7;3183:23;3179:32;3176:52;;;3224:1;3221;3214:12;3176:52;-1:-1:-1;;3247:23:412;;;3317:2;3302:18;;;3289:32;;-1:-1:-1;3079:248:412:o;3855:1011::-;3950:6;3981:2;4024;4012:9;4003:7;3999:23;3995:32;3992:52;;;4040:1;4037;4030:12;3992:52;4073:9;4067:16;4102:18;4143:2;4135:6;4132:14;4129:34;;;4159:1;4156;4149:12;4129:34;4197:6;4186:9;4182:22;4172:32;;4242:7;4235:4;4231:2;4227:13;4223:27;4213:55;;4264:1;4261;4254:12;4213:55;4293:2;4287:9;4315:2;4311;4308:10;4305:36;;;4321:18;;:::i;:::-;4367:2;4364:1;4360:10;4350:20;;4390:28;4414:2;4410;4406:11;4390:28;:::i;:::-;4452:15;;;4522:11;;;4518:20;;;4483:12;;;;4550:19;;;4547:39;;;4582:1;4579;4572:12;4547:39;4606:11;;;;4626:210;4642:6;4637:3;4634:15;4626:210;;;4715:3;4709:10;4696:23;;4732:31;4757:5;4732:31;:::i;:::-;4776:18;;;4659:12;;;;4814;;;;4626:210;;;4855:5;3855:1011;-1:-1:-1;;;;;;;;3855:1011:412:o;5366:289::-;5497:3;5535:6;5529:13;5551:66;5610:6;5605:3;5598:4;5590:6;5586:17;5551:66;:::i;:::-;5633:16;;;;;5366:289;-1:-1:-1;;5366:289:412:o;5660:380::-;5739:1;5735:12;;;;5782;;;5803:61;;5857:4;5849:6;5845:17;5835:27;;5803:61;5910:2;5902:6;5899:14;5879:18;5876:38;5873:161;;5956:10;5951:3;5947:20;5944:1;5937:31;5991:4;5988:1;5981:15;6019:4;6016:1;6009:15;5873:161;;5660:380;;;:::o;6481:184::-;6551:6;6604:2;6592:9;6583:7;6579:23;6575:32;6572:52;;;6620:1;6617;6610:12;6572:52;-1:-1:-1;6643:16:412;;6481:184;-1:-1:-1;6481:184:412:o;6949:384::-;-1:-1:-1;;;;;;7134:33:412;;7122:46;;7191:13;;7104:3;;7213:74;7191:13;7276:1;7267:11;;7260:4;7248:17;;7213:74;:::i;:::-;7307:16;;;;7325:1;7303:24;;6949:384;-1:-1:-1;;;6949:384:412:o;7630:277::-;7697:6;7750:2;7738:9;7729:7;7725:23;7721:32;7718:52;;;7766:1;7763;7756:12;7718:52;7798:9;7792:16;7851:5;7844:13;7837:21;7830:5;7827:32;7817:60;;7873:1;7870;7863:12;8281:649;8361:6;8414:2;8402:9;8393:7;8389:23;8385:32;8382:52;;;8430:1;8427;8420:12;8382:52;8463:9;8457:16;8496:18;8488:6;8485:30;8482:50;;;8528:1;8525;8518:12;8482:50;8551:22;;8604:4;8596:13;;8592:27;-1:-1:-1;8582:55:412;;8633:1;8630;8623:12;8582:55;8662:2;8656:9;8687:49;8703:32;8732:2;8703:32;:::i;8687:49::-;8759:2;8752:5;8745:17;8799:7;8794:2;8789;8785;8781:11;8777:20;8774:33;8771:53;;;8820:1;8817;8810:12;8771:53;8833:67;8897:2;8892;8885:5;8881:14;8876:2;8872;8868:11;8833:67;:::i;:::-;8919:5;8281:649;-1:-1:-1;;;;;8281:649:412:o;8935:434::-;-1:-1:-1;;;9192:3:412;9185:19;9167:3;9233:6;9227:13;9249:74;9316:6;9312:1;9307:3;9303:11;9296:4;9288:6;9284:17;9249:74;:::i;:::-;9343:16;;;;9361:1;9339:24;;8935:434;-1:-1:-1;;8935:434:412:o;9500:545::-;9602:2;9597:3;9594:11;9591:448;;;9638:1;9663:5;9659:2;9652:17;9708:4;9704:2;9694:19;9778:2;9766:10;9762:19;9759:1;9755:27;9749:4;9745:38;9814:4;9802:10;9799:20;9796:47;;;-1:-1:-1;9837:4:412;9796:47;9892:2;9887:3;9883:12;9880:1;9876:20;9870:4;9866:31;9856:41;;9947:82;9965:2;9958:5;9955:13;9947:82;;;10010:17;;;9991:1;9980:13;9947:82;;;9951:3;;;9591:448;9500:545;;;:::o;10221:1352::-;10347:3;10341:10;10374:18;10366:6;10363:30;10360:56;;;10396:18;;:::i;:::-;10425:97;10515:6;10475:38;10507:4;10501:11;10475:38;:::i;:::-;10469:4;10425:97;:::i;:::-;10577:4;;10641:2;10630:14;;10658:1;10653:663;;;;11360:1;11377:6;11374:89;;;-1:-1:-1;11429:19:412;;;11423:26;11374:89;-1:-1:-1;;10178:1:412;10174:11;;;10170:24;10166:29;10156:40;10202:1;10198:11;;;10153:57;11476:81;;10623:944;;10653:663;9447:1;9440:14;;;9484:4;9471:18;;-1:-1:-1;;10689:20:412;;;10807:236;10821:7;10818:1;10815:14;10807:236;;;10910:19;;;10904:26;10889:42;;11002:27;;;;10970:1;10958:14;;;;10837:19;;10807:236;;;10811:3;11071:6;11062:7;11059:19;11056:201;;;11132:19;;;11126:26;-1:-1:-1;;11215:1:412;11211:14;;;11227:3;11207:24;11203:37;11199:42;11184:58;11169:74;;11056:201;-1:-1:-1;;;;;11303:1:412;11287:14;;;11283:22;11270:36;;-1:-1:-1;10221:1352:412:o;11578:232::-;11617:3;11638:17;;;11635:140;;11697:10;11692:3;11688:20;11685:1;11678:31;11732:4;11729:1;11722:15;11760:4;11757:1;11750:15;11635:140;-1:-1:-1;11802:1:412;11791:13;;11578:232::o",
    "linkReferences": {},
    "immutableReferences": {
      "83196": [
        {
          "start": 4699,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "NATIVE_TOKEN()": "31f7d964",
    "_isEqual(bytes32,bytes32)": "be7e3bd4",
    "_isEqual(string,string)": "3b34fb1b",
    "checker()": "cf5303cf",
    "failed()": "ba414fa6",
    "nodeKeys(address)": "661de07d",
    "setUp()": "0a9254e4",
    "test_getRandomNodes()": "29f32092",
    "test_getRandomNodes_revert_insufficientNumberOfNodes()": "2a3c4cf0",
    "test_registerNode()": "bf65b201",
    "test_registerNode_revert_nodeAlreadyRegistered()": "4eba8641",
    "test_unregisterNode()": "7967fd70",
    "test_unregisterNode_revert_nodeNotRegistered()": "caa11abb"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EntitlementChecker_InsufficientNumberOfNodes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementChecker_NodeAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EntitlementChecker_NodeNotRegistered\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"callerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"selectedNodes\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"EntitlementCheckRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"err\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"LogAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"LogBytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"LogBytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"LogInt256\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"LogNamedAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"LogNamedBytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"LogNamedBytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"LogNamedInt256\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"LogNamedString\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogNamedUint256\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"LogString\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogUint256\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"NodeRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"}],\"name\":\"NodeUnregistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NATIVE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"s1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s2\",\"type\":\"string\"}],\"name\":\"_isEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"_isEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checker\",\"outputs\":[{\"internalType\":\"contract IEntitlementChecker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nodeKeys\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRandomNodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_getRandomNodes_revert_insufficientNumberOfNodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_registerNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_registerNode_revert_nodeAlreadyRegistered\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_unregisterNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_unregisterNode_revert_nodeNotRegistered\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"IS_TEST()\":{\"details\":\"A flag to indicate that this is a test contract.\"},\"failed()\":{\"details\":\"Checks whether any test has failed so far. In addition to the local failure flag, we look for the global flag in the HEVM contract at storage slot \\\"failed\\\", because it is possible to run assertions between different instances of PRBTest. See https://github.com/dapphub/dapptools/issues/768.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/crosschain/EntitlementChecker.t.sol\":\"EntitlementCheckerTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC721A/=lib/ERC721A/contracts/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=lib/operator-filter-registry/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"contracts/src/crosschain/checker/EntitlementChecker.sol\":{\"keccak256\":\"0x3786a42f409bbc6110b0fa0c8da2432da887aa69c5ca8467f8231d4e8b993c09\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ba796edab43ee7d751d55e67d91d842a0f1ecd39080278ee3c8bf348405423d0\",\"dweb:/ipfs/QmbznscDXHz5dE9rVBt67zNmME8FXbDsD7wg4ve7Xt3QW8\"]},\"contracts/src/crosschain/checker/EntitlementCheckerBase.sol\":{\"keccak256\":\"0xa68eca83ddee09c7b614729189af87b9cf1c06b41e2e3b055514139e643da29d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://53df49fe76c010d592ba009030aa42dd92c0353e8d86b9d129074730a16a779d\",\"dweb:/ipfs/QmWHpC2Dpfjh5MkgF5vAQbNBpCy3wUkrXGS51BafvZgLXr\"]},\"contracts/src/crosschain/checker/EntitlementCheckerStorage.sol\":{\"keccak256\":\"0x31800262b31c904ac1e7bd21b5ccbb2ef0d35dd9329a07828d4382bb1cf7896a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a58f0963f1c405771f2bbeceda8c7b41b7cbfa533b46db082cc6cb3c3d3e68a4\",\"dweb:/ipfs/QmUTti16QXFXK9rjCDJg3WBJTb4GTKPCYwuxXDv7f2UH3y\"]},\"contracts/src/crosschain/checker/IEntitlementChecker.sol\":{\"keccak256\":\"0x409247398c6bfce94d86a3d7f12b6e86dc9c008546f95b9f511ddfffd9e2b222\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9b22629977cdc607ba80e2b3e9d4e0d8ffa125eb66d75ea0e920a0685e5a9\",\"dweb:/ipfs/Qmcn5V1iGQMVgvnFkQv8Qrz7oMdrxSsPu1txGwsHsUwHVR\"]},\"contracts/test/crosschain/EntitlementChecker.t.sol\":{\"keccak256\":\"0xd34d869053c70ad977687c2f4680f30e6064cb61adf3401f4670459570d46196\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c56c31d87207f4dbb06074d0fcae19ee7f92b2da9cc4f4188e8700beec4c8904\",\"dweb:/ipfs/QmbAr75g1zDQ4torM2nYeiGiutLB6S2UKMRxHaFKeFrmQG\"]},\"contracts/test/utils/TestUtils.sol\":{\"keccak256\":\"0xc9d1e208a42d002aceb99f2dd2e593fc3f7bf7c326eaef14e70f58c6c6c0a5cd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bbf728a738ef1f3d79d4798400c4d2c2ac6df7a4e6c7fc939db2b28cbb43125a\",\"dweb:/ipfs/QmV2nUeDrPHSHesN1dxaFPr8fWDH15vZQzEzoEen2rowvH\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"lib/prb-test/src/Helpers.sol\":{\"keccak256\":\"0x4ab5888920e97cb50dff6a7093fd01d830aa8b7f1e3d5313f73e46f812360705\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ecaffd6d742a3c47c3785e9816d1d459d45cb6bf34a353884d333b87d52fa60\",\"dweb:/ipfs/QmYjsof64dPbxxw4i95S9bqDvTF4V2DA35bSwYAvXxxXYp\"]},\"lib/prb-test/src/PRBTest.sol\":{\"keccak256\":\"0xed6d9f8c7fd5ca380a47a6de7c631d48a96cbc777632d030a52bf9216aea0bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcf663e0c2e2d3eabdaa1c9e7ff4df2a3b046e1279de1e0d2ce24a87a86e37fb\",\"dweb:/ipfs/QmRnar3CcN2JMYqrDYkUqEya6A3vBWUrD2HSL8aP7FC4vK\"]},\"lib/prb-test/src/Vm.sol\":{\"keccak256\":\"0xecae57742478cd465460cc2ec5fd9174a41e5b93549c1d4456ff26cf97356fee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fdf31f7f585bebfde82af93eb295e18196362704e69338e0626c2d8015d00e9d\",\"dweb:/ipfs/Qme1oLTN5CxRRiuVw48oN5buYotdaKNnio7a9W4hAus9Ry\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementChecker_InsufficientNumberOfNodes"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementChecker_NodeAlreadyRegistered"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EntitlementChecker_NodeNotRegistered"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "callerAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "transactionId",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "selectedNodes",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EntitlementCheckRequested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "err",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "value",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogAddress",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "value",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool[]",
              "name": "value",
              "type": "bool[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "value",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "value",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string[]",
              "name": "value",
              "type": "string[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogBytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "value",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogBytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "value",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogInt256",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "value",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedAddress",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "value",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bool[]",
              "name": "value",
              "type": "bool[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "value",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "value",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string[]",
              "name": "value",
              "type": "string[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedBytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "value",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedBytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "value",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedInt256",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedString",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedUint256",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogString",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogUint256",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "nodeAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NodeRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "nodeAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NodeUnregistered",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NATIVE_TOKEN",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "s1",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s2",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "_isEqual",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "s1",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s2",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "_isEqual",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "checker",
          "outputs": [
            {
              "internalType": "contract IEntitlementChecker",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nodeKeys",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRandomNodes"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_getRandomNodes_revert_insufficientNumberOfNodes"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_registerNode"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_registerNode_revert_nodeAlreadyRegistered"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_unregisterNode"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_unregisterNode_revert_nodeNotRegistered"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "IS_TEST()": {
            "details": "A flag to indicate that this is a test contract."
          },
          "failed()": {
            "details": "Checks whether any test has failed so far. In addition to the local failure flag, we look for the global flag in the HEVM contract at storage slot \"failed\", because it is possible to run assertions between different instances of PRBTest. See https://github.com/dapphub/dapptools/issues/768."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC721A/=lib/ERC721A/contracts/",
        "council/=lib/council/contracts/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "operator-filter-registry/=lib/operator-filter-registry/",
        "prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "contracts/test/crosschain/EntitlementChecker.t.sol": "EntitlementCheckerTest"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/crosschain/checker/EntitlementChecker.sol": {
        "keccak256": "0x3786a42f409bbc6110b0fa0c8da2432da887aa69c5ca8467f8231d4e8b993c09",
        "urls": [
          "bzz-raw://ba796edab43ee7d751d55e67d91d842a0f1ecd39080278ee3c8bf348405423d0",
          "dweb:/ipfs/QmbznscDXHz5dE9rVBt67zNmME8FXbDsD7wg4ve7Xt3QW8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/crosschain/checker/EntitlementCheckerBase.sol": {
        "keccak256": "0xa68eca83ddee09c7b614729189af87b9cf1c06b41e2e3b055514139e643da29d",
        "urls": [
          "bzz-raw://53df49fe76c010d592ba009030aa42dd92c0353e8d86b9d129074730a16a779d",
          "dweb:/ipfs/QmWHpC2Dpfjh5MkgF5vAQbNBpCy3wUkrXGS51BafvZgLXr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/crosschain/checker/EntitlementCheckerStorage.sol": {
        "keccak256": "0x31800262b31c904ac1e7bd21b5ccbb2ef0d35dd9329a07828d4382bb1cf7896a",
        "urls": [
          "bzz-raw://a58f0963f1c405771f2bbeceda8c7b41b7cbfa533b46db082cc6cb3c3d3e68a4",
          "dweb:/ipfs/QmUTti16QXFXK9rjCDJg3WBJTb4GTKPCYwuxXDv7f2UH3y"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/crosschain/checker/IEntitlementChecker.sol": {
        "keccak256": "0x409247398c6bfce94d86a3d7f12b6e86dc9c008546f95b9f511ddfffd9e2b222",
        "urls": [
          "bzz-raw://85d9b22629977cdc607ba80e2b3e9d4e0d8ffa125eb66d75ea0e920a0685e5a9",
          "dweb:/ipfs/Qmcn5V1iGQMVgvnFkQv8Qrz7oMdrxSsPu1txGwsHsUwHVR"
        ],
        "license": "MIT"
      },
      "contracts/test/crosschain/EntitlementChecker.t.sol": {
        "keccak256": "0xd34d869053c70ad977687c2f4680f30e6064cb61adf3401f4670459570d46196",
        "urls": [
          "bzz-raw://c56c31d87207f4dbb06074d0fcae19ee7f92b2da9cc4f4188e8700beec4c8904",
          "dweb:/ipfs/QmbAr75g1zDQ4torM2nYeiGiutLB6S2UKMRxHaFKeFrmQG"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/utils/TestUtils.sol": {
        "keccak256": "0xc9d1e208a42d002aceb99f2dd2e593fc3f7bf7c326eaef14e70f58c6c6c0a5cd",
        "urls": [
          "bzz-raw://bbf728a738ef1f3d79d4798400c4d2c2ac6df7a4e6c7fc939db2b28cbb43125a",
          "dweb:/ipfs/QmV2nUeDrPHSHesN1dxaFPr8fWDH15vZQzEzoEen2rowvH"
        ],
        "license": "Apache-2.0"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      },
      "lib/prb-test/src/Helpers.sol": {
        "keccak256": "0x4ab5888920e97cb50dff6a7093fd01d830aa8b7f1e3d5313f73e46f812360705",
        "urls": [
          "bzz-raw://0ecaffd6d742a3c47c3785e9816d1d459d45cb6bf34a353884d333b87d52fa60",
          "dweb:/ipfs/QmYjsof64dPbxxw4i95S9bqDvTF4V2DA35bSwYAvXxxXYp"
        ],
        "license": "MIT"
      },
      "lib/prb-test/src/PRBTest.sol": {
        "keccak256": "0xed6d9f8c7fd5ca380a47a6de7c631d48a96cbc777632d030a52bf9216aea0bf1",
        "urls": [
          "bzz-raw://dcf663e0c2e2d3eabdaa1c9e7ff4df2a3b046e1279de1e0d2ce24a87a86e37fb",
          "dweb:/ipfs/QmRnar3CcN2JMYqrDYkUqEya6A3vBWUrD2HSL8aP7FC4vK"
        ],
        "license": "MIT"
      },
      "lib/prb-test/src/Vm.sol": {
        "keccak256": "0xecae57742478cd465460cc2ec5fd9174a41e5b93549c1d4456ff26cf97356fee",
        "urls": [
          "bzz-raw://fdf31f7f585bebfde82af93eb295e18196362704e69338e0626c2d8015d00e9d",
          "dweb:/ipfs/Qme1oLTN5CxRRiuVw48oN5buYotdaKNnio7a9W4hAus9Ry"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/crosschain/EntitlementChecker.t.sol",
    "id": 40476,
    "exportedSymbols": {
      "EntitlementChecker": [
        5556
      ],
      "EntitlementCheckerTest": [
        40475
      ],
      "IEntitlementChecker": [
        5881
      ],
      "IEntitlementCheckerBase": [
        5849
      ],
      "TestUtils": [
        83484
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3112:207",
    "nodes": [
      {
        "id": 40181,
        "nodeType": "PragmaDirective",
        "src": "39:24:207",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 40183,
        "nodeType": "ImportDirective",
        "src": "74:61:207",
        "nodes": [],
        "absolutePath": "contracts/test/utils/TestUtils.sol",
        "file": "contracts/test/utils/TestUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40476,
        "sourceUnit": 83485,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40182,
              "name": "TestUtils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 83484,
              "src": "82:9:207",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40185,
        "nodeType": "ImportDirective",
        "src": "150:93:207",
        "nodes": [],
        "absolutePath": "contracts/src/crosschain/checker/IEntitlementChecker.sol",
        "file": "contracts/src/crosschain/checker/IEntitlementChecker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40476,
        "sourceUnit": 5882,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40184,
              "name": "IEntitlementChecker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5881,
              "src": "158:19:207",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40187,
        "nodeType": "ImportDirective",
        "src": "244:97:207",
        "nodes": [],
        "absolutePath": "contracts/src/crosschain/checker/IEntitlementChecker.sol",
        "file": "contracts/src/crosschain/checker/IEntitlementChecker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40476,
        "sourceUnit": 5882,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40186,
              "name": "IEntitlementCheckerBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5849,
              "src": "252:23:207",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40189,
        "nodeType": "ImportDirective",
        "src": "368:91:207",
        "nodes": [],
        "absolutePath": "contracts/src/crosschain/checker/EntitlementChecker.sol",
        "file": "contracts/src/crosschain/checker/EntitlementChecker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40476,
        "sourceUnit": 5557,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40188,
              "name": "EntitlementChecker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5556,
              "src": "376:18:207",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40475,
        "nodeType": "ContractDefinition",
        "src": "461:2689:207",
        "nodes": [
          {
            "id": 40196,
            "nodeType": "VariableDeclaration",
            "src": "535:34:207",
            "nodes": [],
            "constant": false,
            "functionSelector": "cf5303cf",
            "mutability": "mutable",
            "name": "checker",
            "nameLocation": "562:7:207",
            "scope": 40475,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
              "typeString": "contract IEntitlementChecker"
            },
            "typeName": {
              "id": 40195,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40194,
                "name": "IEntitlementChecker",
                "nameLocations": [
                  "535:19:207"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5881,
                "src": "535:19:207"
              },
              "referencedDeclaration": 5881,
              "src": "535:19:207",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                "typeString": "contract IEntitlementChecker"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40200,
            "nodeType": "VariableDeclaration",
            "src": "574:42:207",
            "nodes": [],
            "constant": false,
            "functionSelector": "661de07d",
            "mutability": "mutable",
            "name": "nodeKeys",
            "nameLocation": "608:8:207",
            "scope": 40475,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 40199,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 40197,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "582:7:207",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "574:26:207",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 40198,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "593:6:207",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 40211,
            "nodeType": "FunctionDefinition",
            "src": "621:71:207",
            "nodes": [],
            "body": {
              "id": 40210,
              "nodeType": "Block",
              "src": "647:45:207",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40203,
                      "name": "checker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40196,
                      "src": "653:7:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                        "typeString": "contract IEntitlementChecker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 40206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "663:22:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_EntitlementChecker_$5556_$",
                          "typeString": "function () returns (contract EntitlementChecker)"
                        },
                        "typeName": {
                          "id": 40205,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 40204,
                            "name": "EntitlementChecker",
                            "nameLocations": [
                              "667:18:207"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 5556,
                            "src": "667:18:207"
                          },
                          "referencedDeclaration": 5556,
                          "src": "667:18:207",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EntitlementChecker_$5556",
                            "typeString": "contract EntitlementChecker"
                          }
                        }
                      },
                      "id": 40207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "663:24:207",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EntitlementChecker_$5556",
                        "typeString": "contract EntitlementChecker"
                      }
                    },
                    "src": "653:34:207",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                      "typeString": "contract IEntitlementChecker"
                    }
                  },
                  "id": 40209,
                  "nodeType": "ExpressionStatement",
                  "src": "653:34:207"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "630:5:207",
            "parameters": {
              "id": 40201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:2:207"
            },
            "returnParameters": {
              "id": 40202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:0:207"
            },
            "scope": 40475,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40251,
            "nodeType": "FunctionDefinition",
            "src": "871:242:207",
            "nodes": [],
            "body": {
              "id": 40250,
              "nodeType": "Block",
              "src": "909:204:207",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40215,
                      "mutability": "mutable",
                      "name": "node",
                      "nameLocation": "923:4:207",
                      "nodeType": "VariableDeclaration",
                      "scope": 40250,
                      "src": "915:12:207",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 40214,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "915:7:207",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40218,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40216,
                      "name": "_randomAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83314,
                      "src": "930:14:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 40217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "930:16:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "915:31:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40222,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40215,
                        "src": "962:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40219,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122433,
                        "src": "953:2:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$126812",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "956:5:207",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126649,
                      "src": "953:8:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 40223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "953:14:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40224,
                  "nodeType": "ExpressionStatement",
                  "src": "953:14:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 40228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "987:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 40229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "993:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 40230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "999:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 40231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1005:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 40225,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122433,
                        "src": "973:2:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$126812",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "976:10:207",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126514,
                      "src": "973:13:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 40232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "973:37:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40233,
                  "nodeType": "ExpressionStatement",
                  "src": "973:37:207"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 40235,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40215,
                        "src": "1036:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 40234,
                      "name": "NodeRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5833,
                      "src": "1021:14:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 40236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:20:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40237,
                  "nodeType": "EmitStatement",
                  "src": "1016:25:207"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40238,
                        "name": "checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40196,
                        "src": "1047:7:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                          "typeString": "contract IEntitlementChecker"
                        }
                      },
                      "id": 40240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1055:12:207",
                      "memberName": "registerNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5854,
                      "src": "1047:20:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 40241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1047:22:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40242,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:22:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 40244,
                            "name": "checker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40196,
                            "src": "1085:7:207",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                              "typeString": "contract IEntitlementChecker"
                            }
                          },
                          "id": 40245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1093:9:207",
                          "memberName": "nodeCount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5862,
                          "src": "1085:17:207",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 40246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1085:19:207",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 40247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1106:1:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 40243,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        122654,
                        122680,
                        122723,
                        122761,
                        122798,
                        122824,
                        122860,
                        122891,
                        122925,
                        122954,
                        122985,
                        123011,
                        123047,
                        123078,
                        123109,
                        123135,
                        123171,
                        123202,
                        123236,
                        123265,
                        123301,
                        123332,
                        123363,
                        123389,
                        123425,
                        123456
                      ],
                      "referencedDeclaration": 123363,
                      "src": "1076:8:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 40248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1076:32:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40249,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:32:207"
                }
              ]
            },
            "functionSelector": "bf65b201",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_registerNode",
            "nameLocation": "880:17:207",
            "parameters": {
              "id": 40212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "897:2:207"
            },
            "returnParameters": {
              "id": 40213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "909:0:207"
            },
            "scope": 40475,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40289,
            "nodeType": "FunctionDefinition",
            "src": "1117:279:207",
            "nodes": [],
            "body": {
              "id": 40288,
              "nodeType": "Block",
              "src": "1184:212:207",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40255,
                      "mutability": "mutable",
                      "name": "node",
                      "nameLocation": "1198:4:207",
                      "nodeType": "VariableDeclaration",
                      "scope": 40288,
                      "src": "1190:12:207",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 40254,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1190:7:207",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40258,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40256,
                      "name": "_randomAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83314,
                      "src": "1205:14:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 40257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:16:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1190:31:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40262,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40255,
                        "src": "1237:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40259,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122433,
                        "src": "1228:2:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$126812",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1231:5:207",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126649,
                      "src": "1228:8:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 40263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:14:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40264,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:14:207"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40265,
                        "name": "checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40196,
                        "src": "1248:7:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                          "typeString": "contract IEntitlementChecker"
                        }
                      },
                      "id": 40267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1256:12:207",
                      "memberName": "registerNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5854,
                      "src": "1248:20:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 40268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1248:22:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40269,
                  "nodeType": "ExpressionStatement",
                  "src": "1248:22:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40273,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40255,
                        "src": "1286:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40270,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122433,
                        "src": "1277:2:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$126812",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1280:5:207",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126649,
                      "src": "1277:8:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 40274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1277:14:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40275,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:14:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40279,
                          "name": "EntitlementChecker_NodeAlreadyRegistered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5825,
                          "src": "1313:40:207",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 40280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1354:8:207",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "1313:49:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 40276,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122433,
                        "src": "1297:2:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$126812",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1300:12:207",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126538,
                      "src": "1297:15:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 40281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1297:66:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40282,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:66:207"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40283,
                        "name": "checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40196,
                        "src": "1369:7:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                          "typeString": "contract IEntitlementChecker"
                        }
                      },
                      "id": 40285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1377:12:207",
                      "memberName": "registerNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5854,
                      "src": "1369:20:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 40286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1369:22:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40287,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:22:207"
                }
              ]
            },
            "functionSelector": "4eba8641",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_registerNode_revert_nodeAlreadyRegistered",
            "nameLocation": "1126:46:207",
            "parameters": {
              "id": 40252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1172:2:207"
            },
            "returnParameters": {
              "id": 40253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1184:0:207"
            },
            "scope": 40475,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40340,
            "nodeType": "FunctionDefinition",
            "src": "1576:297:207",
            "nodes": [],
            "body": {
              "id": 40339,
              "nodeType": "Block",
              "src": "1616:257:207",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40293,
                      "mutability": "mutable",
                      "name": "node",
                      "nameLocation": "1630:4:207",
                      "nodeType": "VariableDeclaration",
                      "scope": 40339,
                      "src": "1622:12:207",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 40292,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1622:7:207",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40296,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40294,
                      "name": "_randomAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83314,
                      "src": "1637:14:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 40295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:16:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1622:31:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40300,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40293,
                        "src": "1669:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40297,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122433,
                        "src": "1660:2:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$126812",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1663:5:207",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126649,
                      "src": "1660:8:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 40301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1660:14:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40302,
                  "nodeType": "ExpressionStatement",
                  "src": "1660:14:207"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40303,
                        "name": "checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40196,
                        "src": "1680:7:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                          "typeString": "contract IEntitlementChecker"
                        }
                      },
                      "id": 40305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1688:12:207",
                      "memberName": "registerNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5854,
                      "src": "1680:20:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 40306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1680:22:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40307,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:22:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40311,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40293,
                        "src": "1718:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40308,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122433,
                        "src": "1709:2:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$126812",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1712:5:207",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126649,
                      "src": "1709:8:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 40312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1709:14:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40313,
                  "nodeType": "ExpressionStatement",
                  "src": "1709:14:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 40317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1743:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 40318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1749:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 40319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1755:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 40320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1761:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 40314,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122433,
                        "src": "1729:2:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$126812",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1732:10:207",
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126514,
                      "src": "1729:13:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 40321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:37:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40322,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:37:207"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 40324,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40293,
                        "src": "1794:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 40323,
                      "name": "NodeUnregistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5837,
                      "src": "1777:16:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 40325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1777:22:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40326,
                  "nodeType": "EmitStatement",
                  "src": "1772:27:207"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40327,
                        "name": "checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40196,
                        "src": "1805:7:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                          "typeString": "contract IEntitlementChecker"
                        }
                      },
                      "id": 40329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1813:14:207",
                      "memberName": "unregisterNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5857,
                      "src": "1805:22:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 40330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:24:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40331,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:24:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 40333,
                            "name": "checker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40196,
                            "src": "1845:7:207",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                              "typeString": "contract IEntitlementChecker"
                            }
                          },
                          "id": 40334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1853:9:207",
                          "memberName": "nodeCount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5862,
                          "src": "1845:17:207",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 40335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1845:19:207",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 40336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1866:1:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 40332,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        122654,
                        122680,
                        122723,
                        122761,
                        122798,
                        122824,
                        122860,
                        122891,
                        122925,
                        122954,
                        122985,
                        123011,
                        123047,
                        123078,
                        123109,
                        123135,
                        123171,
                        123202,
                        123236,
                        123265,
                        123301,
                        123332,
                        123363,
                        123389,
                        123425,
                        123456
                      ],
                      "referencedDeclaration": 123363,
                      "src": "1836:8:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 40337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:32:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40338,
                  "nodeType": "ExpressionStatement",
                  "src": "1836:32:207"
                }
              ]
            },
            "functionSelector": "7967fd70",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_unregisterNode",
            "nameLocation": "1585:19:207",
            "parameters": {
              "id": 40290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:2:207"
            },
            "returnParameters": {
              "id": 40291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1616:0:207"
            },
            "scope": 40475,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40367,
            "nodeType": "FunctionDefinition",
            "src": "1877:226:207",
            "nodes": [],
            "body": {
              "id": 40366,
              "nodeType": "Block",
              "src": "1942:161:207",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40344,
                      "mutability": "mutable",
                      "name": "node",
                      "nameLocation": "1956:4:207",
                      "nodeType": "VariableDeclaration",
                      "scope": 40366,
                      "src": "1948:12:207",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 40343,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1948:7:207",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40347,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40345,
                      "name": "_randomAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83314,
                      "src": "1963:14:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                        "typeString": "function () view returns (address payable)"
                      }
                    },
                    "id": 40346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1963:16:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1948:31:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40351,
                        "name": "node",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40344,
                        "src": "1995:4:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40348,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122433,
                        "src": "1986:2:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$126812",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1989:5:207",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126649,
                      "src": "1986:8:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 40352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1986:14:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40353,
                  "nodeType": "ExpressionStatement",
                  "src": "1986:14:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40357,
                          "name": "EntitlementChecker_NodeNotRegistered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5827,
                          "src": "2022:36:207",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 40358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2059:8:207",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "2022:45:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 40354,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122433,
                        "src": "2006:2:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$126812",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2009:12:207",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126538,
                      "src": "2006:15:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 40359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2006:62:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40360,
                  "nodeType": "ExpressionStatement",
                  "src": "2006:62:207"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40361,
                        "name": "checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40196,
                        "src": "2074:7:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                          "typeString": "contract IEntitlementChecker"
                        }
                      },
                      "id": 40363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2082:14:207",
                      "memberName": "unregisterNode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5857,
                      "src": "2074:22:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 40364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2074:24:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40365,
                  "nodeType": "ExpressionStatement",
                  "src": "2074:24:207"
                }
              ]
            },
            "functionSelector": "caa11abb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_unregisterNode_revert_nodeNotRegistered",
            "nameLocation": "1886:44:207",
            "parameters": {
              "id": 40341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1930:2:207"
            },
            "returnParameters": {
              "id": 40342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1942:0:207"
            },
            "scope": 40475,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40394,
            "nodeType": "FunctionDefinition",
            "src": "2282:170:207",
            "nodes": [],
            "body": {
              "id": 40393,
              "nodeType": "Block",
              "src": "2322:130:207",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40370,
                      "name": "_registerNodes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40474,
                      "src": "2328:14:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2328:16:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40372,
                  "nodeType": "ExpressionStatement",
                  "src": "2328:16:207"
                },
                {
                  "assignments": [
                    40377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40377,
                      "mutability": "mutable",
                      "name": "nodes",
                      "nameLocation": "2368:5:207",
                      "nodeType": "VariableDeclaration",
                      "scope": 40393,
                      "src": "2351:22:207",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40375,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2351:7:207",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 40376,
                        "nodeType": "ArrayTypeName",
                        "src": "2351:9:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40386,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "35",
                        "id": 40380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2399:1:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      {
                        "arguments": [
                          {
                            "id": 40383,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2410:4:207",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EntitlementCheckerTest_$40475",
                              "typeString": "contract EntitlementCheckerTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EntitlementCheckerTest_$40475",
                              "typeString": "contract EntitlementCheckerTest"
                            }
                          ],
                          "id": 40382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2402:7:207",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40381,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2402:7:207",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2402:13:207",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40378,
                        "name": "checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40196,
                        "src": "2376:7:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                          "typeString": "contract IEntitlementChecker"
                        }
                      },
                      "id": 40379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2384:14:207",
                      "memberName": "getRandomNodes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5872,
                      "src": "2376:22:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,address) view external returns (address[] memory)"
                      }
                    },
                    "id": 40385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2376:40:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2351:65:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40388,
                          "name": "nodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40377,
                          "src": "2431:5:207",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 40389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2437:6:207",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2431:12:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 40390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2445:1:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 40387,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        122654,
                        122680,
                        122723,
                        122761,
                        122798,
                        122824,
                        122860,
                        122891,
                        122925,
                        122954,
                        122985,
                        123011,
                        123047,
                        123078,
                        123109,
                        123135,
                        123171,
                        123202,
                        123236,
                        123265,
                        123301,
                        123332,
                        123363,
                        123389,
                        123425,
                        123456
                      ],
                      "referencedDeclaration": 123363,
                      "src": "2422:8:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 40391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2422:25:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40392,
                  "nodeType": "ExpressionStatement",
                  "src": "2422:25:207"
                }
              ]
            },
            "functionSelector": "29f32092",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRandomNodes",
            "nameLocation": "2291:19:207",
            "parameters": {
              "id": 40368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2310:2:207"
            },
            "returnParameters": {
              "id": 40369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2322:0:207"
            },
            "scope": 40475,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40415,
            "nodeType": "FunctionDefinition",
            "src": "2456:201:207",
            "nodes": [],
            "body": {
              "id": 40414,
              "nodeType": "Block",
              "src": "2529:128:207",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40400,
                          "name": "EntitlementChecker_InsufficientNumberOfNodes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5829,
                          "src": "2551:44:207",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 40401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2596:8:207",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "2551:53:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 40397,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122433,
                        "src": "2535:2:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$126812",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2538:12:207",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 126538,
                      "src": "2535:15:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 40402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2535:70:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40403,
                  "nodeType": "ExpressionStatement",
                  "src": "2535:70:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3236",
                        "id": 40407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2634:2:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_26_by_1",
                          "typeString": "int_const 26"
                        },
                        "value": "26"
                      },
                      {
                        "arguments": [
                          {
                            "id": 40410,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2646:4:207",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_EntitlementCheckerTest_$40475",
                              "typeString": "contract EntitlementCheckerTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_EntitlementCheckerTest_$40475",
                              "typeString": "contract EntitlementCheckerTest"
                            }
                          ],
                          "id": 40409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2638:7:207",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40408,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2638:7:207",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2638:13:207",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_26_by_1",
                          "typeString": "int_const 26"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40404,
                        "name": "checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40196,
                        "src": "2611:7:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                          "typeString": "contract IEntitlementChecker"
                        }
                      },
                      "id": 40406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2619:14:207",
                      "memberName": "getRandomNodes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5872,
                      "src": "2611:22:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,address) view external returns (address[] memory)"
                      }
                    },
                    "id": 40412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2611:41:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 40413,
                  "nodeType": "ExpressionStatement",
                  "src": "2611:41:207"
                }
              ]
            },
            "functionSelector": "2a3c4cf0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_getRandomNodes_revert_insufficientNumberOfNodes",
            "nameLocation": "2465:52:207",
            "parameters": {
              "id": 40395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2517:2:207"
            },
            "returnParameters": {
              "id": 40396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2529:0:207"
            },
            "scope": 40475,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40474,
            "nodeType": "FunctionDefinition",
            "src": "2835:313:207",
            "nodes": [],
            "body": {
              "id": 40473,
              "nodeType": "Block",
              "src": "2870:278:207",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 40460,
                    "nodeType": "Block",
                    "src": "2909:172:207",
                    "statements": [
                      {
                        "assignments": [
                          40429
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 40429,
                            "mutability": "mutable",
                            "name": "node",
                            "nameLocation": "2925:4:207",
                            "nodeType": "VariableDeclaration",
                            "scope": 40460,
                            "src": "2917:12:207",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 40428,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2917:7:207",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 40432,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 40430,
                            "name": "_randomAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83314,
                            "src": "2932:14:207",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 40431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2932:16:207",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2917:31:207"
                      },
                      {
                        "expression": {
                          "id": 40447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 40433,
                              "name": "nodeKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40200,
                              "src": "2956:8:207",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                "typeString": "mapping(address => string storage ref)"
                              }
                            },
                            "id": 40435,
                            "indexExpression": {
                              "id": 40434,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40429,
                              "src": "2965:4:207",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2956:14:207",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "6e6f6465",
                                    "id": 40440,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2997:6:207",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_7a7b069bdf427c3e6d24c2c55ccd9fe71f5d9a6088733138764bb52de1769157",
                                      "typeString": "literal_string \"node\""
                                    },
                                    "value": "node"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 40443,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40419,
                                        "src": "3017:1:207",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 40441,
                                        "name": "vm",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 122433,
                                        "src": "3005:2:207",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Vm_$126812",
                                          "typeString": "contract Vm"
                                        }
                                      },
                                      "id": 40442,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3008:8:207",
                                      "memberName": "toString",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 126260,
                                      "src": "3005:11:207",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                        "typeString": "function (uint256) pure external returns (string memory)"
                                      }
                                    },
                                    "id": 40444,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3005:14:207",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_7a7b069bdf427c3e6d24c2c55ccd9fe71f5d9a6088733138764bb52de1769157",
                                      "typeString": "literal_string \"node\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 40438,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2980:3:207",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 40439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2984:12:207",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "2980:16:207",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 40445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2980:40:207",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 40437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2973:6:207",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 40436,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "2973:6:207",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 40446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2973:48:207",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2956:65:207",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 40448,
                        "nodeType": "ExpressionStatement",
                        "src": "2956:65:207"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 40452,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40429,
                              "src": "3039:4:207",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 40449,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122433,
                              "src": "3030:2:207",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$126812",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 40451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3033:5:207",
                            "memberName": "prank",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 126649,
                            "src": "3030:8:207",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 40453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3030:14:207",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40454,
                        "nodeType": "ExpressionStatement",
                        "src": "3030:14:207"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 40455,
                              "name": "checker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40196,
                              "src": "3052:7:207",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                                "typeString": "contract IEntitlementChecker"
                              }
                            },
                            "id": 40457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3060:12:207",
                            "memberName": "registerNode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5854,
                            "src": "3052:20:207",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 40458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:22:207",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40459,
                        "nodeType": "ExpressionStatement",
                        "src": "3052:22:207"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40422,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40419,
                      "src": "2896:1:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 40423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2900:2:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "2896:6:207",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40461,
                  "initializationExpression": {
                    "assignments": [
                      40419
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 40419,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2889:1:207",
                        "nodeType": "VariableDeclaration",
                        "scope": 40461,
                        "src": "2881:9:207",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40418,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2881:7:207",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 40421,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 40420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2893:1:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2881:13:207"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 40426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2904:3:207",
                      "subExpression": {
                        "id": 40425,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40419,
                        "src": "2904:1:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 40427,
                    "nodeType": "ExpressionStatement",
                    "src": "2904:3:207"
                  },
                  "nodeType": "ForStatement",
                  "src": "2876:205:207"
                },
                {
                  "assignments": [
                    40463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40463,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "3095:3:207",
                      "nodeType": "VariableDeclaration",
                      "scope": 40473,
                      "src": "3087:11:207",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40462,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3087:7:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40467,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40464,
                        "name": "checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40196,
                        "src": "3101:7:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEntitlementChecker_$5881",
                          "typeString": "contract IEntitlementChecker"
                        }
                      },
                      "id": 40465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3109:9:207",
                      "memberName": "nodeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5862,
                      "src": "3101:17:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 40466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3101:19:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3087:33:207"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40469,
                        "name": "len",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40463,
                        "src": "3135:3:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 40470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3140:2:207",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 40468,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        122654,
                        122680,
                        122723,
                        122761,
                        122798,
                        122824,
                        122860,
                        122891,
                        122925,
                        122954,
                        122985,
                        123011,
                        123047,
                        123078,
                        123109,
                        123135,
                        123171,
                        123202,
                        123236,
                        123265,
                        123301,
                        123332,
                        123363,
                        123389,
                        123425,
                        123456
                      ],
                      "referencedDeclaration": 123363,
                      "src": "3126:8:207",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 40471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3126:17:207",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40472,
                  "nodeType": "ExpressionStatement",
                  "src": "3126:17:207"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerNodes",
            "nameLocation": "2844:14:207",
            "parameters": {
              "id": 40416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2858:2:207"
            },
            "returnParameters": {
              "id": 40417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2870:0:207"
            },
            "scope": 40475,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40190,
              "name": "TestUtils",
              "nameLocations": [
                "496:9:207"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 83484,
              "src": "496:9:207"
            },
            "id": 40191,
            "nodeType": "InheritanceSpecifier",
            "src": "496:9:207"
          },
          {
            "baseName": {
              "id": 40192,
              "name": "IEntitlementCheckerBase",
              "nameLocations": [
                "507:23:207"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5849,
              "src": "507:23:207"
            },
            "id": 40193,
            "nodeType": "InheritanceSpecifier",
            "src": "507:23:207"
          }
        ],
        "canonicalName": "EntitlementCheckerTest",
        "contractDependencies": [
          5556
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          40475,
          5849,
          83484,
          88963,
          88284,
          125213
        ],
        "name": "EntitlementCheckerTest",
        "nameLocation": "470:22:207",
        "scope": 40476,
        "usedErrors": [
          5825,
          5827,
          5829
        ],
        "usedEvents": [
          5833,
          5837,
          5848,
          122246,
          122250,
          122255,
          122260,
          122265,
          122270,
          122275,
          122280,
          122284,
          122288,
          122292,
          122296,
          122300,
          122306,
          122313,
          122320,
          122327,
          122334,
          122341,
          122348,
          122354,
          122360,
          122366,
          122372,
          122378
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 207
}
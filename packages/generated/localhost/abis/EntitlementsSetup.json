{
  "abi": [
    {
      "inputs": [],
      "name": "Diamond_UnsupportedFunction",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "err",
          "type": "string"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "LogAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "value",
          "type": "address[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool[]",
          "name": "value",
          "type": "bool[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "value",
          "type": "bytes32[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "value",
          "type": "int256[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "value",
          "type": "string[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "value",
          "type": "uint256[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "LogBytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "value",
          "type": "bytes32"
        }
      ],
      "name": "LogBytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "value",
          "type": "int256"
        }
      ],
      "name": "LogInt256",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "LogNamedAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "value",
          "type": "address[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool[]",
          "name": "value",
          "type": "bool[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "value",
          "type": "bytes32[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "value",
          "type": "int256[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "value",
          "type": "string[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "value",
          "type": "uint256[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "LogNamedBytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "value",
          "type": "bytes32"
        }
      ],
      "name": "LogNamedBytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "value",
          "type": "int256"
        }
      ],
      "name": "LogNamedInt256",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "LogNamedString",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "LogNamedUint256",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "LogString",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "LogUint256",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NATIVE_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "s1",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "s2",
          "type": "string"
        }
      ],
      "name": "_isEqual",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "s1",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s2",
          "type": "bytes32"
        }
      ],
      "name": "_isEqual",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "diamondInitParams",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamond.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamond.FacetCut[]",
              "name": "baseFacets",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "init",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "initData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Diamond.InitParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "NATIVE_TOKEN()": "31f7d964",
    "_isEqual(bytes32,bytes32)": "be7e3bd4",
    "_isEqual(string,string)": "3b34fb1b",
    "diamondInitParams()": "77bd3cc0",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Diamond_UnsupportedFunction\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"err\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"LogAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"LogBytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"LogBytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"LogInt256\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"LogNamedAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"LogNamedBytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"LogNamedBytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"LogNamedInt256\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"LogNamedString\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogNamedUint256\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"LogString\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogUint256\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NATIVE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"s1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s2\",\"type\":\"string\"}],\"name\":\"_isEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"_isEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"diamondInitParams\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamond.FacetCut[]\",\"name\":\"baseFacets\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct Diamond.InitParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"IS_TEST()\":{\"details\":\"A flag to indicate that this is a test contract.\"},\"failed()\":{\"details\":\"Checks whether any test has failed so far. In addition to the local failure flag, we look for the global flag in the HEVM contract at storage slot \\\"failed\\\", because it is possible to run assertions between different instances of PRBTest. See https://github.com/dapphub/dapptools/issues/768.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"Diamond_UnsupportedFunction()\":[{\"notice\":\"Thrown when calling a function that was not registered in the diamond.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/towns/entitlements/EntitlementsSetup.sol\":\"EntitlementsSetup\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@prb/test/=lib/prb-test/src/\",\":ERC721A/=lib/ERC721A/contracts/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":operator-filter-registry/=lib/operator-filter-registry/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"contracts/src/diamond/Diamond.sol\":{\"keccak256\":\"0x3bdaf57e179f96d9213feea12d092642c0c6a9708807099d9caffbd76cf4a5a9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://63b47cb1703fe9bfccbc72d4c56deb653c95681f62de07701a5946cb1d64a8b2\",\"dweb:/ipfs/QmUv3oQwKQkg6fxgHMugQBKUUCgTYgpihjheYUJ2dUscVx\"]},\"contracts/src/diamond/IDiamond.sol\":{\"keccak256\":\"0x229b4689e28257d9cbf4812e2bf2e42467107ce1922ffc1c167b72fe8b8e4532\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9b1684fd3ebcb86d611495cad57d01002c3a9564975cc4d8d5d3a3afa2e3110e\",\"dweb:/ipfs/QmVFTX38enoWRiDkU6LVutRoFSsSuaoNuzz6ZVKajQK5VB\"]},\"contracts/src/diamond/facets/Facet.sol\":{\"keccak256\":\"0x8213b85d1271bc3c2aa9842979c8ad825066c4c9addc55296d53b6747e5198ba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b4e88e869c99e65f0caeb9d03938e78c578a869783b9f20c05f4ba52e7ca493d\",\"dweb:/ipfs/QmRqPmg8BYD1V6Cd8kfihCQ7nn2DAsgRjGW2MJvc7Evnjt\"]},\"contracts/src/diamond/facets/cut/DiamondCutBase.sol\":{\"keccak256\":\"0x3c7b30a0c0198f7c6f482103ebbcd07a51537b8fda0fdc9aa0c2fa94b7d56381\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d4aa75bea783571945fc0f4fd2565ab603884e40c2b8046971bea647ced77058\",\"dweb:/ipfs/QmWWvTmzSGAD5exYYdJL4EC721nCHw6nH4VS8ns641moX7\"]},\"contracts/src/diamond/facets/cut/DiamondCutStorage.sol\":{\"keccak256\":\"0x66979c2a475d398e3c1800eac068e386283d59a035e61b036aac5aab8800a0a6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f16a69b5b620f7c7c03539ba4273af399b16635a7e0ccfa1ecd3916c2d443a11\",\"dweb:/ipfs/QmZUg2JrVqUg2Jz7nNnvnSYmkKutzAUm7199EL9xoJt8i6\"]},\"contracts/src/diamond/facets/cut/IDiamondCut.sol\":{\"keccak256\":\"0xcdd725c5691ccc750bf8f5fb14bafa525377ed3bad72d94d0abe633c09e8b2aa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://024d0f05aef75094de7d104360b68128f48a5ad69e76d79923c71bbddb8eda49\",\"dweb:/ipfs/QmWRhDE7rZQSAbahYXBnJZZrvo7R2huE6oqRhaPECWGGcw\"]},\"contracts/src/diamond/facets/initializable/Initializable.sol\":{\"keccak256\":\"0x2a4f3a99b3b3ac6c2c18431cea80b40774c1d8265ddefac21b26da561e069096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36dbba730942b1fd345f242051ea7f33e979f70392fbd929d8522c0c9c6dd367\",\"dweb:/ipfs/QmYMvYnvg9zQJpDQX9yMHZ1AET9Vx7UXtDenXAs1JhfPpd\"]},\"contracts/src/diamond/facets/initializable/InitializableStorage.sol\":{\"keccak256\":\"0x99dfe047dbb8df48a7490f63939420dd990fb5fd3b3a03c42d0cb9c6f4f9eefa\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5e8f6d4bff257324e4544cacadd9fee42bada459f457fb707fef90bcfe0e895a\",\"dweb:/ipfs/QmYWEam5VcMt5ViNMKRkaxoD84MK2MewS5iWwSES589Vma\"]},\"contracts/src/diamond/facets/introspection/IERC165.sol\":{\"keccak256\":\"0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2\",\"dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV\"]},\"contracts/src/diamond/facets/introspection/IntrospectionBase.sol\":{\"keccak256\":\"0xbdc803a2179838316625692285c4b720cdbae1c78e5f9a68560719c909253d00\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://776a4490b22b01b554770d71afde7bed4c32ea639a08c84a194076eddf5517be\",\"dweb:/ipfs/QmcPVR9T7vXccCg7RXQ4wXtHaBG6ugrEXk8qnhRpsYMVd6\"]},\"contracts/src/diamond/facets/introspection/IntrospectionStorage.sol\":{\"keccak256\":\"0xd2ec3bbe4d15f9232006b41e0a80a5127006243ee596754af77bd3926045782a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8c47e18bfd34a687ce9ec75dc1f1fa5bca088e97e59aad2ac3fdb0989d06d7e6\",\"dweb:/ipfs/QmdktQXV7PKABzh43SZqemdTG25RxMaMsgpXTTUvZUxmfU\"]},\"contracts/src/diamond/facets/loupe/DiamondLoupeBase.sol\":{\"keccak256\":\"0x8db2619bcc4b0c7e920bbd603d8790168a6fed3e687780304fc76278ae0b9cf3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cef388e76684f823fc6ab718a18bdaec3cc9b002c1cc12b8f6fc1ff07b8f929e\",\"dweb:/ipfs/QmVaUuM1nSTgoSv6Na3fZHcAgCX2XFDuVEek5caFA5iWvx\"]},\"contracts/src/diamond/facets/loupe/IDiamondLoupe.sol\":{\"keccak256\":\"0x83141e0a7e8f1e9a592ca00bb6365aae7296f61d06080024546350594f076618\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f0917399449ea9830cff570d958d28b37b3c83af3a38c5f0a58241264aaf8290\",\"dweb:/ipfs/QmUbJD4U8Fpf7BiXJWExejkd54vUjiXJrjnxxARUDzrGa8\"]},\"contracts/src/diamond/facets/ownable/IERC173.sol\":{\"keccak256\":\"0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620\",\"dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol\":{\"keccak256\":\"0xa2498b875cb3c6f8c642a6b2fd5d9f017f698e687e07610135c3ae0c418e10e1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6881798ca926328f2b7e6731b06babfa548d47c1210ff52cdede3d31f99188b4\",\"dweb:/ipfs/QmRPKteWS4tSg1iTG1nsKJXgGxWWcEVdyXJaxMamZ7EdL6\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableFacet.sol\":{\"keccak256\":\"0xa9d6102ee28ca3f0c5de747023173cd85fa5e4b2947fc2285fd40be0a69856e4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d8bcbaea16b5e356904189dfe2112b15379a00486fef46e9167e28b62c9e5b5\",\"dweb:/ipfs/QmUPLR6FJfMGC5RGaQWFuzZK8o8Z3D9wDsLa26ZhWZG4dM\"]},\"contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol\":{\"keccak256\":\"0xea4323b3cc8794cb9008bf79180555b0dc248c52e0b030024d6b4ac9fdd6af0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dce6d6130309fce1126b8a4b493cc14666c59d1f7685107f07fb685d2cf31773\",\"dweb:/ipfs/QmVrC5tmJWZYgZ7ruKW6uDU8QDeZgbh3QcZD9aWHrX2Duh\"]},\"contracts/src/diamond/facets/pausable/IPausable.sol\":{\"keccak256\":\"0x51faf4ca7fa88bc4bf2699bab34692f0a43a316d0b3f95a8d7271935ef243a78\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e4ff1050ba7ec1bc7de90f562d8ccf7875f4faea0f12ca5101f22619f2dd6de2\",\"dweb:/ipfs/QmeczRzWavYXmirfEbwGg5uLeLdXaENtFAzmxxFsggUHsW\"]},\"contracts/src/diamond/facets/pausable/PausableBase.sol\":{\"keccak256\":\"0xfdeeba59a9f9b6a31203aa45f9244767b5d790dbcf36c920cc0ec5471505e47f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://72d6eb74b90e658834c9b9f6a9e391722c3eb3992aef2d4694c1a91473b291a1\",\"dweb:/ipfs/QmXVV8mTt8LmFDhzn3Lm3BMLXNdJTzUMbMrpBjnUaMzm5F\"]},\"contracts/src/diamond/facets/pausable/PausableStorage.sol\":{\"keccak256\":\"0x7aaa1baa71b080cf67876cb383b505be55ff2661b4bafc7f01428d509c201296\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://68231325f3a66baf6b96cb34d1432a675ff1d36fc15500cec97de12fc823bcd1\",\"dweb:/ipfs/QmVQb23iSSbYQJqk3EB9vT5fjSp6J8Uj2AwgEaHMSkF6wa\"]},\"contracts/src/diamond/proxy/IProxy.sol\":{\"keccak256\":\"0x56c8fafe5e06a8ad2a80f19d0eb8ac68c8cd42fc00d8501cb65201849fb62799\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2767795c4790a270e44e882e237ceb68afbcb75d811a94a5f9c32c7e16cf8e4d\",\"dweb:/ipfs/QmSWLUpnNk2G7x1PscxecJD3mWbnXo2R7kAkF2qjjquW91\"]},\"contracts/src/diamond/proxy/Proxy.sol\":{\"keccak256\":\"0x633c279137c71720b2134030c8c9843adb5b34c90587c8c29b60d32ec9ba5353\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d73f89f3198fe2a65890d28648d64377ecee50caf2cd62a787c00aafe5b21708\",\"dweb:/ipfs/QmZnHjDoZBnmCqod18WPSm7jdREwy1f7yhuq7Z3RJmE6Jh\"]},\"contracts/src/spaces/libraries/Errors.sol\":{\"keccak256\":\"0xb0a9a538c142afb52002a9ed67fe15f71263406b905ab854f58d0c4bbb168f79\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9a27883f35eee16c86c768b5084a1552058f996f72457e7ef624a20e731f4f7\",\"dweb:/ipfs/QmWNJYmVeNmsbq8Q6DAfa5ciBzXg61ARKteprhxFsAF289\"]},\"contracts/src/towns/entitlements/IEntitlement.sol\":{\"keccak256\":\"0x3c3733f40dcf373c19ea564ec9cbf49b33e96c27a80012e9be6f8d6d24e76c46\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ba0686e15bc8bfac66d59f62e59832eaf6d4c1b636080f9b2367386d5dc72ecb\",\"dweb:/ipfs/QmemW17L8TkGWG9RHKWTpjq9WBtYX3dmZsiTtzDmYNNXwE\"]},\"contracts/src/towns/facets/Entitled.sol\":{\"keccak256\":\"0x7aa843d40e4efd1a09e1ec302af382911989aba7999e1a0ec2619293b0598710\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://75d60caab15dacfc58082c74dff1abfbb68b2415d30a88308772123ff16c5369\",\"dweb:/ipfs/QmdAx6MjAwMWyfK8rEFWCRohff49ELCND6vxmvU8hwZzNU\"]},\"contracts/src/towns/facets/Permissions.sol\":{\"keccak256\":\"0x71c581d53e94675ff22111bbdcb54d9238cb2476c1c87d22c1c8709643ca20c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://33571102d8b2339eea4e68cdb4461e6c46617fa2597bc7fc9d3bd085ed3b8939\",\"dweb:/ipfs/QmPsppLQ4sXNwh9QC3hPw1wSdWDXKHsTbeqVPkz97F7KMd\"]},\"contracts/src/towns/facets/channels/ChannelBase.sol\":{\"keccak256\":\"0x15f7fade035e399ce7ce71c8dc614cb5d11354d29901f134386b168fae2f1063\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5bee322adde2ce1807bf8a5dbda483ac5864a43a3c1c8bccb37a65cd757e88ee\",\"dweb:/ipfs/QmVXKhxK2SgUsJ2RQRzWbku1JqQMxuE5KJ9gZBj9Q88GTU\"]},\"contracts/src/towns/facets/channels/ChannelService.sol\":{\"keccak256\":\"0xf6385db2da94e6650ef50c4286d2dca3aec269d6dec2a9979eea6c5b481431af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d52a6973b5309af1f93bd986fc73ca411f14bb30666e628830c4534b4d7be86b\",\"dweb:/ipfs/QmWB3drETz9dg4n7Yijhc9KVLWTCy339Df59jcaHNN3F8H\"]},\"contracts/src/towns/facets/channels/ChannelStorage.sol\":{\"keccak256\":\"0x6a77c72a6390013ccdf52e7174c397bdfd67d7c1ed48ee0ce660c54f58a86fc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8507829be0ce8f69985f40fbd7ff53e287e150d792f706c265a553085040ddcd\",\"dweb:/ipfs/QmbZfwRDkLX3fypMYKrrE1wsxKTqVh6oyZG2Yd8ZijiE8f\"]},\"contracts/src/towns/facets/channels/Channels.sol\":{\"keccak256\":\"0x9c2c2ba6a901c7aeef398f4226b4e12144e3ff6ccc84c0f8760a7dd131f57bc1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e5be0a55d2cef78a281e331ded93b057bc1793b2810576f7c848b2e4c04b4275\",\"dweb:/ipfs/QmT1sS9za3bTfmdmtEJGKdf6qFE3tcYDDmU5BmnUQ1Wb64\"]},\"contracts/src/towns/facets/channels/IChannel.sol\":{\"keccak256\":\"0xad2a848fd582f0e648d14c6271100bfdbcc238c293f1d99c9a514987ba223e9b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0485777d5ee61dd66929b9dc191bb2b3ae13288b9b6bdc87f6fd29a0bf249570\",\"dweb:/ipfs/QmcwXjVTwYJHirEktW1UgjntZYSFdHihMqVUNyhdGDwpZ4\"]},\"contracts/src/towns/facets/entitlements/EntitlementsManager.sol\":{\"keccak256\":\"0xb348490c3e28cf8d5ff2ced284e7cf9b7d37f1a852996e8d3d15d431842b8d59\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8c1f47eff7cb027dbb8a1b1492f76d2eb1c2eee7b4b43fb99124d810e718c565\",\"dweb:/ipfs/QmZMbG3HEC9YSKFBMyC7WeXzCrcCsSKZuJArzenVSKyHuJ\"]},\"contracts/src/towns/facets/entitlements/EntitlementsManagerBase.sol\":{\"keccak256\":\"0xf7723ec8d39d24ccc64b5f3aa25e3330d2f0d29c0b5f0549c3a0ded411a48627\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6092dfce4d99e35d1cd4b309127c09179f69532ee152ac1daddca94d4311a56d\",\"dweb:/ipfs/QmUe2tp7PUroYL2zV7RRxDbfweQEcVZNiTN6FcrLxTcB3C\"]},\"contracts/src/towns/facets/entitlements/EntitlementsManagerService.sol\":{\"keccak256\":\"0xec231181537f2bd37bde9fe50a37e4ffca400e51467e20f804021130d091904d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c96e305f95f70cc80c9c603bdee50e8520fe2401541efc97144cfc2dba55c19e\",\"dweb:/ipfs/Qmb3MKgF65Yqx7d63Ej7AYNNzDZRiy9PjmyKxFASS2xBKE\"]},\"contracts/src/towns/facets/entitlements/EntitlementsManagerStorage.sol\":{\"keccak256\":\"0x2fa49a3dea8314e57341b402894a053fe4c3e4f6f682d3f6cfae79e999919340\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ca673210755140e127ec9ed3c7716a3c4fc48d3c4cf66d6ccfca5144e2c9933d\",\"dweb:/ipfs/QmQajUVgwkg8dkeAb8Ext2dABL3PRPNsiDCxd7XXXuUdVD\"]},\"contracts/src/towns/facets/entitlements/IEntitlementsManager.sol\":{\"keccak256\":\"0x5168b9751e1a2a55dbadcaff261aecd936c526387c9b26ad97b1ed38c091d9be\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://394dc6dfe499dc42d1cf82a0805b82c75b65578795a3f4e311e68a8c02de1fea\",\"dweb:/ipfs/QmcLZ7XeMuFAY561YKoMR2oFssakWCTyME6rxTMAiDU6wV\"]},\"contracts/src/towns/facets/roles/IRoles.sol\":{\"keccak256\":\"0x630c61d3be65a9e5b0d7318d58d733806e41f101050fceb9eb6065f32b2addc3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a23a5ce51675208f8184df63a69347e45fe5a70cc7b708ffff0527eebfdd14f9\",\"dweb:/ipfs/QmYc28XoZ6L1cdJutzo3qcoUvsn3Vq1Pfz56V1AyEZftri\"]},\"contracts/src/towns/facets/roles/Roles.sol\":{\"keccak256\":\"0x674d4681f6e87d887172635307e0c83c085c9b757565a9ae5aad09c32b663463\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b27fc0c1a4f4869ebe28459dc05ff92a622bb46b5597e9ec8c94835ff9c1b7ef\",\"dweb:/ipfs/QmQpf4HGG6itRpDppJHtux81Mi357csuh5NTjP2cLCQEwE\"]},\"contracts/src/towns/facets/roles/RolesBase.sol\":{\"keccak256\":\"0x2d289a5080c606a8edd83fde27cfb4f679c28596e49471a4a187599704628e0a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://419c84dc1d3a646f8a275d34e82c71ebd651dba5c99ebe12e8cd68797b7dd61a\",\"dweb:/ipfs/QmXUoUC3KnYEhL4AwtKBiLFVeUGM32AgkGjscA3skiCaQP\"]},\"contracts/src/towns/facets/roles/RolesStorage.sol\":{\"keccak256\":\"0x60fa9d7e4bad4a6e62101c9ded37978d045b596d7f287ce8456542a8645d6b48\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b412e190e309d5f5604d84b565f3bfe90011525f912ca17ff30b639d34f6d378\",\"dweb:/ipfs/QmcULfFuig7HD3MYHR3QkGMDtBCCzCq2ZBemfcA8iqceEq\"]},\"contracts/src/utils/StringSet.sol\":{\"keccak256\":\"0x47235bcc7b60e9d244156cdd2d0defe4c1a8eb6d078f4426b4fb8c094dd41781\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://07d0eee74639221183100bb2aedaea7d6e8b0ebe31608e6cb86b135a89240c66\",\"dweb:/ipfs/QmbSLb1uhWVz7bVrBJTiTk9dWjD7xBmUiRJECdnaGWVVcR\"]},\"contracts/src/utils/Validator.sol\":{\"keccak256\":\"0xc3711af9d2db5524ada0fcdd6a41e176aeafc3423f79400894def7c3c22568f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1427d925bf4d9f0ea065c60a7afcff8439dbd62cfa3e4a34e301b1b85df2a184\",\"dweb:/ipfs/QmYETDCx4zhBUqkgmYhyyb1un469ZeuhCpeY4RdtRoYvEz\"]},\"contracts/test/diamond/Facet.t.sol\":{\"keccak256\":\"0x6d2704184b1ebc9633b41af2a7bf0984e36e53fc3621335453f9bed5a172d5dc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3b127697407e511a54a45b149a6352caa2f8a6dd6f406f2b966fe55e9623691f\",\"dweb:/ipfs/QmcekAxbsntg8J79bqyHfxV8bnYA53YkZcaJokd6eoFRBf\"]},\"contracts/test/diamond/ownable/token/TokenOwnableSetup.sol\":{\"keccak256\":\"0x319c5d1d22a2a05dcf966ad86a52b2a2ee5370de6d1d7d690f05cf0a76ef7fc4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02dcbaddff1d67ededd148ca8ad83674954dbbb329a8a5a5e801daba711dc4c0\",\"dweb:/ipfs/QmeXLUL44XSE7QYQSnGNaNdBTyhigUyu3m5qC6pP3ypneN\"]},\"contracts/test/mocks/MockERC721.sol\":{\"keccak256\":\"0x8cf07b7b91e2da1b9aad346cc5e998f3cdd87bf186659ee3cb26910ac6a3f149\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02c71f956e6669518393f47c0a5711f5cf5eb5e2a826e11656f3346284a1f150\",\"dweb:/ipfs/QmUjvy3BAtX7zpufjc3M52EqLyYE9VXzowxYZxsmfPsWFA\"]},\"contracts/test/mocks/MockUserEntitlement.sol\":{\"keccak256\":\"0xf4f82b634de8877d0507ae97a0d4bfe55ab65c2bed6d1fd8453628498b76c0ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://417129df54a76a726e43bda137bfdb9efc977cd65fe9fb1ec62265a5f4778569\",\"dweb:/ipfs/QmWRe3eCQvj2sThn8jUraNjxe1bhbxXzUvbTGgNWQzN88t\"]},\"contracts/test/mocks/MockUserEntitlementStorage.sol\":{\"keccak256\":\"0x9b1a73766dac80947f10700901c39d71b9fb088c0cf87e084497d31584eac9a7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fe6e7d7444c073fb5f88f2c0e5462f0370e48d40ee4cbfd00ba05a1cd8e6fc8b\",\"dweb:/ipfs/QmbZnBzZkFZ7dMgDUkQ6n6XZvLHt52kCGZjrSPWUUnmkCH\"]},\"contracts/test/towns/channels/ChannelsSetup.sol\":{\"keccak256\":\"0xe8ac556a1911ccb91c0da389ac94438fe4f1faabc2d148213aaf80f0df3b69a2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d546d5ce0fc490b0794b052e9fdd1fd128d9d93bcabd575316911776875c9845\",\"dweb:/ipfs/QmRy7CE41uWsjjByE32u5CJB9wxg6BaWcawQYj3MBFZKwr\"]},\"contracts/test/towns/entitlements/EntitlementsSetup.sol\":{\"keccak256\":\"0x01ea305effea48a4657c3fd2f082f6e88991d42c3b9705717aeda150657d7b33\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2a0c37ee749f6fc0f960714ad7cbfc38c06173c798bed2f1928dea36b182c1e7\",\"dweb:/ipfs/QmZMeTk4FhNwcFCBPTDywkefQgtRTjLEAyKhu9gFNDETMR\"]},\"contracts/test/towns/roles/RolesSetup.sol\":{\"keccak256\":\"0xe71c37ae590a681d69f85c66c4a2d7d9de0e29f5e1429aca2b467869b890a1a1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dfd85904889009dc618bb526e3b7094928e3393dbc78088068a720c44d9af427\",\"dweb:/ipfs/QmS9EuFk7QfXDo6rUicb2F3xYMqpWpzXH2GcH16VGEuotv\"]},\"contracts/test/utils/TestUtils.sol\":{\"keccak256\":\"0xc9d1e208a42d002aceb99f2dd2e593fc3f7bf7c326eaef14e70f58c6c6c0a5cd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bbf728a738ef1f3d79d4798400c4d2c2ac6df7a4e6c7fc939db2b28cbb43125a\",\"dweb:/ipfs/QmV2nUeDrPHSHesN1dxaFPr8fWDH15vZQzEzoEen2rowvH\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"lib/prb-test/src/Helpers.sol\":{\"keccak256\":\"0x4ab5888920e97cb50dff6a7093fd01d830aa8b7f1e3d5313f73e46f812360705\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ecaffd6d742a3c47c3785e9816d1d459d45cb6bf34a353884d333b87d52fa60\",\"dweb:/ipfs/QmYjsof64dPbxxw4i95S9bqDvTF4V2DA35bSwYAvXxxXYp\"]},\"lib/prb-test/src/PRBTest.sol\":{\"keccak256\":\"0xed6d9f8c7fd5ca380a47a6de7c631d48a96cbc777632d030a52bf9216aea0bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcf663e0c2e2d3eabdaa1c9e7ff4df2a3b046e1279de1e0d2ce24a87a86e37fb\",\"dweb:/ipfs/QmRnar3CcN2JMYqrDYkUqEya6A3vBWUrD2HSL8aP7FC4vK\"]},\"lib/prb-test/src/Vm.sol\":{\"keccak256\":\"0xecae57742478cd465460cc2ec5fd9174a41e5b93549c1d4456ff26cf97356fee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fdf31f7f585bebfde82af93eb295e18196362704e69338e0626c2d8015d00e9d\",\"dweb:/ipfs/Qme1oLTN5CxRRiuVw48oN5buYotdaKNnio7a9W4hAus9Ry\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "Diamond_UnsupportedFunction"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "err",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "value",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogAddress",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "value",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool[]",
              "name": "value",
              "type": "bool[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "value",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "value",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string[]",
              "name": "value",
              "type": "string[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogBytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "value",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogBytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "value",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogInt256",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "value",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedAddress",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "value",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bool[]",
              "name": "value",
              "type": "bool[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "value",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "value",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string[]",
              "name": "value",
              "type": "string[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedBytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "value",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedBytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "value",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedInt256",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedString",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedUint256",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogString",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogUint256",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NATIVE_TOKEN",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "s1",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s2",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "_isEqual",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "s1",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s2",
              "type": "bytes32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "_isEqual",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "diamondInitParams",
          "outputs": [
            {
              "internalType": "struct Diamond.InitParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IDiamond.FacetCut[]",
                  "name": "baseFacets",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "facetAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "enum IDiamond.FacetCutAction",
                      "name": "action",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes4[]",
                      "name": "functionSelectors",
                      "type": "bytes4[]"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "init",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "initData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "IS_TEST()": {
            "details": "A flag to indicate that this is a test contract."
          },
          "failed()": {
            "details": "Checks whether any test has failed so far. In addition to the local failure flag, we look for the global flag in the HEVM contract at storage slot \"failed\", because it is possible to run assertions between different instances of PRBTest. See https://github.com/dapphub/dapptools/issues/768."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@prb/test/=lib/prb-test/src/",
        "ERC721A/=lib/ERC721A/contracts/",
        "council/=lib/council/contracts/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/operator-filter-registry/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "operator-filter-registry/=lib/operator-filter-registry/",
        "prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "contracts/test/towns/entitlements/EntitlementsSetup.sol": "EntitlementsSetup"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/diamond/Diamond.sol": {
        "keccak256": "0x3bdaf57e179f96d9213feea12d092642c0c6a9708807099d9caffbd76cf4a5a9",
        "urls": [
          "bzz-raw://63b47cb1703fe9bfccbc72d4c56deb653c95681f62de07701a5946cb1d64a8b2",
          "dweb:/ipfs/QmUv3oQwKQkg6fxgHMugQBKUUCgTYgpihjheYUJ2dUscVx"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/IDiamond.sol": {
        "keccak256": "0x229b4689e28257d9cbf4812e2bf2e42467107ce1922ffc1c167b72fe8b8e4532",
        "urls": [
          "bzz-raw://9b1684fd3ebcb86d611495cad57d01002c3a9564975cc4d8d5d3a3afa2e3110e",
          "dweb:/ipfs/QmVFTX38enoWRiDkU6LVutRoFSsSuaoNuzz6ZVKajQK5VB"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/Facet.sol": {
        "keccak256": "0x8213b85d1271bc3c2aa9842979c8ad825066c4c9addc55296d53b6747e5198ba",
        "urls": [
          "bzz-raw://b4e88e869c99e65f0caeb9d03938e78c578a869783b9f20c05f4ba52e7ca493d",
          "dweb:/ipfs/QmRqPmg8BYD1V6Cd8kfihCQ7nn2DAsgRjGW2MJvc7Evnjt"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/cut/DiamondCutBase.sol": {
        "keccak256": "0x3c7b30a0c0198f7c6f482103ebbcd07a51537b8fda0fdc9aa0c2fa94b7d56381",
        "urls": [
          "bzz-raw://d4aa75bea783571945fc0f4fd2565ab603884e40c2b8046971bea647ced77058",
          "dweb:/ipfs/QmWWvTmzSGAD5exYYdJL4EC721nCHw6nH4VS8ns641moX7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/cut/DiamondCutStorage.sol": {
        "keccak256": "0x66979c2a475d398e3c1800eac068e386283d59a035e61b036aac5aab8800a0a6",
        "urls": [
          "bzz-raw://f16a69b5b620f7c7c03539ba4273af399b16635a7e0ccfa1ecd3916c2d443a11",
          "dweb:/ipfs/QmZUg2JrVqUg2Jz7nNnvnSYmkKutzAUm7199EL9xoJt8i6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/cut/IDiamondCut.sol": {
        "keccak256": "0xcdd725c5691ccc750bf8f5fb14bafa525377ed3bad72d94d0abe633c09e8b2aa",
        "urls": [
          "bzz-raw://024d0f05aef75094de7d104360b68128f48a5ad69e76d79923c71bbddb8eda49",
          "dweb:/ipfs/QmWRhDE7rZQSAbahYXBnJZZrvo7R2huE6oqRhaPECWGGcw"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/initializable/Initializable.sol": {
        "keccak256": "0x2a4f3a99b3b3ac6c2c18431cea80b40774c1d8265ddefac21b26da561e069096",
        "urls": [
          "bzz-raw://36dbba730942b1fd345f242051ea7f33e979f70392fbd929d8522c0c9c6dd367",
          "dweb:/ipfs/QmYMvYnvg9zQJpDQX9yMHZ1AET9Vx7UXtDenXAs1JhfPpd"
        ],
        "license": "MIT"
      },
      "contracts/src/diamond/facets/initializable/InitializableStorage.sol": {
        "keccak256": "0x99dfe047dbb8df48a7490f63939420dd990fb5fd3b3a03c42d0cb9c6f4f9eefa",
        "urls": [
          "bzz-raw://5e8f6d4bff257324e4544cacadd9fee42bada459f457fb707fef90bcfe0e895a",
          "dweb:/ipfs/QmYWEam5VcMt5ViNMKRkaxoD84MK2MewS5iWwSES589Vma"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IERC165.sol": {
        "keccak256": "0xa1dfa0449031fced106dd105c184823595398c876be53b4bb8d855937a435816",
        "urls": [
          "bzz-raw://e98a9007bca24776e4580c9326cfbb72ffe56334229626c336545be8c2c6e6d2",
          "dweb:/ipfs/QmdqoQTUoDKqirUR3hscy4zBh4Kn2E1fRta1y9DfA43urV"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IntrospectionBase.sol": {
        "keccak256": "0xbdc803a2179838316625692285c4b720cdbae1c78e5f9a68560719c909253d00",
        "urls": [
          "bzz-raw://776a4490b22b01b554770d71afde7bed4c32ea639a08c84a194076eddf5517be",
          "dweb:/ipfs/QmcPVR9T7vXccCg7RXQ4wXtHaBG6ugrEXk8qnhRpsYMVd6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/introspection/IntrospectionStorage.sol": {
        "keccak256": "0xd2ec3bbe4d15f9232006b41e0a80a5127006243ee596754af77bd3926045782a",
        "urls": [
          "bzz-raw://8c47e18bfd34a687ce9ec75dc1f1fa5bca088e97e59aad2ac3fdb0989d06d7e6",
          "dweb:/ipfs/QmdktQXV7PKABzh43SZqemdTG25RxMaMsgpXTTUvZUxmfU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/loupe/DiamondLoupeBase.sol": {
        "keccak256": "0x8db2619bcc4b0c7e920bbd603d8790168a6fed3e687780304fc76278ae0b9cf3",
        "urls": [
          "bzz-raw://cef388e76684f823fc6ab718a18bdaec3cc9b002c1cc12b8f6fc1ff07b8f929e",
          "dweb:/ipfs/QmVaUuM1nSTgoSv6Na3fZHcAgCX2XFDuVEek5caFA5iWvx"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/loupe/IDiamondLoupe.sol": {
        "keccak256": "0x83141e0a7e8f1e9a592ca00bb6365aae7296f61d06080024546350594f076618",
        "urls": [
          "bzz-raw://f0917399449ea9830cff570d958d28b37b3c83af3a38c5f0a58241264aaf8290",
          "dweb:/ipfs/QmUbJD4U8Fpf7BiXJWExejkd54vUjiXJrjnxxARUDzrGa8"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/IERC173.sol": {
        "keccak256": "0x76db3de67cf685fd097cba11229f8fcb1ddb25612193a9ced697508706a237fe",
        "urls": [
          "bzz-raw://3f6de17931a0734b33ffa015f207efaba72e71ffe7f5ca3a95178525546de620",
          "dweb:/ipfs/QmXuw9kx5fAER4jYBHUDLpbB2mQhEkwBrZPa96JgEEY9nD"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol": {
        "keccak256": "0xa2498b875cb3c6f8c642a6b2fd5d9f017f698e687e07610135c3ae0c418e10e1",
        "urls": [
          "bzz-raw://6881798ca926328f2b7e6731b06babfa548d47c1210ff52cdede3d31f99188b4",
          "dweb:/ipfs/QmRPKteWS4tSg1iTG1nsKJXgGxWWcEVdyXJaxMamZ7EdL6"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableFacet.sol": {
        "keccak256": "0xa9d6102ee28ca3f0c5de747023173cd85fa5e4b2947fc2285fd40be0a69856e4",
        "urls": [
          "bzz-raw://1d8bcbaea16b5e356904189dfe2112b15379a00486fef46e9167e28b62c9e5b5",
          "dweb:/ipfs/QmUPLR6FJfMGC5RGaQWFuzZK8o8Z3D9wDsLa26ZhWZG4dM"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol": {
        "keccak256": "0xea4323b3cc8794cb9008bf79180555b0dc248c52e0b030024d6b4ac9fdd6af0b",
        "urls": [
          "bzz-raw://dce6d6130309fce1126b8a4b493cc14666c59d1f7685107f07fb685d2cf31773",
          "dweb:/ipfs/QmVrC5tmJWZYgZ7ruKW6uDU8QDeZgbh3QcZD9aWHrX2Duh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/IPausable.sol": {
        "keccak256": "0x51faf4ca7fa88bc4bf2699bab34692f0a43a316d0b3f95a8d7271935ef243a78",
        "urls": [
          "bzz-raw://e4ff1050ba7ec1bc7de90f562d8ccf7875f4faea0f12ca5101f22619f2dd6de2",
          "dweb:/ipfs/QmeczRzWavYXmirfEbwGg5uLeLdXaENtFAzmxxFsggUHsW"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/PausableBase.sol": {
        "keccak256": "0xfdeeba59a9f9b6a31203aa45f9244767b5d790dbcf36c920cc0ec5471505e47f",
        "urls": [
          "bzz-raw://72d6eb74b90e658834c9b9f6a9e391722c3eb3992aef2d4694c1a91473b291a1",
          "dweb:/ipfs/QmXVV8mTt8LmFDhzn3Lm3BMLXNdJTzUMbMrpBjnUaMzm5F"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/facets/pausable/PausableStorage.sol": {
        "keccak256": "0x7aaa1baa71b080cf67876cb383b505be55ff2661b4bafc7f01428d509c201296",
        "urls": [
          "bzz-raw://68231325f3a66baf6b96cb34d1432a675ff1d36fc15500cec97de12fc823bcd1",
          "dweb:/ipfs/QmVQb23iSSbYQJqk3EB9vT5fjSp6J8Uj2AwgEaHMSkF6wa"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/proxy/IProxy.sol": {
        "keccak256": "0x56c8fafe5e06a8ad2a80f19d0eb8ac68c8cd42fc00d8501cb65201849fb62799",
        "urls": [
          "bzz-raw://2767795c4790a270e44e882e237ceb68afbcb75d811a94a5f9c32c7e16cf8e4d",
          "dweb:/ipfs/QmSWLUpnNk2G7x1PscxecJD3mWbnXo2R7kAkF2qjjquW91"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/diamond/proxy/Proxy.sol": {
        "keccak256": "0x633c279137c71720b2134030c8c9843adb5b34c90587c8c29b60d32ec9ba5353",
        "urls": [
          "bzz-raw://d73f89f3198fe2a65890d28648d64377ecee50caf2cd62a787c00aafe5b21708",
          "dweb:/ipfs/QmZnHjDoZBnmCqod18WPSm7jdREwy1f7yhuq7Z3RJmE6Jh"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/spaces/libraries/Errors.sol": {
        "keccak256": "0xb0a9a538c142afb52002a9ed67fe15f71263406b905ab854f58d0c4bbb168f79",
        "urls": [
          "bzz-raw://f9a27883f35eee16c86c768b5084a1552058f996f72457e7ef624a20e731f4f7",
          "dweb:/ipfs/QmWNJYmVeNmsbq8Q6DAfa5ciBzXg61ARKteprhxFsAF289"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/entitlements/IEntitlement.sol": {
        "keccak256": "0x3c3733f40dcf373c19ea564ec9cbf49b33e96c27a80012e9be6f8d6d24e76c46",
        "urls": [
          "bzz-raw://ba0686e15bc8bfac66d59f62e59832eaf6d4c1b636080f9b2367386d5dc72ecb",
          "dweb:/ipfs/QmemW17L8TkGWG9RHKWTpjq9WBtYX3dmZsiTtzDmYNNXwE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/Entitled.sol": {
        "keccak256": "0x7aa843d40e4efd1a09e1ec302af382911989aba7999e1a0ec2619293b0598710",
        "urls": [
          "bzz-raw://75d60caab15dacfc58082c74dff1abfbb68b2415d30a88308772123ff16c5369",
          "dweb:/ipfs/QmdAx6MjAwMWyfK8rEFWCRohff49ELCND6vxmvU8hwZzNU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/Permissions.sol": {
        "keccak256": "0x71c581d53e94675ff22111bbdcb54d9238cb2476c1c87d22c1c8709643ca20c3",
        "urls": [
          "bzz-raw://33571102d8b2339eea4e68cdb4461e6c46617fa2597bc7fc9d3bd085ed3b8939",
          "dweb:/ipfs/QmPsppLQ4sXNwh9QC3hPw1wSdWDXKHsTbeqVPkz97F7KMd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/channels/ChannelBase.sol": {
        "keccak256": "0x15f7fade035e399ce7ce71c8dc614cb5d11354d29901f134386b168fae2f1063",
        "urls": [
          "bzz-raw://5bee322adde2ce1807bf8a5dbda483ac5864a43a3c1c8bccb37a65cd757e88ee",
          "dweb:/ipfs/QmVXKhxK2SgUsJ2RQRzWbku1JqQMxuE5KJ9gZBj9Q88GTU"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/channels/ChannelService.sol": {
        "keccak256": "0xf6385db2da94e6650ef50c4286d2dca3aec269d6dec2a9979eea6c5b481431af",
        "urls": [
          "bzz-raw://d52a6973b5309af1f93bd986fc73ca411f14bb30666e628830c4534b4d7be86b",
          "dweb:/ipfs/QmWB3drETz9dg4n7Yijhc9KVLWTCy339Df59jcaHNN3F8H"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/channels/ChannelStorage.sol": {
        "keccak256": "0x6a77c72a6390013ccdf52e7174c397bdfd67d7c1ed48ee0ce660c54f58a86fc3",
        "urls": [
          "bzz-raw://8507829be0ce8f69985f40fbd7ff53e287e150d792f706c265a553085040ddcd",
          "dweb:/ipfs/QmbZfwRDkLX3fypMYKrrE1wsxKTqVh6oyZG2Yd8ZijiE8f"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/channels/Channels.sol": {
        "keccak256": "0x9c2c2ba6a901c7aeef398f4226b4e12144e3ff6ccc84c0f8760a7dd131f57bc1",
        "urls": [
          "bzz-raw://e5be0a55d2cef78a281e331ded93b057bc1793b2810576f7c848b2e4c04b4275",
          "dweb:/ipfs/QmT1sS9za3bTfmdmtEJGKdf6qFE3tcYDDmU5BmnUQ1Wb64"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/channels/IChannel.sol": {
        "keccak256": "0xad2a848fd582f0e648d14c6271100bfdbcc238c293f1d99c9a514987ba223e9b",
        "urls": [
          "bzz-raw://0485777d5ee61dd66929b9dc191bb2b3ae13288b9b6bdc87f6fd29a0bf249570",
          "dweb:/ipfs/QmcwXjVTwYJHirEktW1UgjntZYSFdHihMqVUNyhdGDwpZ4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsManager.sol": {
        "keccak256": "0xb348490c3e28cf8d5ff2ced284e7cf9b7d37f1a852996e8d3d15d431842b8d59",
        "urls": [
          "bzz-raw://8c1f47eff7cb027dbb8a1b1492f76d2eb1c2eee7b4b43fb99124d810e718c565",
          "dweb:/ipfs/QmZMbG3HEC9YSKFBMyC7WeXzCrcCsSKZuJArzenVSKyHuJ"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsManagerBase.sol": {
        "keccak256": "0xf7723ec8d39d24ccc64b5f3aa25e3330d2f0d29c0b5f0549c3a0ded411a48627",
        "urls": [
          "bzz-raw://6092dfce4d99e35d1cd4b309127c09179f69532ee152ac1daddca94d4311a56d",
          "dweb:/ipfs/QmUe2tp7PUroYL2zV7RRxDbfweQEcVZNiTN6FcrLxTcB3C"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsManagerService.sol": {
        "keccak256": "0xec231181537f2bd37bde9fe50a37e4ffca400e51467e20f804021130d091904d",
        "urls": [
          "bzz-raw://c96e305f95f70cc80c9c603bdee50e8520fe2401541efc97144cfc2dba55c19e",
          "dweb:/ipfs/Qmb3MKgF65Yqx7d63Ej7AYNNzDZRiy9PjmyKxFASS2xBKE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/EntitlementsManagerStorage.sol": {
        "keccak256": "0x2fa49a3dea8314e57341b402894a053fe4c3e4f6f682d3f6cfae79e999919340",
        "urls": [
          "bzz-raw://ca673210755140e127ec9ed3c7716a3c4fc48d3c4cf66d6ccfca5144e2c9933d",
          "dweb:/ipfs/QmQajUVgwkg8dkeAb8Ext2dABL3PRPNsiDCxd7XXXuUdVD"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/entitlements/IEntitlementsManager.sol": {
        "keccak256": "0x5168b9751e1a2a55dbadcaff261aecd936c526387c9b26ad97b1ed38c091d9be",
        "urls": [
          "bzz-raw://394dc6dfe499dc42d1cf82a0805b82c75b65578795a3f4e311e68a8c02de1fea",
          "dweb:/ipfs/QmcLZ7XeMuFAY561YKoMR2oFssakWCTyME6rxTMAiDU6wV"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/roles/IRoles.sol": {
        "keccak256": "0x630c61d3be65a9e5b0d7318d58d733806e41f101050fceb9eb6065f32b2addc3",
        "urls": [
          "bzz-raw://a23a5ce51675208f8184df63a69347e45fe5a70cc7b708ffff0527eebfdd14f9",
          "dweb:/ipfs/QmYc28XoZ6L1cdJutzo3qcoUvsn3Vq1Pfz56V1AyEZftri"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/roles/Roles.sol": {
        "keccak256": "0x674d4681f6e87d887172635307e0c83c085c9b757565a9ae5aad09c32b663463",
        "urls": [
          "bzz-raw://b27fc0c1a4f4869ebe28459dc05ff92a622bb46b5597e9ec8c94835ff9c1b7ef",
          "dweb:/ipfs/QmQpf4HGG6itRpDppJHtux81Mi357csuh5NTjP2cLCQEwE"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/roles/RolesBase.sol": {
        "keccak256": "0x2d289a5080c606a8edd83fde27cfb4f679c28596e49471a4a187599704628e0a",
        "urls": [
          "bzz-raw://419c84dc1d3a646f8a275d34e82c71ebd651dba5c99ebe12e8cd68797b7dd61a",
          "dweb:/ipfs/QmXUoUC3KnYEhL4AwtKBiLFVeUGM32AgkGjscA3skiCaQP"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/towns/facets/roles/RolesStorage.sol": {
        "keccak256": "0x60fa9d7e4bad4a6e62101c9ded37978d045b596d7f287ce8456542a8645d6b48",
        "urls": [
          "bzz-raw://b412e190e309d5f5604d84b565f3bfe90011525f912ca17ff30b639d34f6d378",
          "dweb:/ipfs/QmcULfFuig7HD3MYHR3QkGMDtBCCzCq2ZBemfcA8iqceEq"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/utils/StringSet.sol": {
        "keccak256": "0x47235bcc7b60e9d244156cdd2d0defe4c1a8eb6d078f4426b4fb8c094dd41781",
        "urls": [
          "bzz-raw://07d0eee74639221183100bb2aedaea7d6e8b0ebe31608e6cb86b135a89240c66",
          "dweb:/ipfs/QmbSLb1uhWVz7bVrBJTiTk9dWjD7xBmUiRJECdnaGWVVcR"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/utils/Validator.sol": {
        "keccak256": "0xc3711af9d2db5524ada0fcdd6a41e176aeafc3423f79400894def7c3c22568f8",
        "urls": [
          "bzz-raw://1427d925bf4d9f0ea065c60a7afcff8439dbd62cfa3e4a34e301b1b85df2a184",
          "dweb:/ipfs/QmYETDCx4zhBUqkgmYhyyb1un469ZeuhCpeY4RdtRoYvEz"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/diamond/Facet.t.sol": {
        "keccak256": "0x6d2704184b1ebc9633b41af2a7bf0984e36e53fc3621335453f9bed5a172d5dc",
        "urls": [
          "bzz-raw://3b127697407e511a54a45b149a6352caa2f8a6dd6f406f2b966fe55e9623691f",
          "dweb:/ipfs/QmcekAxbsntg8J79bqyHfxV8bnYA53YkZcaJokd6eoFRBf"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/diamond/ownable/token/TokenOwnableSetup.sol": {
        "keccak256": "0x319c5d1d22a2a05dcf966ad86a52b2a2ee5370de6d1d7d690f05cf0a76ef7fc4",
        "urls": [
          "bzz-raw://02dcbaddff1d67ededd148ca8ad83674954dbbb329a8a5a5e801daba711dc4c0",
          "dweb:/ipfs/QmeXLUL44XSE7QYQSnGNaNdBTyhigUyu3m5qC6pP3ypneN"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/mocks/MockERC721.sol": {
        "keccak256": "0x8cf07b7b91e2da1b9aad346cc5e998f3cdd87bf186659ee3cb26910ac6a3f149",
        "urls": [
          "bzz-raw://02c71f956e6669518393f47c0a5711f5cf5eb5e2a826e11656f3346284a1f150",
          "dweb:/ipfs/QmUjvy3BAtX7zpufjc3M52EqLyYE9VXzowxYZxsmfPsWFA"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/mocks/MockUserEntitlement.sol": {
        "keccak256": "0xf4f82b634de8877d0507ae97a0d4bfe55ab65c2bed6d1fd8453628498b76c0ca",
        "urls": [
          "bzz-raw://417129df54a76a726e43bda137bfdb9efc977cd65fe9fb1ec62265a5f4778569",
          "dweb:/ipfs/QmWRe3eCQvj2sThn8jUraNjxe1bhbxXzUvbTGgNWQzN88t"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/mocks/MockUserEntitlementStorage.sol": {
        "keccak256": "0x9b1a73766dac80947f10700901c39d71b9fb088c0cf87e084497d31584eac9a7",
        "urls": [
          "bzz-raw://fe6e7d7444c073fb5f88f2c0e5462f0370e48d40ee4cbfd00ba05a1cd8e6fc8b",
          "dweb:/ipfs/QmbZnBzZkFZ7dMgDUkQ6n6XZvLHt52kCGZjrSPWUUnmkCH"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/towns/channels/ChannelsSetup.sol": {
        "keccak256": "0xe8ac556a1911ccb91c0da389ac94438fe4f1faabc2d148213aaf80f0df3b69a2",
        "urls": [
          "bzz-raw://d546d5ce0fc490b0794b052e9fdd1fd128d9d93bcabd575316911776875c9845",
          "dweb:/ipfs/QmRy7CE41uWsjjByE32u5CJB9wxg6BaWcawQYj3MBFZKwr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/towns/entitlements/EntitlementsSetup.sol": {
        "keccak256": "0x01ea305effea48a4657c3fd2f082f6e88991d42c3b9705717aeda150657d7b33",
        "urls": [
          "bzz-raw://2a0c37ee749f6fc0f960714ad7cbfc38c06173c798bed2f1928dea36b182c1e7",
          "dweb:/ipfs/QmZMeTk4FhNwcFCBPTDywkefQgtRTjLEAyKhu9gFNDETMR"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/towns/roles/RolesSetup.sol": {
        "keccak256": "0xe71c37ae590a681d69f85c66c4a2d7d9de0e29f5e1429aca2b467869b890a1a1",
        "urls": [
          "bzz-raw://dfd85904889009dc618bb526e3b7094928e3393dbc78088068a720c44d9af427",
          "dweb:/ipfs/QmS9EuFk7QfXDo6rUicb2F3xYMqpWpzXH2GcH16VGEuotv"
        ],
        "license": "Apache-2.0"
      },
      "contracts/test/utils/TestUtils.sol": {
        "keccak256": "0xc9d1e208a42d002aceb99f2dd2e593fc3f7bf7c326eaef14e70f58c6c6c0a5cd",
        "urls": [
          "bzz-raw://bbf728a738ef1f3d79d4798400c4d2c2ac6df7a4e6c7fc939db2b28cbb43125a",
          "dweb:/ipfs/QmV2nUeDrPHSHesN1dxaFPr8fWDH15vZQzEzoEen2rowvH"
        ],
        "license": "Apache-2.0"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823",
        "urls": [
          "bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2",
          "dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778",
        "urls": [
          "bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1",
          "dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a",
        "urls": [
          "bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3",
          "dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961",
        "urls": [
          "bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e",
          "dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35"
        ],
        "license": "MIT"
      },
      "lib/prb-test/src/Helpers.sol": {
        "keccak256": "0x4ab5888920e97cb50dff6a7093fd01d830aa8b7f1e3d5313f73e46f812360705",
        "urls": [
          "bzz-raw://0ecaffd6d742a3c47c3785e9816d1d459d45cb6bf34a353884d333b87d52fa60",
          "dweb:/ipfs/QmYjsof64dPbxxw4i95S9bqDvTF4V2DA35bSwYAvXxxXYp"
        ],
        "license": "MIT"
      },
      "lib/prb-test/src/PRBTest.sol": {
        "keccak256": "0xed6d9f8c7fd5ca380a47a6de7c631d48a96cbc777632d030a52bf9216aea0bf1",
        "urls": [
          "bzz-raw://dcf663e0c2e2d3eabdaa1c9e7ff4df2a3b046e1279de1e0d2ce24a87a86e37fb",
          "dweb:/ipfs/QmRnar3CcN2JMYqrDYkUqEya6A3vBWUrD2HSL8aP7FC4vK"
        ],
        "license": "MIT"
      },
      "lib/prb-test/src/Vm.sol": {
        "keccak256": "0xecae57742478cd465460cc2ec5fd9174a41e5b93549c1d4456ff26cf97356fee",
        "urls": [
          "bzz-raw://fdf31f7f585bebfde82af93eb295e18196362704e69338e0626c2d8015d00e9d",
          "dweb:/ipfs/Qme1oLTN5CxRRiuVw48oN5buYotdaKNnio7a9W4hAus9Ry"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/test/towns/entitlements/EntitlementsSetup.sol",
    "id": 80751,
    "exportedSymbols": {
      "ChannelsHelper": [
        79751
      ],
      "Diamond": [
        6971
      ],
      "EntitlementsHelper": [
        80750
      ],
      "EntitlementsManager": [
        33441
      ],
      "EntitlementsSetup": [
        80617
      ],
      "FacetHelper": [
        44381
      ],
      "FacetTest": [
        44310
      ],
      "IDiamond": [
        6992
      ],
      "IEntitlementsManager": [
        34088
      ],
      "MockERC721": [
        53295
      ],
      "MockUserEntitlement": [
        54652
      ],
      "RolesHelper": [
        90166
      ],
      "TokenOwnableHelper": [
        49578
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3634:334",
    "nodes": [
      {
        "id": 80399,
        "nodeType": "PragmaDirective",
        "src": "39:24:334",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 80402,
        "nodeType": "ImportDirective",
        "src": "79:68:334",
        "nodes": [],
        "absolutePath": "contracts/src/diamond/Diamond.sol",
        "file": "contracts/src/diamond/Diamond.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80751,
        "sourceUnit": 6972,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80400,
              "name": "IDiamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6992,
              "src": "87:8:334",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 80401,
              "name": "Diamond",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6971,
              "src": "97:7:334",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80404,
        "nodeType": "ImportDirective",
        "src": "148:102:334",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/entitlements/IEntitlementsManager.sol",
        "file": "contracts/src/towns/facets/entitlements/IEntitlementsManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80751,
        "sourceUnit": 34089,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80403,
              "name": "IEntitlementsManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34088,
              "src": "156:20:334",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80407,
        "nodeType": "ImportDirective",
        "src": "279:74:334",
        "nodes": [],
        "absolutePath": "contracts/test/diamond/Facet.t.sol",
        "file": "contracts/test/diamond/Facet.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80751,
        "sourceUnit": 44382,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80405,
              "name": "FacetHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44381,
              "src": "287:11:334",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 80406,
              "name": "FacetTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44310,
              "src": "300:9:334",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80409,
        "nodeType": "ImportDirective",
        "src": "354:100:334",
        "nodes": [],
        "absolutePath": "contracts/src/towns/facets/entitlements/EntitlementsManager.sol",
        "file": "contracts/src/towns/facets/entitlements/EntitlementsManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80751,
        "sourceUnit": 33442,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80408,
              "name": "EntitlementsManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33441,
              "src": "362:19:334",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80411,
        "nodeType": "ImportDirective",
        "src": "467:94:334",
        "nodes": [],
        "absolutePath": "contracts/test/diamond/ownable/token/TokenOwnableSetup.sol",
        "file": "contracts/test/diamond/ownable/token/TokenOwnableSetup.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80751,
        "sourceUnit": 49579,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80410,
              "name": "TokenOwnableHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49578,
              "src": "475:18:334",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80413,
        "nodeType": "ImportDirective",
        "src": "562:79:334",
        "nodes": [],
        "absolutePath": "contracts/test/towns/channels/ChannelsSetup.sol",
        "file": "contracts/test/towns/channels/ChannelsSetup.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80751,
        "sourceUnit": 79752,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80412,
              "name": "ChannelsHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79751,
              "src": "570:14:334",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80415,
        "nodeType": "ImportDirective",
        "src": "642:70:334",
        "nodes": [],
        "absolutePath": "contracts/test/towns/roles/RolesSetup.sol",
        "file": "contracts/test/towns/roles/RolesSetup.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80751,
        "sourceUnit": 90167,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80414,
              "name": "RolesHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 90166,
              "src": "650:11:334",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80417,
        "nodeType": "ImportDirective",
        "src": "723:63:334",
        "nodes": [],
        "absolutePath": "contracts/test/mocks/MockERC721.sol",
        "file": "contracts/test/mocks/MockERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80751,
        "sourceUnit": 53296,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80416,
              "name": "MockERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53295,
              "src": "731:10:334",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80419,
        "nodeType": "ImportDirective",
        "src": "787:81:334",
        "nodes": [],
        "absolutePath": "contracts/test/mocks/MockUserEntitlement.sol",
        "file": "contracts/test/mocks/MockUserEntitlement.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80751,
        "sourceUnit": 54653,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80418,
              "name": "MockUserEntitlement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54652,
              "src": "795:19:334",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80617,
        "nodeType": "ContractDefinition",
        "src": "870:1679:334",
        "nodes": [
          {
            "id": 80424,
            "nodeType": "VariableDeclaration",
            "src": "923:41:334",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "entitlements",
            "nameLocation": "952:12:334",
            "scope": 80617,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
              "typeString": "contract EntitlementsManager"
            },
            "typeName": {
              "id": 80423,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80422,
                "name": "EntitlementsManager",
                "nameLocations": [
                  "923:19:334"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33441,
                "src": "923:19:334"
              },
              "referencedDeclaration": 33441,
              "src": "923:19:334",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                "typeString": "contract EntitlementsManager"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80427,
            "nodeType": "VariableDeclaration",
            "src": "968:25:334",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "988:5:334",
            "scope": 80617,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC721_$53295",
              "typeString": "contract MockERC721"
            },
            "typeName": {
              "id": 80426,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80425,
                "name": "MockERC721",
                "nameLocations": [
                  "968:10:334"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53295,
                "src": "968:10:334"
              },
              "referencedDeclaration": 53295,
              "src": "968:10:334",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC721_$53295",
                "typeString": "contract MockERC721"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80430,
            "nodeType": "VariableDeclaration",
            "src": "997:53:334",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mockImmutableEntitlement",
            "nameLocation": "1026:24:334",
            "scope": 80617,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
              "typeString": "contract MockUserEntitlement"
            },
            "typeName": {
              "id": 80429,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80428,
                "name": "MockUserEntitlement",
                "nameLocations": [
                  "997:19:334"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54652,
                "src": "997:19:334"
              },
              "referencedDeclaration": 54652,
              "src": "997:19:334",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
                "typeString": "contract MockUserEntitlement"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80433,
            "nodeType": "VariableDeclaration",
            "src": "1054:44:334",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mockEntitlement",
            "nameLocation": "1083:15:334",
            "scope": 80617,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
              "typeString": "contract MockUserEntitlement"
            },
            "typeName": {
              "id": 80432,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80431,
                "name": "MockUserEntitlement",
                "nameLocations": [
                  "1054:19:334"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54652,
                "src": "1054:19:334"
              },
              "referencedDeclaration": 54652,
              "src": "1054:19:334",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
                "typeString": "contract MockUserEntitlement"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80435,
            "nodeType": "VariableDeclaration",
            "src": "1103:24:334",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "founder",
            "nameLocation": "1120:7:334",
            "scope": 80617,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 80434,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1103:7:334",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80438,
            "nodeType": "VariableDeclaration",
            "src": "1131:40:334",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "immutableEntitlements",
            "nameLocation": "1150:21:334",
            "scope": 80617,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 80436,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1131:7:334",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 80437,
              "nodeType": "ArrayTypeName",
              "src": "1131:9:334",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80477,
            "nodeType": "FunctionDefinition",
            "src": "1176:280:334",
            "nodes": [],
            "body": {
              "id": 80476,
              "nodeType": "Block",
              "src": "1209:247:334",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 80442,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1215:5:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_EntitlementsSetup_$80617_$",
                          "typeString": "type(contract super EntitlementsSetup)"
                        }
                      },
                      "id": 80444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1221:5:334",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44303,
                      "src": "1215:11:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 80445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1215:13:334",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80446,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:13:334"
                },
                {
                  "expression": {
                    "id": 80451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80447,
                      "name": "entitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80424,
                      "src": "1234:12:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                        "typeString": "contract EntitlementsManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 80449,
                          "name": "diamond",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44276,
                          "src": "1269:7:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 80448,
                        "name": "EntitlementsManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33441,
                        "src": "1249:19:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EntitlementsManager_$33441_$",
                          "typeString": "type(contract EntitlementsManager)"
                        }
                      },
                      "id": 80450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1249:28:334",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                        "typeString": "contract EntitlementsManager"
                      }
                    },
                    "src": "1234:43:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                      "typeString": "contract EntitlementsManager"
                    }
                  },
                  "id": 80452,
                  "nodeType": "ExpressionStatement",
                  "src": "1234:43:334"
                },
                {
                  "expression": {
                    "id": 80458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80453,
                      "name": "mockImmutableEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80430,
                      "src": "1283:24:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
                        "typeString": "contract MockUserEntitlement"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1310:23:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockUserEntitlement_$54652_$",
                          "typeString": "function () returns (contract MockUserEntitlement)"
                        },
                        "typeName": {
                          "id": 80455,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80454,
                            "name": "MockUserEntitlement",
                            "nameLocations": [
                              "1314:19:334"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 54652,
                            "src": "1314:19:334"
                          },
                          "referencedDeclaration": 54652,
                          "src": "1314:19:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
                            "typeString": "contract MockUserEntitlement"
                          }
                        }
                      },
                      "id": 80457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1310:25:334",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
                        "typeString": "contract MockUserEntitlement"
                      }
                    },
                    "src": "1283:52:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
                      "typeString": "contract MockUserEntitlement"
                    }
                  },
                  "id": 80459,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:52:334"
                },
                {
                  "expression": {
                    "id": 80465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80460,
                      "name": "mockEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80433,
                      "src": "1341:15:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
                        "typeString": "contract MockUserEntitlement"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1359:23:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockUserEntitlement_$54652_$",
                          "typeString": "function () returns (contract MockUserEntitlement)"
                        },
                        "typeName": {
                          "id": 80462,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80461,
                            "name": "MockUserEntitlement",
                            "nameLocations": [
                              "1363:19:334"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 54652,
                            "src": "1363:19:334"
                          },
                          "referencedDeclaration": 54652,
                          "src": "1363:19:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
                            "typeString": "contract MockUserEntitlement"
                          }
                        }
                      },
                      "id": 80464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1359:25:334",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
                        "typeString": "contract MockUserEntitlement"
                      }
                    },
                    "src": "1341:43:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
                      "typeString": "contract MockUserEntitlement"
                    }
                  },
                  "id": 80466,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:43:334"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 80472,
                            "name": "mockImmutableEntitlement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80430,
                            "src": "1425:24:334",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
                              "typeString": "contract MockUserEntitlement"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockUserEntitlement_$54652",
                              "typeString": "contract MockUserEntitlement"
                            }
                          ],
                          "id": 80471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1417:7:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 80470,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1417:7:334",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 80473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1417:33:334",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80467,
                        "name": "immutableEntitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80438,
                        "src": "1390:21:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 80469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1412:4:334",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1390:26:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 80474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1390:61:334",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80475,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:61:334"
                }
              ]
            },
            "baseFunctions": [
              44303
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1185:5:334",
            "overrides": {
              "id": 80440,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1200:8:334"
            },
            "parameters": {
              "id": 80439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1190:2:334"
            },
            "returnParameters": {
              "id": 80441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1209:0:334"
            },
            "scope": 80617,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80616,
            "nodeType": "FunctionDefinition",
            "src": "1460:1087:334",
            "nodes": [],
            "body": {
              "id": 80615,
              "nodeType": "Block",
              "src": "1555:992:334",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80486,
                      "mutability": "mutable",
                      "name": "tokenOwnableHelper",
                      "nameLocation": "1580:18:334",
                      "nodeType": "VariableDeclaration",
                      "scope": 80615,
                      "src": "1561:37:334",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenOwnableHelper_$49578",
                        "typeString": "contract TokenOwnableHelper"
                      },
                      "typeName": {
                        "id": 80485,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80484,
                          "name": "TokenOwnableHelper",
                          "nameLocations": [
                            "1561:18:334"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49578,
                          "src": "1561:18:334"
                        },
                        "referencedDeclaration": 49578,
                        "src": "1561:18:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenOwnableHelper_$49578",
                          "typeString": "contract TokenOwnableHelper"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80491,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1601:22:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TokenOwnableHelper_$49578_$",
                        "typeString": "function () returns (contract TokenOwnableHelper)"
                      },
                      "typeName": {
                        "id": 80488,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80487,
                          "name": "TokenOwnableHelper",
                          "nameLocations": [
                            "1605:18:334"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49578,
                          "src": "1605:18:334"
                        },
                        "referencedDeclaration": 49578,
                        "src": "1605:18:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenOwnableHelper_$49578",
                          "typeString": "contract TokenOwnableHelper"
                        }
                      }
                    },
                    "id": 80490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1601:24:334",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenOwnableHelper_$49578",
                      "typeString": "contract TokenOwnableHelper"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1561:64:334"
                },
                {
                  "assignments": [
                    80494
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80494,
                      "mutability": "mutable",
                      "name": "channelsHelper",
                      "nameLocation": "1646:14:334",
                      "nodeType": "VariableDeclaration",
                      "scope": 80615,
                      "src": "1631:29:334",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ChannelsHelper_$79751",
                        "typeString": "contract ChannelsHelper"
                      },
                      "typeName": {
                        "id": 80493,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80492,
                          "name": "ChannelsHelper",
                          "nameLocations": [
                            "1631:14:334"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79751,
                          "src": "1631:14:334"
                        },
                        "referencedDeclaration": 79751,
                        "src": "1631:14:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChannelsHelper_$79751",
                          "typeString": "contract ChannelsHelper"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80499,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1663:18:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_ChannelsHelper_$79751_$",
                        "typeString": "function () returns (contract ChannelsHelper)"
                      },
                      "typeName": {
                        "id": 80496,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80495,
                          "name": "ChannelsHelper",
                          "nameLocations": [
                            "1667:14:334"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79751,
                          "src": "1667:14:334"
                        },
                        "referencedDeclaration": 79751,
                        "src": "1667:14:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ChannelsHelper_$79751",
                          "typeString": "contract ChannelsHelper"
                        }
                      }
                    },
                    "id": 80498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1663:20:334",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ChannelsHelper_$79751",
                      "typeString": "contract ChannelsHelper"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1631:52:334"
                },
                {
                  "assignments": [
                    80502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80502,
                      "mutability": "mutable",
                      "name": "rolesHelper",
                      "nameLocation": "1701:11:334",
                      "nodeType": "VariableDeclaration",
                      "scope": 80615,
                      "src": "1689:23:334",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RolesHelper_$90166",
                        "typeString": "contract RolesHelper"
                      },
                      "typeName": {
                        "id": 80501,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80500,
                          "name": "RolesHelper",
                          "nameLocations": [
                            "1689:11:334"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 90166,
                          "src": "1689:11:334"
                        },
                        "referencedDeclaration": 90166,
                        "src": "1689:11:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesHelper_$90166",
                          "typeString": "contract RolesHelper"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80507,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1715:15:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_RolesHelper_$90166_$",
                        "typeString": "function () returns (contract RolesHelper)"
                      },
                      "typeName": {
                        "id": 80504,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80503,
                          "name": "RolesHelper",
                          "nameLocations": [
                            "1719:11:334"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 90166,
                          "src": "1719:11:334"
                        },
                        "referencedDeclaration": 90166,
                        "src": "1719:11:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RolesHelper_$90166",
                          "typeString": "contract RolesHelper"
                        }
                      }
                    },
                    "id": 80506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1715:17:334",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RolesHelper_$90166",
                      "typeString": "contract RolesHelper"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1689:43:334"
                },
                {
                  "assignments": [
                    80510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80510,
                      "mutability": "mutable",
                      "name": "entitlementsHelper",
                      "nameLocation": "1757:18:334",
                      "nodeType": "VariableDeclaration",
                      "scope": 80615,
                      "src": "1738:37:334",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EntitlementsHelper_$80750",
                        "typeString": "contract EntitlementsHelper"
                      },
                      "typeName": {
                        "id": 80509,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80508,
                          "name": "EntitlementsHelper",
                          "nameLocations": [
                            "1738:18:334"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 80750,
                          "src": "1738:18:334"
                        },
                        "referencedDeclaration": 80750,
                        "src": "1738:18:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EntitlementsHelper_$80750",
                          "typeString": "contract EntitlementsHelper"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80515,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 80513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1778:22:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_EntitlementsHelper_$80750_$",
                        "typeString": "function () returns (contract EntitlementsHelper)"
                      },
                      "typeName": {
                        "id": 80512,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80511,
                          "name": "EntitlementsHelper",
                          "nameLocations": [
                            "1782:18:334"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 80750,
                          "src": "1782:18:334"
                        },
                        "referencedDeclaration": 80750,
                        "src": "1782:18:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EntitlementsHelper_$80750",
                          "typeString": "contract EntitlementsHelper"
                        }
                      }
                    },
                    "id": 80514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1778:24:334",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EntitlementsHelper_$80750",
                      "typeString": "contract EntitlementsHelper"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1738:64:334"
                },
                {
                  "expression": {
                    "id": 80521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80516,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80427,
                      "src": "1809:5:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC721_$53295",
                        "typeString": "contract MockERC721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1817:14:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC721_$53295_$",
                          "typeString": "function () returns (contract MockERC721)"
                        },
                        "typeName": {
                          "id": 80518,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80517,
                            "name": "MockERC721",
                            "nameLocations": [
                              "1821:10:334"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 53295,
                            "src": "1821:10:334"
                          },
                          "referencedDeclaration": 53295,
                          "src": "1821:10:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC721_$53295",
                            "typeString": "contract MockERC721"
                          }
                        }
                      },
                      "id": 80520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1817:16:334",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC721_$53295",
                        "typeString": "contract MockERC721"
                      }
                    },
                    "src": "1809:24:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC721_$53295",
                      "typeString": "contract MockERC721"
                    }
                  },
                  "id": 80522,
                  "nodeType": "ExpressionStatement",
                  "src": "1809:24:334"
                },
                {
                  "assignments": [
                    80524
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80524,
                      "mutability": "mutable",
                      "name": "cutCount",
                      "nameLocation": "1848:8:334",
                      "nodeType": "VariableDeclaration",
                      "scope": 80615,
                      "src": "1840:16:334",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80523,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1840:7:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80526,
                  "initialValue": {
                    "hexValue": "34",
                    "id": 80525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1859:1:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    },
                    "value": "4"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1840:20:334"
                },
                {
                  "assignments": [
                    80532
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80532,
                      "mutability": "mutable",
                      "name": "cuts",
                      "nameLocation": "1894:4:334",
                      "nodeType": "VariableDeclaration",
                      "scope": 80615,
                      "src": "1867:31:334",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FacetCut_$6991_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80530,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80529,
                            "name": "IDiamond.FacetCut",
                            "nameLocations": [
                              "1867:8:334",
                              "1876:8:334"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6991,
                            "src": "1867:17:334"
                          },
                          "referencedDeclaration": 6991,
                          "src": "1867:17:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$6991_storage_ptr",
                            "typeString": "struct IDiamond.FacetCut"
                          }
                        },
                        "id": 80531,
                        "nodeType": "ArrayTypeName",
                        "src": "1867:19:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6991_storage_$dyn_storage_ptr",
                          "typeString": "struct IDiamond.FacetCut[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80539,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80537,
                        "name": "cutCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80524,
                        "src": "1925:8:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1901:23:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FacetCut_$6991_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct IDiamond.FacetCut memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80534,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80533,
                            "name": "IDiamond.FacetCut",
                            "nameLocations": [
                              "1905:8:334",
                              "1914:8:334"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 6991,
                            "src": "1905:17:334"
                          },
                          "referencedDeclaration": 6991,
                          "src": "1905:17:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FacetCut_$6991_storage_ptr",
                            "typeString": "struct IDiamond.FacetCut"
                          }
                        },
                        "id": 80535,
                        "nodeType": "ArrayTypeName",
                        "src": "1905:19:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6991_storage_$dyn_storage_ptr",
                          "typeString": "struct IDiamond.FacetCut[]"
                        }
                      }
                    },
                    "id": 80538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1901:33:334",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_FacetCut_$6991_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct IDiamond.FacetCut memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1867:67:334"
                },
                {
                  "expression": {
                    "id": 80549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80540,
                        "name": "cuts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80532,
                        "src": "1940:4:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6991_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        }
                      },
                      "id": 80542,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 80541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1945:1:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1940:7:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6991_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 80545,
                              "name": "IDiamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6992,
                              "src": "1977:8:334",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamond_$6992_$",
                                "typeString": "type(contract IDiamond)"
                              }
                            },
                            "id": 80546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1986:14:334",
                            "memberName": "FacetCutAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6981,
                            "src": "1977:23:334",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$6981_$",
                              "typeString": "type(enum IDiamond.FacetCutAction)"
                            }
                          },
                          "id": 80547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2001:3:334",
                          "memberName": "Add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6978,
                          "src": "1977:27:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6981",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6981",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        ],
                        "expression": {
                          "id": 80543,
                          "name": "tokenOwnableHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80486,
                          "src": "1950:18:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenOwnableHelper_$49578",
                            "typeString": "contract TokenOwnableHelper"
                          }
                        },
                        "id": 80544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1969:7:334",
                        "memberName": "makeCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44347,
                        "src": "1950:26:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_enum$_FacetCutAction_$6981_$returns$_t_struct$_FacetCut_$6991_memory_ptr_$",
                          "typeString": "function (enum IDiamond.FacetCutAction) external returns (struct IDiamond.FacetCut memory)"
                        }
                      },
                      "id": 80548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1950:55:334",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6991_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "src": "1940:65:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$6991_memory_ptr",
                      "typeString": "struct IDiamond.FacetCut memory"
                    }
                  },
                  "id": 80550,
                  "nodeType": "ExpressionStatement",
                  "src": "1940:65:334"
                },
                {
                  "expression": {
                    "id": 80560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80551,
                        "name": "cuts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80532,
                        "src": "2011:4:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6991_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        }
                      },
                      "id": 80553,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 80552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2016:1:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2011:7:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6991_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 80556,
                              "name": "IDiamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6992,
                              "src": "2044:8:334",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamond_$6992_$",
                                "typeString": "type(contract IDiamond)"
                              }
                            },
                            "id": 80557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2053:14:334",
                            "memberName": "FacetCutAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6981,
                            "src": "2044:23:334",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$6981_$",
                              "typeString": "type(enum IDiamond.FacetCutAction)"
                            }
                          },
                          "id": 80558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2068:3:334",
                          "memberName": "Add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6978,
                          "src": "2044:27:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6981",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6981",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        ],
                        "expression": {
                          "id": 80554,
                          "name": "channelsHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80494,
                          "src": "2021:14:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ChannelsHelper_$79751",
                            "typeString": "contract ChannelsHelper"
                          }
                        },
                        "id": 80555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2036:7:334",
                        "memberName": "makeCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44347,
                        "src": "2021:22:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_enum$_FacetCutAction_$6981_$returns$_t_struct$_FacetCut_$6991_memory_ptr_$",
                          "typeString": "function (enum IDiamond.FacetCutAction) external returns (struct IDiamond.FacetCut memory)"
                        }
                      },
                      "id": 80559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2021:51:334",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6991_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "src": "2011:61:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$6991_memory_ptr",
                      "typeString": "struct IDiamond.FacetCut memory"
                    }
                  },
                  "id": 80561,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:61:334"
                },
                {
                  "expression": {
                    "id": 80571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80562,
                        "name": "cuts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80532,
                        "src": "2078:4:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6991_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        }
                      },
                      "id": 80564,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 80563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2083:1:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2078:7:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6991_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 80567,
                              "name": "IDiamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6992,
                              "src": "2108:8:334",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamond_$6992_$",
                                "typeString": "type(contract IDiamond)"
                              }
                            },
                            "id": 80568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2117:14:334",
                            "memberName": "FacetCutAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6981,
                            "src": "2108:23:334",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$6981_$",
                              "typeString": "type(enum IDiamond.FacetCutAction)"
                            }
                          },
                          "id": 80569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2132:3:334",
                          "memberName": "Add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6978,
                          "src": "2108:27:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6981",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6981",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        ],
                        "expression": {
                          "id": 80565,
                          "name": "rolesHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80502,
                          "src": "2088:11:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_RolesHelper_$90166",
                            "typeString": "contract RolesHelper"
                          }
                        },
                        "id": 80566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2100:7:334",
                        "memberName": "makeCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44347,
                        "src": "2088:19:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_enum$_FacetCutAction_$6981_$returns$_t_struct$_FacetCut_$6991_memory_ptr_$",
                          "typeString": "function (enum IDiamond.FacetCutAction) external returns (struct IDiamond.FacetCut memory)"
                        }
                      },
                      "id": 80570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2088:48:334",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6991_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "src": "2078:58:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$6991_memory_ptr",
                      "typeString": "struct IDiamond.FacetCut memory"
                    }
                  },
                  "id": 80572,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:58:334"
                },
                {
                  "expression": {
                    "id": 80582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80573,
                        "name": "cuts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80532,
                        "src": "2142:4:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6991_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        }
                      },
                      "id": 80575,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 80574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2147:1:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2142:7:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6991_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 80578,
                              "name": "IDiamond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6992,
                              "src": "2179:8:334",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDiamond_$6992_$",
                                "typeString": "type(contract IDiamond)"
                              }
                            },
                            "id": 80579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2188:14:334",
                            "memberName": "FacetCutAction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6981,
                            "src": "2179:23:334",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_FacetCutAction_$6981_$",
                              "typeString": "type(enum IDiamond.FacetCutAction)"
                            }
                          },
                          "id": 80580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2203:3:334",
                          "memberName": "Add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6978,
                          "src": "2179:27:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6981",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_FacetCutAction_$6981",
                            "typeString": "enum IDiamond.FacetCutAction"
                          }
                        ],
                        "expression": {
                          "id": 80576,
                          "name": "entitlementsHelper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80510,
                          "src": "2152:18:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EntitlementsHelper_$80750",
                            "typeString": "contract EntitlementsHelper"
                          }
                        },
                        "id": 80577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2171:7:334",
                        "memberName": "makeCut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 44347,
                        "src": "2152:26:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_enum$_FacetCutAction_$6981_$returns$_t_struct$_FacetCut_$6991_memory_ptr_$",
                          "typeString": "function (enum IDiamond.FacetCutAction) external returns (struct IDiamond.FacetCut memory)"
                        }
                      },
                      "id": 80581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2152:55:334",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FacetCut_$6991_memory_ptr",
                        "typeString": "struct IDiamond.FacetCut memory"
                      }
                    },
                    "src": "2142:65:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FacetCut_$6991_memory_ptr",
                      "typeString": "struct IDiamond.FacetCut memory"
                    }
                  },
                  "id": 80583,
                  "nodeType": "ExpressionStatement",
                  "src": "2142:65:334"
                },
                {
                  "expression": {
                    "id": 80587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80584,
                      "name": "founder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80435,
                      "src": "2214:7:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80585,
                        "name": "_randomAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91096,
                        "src": "2224:14:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                          "typeString": "function () view returns (address payable)"
                        }
                      },
                      "id": 80586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2224:16:334",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2214:26:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 80588,
                  "nodeType": "ExpressionStatement",
                  "src": "2214:26:334"
                },
                {
                  "assignments": [
                    80590
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80590,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "2254:7:334",
                      "nodeType": "VariableDeclaration",
                      "scope": 80615,
                      "src": "2246:15:334",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80589,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2246:7:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80595,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80593,
                        "name": "founder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80435,
                        "src": "2277:7:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 80591,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80427,
                        "src": "2264:5:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC721_$53295",
                          "typeString": "contract MockERC721"
                        }
                      },
                      "id": 80592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2270:6:334",
                      "memberName": "mintTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53256,
                      "src": "2264:12:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256)"
                      }
                    },
                    "id": 80594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2264:21:334",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2246:39:334"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80598,
                        "name": "cuts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80532,
                        "src": "2346:4:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6991_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 80599,
                            "name": "tokenOwnableHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80486,
                            "src": "2366:18:334",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenOwnableHelper_$49578",
                              "typeString": "contract TokenOwnableHelper"
                            }
                          },
                          "id": 80600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2385:5:334",
                          "memberName": "facet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49529,
                          "src": "2366:24:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 80601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2366:26:334",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 80604,
                                "name": "tokenOwnableHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80486,
                                "src": "2446:18:334",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenOwnableHelper_$49578",
                                  "typeString": "contract TokenOwnableHelper"
                                }
                              },
                              "id": 80605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2465:11:334",
                              "memberName": "initializer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 49577,
                              "src": "2446:30:334",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_pure$__$returns$_t_bytes4_$",
                                "typeString": "function () pure external returns (bytes4)"
                              }
                            },
                            "id": 80606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2446:32:334",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 80609,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80427,
                                "src": "2498:5:334",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockERC721_$53295",
                                  "typeString": "contract MockERC721"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockERC721_$53295",
                                  "typeString": "contract MockERC721"
                                }
                              ],
                              "id": 80608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2490:7:334",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 80607,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2490:7:334",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 80610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2490:14:334",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 80611,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80590,
                            "src": "2516:7:334",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 80602,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2412:3:334",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 80603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2416:18:334",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "2412:22:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 80612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2412:121:334",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_FacetCut_$6991_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct IDiamond.FacetCut memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 80596,
                        "name": "Diamond",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6971,
                        "src": "2305:7:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Diamond_$6971_$",
                          "typeString": "type(contract Diamond)"
                        }
                      },
                      "id": 80597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2313:10:334",
                      "memberName": "InitParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6924,
                      "src": "2305:18:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_InitParams_$6924_storage_ptr_$",
                        "typeString": "type(struct Diamond.InitParams storage pointer)"
                      }
                    },
                    "id": 80613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "2334:10:334",
                      "2360:4:334",
                      "2402:8:334"
                    ],
                    "names": [
                      "baseFacets",
                      "init",
                      "initData"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2305:237:334",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InitParams_$6924_memory_ptr",
                      "typeString": "struct Diamond.InitParams memory"
                    }
                  },
                  "functionReturnParameters": 80483,
                  "id": 80614,
                  "nodeType": "Return",
                  "src": "2292:250:334"
                }
              ]
            },
            "baseFunctions": [
              44309
            ],
            "functionSelector": "77bd3cc0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "diamondInitParams",
            "nameLocation": "1469:17:334",
            "overrides": {
              "id": 80479,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1504:8:334"
            },
            "parameters": {
              "id": 80478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1486:2:334"
            },
            "returnParameters": {
              "id": 80483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80482,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80616,
                  "src": "1526:25:334",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InitParams_$6924_memory_ptr",
                    "typeString": "struct Diamond.InitParams"
                  },
                  "typeName": {
                    "id": 80481,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 80480,
                      "name": "Diamond.InitParams",
                      "nameLocations": [
                        "1526:7:334",
                        "1534:10:334"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6924,
                      "src": "1526:18:334"
                    },
                    "referencedDeclaration": 6924,
                    "src": "1526:18:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InitParams_$6924_storage_ptr",
                      "typeString": "struct Diamond.InitParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1525:27:334"
            },
            "scope": 80617,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 80420,
              "name": "FacetTest",
              "nameLocations": [
                "909:9:334"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44310,
              "src": "909:9:334"
            },
            "id": 80421,
            "nodeType": "InheritanceSpecifier",
            "src": "909:9:334"
          }
        ],
        "canonicalName": "EntitlementsSetup",
        "contractDependencies": [
          6971,
          49578,
          53295,
          54652,
          79751,
          80750,
          90166
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          80617,
          44310,
          91266,
          100439,
          99760,
          136790,
          6992
        ],
        "name": "EntitlementsSetup",
        "nameLocation": "888:17:334",
        "scope": 80751,
        "usedErrors": [
          6976
        ],
        "usedEvents": [
          133823,
          133827,
          133832,
          133837,
          133842,
          133847,
          133852,
          133857,
          133861,
          133865,
          133869,
          133873,
          133877,
          133883,
          133890,
          133897,
          133904,
          133911,
          133918,
          133925,
          133931,
          133937,
          133943,
          133949,
          133955
        ]
      },
      {
        "id": 80750,
        "nodeType": "ContractDefinition",
        "src": "2551:1121:334",
        "nodes": [
          {
            "id": 80622,
            "nodeType": "VariableDeclaration",
            "src": "2598:41:334",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "entitlements",
            "nameLocation": "2627:12:334",
            "scope": 80750,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
              "typeString": "contract EntitlementsManager"
            },
            "typeName": {
              "id": 80621,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 80620,
                "name": "EntitlementsManager",
                "nameLocations": [
                  "2598:19:334"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33441,
                "src": "2598:19:334"
              },
              "referencedDeclaration": 33441,
              "src": "2598:19:334",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                "typeString": "contract EntitlementsManager"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 80633,
            "nodeType": "FunctionDefinition",
            "src": "2644:65:334",
            "nodes": [],
            "body": {
              "id": 80632,
              "nodeType": "Block",
              "src": "2658:51:334",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 80630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80625,
                      "name": "entitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80622,
                      "src": "2664:12:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                        "typeString": "contract EntitlementsManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2679:23:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_EntitlementsManager_$33441_$",
                          "typeString": "function () returns (contract EntitlementsManager)"
                        },
                        "typeName": {
                          "id": 80627,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80626,
                            "name": "EntitlementsManager",
                            "nameLocations": [
                              "2683:19:334"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 33441,
                            "src": "2683:19:334"
                          },
                          "referencedDeclaration": 33441,
                          "src": "2683:19:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                            "typeString": "contract EntitlementsManager"
                          }
                        }
                      },
                      "id": 80629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2679:25:334",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                        "typeString": "contract EntitlementsManager"
                      }
                    },
                    "src": "2664:40:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                      "typeString": "contract EntitlementsManager"
                    }
                  },
                  "id": 80631,
                  "nodeType": "ExpressionStatement",
                  "src": "2664:40:334"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 80623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2655:2:334"
            },
            "returnParameters": {
              "id": 80624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2658:0:334"
            },
            "scope": 80750,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80651,
            "nodeType": "FunctionDefinition",
            "src": "2713:128:334",
            "nodes": [],
            "body": {
              "id": 80650,
              "nodeType": "Block",
              "src": "2756:85:334",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 80643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80638,
                      "name": "entitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80622,
                      "src": "2762:12:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                        "typeString": "contract EntitlementsManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 80641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2777:23:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_EntitlementsManager_$33441_$",
                          "typeString": "function () returns (contract EntitlementsManager)"
                        },
                        "typeName": {
                          "id": 80640,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 80639,
                            "name": "EntitlementsManager",
                            "nameLocations": [
                              "2781:19:334"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 33441,
                            "src": "2781:19:334"
                          },
                          "referencedDeclaration": 33441,
                          "src": "2781:19:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                            "typeString": "contract EntitlementsManager"
                          }
                        }
                      },
                      "id": 80642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2777:25:334",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                        "typeString": "contract EntitlementsManager"
                      }
                    },
                    "src": "2762:40:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                      "typeString": "contract EntitlementsManager"
                    }
                  },
                  "id": 80644,
                  "nodeType": "ExpressionStatement",
                  "src": "2762:40:334"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80647,
                        "name": "entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80622,
                        "src": "2823:12:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                          "typeString": "contract EntitlementsManager"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                          "typeString": "contract EntitlementsManager"
                        }
                      ],
                      "id": 80646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2815:7:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 80645,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2815:7:334",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 80648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2815:21:334",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 80637,
                  "id": 80649,
                  "nodeType": "Return",
                  "src": "2808:28:334"
                }
              ]
            },
            "functionSelector": "775c300c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploy",
            "nameLocation": "2722:6:334",
            "parameters": {
              "id": 80634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2728:2:334"
            },
            "returnParameters": {
              "id": 80637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80636,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80651,
                  "src": "2747:7:334",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80635,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:334",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2746:9:334"
            },
            "scope": 80750,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80663,
            "nodeType": "FunctionDefinition",
            "src": "2845:95:334",
            "nodes": [],
            "body": {
              "id": 80662,
              "nodeType": "Block",
              "src": "2901:39:334",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80659,
                        "name": "entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80622,
                        "src": "2922:12:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                          "typeString": "contract EntitlementsManager"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_EntitlementsManager_$33441",
                          "typeString": "contract EntitlementsManager"
                        }
                      ],
                      "id": 80658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2914:7:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 80657,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2914:7:334",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 80660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2914:21:334",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 80656,
                  "id": 80661,
                  "nodeType": "Return",
                  "src": "2907:28:334"
                }
              ]
            },
            "baseFunctions": [
              44318
            ],
            "functionSelector": "b6010cab",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "facet",
            "nameLocation": "2854:5:334",
            "overrides": {
              "id": 80653,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2874:8:334"
            },
            "parameters": {
              "id": 80652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2859:2:334"
            },
            "returnParameters": {
              "id": 80656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80655,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80663,
                  "src": "2892:7:334",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2892:7:334",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2891:9:334"
            },
            "scope": 80750,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80740,
            "nodeType": "FunctionDefinition",
            "src": "2944:641:334",
            "nodes": [],
            "body": {
              "id": 80739,
              "nodeType": "Block",
              "src": "3012:573:334",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80674,
                      "mutability": "mutable",
                      "name": "selectors_",
                      "nameLocation": "3034:10:334",
                      "nodeType": "VariableDeclaration",
                      "scope": 80739,
                      "src": "3018:26:334",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                        "typeString": "bytes4[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80672,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "3018:6:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 80673,
                        "nodeType": "ArrayTypeName",
                        "src": "3018:8:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80680,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "37",
                        "id": 80678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3060:1:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        }
                      ],
                      "id": 80677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3047:12:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes4[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 80675,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "3051:6:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 80676,
                        "nodeType": "ArrayTypeName",
                        "src": "3051:8:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      }
                    },
                    "id": 80679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3047:15:334",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3018:44:334"
                },
                {
                  "expression": {
                    "id": 80687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80681,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80674,
                        "src": "3068:10:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 80683,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 80682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3079:1:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3068:13:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80684,
                          "name": "IEntitlementsManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34088,
                          "src": "3084:20:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlementsManager_$34088_$",
                            "typeString": "type(contract IEntitlementsManager)"
                          }
                        },
                        "id": 80685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3105:24:334",
                        "memberName": "addImmutableEntitlements",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34036,
                        "src": "3084:45:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                          "typeString": "function IEntitlementsManager.addImmutableEntitlements(address[] memory)"
                        }
                      },
                      "id": 80686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3130:8:334",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3084:54:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3068:70:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 80688,
                  "nodeType": "ExpressionStatement",
                  "src": "3068:70:334"
                },
                {
                  "expression": {
                    "id": 80695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80689,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80674,
                        "src": "3144:10:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 80691,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 80690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3155:1:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3144:13:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80692,
                          "name": "IEntitlementsManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34088,
                          "src": "3160:20:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlementsManager_$34088_$",
                            "typeString": "type(contract IEntitlementsManager)"
                          }
                        },
                        "id": 80693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3181:16:334",
                        "memberName": "isEntitledToTown",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34046,
                        "src": "3160:37:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_view$_t_address_$_t_string_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function IEntitlementsManager.isEntitledToTown(address,string calldata) view returns (bool)"
                        }
                      },
                      "id": 80694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3198:8:334",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3160:46:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3144:62:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 80696,
                  "nodeType": "ExpressionStatement",
                  "src": "3144:62:334"
                },
                {
                  "expression": {
                    "id": 80703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80697,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80674,
                        "src": "3212:10:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 80699,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 80698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3223:1:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3212:13:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80700,
                          "name": "IEntitlementsManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34088,
                          "src": "3228:20:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlementsManager_$34088_$",
                            "typeString": "type(contract IEntitlementsManager)"
                          }
                        },
                        "id": 80701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3249:19:334",
                        "memberName": "isEntitledToChannel",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34058,
                        "src": "3228:40:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_view$_t_string_calldata_ptr_$_t_address_$_t_string_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function IEntitlementsManager.isEntitledToChannel(string calldata,address,string calldata) view returns (bool)"
                        }
                      },
                      "id": 80702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3269:8:334",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3228:49:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3212:65:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 80704,
                  "nodeType": "ExpressionStatement",
                  "src": "3212:65:334"
                },
                {
                  "expression": {
                    "id": 80711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80705,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80674,
                        "src": "3283:10:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 80707,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 80706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3294:1:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3283:13:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80708,
                          "name": "IEntitlementsManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34088,
                          "src": "3299:20:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlementsManager_$34088_$",
                            "typeString": "type(contract IEntitlementsManager)"
                          }
                        },
                        "id": 80709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3320:20:334",
                        "memberName": "addEntitlementModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34064,
                        "src": "3299:41:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                          "typeString": "function IEntitlementsManager.addEntitlementModule(address)"
                        }
                      },
                      "id": 80710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3341:8:334",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3299:50:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3283:66:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 80712,
                  "nodeType": "ExpressionStatement",
                  "src": "3283:66:334"
                },
                {
                  "expression": {
                    "id": 80719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80713,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80674,
                        "src": "3355:10:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 80715,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 80714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3366:1:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3355:13:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80716,
                          "name": "IEntitlementsManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34088,
                          "src": "3371:20:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlementsManager_$34088_$",
                            "typeString": "type(contract IEntitlementsManager)"
                          }
                        },
                        "id": 80717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3392:23:334",
                        "memberName": "removeEntitlementModule",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34070,
                        "src": "3371:44:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                          "typeString": "function IEntitlementsManager.removeEntitlementModule(address)"
                        }
                      },
                      "id": 80718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3416:8:334",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3371:53:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3355:69:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 80720,
                  "nodeType": "ExpressionStatement",
                  "src": "3355:69:334"
                },
                {
                  "expression": {
                    "id": 80727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80721,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80674,
                        "src": "3430:10:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 80723,
                      "indexExpression": {
                        "hexValue": "35",
                        "id": 80722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3441:1:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3430:13:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80724,
                          "name": "IEntitlementsManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34088,
                          "src": "3446:20:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlementsManager_$34088_$",
                            "typeString": "type(contract IEntitlementsManager)"
                          }
                        },
                        "id": 80725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3467:14:334",
                        "memberName": "getEntitlement",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34079,
                        "src": "3446:35:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_struct$_Entitlement_$34026_memory_ptr_$",
                          "typeString": "function IEntitlementsManager.getEntitlement(address) view returns (struct IEntitlementsManagerBase.Entitlement memory)"
                        }
                      },
                      "id": 80726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3482:8:334",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3446:44:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3430:60:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 80728,
                  "nodeType": "ExpressionStatement",
                  "src": "3430:60:334"
                },
                {
                  "expression": {
                    "id": 80735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80729,
                        "name": "selectors_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80674,
                        "src": "3496:10:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 80731,
                      "indexExpression": {
                        "hexValue": "36",
                        "id": 80730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3507:1:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3496:13:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80732,
                          "name": "IEntitlementsManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34088,
                          "src": "3512:20:334",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IEntitlementsManager_$34088_$",
                            "typeString": "type(contract IEntitlementsManager)"
                          }
                        },
                        "id": 80733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3533:15:334",
                        "memberName": "getEntitlements",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34087,
                        "src": "3512:36:334",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_view$__$returns$_t_array$_t_struct$_Entitlement_$34026_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function IEntitlementsManager.getEntitlements() view returns (struct IEntitlementsManagerBase.Entitlement memory[] memory)"
                        }
                      },
                      "id": 80734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3549:8:334",
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "3512:45:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "3496:61:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 80736,
                  "nodeType": "ExpressionStatement",
                  "src": "3496:61:334"
                },
                {
                  "expression": {
                    "id": 80737,
                    "name": "selectors_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80674,
                    "src": "3570:10:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "functionReturnParameters": 80669,
                  "id": 80738,
                  "nodeType": "Return",
                  "src": "3563:17:334"
                }
              ]
            },
            "baseFunctions": [
              44324
            ],
            "functionSelector": "6e25b978",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selectors",
            "nameLocation": "2953:9:334",
            "overrides": {
              "id": 80665,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2977:8:334"
            },
            "parameters": {
              "id": 80664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2962:2:334"
            },
            "returnParameters": {
              "id": 80669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80668,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80740,
                  "src": "2995:15:334",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 80666,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "2995:6:334",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 80667,
                    "nodeType": "ArrayTypeName",
                    "src": "2995:8:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2994:17:334"
            },
            "scope": 80750,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80749,
            "nodeType": "FunctionDefinition",
            "src": "3589:81:334",
            "nodes": [],
            "body": {
              "id": 80748,
              "nodeType": "Block",
              "src": "3650:20:334",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 80746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3663:2:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 80745,
                  "id": 80747,
                  "nodeType": "Return",
                  "src": "3656:9:334"
                }
              ]
            },
            "baseFunctions": [
              44329
            ],
            "functionSelector": "9ce110d7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializer",
            "nameLocation": "3598:11:334",
            "overrides": {
              "id": 80742,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3624:8:334"
            },
            "parameters": {
              "id": 80741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3609:2:334"
            },
            "returnParameters": {
              "id": 80745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80744,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80749,
                  "src": "3642:6:334",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 80743,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3642:6:334",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3641:8:334"
            },
            "scope": 80750,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 80618,
              "name": "FacetHelper",
              "nameLocations": [
                "2582:11:334"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44381,
              "src": "2582:11:334"
            },
            "id": 80619,
            "nodeType": "InheritanceSpecifier",
            "src": "2582:11:334"
          }
        ],
        "canonicalName": "EntitlementsHelper",
        "contractDependencies": [
          33441
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          80750,
          44381,
          6992
        ],
        "name": "EntitlementsHelper",
        "nameLocation": "2560:18:334",
        "scope": 80751,
        "usedErrors": [
          6976
        ],
        "usedEvents": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 334
}
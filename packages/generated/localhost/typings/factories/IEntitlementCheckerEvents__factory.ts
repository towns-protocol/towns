/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IEntitlementCheckerEvents,
  IEntitlementCheckerEventsInterface,
} from "../IEntitlementCheckerEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "callerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "selectedNodes",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "EntitlementCheckRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum IEntitlementCheckerEvents.NodeVoteStatus",
        name: "result",
        type: "uint8",
      },
    ],
    name: "EntitlementCheckResultPosted",
    type: "event",
  },
] as const;

export class IEntitlementCheckerEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IEntitlementCheckerEventsInterface {
    return new utils.Interface(_abi) as IEntitlementCheckerEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEntitlementCheckerEvents {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IEntitlementCheckerEvents;
  }
}

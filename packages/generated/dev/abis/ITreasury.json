{"abi":[{"type":"function","name":"onERC1155BatchReceived","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"values","type":"uint256[]","internalType":"uint256[]"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"onERC1155Received","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"onERC721Received","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"withdraw","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","withdraw(address)":"51cff8d9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Implements the IERC1155Receiver interface to safely receive multiple ERC1155 tokens\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the tokens\",\"ids\":\"An array containing ids of each token being transferred\",\"operator\":\"The address which called the `safeBatchTransferFrom` function\",\"values\":\"An array containing amounts of each token being transferred\"},\"returns\":{\"_0\":\"bytes4 `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Implements the IERC1155Receiver interface to safely receive ERC1155 tokens\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which called the `safeTransferFrom` function\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"bytes4 `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Implements the IERC721Receiver interface to safely receive ERC721 tokens\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"operator\":\"The address which called `safeTransferFrom` function\",\"tokenId\":\"The NFT identifier which is being transferred\"},\"returns\":{\"_0\":\"bytes4 `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\"}},\"withdraw(address)\":{\"details\":\"Can only be called by the owner of the contract. Will revert if account is zero address or if balance is 0\",\"params\":{\"account\":\"The address to withdraw funds to\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Handle the receipt of multiple ERC1155 tokens\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"notice\":\"Handle the receipt of a single ERC1155 token\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of a single ERC721 token\"},\"withdraw(address)\":{\"notice\":\"Withdraw funds from the treasury to a specified account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/spaces/facets/treasury/ITreasury.sol\":\"ITreasury\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":4194303},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@prb/math/=node_modules/@prb/math/src/\",\":@prb/test/=node_modules/@prb/test/src/\",\":@solidity/=node_modules/crypto-lib/src/\",\":@towns-protocol/diamond/=node_modules/@towns-protocol/diamond/\",\":account-abstraction/=node_modules/account-abstraction/contracts/\",\":crypto-lib/=node_modules/crypto-lib/src/\",\":forge-std/=node_modules/forge-std/src/\",\":hardhat-deploy/=node_modules/account-abstraction/node_modules/hardhat-deploy/\",\":solady/=node_modules/solady/src/\"]},\"sources\":{\"src/spaces/facets/treasury/ITreasury.sol\":{\"keccak256\":\"0x0e64aaeca2531a5d257fde19402aea968f8dbf1b5eec98a9722fb304a7becd94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb40b3b3ce67fb97584d35af0f85a151114c5ddee881608fd71decf1d756cff9\",\"dweb:/ipfs/QmWrbLTDL6xHppQQFWNru87uoTbjCdGiZmaviZ178hcBmK\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.29+commit.ab55807c"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdraw"}],"devdoc":{"kind":"dev","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"details":"Implements the IERC1155Receiver interface to safely receive multiple ERC1155 tokens","params":{"data":"Additional data with no specified format","from":"The address which previously owned the tokens","ids":"An array containing ids of each token being transferred","operator":"The address which called the `safeBatchTransferFrom` function","values":"An array containing amounts of each token being transferred"},"returns":{"_0":"bytes4 `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`"}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Implements the IERC1155Receiver interface to safely receive ERC1155 tokens","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","id":"The ID of the token being transferred","operator":"The address which called the `safeTransferFrom` function","value":"The amount of tokens being transferred"},"returns":{"_0":"bytes4 `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`"}},"onERC721Received(address,address,uint256,bytes)":{"details":"Implements the IERC721Receiver interface to safely receive ERC721 tokens","params":{"data":"Additional data with no specified format","from":"The address which previously owned the token","operator":"The address which called `safeTransferFrom` function","tokenId":"The NFT identifier which is being transferred"},"returns":{"_0":"bytes4 `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`"}},"withdraw(address)":{"details":"Can only be called by the owner of the contract. Will revert if account is zero address or if balance is 0","params":{"account":"The address to withdraw funds to"}}},"version":1},"userdoc":{"kind":"user","methods":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":{"notice":"Handle the receipt of multiple ERC1155 tokens"},"onERC1155Received(address,address,uint256,uint256,bytes)":{"notice":"Handle the receipt of a single ERC1155 token"},"onERC721Received(address,address,uint256,bytes)":{"notice":"Handle the receipt of a single ERC721 token"},"withdraw(address)":{"notice":"Withdraw funds from the treasury to a specified account"}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","@prb/math/=node_modules/@prb/math/src/","@prb/test/=node_modules/@prb/test/src/","@solidity/=node_modules/crypto-lib/src/","@towns-protocol/diamond/=node_modules/@towns-protocol/diamond/","account-abstraction/=node_modules/account-abstraction/contracts/","crypto-lib/=node_modules/crypto-lib/src/","forge-std/=node_modules/forge-std/src/","hardhat-deploy/=node_modules/account-abstraction/node_modules/hardhat-deploy/","solady/=node_modules/solady/src/"],"optimizer":{"enabled":true,"runs":4194303},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"src/spaces/facets/treasury/ITreasury.sol":"ITreasury"},"evmVersion":"cancun","libraries":{}},"sources":{"src/spaces/facets/treasury/ITreasury.sol":{"keccak256":"0x0e64aaeca2531a5d257fde19402aea968f8dbf1b5eec98a9722fb304a7becd94","urls":["bzz-raw://bb40b3b3ce67fb97584d35af0f85a151114c5ddee881608fd71decf1d756cff9","dweb:/ipfs/QmWrbLTDL6xHppQQFWNru87uoTbjCdGiZmaviZ178hcBmK"],"license":"MIT"}},"version":1},"id":533}
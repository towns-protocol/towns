/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  EntitlementsManager,
  EntitlementsManagerInterface,
} from "../EntitlementsManager";

const _abi = [
  {
    type: "function",
    name: "addEntitlementModule",
    inputs: [
      {
        name: "entitlement",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addImmutableEntitlements",
    inputs: [
      {
        name: "entitlements",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getEntitlement",
    inputs: [
      {
        name: "entitlement",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IEntitlementsManagerBase.Entitlement",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "moduleAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "moduleType",
            type: "string",
            internalType: "string",
          },
          {
            name: "isImmutable",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitlements",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct IEntitlementsManagerBase.Entitlement[]",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "moduleAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "moduleType",
            type: "string",
            internalType: "string",
          },
          {
            name: "isImmutable",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isEntitledToChannel",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "permission",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isEntitledToSpace",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "permission",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeEntitlementModule",
    inputs: [
      {
        name: "entitlement",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "EntitlementModuleAdded",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "entitlement",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EntitlementModuleRemoved",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "entitlement",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "Entitlement__InvalidValue",
    inputs: [],
  },
  {
    type: "error",
    name: "Entitlement__NotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "Entitlement__NotMember",
    inputs: [],
  },
  {
    type: "error",
    name: "Entitlement__ValueAlreadyExists",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementsService__EntitlementAlreadyExists",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementsService__EntitlementDoesNotExist",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementsService__ImmutableEntitlement",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementsService__InvalidEntitlementAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementsService__InvalidEntitlementInterface",
    inputs: [],
  },
  {
    type: "error",
    name: "Ownable__NotOwner",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "Ownable__ZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnerQueryForNonexistentToken",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b50611e6f8061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061007a575f3560e01c8063487dc38c11610058578063487dc38c146100ce5780638bfc820f146100e3578063be24138d146100f6578063fba4ff9d14610109575f5ffd5b8063070b9c3f1461007e57806320759f9e14610093578063367287e3146100bb575b5f5ffd5b61009161008c3660046117fb565b610129565b005b6100a66100a136600461185b565b6101a8565b60405190151581526020015b60405180910390f35b6100a66100c93660046118ac565b6101f2565b6100d6610210565b6040516100b291906119b6565b6100916100f1366004611a37565b61021f565b6100916101043660046117fb565b61029b565b61011c6101173660046117fb565b610312565b6040516100b29190611aa8565b610131610344565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019c576040517f65f490650000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b6101a581610404565b50565b5f6101e88484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061046692505050565b90505b9392505050565b5f61020785856102028587611aba565b610475565b95945050505050565b606061021a610767565b905090565b610227610344565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028d576040517f65f49065000000000000000000000000000000000000000000000000000000008152336004820152602401610193565b61029782826108a4565b5050565b6102a3610344565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610309576040517f65f49065000000000000000000000000000000000000000000000000000000008152336004820152602401610193565b6101a58161091b565b6040805160808101825260608082525f6020830181905292820181905281019190915261033e82610975565b92915050565b5f807fd2f24d4f172e4e84e48e7c4125b6e904c29e5eba33ad4938fee51dd5dbd4b600805460018201546040517f6352211e000000000000000000000000000000000000000000000000000000008152600481019190915291925073ffffffffffffffffffffffffffffffffffffffff1690636352211e90602401602060405180830381865afa1580156103da573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103fe9190611af6565b91505090565b61040d816109ed565b610417815f610b6b565b60405173ffffffffffffffffffffffffffffffffffffffff8216815233907f055c4c0e6f85afe96beaac6c9d650859c001e6ef93103856624cce6ceba811b4906020015b60405180910390a250565b5f6101eb818461020285611b11565b5f5f61047f610344565b90505f61048b85610d61565b80519091505f6104ba7f49daf035076c43671ca9f9fb568d931e51ab7f9098a5a694781b45341112cf006110a5565b80519091505f5b838110156105aa575f8582815181106104dc576104dc611b56565b602002602001015190508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105295760019750505050505050506101eb565b5f5b838110156105a0578173ffffffffffffffffffffffffffffffffffffffff1661056d5f87848151811061056057610560611b56565b60200260200101516110b1565b73ffffffffffffffffffffffffffffffffffffffff1603610598575f985050505050505050506101eb565b60010161052b565b50506001016104c1565b507fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c931005f6105f67fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c931016110bc565b90505f5b81811015610756575f838161061260018301856110c5565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182015f205482517f2e1b61e40000000000000000000000000000000000000000000000000000000081529251911693508392632e1b61e492600480820193918290030181865afa15801561068e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106b29190611b83565b15801561073657508073ffffffffffffffffffffffffffffffffffffffff16630cf0b5338e8a8e6040518463ffffffff1660e01b81526004016106f793929190611ba2565b602060405180830381865afa158015610712573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107369190611b83565b1561074d57600199505050505050505050506101eb565b506001016105fa565b505f9b9a5050505050505050505050565b60605f6107726110d0565b9050805167ffffffffffffffff81111561078e5761078e611c0d565b6040519080825280602002602001820160405280156107fe57816020015b6040805160808101825260608082525f60208084018290529383018290529082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816107ac5790505b5091505f5b815181101561089f575f5f5f5f61083286868151811061082557610825611b56565b60200260200101516110fb565b935093509350935060405180608001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151581525087868151811061088557610885611b56565b602002602001018190525050505050806001019050610803565b505090565b5f5b81811015610916576108dd8383838181106108c3576108c3611b56565b90506020020160208101906108d891906117fb565b6109ed565b61090e8383838181106108f2576108f2611b56565b905060200201602081019061090791906117fb565b6001610b6b565b6001016108a6565b505050565b610924816109ed565b61092d8161132d565b60405173ffffffffffffffffffffffffffffffffffffffff8216815233907fa8e3e13a35b592afaa9d213d12c7ea06384518ada9733585d20883cfafcf249b9060200161045b565b6040805160808101825260608082525f602083018190529282018190528101919091526109a1826109ed565b5f5f5f5f6109ae866110fb565b6040805160808101825294855273ffffffffffffffffffffffffffffffffffffffff909316602085015291830152151560608201529695505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116610a3a576040517fe0dc2ae000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527ff785968a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8216906301ffc9a790602401602060405180830381865afa925050508015610afe575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610afb91810190611b83565b60015b610b34576040517ff58a5f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80610297576040517ff58a5f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b817fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c93100610bb77fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c9310183611481565b15610bee576040517f2406020900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bfb60018201856114af565b5060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184151581526020018373ffffffffffffffffffffffffffffffffffffffff16632e1b61e46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c74573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c989190611b83565b1515905273ffffffffffffffffffffffffffffffffffffffff9485165f90815260209283526040908190208251815494840151939092015115157501000000000000000000000000000000000000000000027fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff93151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090951692909716919091179290921716939093179092555050565b60605f7fc21004fcc619240a31f006438274d15cd813308303284436eef6055f0fdcb600600601546040517f02345b9800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015290911691505f9082906302345b98906024015f60405180830381865afa158015610df8573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e3d9190810190611c89565b905080515f03610fae576040517ff821039800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301525f919084169063f821039890602401602060405180830381865afa158015610eb4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ed89190611af6565b905073ffffffffffffffffffffffffffffffffffffffff811615610fac576040517f02345b9800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015291955085918416906302345b98906024015f60405180830381865afa158015610f64573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610fa99190810190611c89565b91505b505b80515f610fbc826001611d6a565b67ffffffffffffffff811115610fd457610fd4611c0d565b604051908082528060200260200182016040528015610ffd578160200160208202803683370190505b5090505f5b828110156110635783818151811061101c5761101c611b56565b602002602001015182828151811061103657611036611b56565b73ffffffffffffffffffffffffffffffffffffffff90921660209283029190910190910152600101611002565b508581838151811061107757611077611b56565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015295945050505050565b60605f6101eb836114d0565b5f6101eb8383611529565b5f61033e825490565b5f6101eb8383611664565b606061021a7fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c931016110a5565b60605f81817fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c9310061114b7fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c9310187611481565b611181576040517fbd599b8000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8690505f8173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa1580156111ce573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526112139190810190611d7d565b73ffffffffffffffffffffffffffffffffffffffff808a165f908152602086905260408082205481517f6465e69f00000000000000000000000000000000000000000000000000000000815291519495508316939192861691636465e69f9160048082019286929091908290030181865afa158015611294573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526112d99190810190611d7d565b73ffffffffffffffffffffffffffffffffffffffff9a909a165f9081526020959095525060409093205490989297965074010000000000000000000000000000000000000000900460ff1694509092505050565b7fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c931006113787fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c9310183611481565b6113ae576040517fbd599b8000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82165f9081526020829052604090205474010000000000000000000000000000000000000000900460ff1615611425576040517fc08b012e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611432600182018361168a565b5073ffffffffffffffffffffffffffffffffffffffff9091165f9081526020919091526040902080547fffffffffffffffffffff00000000000000000000000000000000000000000000169055565b73ffffffffffffffffffffffffffffffffffffffff81165f90815260018301602052604081205415156101eb565b5f6101eb8373ffffffffffffffffffffffffffffffffffffffff84166116ab565b6060815f0180548060200260200160405190810160405280929190818152602001828054801561151d57602002820191905f5260205f20905b815481526020019060010190808311611509575b50505050509050919050565b5f81831161163257505f8181527f6569bde4a160c636ea8b8d11acb83a60d7fec0b8f2e09389306cba0e1340df046020526040812054907f6569bde4a160c636ea8b8d11acb83a60d7fec0b8f2e09389306cba0e1340df00907c01000000000000000000000000000000000000000000000000000000008316900361163057815f0361162a57805483106115e9576040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092015f818152600484016020526040902054909290915081156115ea575b5061033e565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f825f01828154811061167957611679611b56565b905f5260205f200154905092915050565b5f6101eb8373ffffffffffffffffffffffffffffffffffffffff84166116f7565b5f8181526001830160205260408120546116f057508154600181810184555f84815260208082209093018490558454848252828601909352604090209190915561033e565b505f61033e565b5f81815260018301602052604081205480156117d1575f611719600183611e2f565b85549091505f9061172c90600190611e2f565b905080821461178b575f865f01828154811061174a5761174a611b56565b905f5260205f200154905080875f01848154811061176a5761176a611b56565b5f918252602080832090910192909255918252600188019052604090208390555b855486908061179c5761179c611e42565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f90556001935050505061033e565b5f91505061033e565b73ffffffffffffffffffffffffffffffffffffffff811681146101a5575f5ffd5b5f6020828403121561180b575f5ffd5b81356101eb816117da565b5f5f83601f840112611826575f5ffd5b50813567ffffffffffffffff81111561183d575f5ffd5b602083019150836020828501011115611854575f5ffd5b9250929050565b5f5f5f6040848603121561186d575f5ffd5b8335611878816117da565b9250602084013567ffffffffffffffff811115611893575f5ffd5b61189f86828701611816565b9497909650939450505050565b5f5f5f5f606085870312156118bf575f5ffd5b8435935060208501356118d1816117da565b9250604085013567ffffffffffffffff8111156118ec575f5ffd5b6118f887828801611816565b95989497509550505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b5f8151608084526119646080850182611904565b905073ffffffffffffffffffffffffffffffffffffffff60208401511660208501526040830151848203604086015261199d8282611904565b9150506060830151151560608501528091505092915050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015611a2b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0878603018452611a16858351611950565b945060209384019391909101906001016119dc565b50929695505050505050565b5f5f60208385031215611a48575f5ffd5b823567ffffffffffffffff811115611a5e575f5ffd5b8301601f81018513611a6e575f5ffd5b803567ffffffffffffffff811115611a84575f5ffd5b8560208260051b8401011115611a98575f5ffd5b6020919091019590945092505050565b602081525f6101eb6020830184611950565b8035602083101561033e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b5f60208284031215611b06575f5ffd5b81516101eb816117da565b80516020808301519190811015611b50577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8160200360031b1b821691505b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60208284031215611b93575f5ffd5b815180151581146101eb575f5ffd5b5f60608201858352606060208401528085518083526080850191506020870192505f5b81811015611bf957835173ffffffffffffffffffffffffffffffffffffffff16835260209384019390920191600101611bc5565b505060409390930193909352509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611c8157611c81611c0d565b604052919050565b5f60208284031215611c99575f5ffd5b815167ffffffffffffffff811115611caf575f5ffd5b8201601f81018413611cbf575f5ffd5b805167ffffffffffffffff811115611cd957611cd9611c0d565b8060051b611ce960208201611c3a565b91825260208184018101929081019087841115611d04575f5ffd5b6020850194505b83851015611d325784519250611d20836117da565b82825260209485019490910190611d0b565b979650505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8082018082111561033e5761033e611d3d565b5f60208284031215611d8d575f5ffd5b815167ffffffffffffffff811115611da3575f5ffd5b8201601f81018413611db3575f5ffd5b805167ffffffffffffffff811115611dcd57611dcd611c0d565b611dfe60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611c3a565b818152856020838501011115611e12575f5ffd5b8160208401602083015e5f91810160200191909152949350505050565b8181038181111561033e5761033e611d3d565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd";

type EntitlementsManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntitlementsManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntitlementsManager__factory extends ContractFactory {
  constructor(...args: EntitlementsManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntitlementsManager> {
    return super.deploy(overrides || {}) as Promise<EntitlementsManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntitlementsManager {
    return super.attach(address) as EntitlementsManager;
  }
  override connect(signer: Signer): EntitlementsManager__factory {
    return super.connect(signer) as EntitlementsManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntitlementsManagerInterface {
    return new utils.Interface(_abi) as EntitlementsManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntitlementsManager {
    return new Contract(address, _abi, signerOrProvider) as EntitlementsManager;
  }
}

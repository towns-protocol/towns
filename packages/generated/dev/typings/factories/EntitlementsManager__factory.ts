/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  EntitlementsManager,
  EntitlementsManagerInterface,
} from "../EntitlementsManager";

const _abi = [
  {
    type: "function",
    name: "addEntitlementModule",
    inputs: [
      {
        name: "entitlement",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addImmutableEntitlements",
    inputs: [
      {
        name: "entitlements",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getEntitlement",
    inputs: [
      {
        name: "entitlement",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IEntitlementsManagerBase.Entitlement",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "moduleAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "moduleType",
            type: "string",
            internalType: "string",
          },
          {
            name: "isImmutable",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitlements",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct IEntitlementsManagerBase.Entitlement[]",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "moduleAddress",
            type: "address",
            internalType: "address",
          },
          {
            name: "moduleType",
            type: "string",
            internalType: "string",
          },
          {
            name: "isImmutable",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isEntitledToChannel",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "permission",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isEntitledToSpace",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
      {
        name: "permission",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeEntitlementModule",
    inputs: [
      {
        name: "entitlement",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Banned",
    inputs: [
      {
        name: "moderator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ConsecutiveTransfer",
    inputs: [
      {
        name: "fromTokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "toTokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EntitlementModuleAdded",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "entitlement",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "EntitlementModuleRemoved",
    inputs: [
      {
        name: "caller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "entitlement",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SubscriptionUpdate",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "expiration",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unbanned",
    inputs: [
      {
        name: "moderator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ApprovalCallerNotOwnerNorApproved",
    inputs: [],
  },
  {
    type: "error",
    name: "ApprovalQueryForNonexistentToken",
    inputs: [],
  },
  {
    type: "error",
    name: "BalanceQueryForZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "Banning__AlreadyBanned",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "Banning__CannotBanOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "Banning__CannotBanSelf",
    inputs: [],
  },
  {
    type: "error",
    name: "Banning__InvalidTokenId",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "Banning__NotBanned",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC5643__DurationZero",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC5643__InvalidTokenId",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC5643__NotApprovedOrOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC5643__SubscriptionNotRenewable",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "Entitlement__InvalidValue",
    inputs: [],
  },
  {
    type: "error",
    name: "Entitlement__NotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "Entitlement__NotMember",
    inputs: [],
  },
  {
    type: "error",
    name: "Entitlement__ValueAlreadyExists",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementsService__EntitlementAlreadyExists",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementsService__EntitlementDoesNotExist",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementsService__ImmutableEntitlement",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementsService__InvalidEntitlementAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementsService__InvalidEntitlementInterface",
    inputs: [],
  },
  {
    type: "error",
    name: "MintERC2309QuantityExceedsLimit",
    inputs: [],
  },
  {
    type: "error",
    name: "MintToZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "MintZeroQuantity",
    inputs: [],
  },
  {
    type: "error",
    name: "Ownable__NotOwner",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "Ownable__ZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnerQueryForNonexistentToken",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnershipNotInitializedForExtraData",
    inputs: [],
  },
  {
    type: "error",
    name: "Pausable__NotPaused",
    inputs: [],
  },
  {
    type: "error",
    name: "Pausable__Paused",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferCallerNotOwnerNorApproved",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferFromIncorrectOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferToNonERC721ReceiverImplementer",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferToZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "URIQueryForNonexistentToken",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b50611e298061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061007a575f3560e01c8063487dc38c11610058578063487dc38c146100ce5780638bfc820f146100e3578063be24138d146100f6578063fba4ff9d14610109575f5ffd5b8063070b9c3f1461007e57806320759f9e14610093578063367287e3146100bb575b5f5ffd5b61009161008c3660046117fa565b610129565b005b6100a66100a136600461185a565b6101a8565b60405190151581526020015b60405180910390f35b6100a66100c93660046118ab565b6101be565b6100d66101d4565b6040516100b291906119b5565b6100916100f1366004611a36565b6101e3565b6100916101043660046117fa565b61025f565b61011c6101173660046117fa565b6102d6565b6040516100b29190611aa7565b610131610308565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019c576040517f65f490650000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b6101a5816103c8565b50565b5f6101b484848461042a565b90505b9392505050565b5f6101cb8585858561043f565b95945050505050565b60606101de61044f565b905090565b6101eb610308565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610251576040517f65f49065000000000000000000000000000000000000000000000000000000008152336004820152602401610193565b61025b828261058c565b5050565b610267610308565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102cd576040517f65f49065000000000000000000000000000000000000000000000000000000008152336004820152602401610193565b6101a581610603565b6040805160808101825260608082525f602083018190529282018190528101919091526103028261065d565b92915050565b5f807fd2f24d4f172e4e84e48e7c4125b6e904c29e5eba33ad4938fee51dd5dbd4b600805460018201546040517f6352211e000000000000000000000000000000000000000000000000000000008152600481019190915291925073ffffffffffffffffffffffffffffffffffffffff1690636352211e90602401602060405180830381865afa15801561039e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c29190611ab9565b91505090565b6103d1816106d5565b6103db815f610853565b60405173ffffffffffffffffffffffffffffffffffffffff8216815233907f055c4c0e6f85afe96beaac6c9d650859c001e6ef93103856624cce6ceba811b4906020015b60405180910390a250565b5f6101b4818561043a8587611ad4565b610a65565b5f6101cb858561043a8587611ad4565b60605f61045a610d35565b9050805167ffffffffffffffff81111561047657610476611b10565b6040519080825280602002602001820160405280156104e657816020015b6040805160808101825260608082525f60208084018290529383018290529082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816104945790505b5091505f5b8151811015610587575f5f5f5f61051a86868151811061050d5761050d611b3d565b6020026020010151610d60565b935093509350935060405180608001604052808581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182151581525087868151811061056d5761056d611b3d565b6020026020010181905250505050508060010190506104eb565b505090565b5f5b818110156105fe576105c58383838181106105ab576105ab611b3d565b90506020020160208101906105c091906117fa565b6106d5565b6105f68383838181106105da576105da611b3d565b90506020020160208101906105ef91906117fa565b6001610853565b60010161058e565b505050565b61060c816106d5565b61061581610fb0565b60405173ffffffffffffffffffffffffffffffffffffffff8216815233907fa8e3e13a35b592afaa9d213d12c7ea06384518ada9733585d20883cfafcf249b9060200161041f565b6040805160808101825260608082525f60208301819052928201819052810191909152610689826106d5565b5f5f5f5f61069686610d60565b6040805160808101825294855273ffffffffffffffffffffffffffffffffffffffff909316602085015291830152151560608201529695505050505050565b73ffffffffffffffffffffffffffffffffffffffff8116610722576040517fe0dc2ae000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527ff785968a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8216906301ffc9a790602401602060405180830381865afa9250505080156107e6575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526107e391810190611b6a565b60015b61081c576040517ff58a5f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061025b576040517ff58a5f2700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82165f9081527fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c93102602052604090205482907fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c9310090156108f2576040517f2406020900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108ff600182018561111f565b5060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff16815260200184151581526020018373ffffffffffffffffffffffffffffffffffffffff16632e1b61e46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610978573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061099c9190611b6a565b1515905273ffffffffffffffffffffffffffffffffffffffff9485165f90815260209283526040908190208251815494840151939092015115157501000000000000000000000000000000000000000000027fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff93151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090951692909716919091179290921716939093179092555050565b5f5f610a6f610308565b90505f610a7b85611140565b80519091505f610a89611484565b80519091505f5b83811015610b78575f858281518110610aab57610aab611b3d565b602002602001015190508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610af85760019750505050505050506101b7565b5f5b83811015610b6e578173ffffffffffffffffffffffffffffffffffffffff16610b3b868381518110610b2e57610b2e611b3d565b60200260200101516114af565b73ffffffffffffffffffffffffffffffffffffffff1603610b66575f985050505050505050506101b7565b600101610afa565b5050600101610a90565b507fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c931005f610bc47fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c931016114b9565b90505f5b81811015610d24575f8381610be060018301856114c2565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182015f205482517f2e1b61e40000000000000000000000000000000000000000000000000000000081529251911693508392632e1b61e492600480820193918290030181865afa158015610c5c573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c809190611b6a565b158015610d0457508073ffffffffffffffffffffffffffffffffffffffff16630cf0b5338e8a8e6040518463ffffffff1660e01b8152600401610cc593929190611b89565b602060405180830381865afa158015610ce0573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d049190611b6a565b15610d1b57600199505050505050505050506101b7565b50600101610bc8565b505f9b9a5050505050505050505050565b60606101de7fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c931016114cd565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c93102602052604081205460609190829082907fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c9310090610e04576040517fbd599b8000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8690505f8173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa158015610e51573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e969190810190611c43565b73ffffffffffffffffffffffffffffffffffffffff808a165f908152602086905260408082205481517f6465e69f00000000000000000000000000000000000000000000000000000000815291519495508316939192861691636465e69f9160048082019286929091908290030181865afa158015610f17573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f5c9190810190611c43565b73ffffffffffffffffffffffffffffffffffffffff9a909a165f9081526020959095525060409093205490989297965074010000000000000000000000000000000000000000900460ff1694509092505050565b73ffffffffffffffffffffffffffffffffffffffff81165f9081527fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c9310260205260409020547fa558e822bd359dacbe30f0da89cbfde5f95895b441e13a4864caec1423c931009061104c576040517fbd599b8000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82165f9081526020829052604090205474010000000000000000000000000000000000000000900460ff16156110c3576040517fc08b012e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110d060018201836114d9565b5073ffffffffffffffffffffffffffffffffffffffff9091165f9081526020919091526040902080547fffffffffffffffffffff00000000000000000000000000000000000000000000169055565b5f6101b78373ffffffffffffffffffffffffffffffffffffffff84166114fa565b60605f7fc21004fcc619240a31f006438274d15cd813308303284436eef6055f0fdcb600600601546040517f02345b9800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015290911691505f9082906302345b98906024015f60405180830381865afa1580156111d7573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261121c9190810190611cf5565b905080515f0361138d576040517ff821039800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301525f919084169063f821039890602401602060405180830381865afa158015611293573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112b79190611ab9565b905073ffffffffffffffffffffffffffffffffffffffff81161561138b576040517f02345b9800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff808316600483015291955085918416906302345b98906024015f60405180830381865afa158015611343573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526113889190810190611cf5565b91505b505b80515f61139b826001611dd6565b67ffffffffffffffff8111156113b3576113b3611b10565b6040519080825280602002602001820160405280156113dc578160200160208202803683370190505b5090505f5b82811015611442578381815181106113fb576113fb611b3d565b602002602001015182828151811061141557611415611b3d565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101526001016113e1565b508581838151811061145657611456611b3d565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015295945050505050565b60606101de7f49daf035076c43671ca9f9fb568d931e51ab7f9098a5a694781b45341112cf006114cd565b5f61030282611546565b5f610302825490565b5f6101b78383611677565b60605f6101b78361169d565b5f6101b78373ffffffffffffffffffffffffffffffffffffffff84166116f6565b5f81815260018301602052604081205461153f57508154600181810184555f848152602080822090930184905584548482528286019093526040902091909155610302565b505f610302565b5f8181527f6569bde4a160c636ea8b8d11acb83a60d7fec0b8f2e09389306cba0e1340df046020526040812054907f6569bde4a160c636ea8b8d11acb83a60d7fec0b8f2e09389306cba0e1340df00907c01000000000000000000000000000000000000000000000000000000008316900361164457815f0361163e57805483106115fd576040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092015f818152600484016020526040902054909290915081156115fe575b50919050565b506040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f825f01828154811061168c5761168c611b3d565b905f5260205f200154905092915050565b6060815f018054806020026020016040519081016040528092919081815260200182805480156116ea57602002820191905f5260205f20905b8154815260200190600101908083116116d6575b50505050509050919050565b5f81815260018301602052604081205480156117d0575f611718600183611de9565b85549091505f9061172b90600190611de9565b905080821461178a575f865f01828154811061174957611749611b3d565b905f5260205f200154905080875f01848154811061176957611769611b3d565b5f918252602080832090910192909255918252600188019052604090208390555b855486908061179b5761179b611dfc565b600190038181905f5260205f20015f90559055856001015f8681526020019081526020015f205f905560019350505050610302565b5f915050610302565b73ffffffffffffffffffffffffffffffffffffffff811681146101a5575f5ffd5b5f6020828403121561180a575f5ffd5b81356101b7816117d9565b5f5f83601f840112611825575f5ffd5b50813567ffffffffffffffff81111561183c575f5ffd5b602083019150836020828501011115611853575f5ffd5b9250929050565b5f5f5f6040848603121561186c575f5ffd5b8335611877816117d9565b9250602084013567ffffffffffffffff811115611892575f5ffd5b61189e86828701611815565b9497909650939450505050565b5f5f5f5f606085870312156118be575f5ffd5b8435935060208501356118d0816117d9565b9250604085013567ffffffffffffffff8111156118eb575f5ffd5b6118f787828801611815565b95989497509550505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b5f8151608084526119636080850182611903565b905073ffffffffffffffffffffffffffffffffffffffff60208401511660208501526040830151848203604086015261199c8282611903565b9150506060830151151560608501528091505092915050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015611a2a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0878603018452611a1585835161194f565b945060209384019391909101906001016119db565b50929695505050505050565b5f5f60208385031215611a47575f5ffd5b823567ffffffffffffffff811115611a5d575f5ffd5b8301601f81018513611a6d575f5ffd5b803567ffffffffffffffff811115611a83575f5ffd5b8560208260051b8401011115611a97575f5ffd5b6020919091019590945092505050565b602081525f6101b7602083018461194f565b5f60208284031215611ac9575f5ffd5b81516101b7816117d9565b80356020831015610302577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f60208284031215611b7a575f5ffd5b815180151581146101b7575f5ffd5b5f60608201858352606060208401528085518083526080850191506020870192505f5b81811015611be057835173ffffffffffffffffffffffffffffffffffffffff16835260209384019390920191600101611bac565b505060409390930193909352509392505050565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611c3b57611c3b611b10565b604052919050565b5f60208284031215611c53575f5ffd5b815167ffffffffffffffff811115611c69575f5ffd5b8201601f81018413611c79575f5ffd5b805167ffffffffffffffff811115611c9357611c93611b10565b611cc460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611bf4565b818152856020838501011115611cd8575f5ffd5b8160208401602083015e5f91810160200191909152949350505050565b5f60208284031215611d05575f5ffd5b815167ffffffffffffffff811115611d1b575f5ffd5b8201601f81018413611d2b575f5ffd5b805167ffffffffffffffff811115611d4557611d45611b10565b8060051b611d5560208201611bf4565b91825260208184018101929081019087841115611d70575f5ffd5b6020850194505b83851015611d9e5784519250611d8c836117d9565b82825260209485019490910190611d77565b979650505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8082018082111561030257610302611da9565b8181038181111561030257610302611da9565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd";

type EntitlementsManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntitlementsManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntitlementsManager__factory extends ContractFactory {
  constructor(...args: EntitlementsManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntitlementsManager> {
    return super.deploy(overrides || {}) as Promise<EntitlementsManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntitlementsManager {
    return super.attach(address) as EntitlementsManager;
  }
  override connect(signer: Signer): EntitlementsManager__factory {
    return super.connect(signer) as EntitlementsManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntitlementsManagerInterface {
    return new utils.Interface(_abi) as EntitlementsManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntitlementsManager {
    return new Contract(address, _abi, signerOrProvider) as EntitlementsManager;
  }
}

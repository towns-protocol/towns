/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DropFacet, DropFacetInterface } from "../DropFacet";

const _abi = [
  {
    type: "function",
    name: "__DropFacet_init",
    inputs: [
      {
        name: "rewardsDistribution",
        type: "address",
        internalType: "address",
      },
      {
        name: "minLockDuration",
        type: "uint48",
        internalType: "uint48",
      },
      {
        name: "maxLockDuration",
        type: "uint48",
        internalType: "uint48",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addClaimCondition",
    inputs: [
      {
        name: "condition",
        type: "tuple",
        internalType: "struct DropGroup.ClaimCondition",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimAndStake",
    inputs: [
      {
        name: "req",
        type: "tuple",
        internalType: "struct DropClaim.Claim",
        components: [
          {
            name: "conditionId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "account",
            type: "address",
            internalType: "address",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "points",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "proof",
            type: "bytes32[]",
            internalType: "bytes32[]",
          },
        ],
      },
      {
        name: "delegatee",
        type: "address",
        internalType: "address",
      },
      {
        name: "lockDuration",
        type: "uint48",
        internalType: "uint48",
      },
    ],
    outputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimWithPenalty",
    inputs: [
      {
        name: "req",
        type: "tuple",
        internalType: "struct DropClaim.Claim",
        components: [
          {
            name: "conditionId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "account",
            type: "address",
            internalType: "address",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "points",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "proof",
            type: "bytes32[]",
            internalType: "bytes32[]",
          },
        ],
      },
      {
        name: "expectedPenaltyBps",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getActiveClaimConditionId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getClaimConditionById",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "condition",
        type: "tuple",
        internalType: "struct DropGroup.ClaimCondition",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getClaimConditions",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct DropGroup.ClaimCondition[]",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDepositIdByWallet",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "conditionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSupplyClaimedByWallet",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "conditionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getUnlockTime",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "conditionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setClaimConditions",
    inputs: [
      {
        name: "conditions",
        type: "tuple[]",
        internalType: "struct DropGroup.ClaimCondition[]",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unlockStake",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "DropFacet_ClaimConditionAdded",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "condition",
        type: "tuple",
        indexed: false,
        internalType: "struct DropGroup.ClaimCondition",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DropFacet_ClaimConditionsUpdated",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "conditions",
        type: "tuple[]",
        indexed: false,
        internalType: "struct DropGroup.ClaimCondition[]",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DropFacet_Claimed_And_Staked",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DropFacet_Claimed_WithPenalty",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DropFacet_StakeUnlocked",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceAdded",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceRemoved",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "DropFacet__AlreadyClaimed",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__CannotSetClaimConditions",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__ClaimConditionsNotInAscendingOrder",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__ClaimHasEnded",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__ClaimHasNotStarted",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__CurrencyNotSet",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__ExceedsMaxClaimableSupply",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__InsufficientBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__InvalidLockDuration",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__InvalidProof",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__MerkleRootNotSet",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__NoActiveClaimCondition",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__QuantityMustBeGreaterThanZero",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__RewardsDistributionNotSet",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__StakeNotUnlocked",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__UnexpectedPenaltyBps",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC20InsufficientBalance",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "Initializable_InInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_NotInInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_AlreadySupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_NotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Ownable__NotOwner",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "Ownable__ZeroAddress",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b5060156019565b60bd565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef520008054640100000000900460ff16156064576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff908116101560ba57805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b612740806100ca5f395ff3fe608060405234801561000f575f5ffd5b50600436106100cf575f3560e01c8063a1550b2f1161007d578063c9ac936811610058578063c9ac9368146101e7578063ec531d92146101fa578063ecd8c06a1461020d575f5ffd5b8063a1550b2f146101b7578063b9da36b9146101cc578063c68907de146101df575f5ffd5b80637a05557c116100ad5780637a05557c1461012e57806381045e36146101915780639876cf27146101a4575f5ffd5b806333d42dc6146100d357806364843393146100f95780636f8934f41461010e575b5f5ffd5b6100e66100e1366004611f7e565b610220565b6040519081526020015b60405180910390f35b61010c610107366004611fa8565b610275565b005b61012161011c366004611fc1565b6102f8565b6040516100f09190611fd8565b6100e661013c366004611f7e565b5f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020908152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352929052206001015490565b6100e661019f366004612082565b610422565b6100e66101b23660046120e6565b6105bb565b6101bf6108cd565b6040516100f09190612142565b61010c6101da3660046121f6565b6108dc565b6100e661094f565b61010c6101f5366004612221565b610958565b6100e6610208366004611f7e565b6109d8565b61010c61021b366004611fc1565b610a58565b5f8181527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020908152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091529020545b92915050565b7f4675fa8241f86f37157864d3d49b85ad4b164352c516da28e1678a90470ae3005473ffffffffffffffffffffffffffffffffffffffff1633146102ec576040517f65f490650000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b6102f581610bd0565b50565b604080515f80825260208201819052818301819052606082018190526080820181905260a0820181905260c082015290819052610361825f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020526040902060010190565b6040805160e081018252825473ffffffffffffffffffffffffffffffffffffffff8116825274010000000000000000000000000000000000000000810464ffffffffff9081166020840152790100000000000000000000000000000000000000000000000000820416928201929092527e0100000000000000000000000000000000000000000000000000000000000090910461ffff16606082015260018201546080820152600282015460a082015260039091015460c082015292915050565b81355f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab0160205260408082206001810154909161048d9190860135907e01000000000000000000000000000000000000000000000000000000000000900461ffff1685610e2d565b91506104998183610e8d565b60048101546104a9908590611055565b6104c46104bc6040860160208701612292565b8290846110a9565b7f25a22d57af6f735dc617e9781981413da3bc5a71376b4237270a04c144aaf7006105046104f86040870160208801612292565b8290606088013561111d565b6105396105176040870160208801612292565b600184015473ffffffffffffffffffffffffffffffffffffffff169085611139565b6105496040860160208701612292565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16865f01357f970af01ab25e63f8131277859b2c17e9a07c2eb257e6db87449000d91c0f8401866040516105ab91815260200190565b60405180910390a4505092915050565b5f6105c58261118c565b83355f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020526040812090505f81816106086040890160208a01612292565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f61066b7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab0090565b90506106a8828860400135856001015f01601e9054906101000a900461ffff168460020160069054906101000a900465ffffffffffff1689611257565b93506106b48385610e8d565b60048301546106c4908890611055565b6106df6106d76040890160208a01612292565b8490866110a9565b7f25a22d57af6f735dc617e9781981413da3bc5a71376b4237270a04c144aaf70061071f61071360408a0160208b01612292565b829060608b013561111d565b60018401546107449073ffffffffffffffffffffffffffffffffffffffff1686611321565b81545f9073ffffffffffffffffffffffffffffffffffffffff1663e69f949561076c88611366565b8a61077d60408e0160208f01612292565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526bffffffffffffffffffffffff909316600484015273ffffffffffffffffffffffffffffffffffffffff91821660248401521660448201523060648201525f6084820181905260c060a483015260c482015260e4016020604051808303815f875af115801561081a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061083e91906122ad565b60018501819055905061085760408a0160208b01612292565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff168a5f01357ff08f338c8905e343697a35fef11af2f611a36658016e0653521354c865373ea7896040516108b991815260200190565b60405180910390a450505050509392505050565b60606108d7611387565b905090565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef5200054640100000000900460ff1661093f576040517f77a399b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61094a8383836115e3565b505050565b5f6108d76116f8565b7f4675fa8241f86f37157864d3d49b85ad4b164352c516da28e1678a90470ae3005473ffffffffffffffffffffffffffffffffffffffff1633146109ca576040517f65f490650000000000000000000000000000000000000000000000000000000081523360048201526024016102e3565b6109d482826118b3565b5050565b5f8181527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8616845290915281206002810154610a489065ffffffffffff66010000000000008204811691166122f1565b65ffffffffffff16949350505050565b5f8181527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab0160205260408120335f908152602082905260408120600281015492935091610ab99065ffffffffffff66010000000000008204811691166122f1565b65ffffffffffff16905080421015610af457610af47f821268a800000000000000000000000000000000000000000000000000000000611b89565b7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab005460018301546040517fbe353cba000000000000000000000000000000000000000000000000000000008152600481019190915233602482015273ffffffffffffffffffffffffffffffffffffffff9091169063be353cba906044015f604051808303815f87803b158015610b88575f5ffd5b505af1158015610b9a573d5f5f3e3d5ffd5b50506040513392508691507f2e53d3f103e9ecac2e275bd5fddecce27fc7aa652635e99803b96dd640761ea4905f90a350505050565b7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab005465ffffffffffff7401000000000000000000000000000000000000000082048116917a0100000000000000000000000000000000000000000000000000009004165f610c3e82846122f1565b905065ffffffffffff821615610d115765ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201165f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab01602052604081206001019050610cba6040860160208701612321565b815464ffffffffff9182167401000000000000000000000000000000000000000090910490911610610d0f57610d0f7f7b10269c00000000000000000000000000000000000000000000000000000000611b89565b505b610d2b610d216020860186612292565b8560800135611b91565b83610d678265ffffffffffff165f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020526040902090565b600101610d748282612354565b50610d8290508260016122f1565b7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab00805479ffffffffffffffffffffffffffffffffffffffffffffffffffff167a01000000000000000000000000000000000000000000000000000065ffffffffffff93841602179055604051908216907fb2d7f7a48138c995ec7024ac4e176fad4415d42377559f3178e3830941b0484190610e1f90879061255d565b60405180910390a250505050565b5f8161ffff168361ffff1614610e6657610e667f70566c0000000000000000000000000000000000000000000000000000000000611b89565b61ffff831615610e85575f610e7f858561ffff16611be1565b90940393505b509192915050565b60048201546001830190610ec457610ec47ff235dd0100000000000000000000000000000000000000000000000000000000611b89565b815f03610ef457610ef47fdf4e56a500000000000000000000000000000000000000000000000000000000611b89565b805473ffffffffffffffffffffffffffffffffffffffff16610f3957610f397fe211c34c00000000000000000000000000000000000000000000000000000000611b89565b8060010154828260020154610f4e919061256b565b1115610f7d57610f7d7fb0b4e6d400000000000000000000000000000000000000000000000000000000611b89565b805474010000000000000000000000000000000000000000900464ffffffffff16421015610fce57610fce7f4b3950d800000000000000000000000000000000000000000000000000000000611b89565b8054790100000000000000000000000000000000000000000000000000900464ffffffffff161580159061102757508054790100000000000000000000000000000000000000000000000000900464ffffffffff164210155b1561094a5761094a7fd87c5b1d00000000000000000000000000000000000000000000000000000000611b89565b5f61105f83611c34565b905061107c8282611073608087018761257e565b90929091611c72565b61094a5761094a7f592fca3400000000000000000000000000000000000000000000000000000000611b89565b73ffffffffffffffffffffffffffffffffffffffff82165f9081526020849052604090208054156110fd576110fd7f7f76444f00000000000000000000000000000000000000000000000000000000611b89565b81846001016002015f828254611113919061256b565b9091555050555050565b611128838383611caa565b600290920180549290920390915550565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af18060015f51141661118257803d853b151710611182576390b8ec185f526004601cfd5b505f603452505050565b7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab02547feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab009065ffffffffffff908116908316101561120c5761120c7fa03302f900000000000000000000000000000000000000000000000000000000611b89565b600281015465ffffffffffff6601000000000000909104811690831611156109d4576109d47fa03302f900000000000000000000000000000000000000000000000000000000611b89565b5f65ffffffffffff831661126b83856125e9565b6112819065ffffffffffff1661ffff8716612607565b61128b919061261e565b935084905061ffff8416156112af575f6112a9868661ffff16611be1565b86039150505b60029590950180547fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016660100000000000065ffffffffffff938416027fffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000161742909216919091179055509192915050565b6109d47feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab005473ffffffffffffffffffffffffffffffffffffffff848116911683611d20565b5f6c01000000000000000000000000821061138357611383611d69565b5090565b60605f5f6113f67feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab005474010000000000000000000000000000000000000000810465ffffffffffff908116927a0100000000000000000000000000000000000000000000000000009092041690565b915091508065ffffffffffff1667ffffffffffffffff81111561141b5761141b612656565b60405190808252806020026020018201604052801561149f57816020015b6040805160e0810182525f8082526020808301829052928201819052606082018190526080820181905260a0820181905260c082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816114395790505b5092505f5b8165ffffffffffff168110156115dd576114fb6114c98265ffffffffffff861661256b565b5f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020526040902060010190565b6040805160e081018252825473ffffffffffffffffffffffffffffffffffffffff8116825274010000000000000000000000000000000000000000810464ffffffffff9081166020840152790100000000000000000000000000000000000000000000000000820416928201929092527e0100000000000000000000000000000000000000000000000000000000000090910461ffff16606082015260018201546080820152600282015460a082015260039091015460c082015284518590839081106115ca576115ca612683565b60209081029190910101526001016114a4565b50505090565b73ffffffffffffffffffffffffffffffffffffffff8316611627576116277fe3224c7800000000000000000000000000000000000000000000000000000000611b89565b5f7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab006002810180547fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016660100000000000065ffffffffffff958616027fffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000161794909316939093179091555080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b5f5f5f6117667feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab005474010000000000000000000000000000000000000000810465ffffffffffff908116927a0100000000000000000000000000000000000000000000000000009092041690565b915091508065ffffffffffff165f036117a2576117a27f44d5f09400000000000000000000000000000000000000000000000000000000611b89565b65ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8383010116805b8365ffffffffffff168110611889575f8181527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab0160205260409020600101805464ffffffffff7901000000000000000000000000000000000000000000000000008204811691740100000000000000000000000000000000000000009004164210801590611866575080158061186657508042105b1561187657509095945050505050565b505080611882906126b0565b90506117d1565b506115dd7f44d5f09400000000000000000000000000000000000000000000000000000000611b89565b7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab00805465ffffffffffff7401000000000000000000000000000000000000000082048116917a0100000000000000000000000000000000000000000000000000009004811690611923858461256b565b1115611952576119527fae4eeeb100000000000000000000000000000000000000000000000000000000611b89565b835f80805b8365ffffffffffff16811015611a8e573689898381811061197a5761197a612683565b905060e0020190508060200160208101906119959190612321565b64ffffffffff168465ffffffffffff16106119d3576119d37f7b10269c00000000000000000000000000000000000000000000000000000000611b89565b5f60018901816119eb8565ffffffffffff8c1661256b565b815260208101919091526040015f2060038101549091506080830135811115611a3757611a377fae4eeeb100000000000000000000000000000000000000000000000000000000611b89565b611a418284611d76565b611a516040840160208501612321565b64ffffffffff169550611a6860808401358661256b565b9450611a80611a7a6020850185612292565b86611b91565b505050806001019050611957565b50855465ffffffffffff8085167a010000000000000000000000000000000000000000000000000000810279ffffffffffffffffffffffffffffffffffffffffffffffffffff90931692909217885585161115611b3d5765ffffffffffff83165b8465ffffffffffff16811015611b3b5765ffffffffffff861681015f90815260018089016020526040822080820183905560028101839055600381018390556004019190915501611aef565b505b8465ffffffffffff167ff91c9c864018770f197086e7e64354d3a54259e85887953cbbe7d02ba32aba8e8989604051611b779291906126e4565b60405180910390a25050505050505050565b805f5260045ffd5b611bb173ffffffffffffffffffffffffffffffffffffffff831630611ef7565b8111156109d4576109d47f42e1bedf00000000000000000000000000000000000000000000000000000000611b89565b5f612710821115611c1657611c167f197f19620000000000000000000000000000000000000000000000000000000083611f2a565b612710611c238385612607565b611c2d919061261e565b9392505050565b5f80611c466040840160208501612292565b604080515f92835281860135602090815260609687013583529583208352949091209390525090919050565b5f8315611ca2578360051b8501855b803580851160051b94855260209485185260405f209301818110611c815750505b501492915050565b5f5f611cb7858585611f36565b915091508115611d19576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260248101829052604481018490526064016102e3565b5050505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af18060015f51141661118257803d853b15171061118257633e3f8f735f526004601cfd5b6335278d125f526004601cfd5b60018201611d8a6040830160208401612321565b815464ffffffffff9190911674010000000000000000000000000000000000000000027fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff909116178155611de46060830160408401612321565b815464ffffffffff91909116790100000000000000000000000000000000000000000000000000027fffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff9091161781556080820135600182015560c08201356003820155611e546020830183612292565b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116178155611ea46080830160608401612725565b815461ffff919091167e01000000000000000000000000000000000000000000000000000000000000027dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091161790555050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b815f528060045260245ffd5b5f82815260208490526040902080548281109182611f545783820381555b50935093915050565b73ffffffffffffffffffffffffffffffffffffffff811681146102f5575f5ffd5b5f5f60408385031215611f8f575f5ffd5b8235611f9a81611f5d565b946020939093013593505050565b5f60e0828403128015611fb9575f5ffd5b509092915050565b5f60208284031215611fd1575f5ffd5b5035919050565b60e0810161026f828473ffffffffffffffffffffffffffffffffffffffff815116825264ffffffffff602082015116602083015264ffffffffff604082015116604083015261ffff60608201511660608301526080810151608083015260a081015160a083015260c081015160c08301525050565b5f60a0828403121561205d575f5ffd5b50919050565b61ffff811681146102f5575f5ffd5b803561207d81612063565b919050565b5f5f60408385031215612093575f5ffd5b823567ffffffffffffffff8111156120a9575f5ffd5b6120b58582860161204d565b92505060208301356120c681612063565b809150509250929050565b803565ffffffffffff8116811461207d575f5ffd5b5f5f5f606084860312156120f8575f5ffd5b833567ffffffffffffffff81111561210e575f5ffd5b61211a8682870161204d565b935050602084013561212b81611f5d565b9150612139604085016120d1565b90509250925092565b602080825282518282018190525f918401906040840190835b818110156121eb576121d583855173ffffffffffffffffffffffffffffffffffffffff815116825264ffffffffff602082015116602083015264ffffffffff604082015116604083015261ffff60608201511660608301526080810151608083015260a081015160a083015260c081015160c08301525050565b6020939093019260e0929092019160010161215b565b509095945050505050565b5f5f5f60608486031215612208575f5ffd5b833561221381611f5d565b925061212b602085016120d1565b5f5f60208385031215612232575f5ffd5b823567ffffffffffffffff811115612248575f5ffd5b8301601f81018513612258575f5ffd5b803567ffffffffffffffff81111561226e575f5ffd5b85602060e083028401011115612282575f5ffd5b6020919091019590945092505050565b5f602082840312156122a2575f5ffd5b8135611c2d81611f5d565b5f602082840312156122bd575f5ffd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b65ffffffffffff818116838216019081111561026f5761026f6122c4565b64ffffffffff811681146102f5575f5ffd5b5f60208284031215612331575f5ffd5b8135611c2d8161230f565b5f813561026f8161230f565b5f813561026f81612063565b813561235f81611f5d565b73ffffffffffffffffffffffffffffffffffffffff81167fffffffffffffffffffffffff00000000000000000000000000000000000000008354161782555060208201356123ac8161230f565b81547fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff1660a09190911b78ffffffffff0000000000000000000000000000000000000000161781556124526124036040840161233c565b82547fffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff1660c89190911b7dffffffffff0000000000000000000000000000000000000000000000000016178255565b6124b061246160608401612348565b82547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660f09190911b7fffff00000000000000000000000000000000000000000000000000000000000016178255565b6080820135600182015560a0820135600282015560c090910135600390910155565b80356124dd81611f5d565b73ffffffffffffffffffffffffffffffffffffffff16825260208101356125038161230f565b64ffffffffff166020830152604081013561251d8161230f565b64ffffffffff16604083015261253560608201612072565b61ffff1660608301526080818101359083015260a0808201359083015260c090810135910152565b60e0810161026f82846124d2565b8082018082111561026f5761026f6122c4565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126125b1575f5ffd5b83018035915067ffffffffffffffff8211156125cb575f5ffd5b6020019150600581901b36038213156125e2575f5ffd5b9250929050565b65ffffffffffff828116828216039081111561026f5761026f6122c4565b808202811582820484141761026f5761026f6122c4565b5f82612651577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b500490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f816126be576126be6122c4565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b602080825281018290525f8360408301825b8581101561271b5761270882846124d2565b60e09283019291909101906001016126f6565b5095945050505050565b5f60208284031215612735575f5ffd5b8135611c2d8161206356";

type DropFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DropFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DropFacet__factory extends ContractFactory {
  constructor(...args: DropFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DropFacet> {
    return super.deploy(overrides || {}) as Promise<DropFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DropFacet {
    return super.attach(address) as DropFacet;
  }
  override connect(signer: Signer): DropFacet__factory {
    return super.connect(signer) as DropFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DropFacetInterface {
    return new utils.Interface(_abi) as DropFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DropFacet {
    return new Contract(address, _abi, signerOrProvider) as DropFacet;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DropFacet, DropFacetInterface } from "../DropFacet";

const _abi = [
  {
    type: "function",
    name: "__DropFacet_init",
    inputs: [
      {
        name: "rewardsDistribution",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addClaimCondition",
    inputs: [
      {
        name: "condition",
        type: "tuple",
        internalType: "struct DropGroup.ClaimCondition",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimAndStake",
    inputs: [
      {
        name: "req",
        type: "tuple",
        internalType: "struct DropClaim.Claim",
        components: [
          {
            name: "conditionId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "account",
            type: "address",
            internalType: "address",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "points",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "proof",
            type: "bytes32[]",
            internalType: "bytes32[]",
          },
        ],
      },
      {
        name: "delegatee",
        type: "address",
        internalType: "address",
      },
      {
        name: "deadline",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimWithPenalty",
    inputs: [
      {
        name: "req",
        type: "tuple",
        internalType: "struct DropClaim.Claim",
        components: [
          {
            name: "conditionId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "account",
            type: "address",
            internalType: "address",
          },
          {
            name: "recipient",
            type: "address",
            internalType: "address",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "points",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "proof",
            type: "bytes32[]",
            internalType: "bytes32[]",
          },
        ],
      },
      {
        name: "expectedPenaltyBps",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getActiveClaimConditionId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getClaimConditionById",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "condition",
        type: "tuple",
        internalType: "struct DropGroup.ClaimCondition",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getClaimConditions",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct DropGroup.ClaimCondition[]",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDepositIdByWallet",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "conditionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSupplyClaimedByWallet",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "conditionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setClaimConditions",
    inputs: [
      {
        name: "conditions",
        type: "tuple[]",
        internalType: "struct DropGroup.ClaimCondition[]",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "DropFacet_ClaimConditionAdded",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "condition",
        type: "tuple",
        indexed: false,
        internalType: "struct DropGroup.ClaimCondition",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DropFacet_ClaimConditionsUpdated",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "conditions",
        type: "tuple[]",
        indexed: false,
        internalType: "struct DropGroup.ClaimCondition[]",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DropFacet_Claimed_And_Staked",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DropFacet_Claimed_WithPenalty",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceAdded",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceRemoved",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "DropFacet__AlreadyClaimed",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__CannotSetClaimConditions",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__ClaimConditionsNotInAscendingOrder",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__ClaimHasEnded",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__ClaimHasNotStarted",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__CurrencyNotSet",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__ExceedsMaxClaimableSupply",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__InsufficientBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__InvalidProof",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__InvalidRecipient",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__MerkleRootNotSet",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__NoActiveClaimCondition",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__NotClaimingAccount",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__QuantityMustBeGreaterThanZero",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__RewardsDistributionNotSet",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__UnexpectedPenaltyBps",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC20InsufficientBalance",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "Initializable_InInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_NotInInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_AlreadySupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_NotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Ownable__NotOwner",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "Ownable__ZeroAddress",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b5060156019565b60bd565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef520008054640100000000900460ff16156064576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff908116101560ba57805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b6126c9806100ca5f395ff3fe608060405234801561000f575f5ffd5b50600436106100b9575f3560e01c80637a05557c11610072578063c68907de11610058578063c68907de146101b6578063c9ac9368146101be578063d1e5b9fe146101d1575f5ffd5b80637a05557c1461013e578063a1550b2f146101a1575f5ffd5b806333d42dc6116100a257806333d42dc6146100f8578063648433931461010b5780636f8934f41461011e575f5ffd5b80630bd27685146100bd57806314c9fcbc146100e3575b5f5ffd5b6100d06100cb366004611e9b565b6101e4565b6040519081526020015b60405180910390f35b6100f66100f1366004611f4c565b610570565b005b6100d0610106366004611f67565b610608565b6100f6610119366004611f91565b61065d565b61013161012c366004611faa565b6106dd565b6040516100da9190611fc1565b6100d061014c366004611f67565b5f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020908152604080832073ffffffffffffffffffffffffffffffffffffffff949094168352929052206001015490565b6101a9610807565b6040516100da9190612036565b6100d0610816565b6100f66101cc3660046120ea565b61081f565b6100d06101df36600461217a565b61089f565b5f6101f56040870160208801611f4c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610250576102507f50db47c300000000000000000000000000000000000000000000000000000000610b4f565b5f6102616060880160408901611f4c565b73ffffffffffffffffffffffffffffffffffffffff16036102a5576102a57f5da50bdb00000000000000000000000000000000000000000000000000000000610b4f565b5084355f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab01602052604090206060860135906102e48183610b57565b60048101546102f4908890610d24565b61030f6103076040890160208a01611f4c565b829084610d78565b7f25a22d57af6f735dc617e9781981413da3bc5a71376b4237270a04c144aaf70061034f61034360408a0160208b01611f4c565b829060808b0135610dec565b5f61036060408a0160208b01611f4c565b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040516103a791815260200190565b60405180910390a360018201546103d49073ffffffffffffffffffffffffffffffffffffffff1684610e08565b5f7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab005473ffffffffffffffffffffffffffffffffffffffff1663e69f949561041b86610e4d565b8a61042c60408e0160208f01611f4c565b8d602001602081019061043f9190611f4c565b8c8c8c6040518863ffffffff1660e01b815260040161046497969594939291906121c9565b6020604051808303815f875af1158015610480573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a49190612288565b90505f83816104b960408d0160208e01611f4c565b73ffffffffffffffffffffffffffffffffffffffff16815260208082019290925260409081015f206001810185905592506104f991908c01908c01611f4c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff168b5f01357ff08f338c8905e343697a35fef11af2f611a36658016e0653521354c865373ea78860405161055b91815260200190565b60405180910390a45050505095945050505050565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef5200054640100000000900460ff166105d3576040517f77a399b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105fc7f369b2f3f00000000000000000000000000000000000000000000000000000000610e6e565b61060581610fc3565b50565b5f8181527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020908152604080832073ffffffffffffffffffffffffffffffffffffffff861684529091529020545b92915050565b7f4675fa8241f86f37157864d3d49b85ad4b164352c516da28e1678a90470ae3005473ffffffffffffffffffffffffffffffffffffffff1633146106d4576040517f65f490650000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b61060581610fcc565b604080515f80825260208201819052818301819052606082018190526080820181905260a0820181905260c082015290819052610746825f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020526040902060010190565b6040805160e081018252825473ffffffffffffffffffffffffffffffffffffffff8116825274010000000000000000000000000000000000000000810464ffffffffff9081166020840152790100000000000000000000000000000000000000000000000000820416928201929092527e0100000000000000000000000000000000000000000000000000000000000090910461ffff16606082015260018201546080820152600282015460a082015260039091015460c082015292915050565b6060610811611229565b905090565b5f610811611485565b7f4675fa8241f86f37157864d3d49b85ad4b164352c516da28e1678a90470ae3005473ffffffffffffffffffffffffffffffffffffffff163314610891576040517f65f490650000000000000000000000000000000000000000000000000000000081523360048201526024016106cb565b61089b8282611664565b5050565b5f6108b06040840160208501611f4c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461090b5761090b7f50db47c300000000000000000000000000000000000000000000000000000000610b4f565b5f61091c6060850160408601611f4c565b73ffffffffffffffffffffffffffffffffffffffff1603610960576109607f5da50bdb00000000000000000000000000000000000000000000000000000000610b4f565b82355f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020526040902060018101546109c9906060860135907e01000000000000000000000000000000000000000000000000000000000000900461ffff168561193a565b91506109d58183610b57565b60048101546109e5908590610d24565b6109f86103076040860160208701611f4c565b7f25a22d57af6f735dc617e9781981413da3bc5a71376b4237270a04c144aaf700610a38610a2c6040870160208801611f4c565b82906080880135610dec565b5f610a496040870160208801611f4c565b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610a9091815260200190565b60405180910390a3610acd610aab6060870160408801611f4c565b600184015473ffffffffffffffffffffffffffffffffffffffff16908561199a565b610add6040860160208701611f4c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16865f01357f970af01ab25e63f8131277859b2c17e9a07c2eb257e6db87449000d91c0f840186604051610b3f91815260200190565b60405180910390a4505092915050565b805f5260045ffd5b60048201546001830190610b8e57610b8e7ff235dd0100000000000000000000000000000000000000000000000000000000610b4f565b815f03610bbe57610bbe7fdf4e56a500000000000000000000000000000000000000000000000000000000610b4f565b805473ffffffffffffffffffffffffffffffffffffffff16610c0357610c037fe211c34c00000000000000000000000000000000000000000000000000000000610b4f565b8060010154828260020154610c1891906122cc565b1115610c4757610c477fb0b4e6d400000000000000000000000000000000000000000000000000000000610b4f565b805474010000000000000000000000000000000000000000900464ffffffffff16421015610c9857610c987f4b3950d800000000000000000000000000000000000000000000000000000000610b4f565b8054790100000000000000000000000000000000000000000000000000900464ffffffffff1615801590610cf157508054790100000000000000000000000000000000000000000000000000900464ffffffffff164210155b15610d1f57610d1f7fd87c5b1d00000000000000000000000000000000000000000000000000000000610b4f565b505050565b5f610d2e836119ed565b9050610d4b8282610d4260a08701876122df565b90929091611a2c565b610d1f57610d1f7f592fca3400000000000000000000000000000000000000000000000000000000610b4f565b73ffffffffffffffffffffffffffffffffffffffff82165f908152602084905260409020805415610dcc57610dcc7f7f76444f00000000000000000000000000000000000000000000000000000000610b4f565b81846001016002015f828254610de291906122cc565b9091555050555050565b610df7838383611a64565b600290920180549290920390915550565b61089b7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab005473ffffffffffffffffffffffffffffffffffffffff848116911683611ada565b5f6c010000000000000000000000008210610e6a57610e6a611b23565b5090565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b00602052604090205460ff16610f42577fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b006020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610f74565b6040517ff2cfeefa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fffffffff000000000000000000000000000000000000000000000000000000008216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f22905f90a250565b61060581611b30565b7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab005465ffffffffffff7401000000000000000000000000000000000000000082048116917a0100000000000000000000000000000000000000000000000000009004165f61103a828461234a565b905065ffffffffffff82161561110d5765ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201165f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020526040812060010190506110b6604086016020870161237a565b815464ffffffffff918216740100000000000000000000000000000000000000009091049091161061110b5761110b7f7b10269c00000000000000000000000000000000000000000000000000000000610b4f565b505b61112761111d6020860186611f4c565b8560800135611bda565b836111638265ffffffffffff165f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020526040902090565b60010161117082826123ad565b5061117e905082600161234a565b7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab00805479ffffffffffffffffffffffffffffffffffffffffffffffffffff167a01000000000000000000000000000000000000000000000000000065ffffffffffff93841602179055604051908216907fb2d7f7a48138c995ec7024ac4e176fad4415d42377559f3178e3830941b048419061121b9087906125b6565b60405180910390a250505050565b60605f5f6112987feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab005474010000000000000000000000000000000000000000810465ffffffffffff908116927a0100000000000000000000000000000000000000000000000000009092041690565b915091508065ffffffffffff1667ffffffffffffffff8111156112bd576112bd6125c4565b60405190808252806020026020018201604052801561134157816020015b6040805160e0810182525f8082526020808301829052928201819052606082018190526080820181905260a0820181905260c082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816112db5790505b5092505f5b8165ffffffffffff1681101561147f5761139d61136b8265ffffffffffff86166122cc565b5f9081527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab016020526040902060010190565b6040805160e081018252825473ffffffffffffffffffffffffffffffffffffffff8116825274010000000000000000000000000000000000000000810464ffffffffff9081166020840152790100000000000000000000000000000000000000000000000000820416928201929092527e0100000000000000000000000000000000000000000000000000000000000090910461ffff16606082015260018201546080820152600282015460a082015260039091015460c0820152845185908390811061146c5761146c6125f1565b6020908102919091010152600101611346565b50505090565b5f5f5f6114f37feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab005474010000000000000000000000000000000000000000810465ffffffffffff908116927a0100000000000000000000000000000000000000000000000000009092041690565b915091508065ffffffffffff165f0361152f5761152f7f44d5f09400000000000000000000000000000000000000000000000000000000610b4f565b65ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83830101165f6115688260016122cc565b90505b8365ffffffffffff1681111561163a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff015f8181527feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab0160205260409020600101805464ffffffffff7901000000000000000000000000000000000000000000000000008204811691740100000000000000000000000000000000000000009004164210801590611623575080158061162357508042105b1561163357509095945050505050565b505061156b565b5061147f7f44d5f09400000000000000000000000000000000000000000000000000000000610b4f565b7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab00805465ffffffffffff7401000000000000000000000000000000000000000082048116917a01000000000000000000000000000000000000000000000000000090048116906116d485846122cc565b1115611703576117037fae4eeeb100000000000000000000000000000000000000000000000000000000610b4f565b835f80805b8365ffffffffffff1681101561183f573689898381811061172b5761172b6125f1565b905060e002019050806020016020810190611746919061237a565b64ffffffffff168465ffffffffffff1610611784576117847f7b10269c00000000000000000000000000000000000000000000000000000000610b4f565b5f600189018161179c8565ffffffffffff8c166122cc565b815260208101919091526040015f20600381015490915060808301358111156117e8576117e87fae4eeeb100000000000000000000000000000000000000000000000000000000610b4f565b6117f28284611c2a565b611802604084016020850161237a565b64ffffffffff1695506118196080840135866122cc565b945061183161182b6020850185611f4c565b86611bda565b505050806001019050611708565b50855465ffffffffffff8085167a010000000000000000000000000000000000000000000000000000810279ffffffffffffffffffffffffffffffffffffffffffffffffffff909316929092178855851611156118ee5765ffffffffffff83165b8465ffffffffffff168110156118ec5765ffffffffffff861681015f908152600180890160205260408220808201839055600281018390556003810183905560040191909155016118a0565b505b8465ffffffffffff167ff91c9c864018770f197086e7e64354d3a54259e85887953cbbe7d02ba32aba8e898960405161192892919061261e565b60405180910390a25050505050505050565b5f8161ffff168361ffff1614611973576119737f70566c0000000000000000000000000000000000000000000000000000000000610b4f565b61ffff831615611992575f61198c858561ffff16611dab565b90940393505b509192915050565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af18060015f5114166119e357803d853b1517106119e3576390b8ec185f526004601cfd5b505f603452505050565b5f806119ff6040840160208501611f4c565b604080515f9283526060808701356020908152608090970135835283208352949091209390525090919050565b5f8315611a5c578360051b8501855b803580851160051b94855260209485185260405f209301818110611a3b5750505b501492915050565b5f5f611a71858585611dfe565b915091508115611ad3576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260248101829052604481018490526064016106cb565b5050505050565b81601452806034526f095ea7b30000000000000000000000005f5260205f604460105f875af18060015f5114166119e357803d853b1517106119e357633e3f8f735f526004601cfd5b6335278d125f526004601cfd5b73ffffffffffffffffffffffffffffffffffffffff8116611b7457611b747fe3224c7800000000000000000000000000000000000000000000000000000000610b4f565b7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab0080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b611bfa73ffffffffffffffffffffffffffffffffffffffff831630611e25565b81111561089b5761089b7f42e1bedf00000000000000000000000000000000000000000000000000000000610b4f565b60018201611c3e604083016020840161237a565b815464ffffffffff9190911674010000000000000000000000000000000000000000027fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff909116178155611c98606083016040840161237a565b815464ffffffffff91909116790100000000000000000000000000000000000000000000000000027fffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff9091161781556080820135600182015560c08201356003820155611d086020830183611f4c565b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116178155611d58608083016060840161265f565b815461ffff919091167e01000000000000000000000000000000000000000000000000000000000000027dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091161790555050565b5f612710821115611de057611de07f197f19620000000000000000000000000000000000000000000000000000000083611e58565b612710611ded838561267a565b611df79190612691565b9392505050565b5f82815260208490526040902080548281109182611e1c5783820381555b50935093915050565b5f816014526f70a082310000000000000000000000005f5260208060246010865afa601f3d111660205102905092915050565b815f528060045260245ffd5b5f60c08284031215611e74575f5ffd5b50919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610605575f5ffd5b5f5f5f5f5f60808688031215611eaf575f5ffd5b853567ffffffffffffffff811115611ec5575f5ffd5b611ed188828901611e64565b9550506020860135611ee281611e7a565b935060408601359250606086013567ffffffffffffffff811115611f04575f5ffd5b8601601f81018813611f14575f5ffd5b803567ffffffffffffffff811115611f2a575f5ffd5b886020828401011115611f3b575f5ffd5b959894975092955050506020019190565b5f60208284031215611f5c575f5ffd5b8135611df781611e7a565b5f5f60408385031215611f78575f5ffd5b8235611f8381611e7a565b946020939093013593505050565b5f60e0828403128015611fa2575f5ffd5b509092915050565b5f60208284031215611fba575f5ffd5b5035919050565b60e08101610657828473ffffffffffffffffffffffffffffffffffffffff815116825264ffffffffff602082015116602083015264ffffffffff604082015116604083015261ffff60608201511660608301526080810151608083015260a081015160a083015260c081015160c08301525050565b602080825282518282018190525f918401906040840190835b818110156120df576120c983855173ffffffffffffffffffffffffffffffffffffffff815116825264ffffffffff602082015116602083015264ffffffffff604082015116604083015261ffff60608201511660608301526080810151608083015260a081015160a083015260c081015160c08301525050565b6020939093019260e0929092019160010161204f565b509095945050505050565b5f5f602083850312156120fb575f5ffd5b823567ffffffffffffffff811115612111575f5ffd5b8301601f81018513612121575f5ffd5b803567ffffffffffffffff811115612137575f5ffd5b85602060e08302840101111561214b575f5ffd5b6020919091019590945092505050565b61ffff81168114610605575f5ffd5b80356121758161215b565b919050565b5f5f6040838503121561218b575f5ffd5b823567ffffffffffffffff8111156121a1575f5ffd5b6121ad85828601611e64565b92505060208301356121be8161215b565b809150509250929050565b6bffffffffffffffffffffffff8816815273ffffffffffffffffffffffffffffffffffffffff8716602082015273ffffffffffffffffffffffffffffffffffffffff8616604082015273ffffffffffffffffffffffffffffffffffffffff8516606082015283608082015260c060a08201528160c0820152818360e08301375f81830160e090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601019695505050505050565b5f60208284031215612298575f5ffd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b808201808211156106575761065761229f565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612312575f5ffd5b83018035915067ffffffffffffffff82111561232c575f5ffd5b6020019150600581901b3603821315612343575f5ffd5b9250929050565b65ffffffffffff81811683821601908111156106575761065761229f565b64ffffffffff81168114610605575f5ffd5b5f6020828403121561238a575f5ffd5b8135611df781612368565b5f813561065781612368565b5f81356106578161215b565b81356123b881611e7a565b73ffffffffffffffffffffffffffffffffffffffff81167fffffffffffffffffffffffff000000000000000000000000000000000000000083541617825550602082013561240581612368565b81547fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff1660a09190911b78ffffffffff0000000000000000000000000000000000000000161781556124ab61245c60408401612395565b82547fffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff1660c89190911b7dffffffffff0000000000000000000000000000000000000000000000000016178255565b6125096124ba606084016123a1565b82547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660f09190911b7fffff00000000000000000000000000000000000000000000000000000000000016178255565b6080820135600182015560a0820135600282015560c090910135600390910155565b803561253681611e7a565b73ffffffffffffffffffffffffffffffffffffffff168252602081013561255c81612368565b64ffffffffff166020830152604081013561257681612368565b64ffffffffff16604083015261258e6060820161216a565b61ffff1660608301526080818101359083015260a0808201359083015260c090810135910152565b60e08101610657828461252b565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b602080825281018290525f8360408301825b8581101561265557612642828461252b565b60e0928301929190910190600101612630565b5095945050505050565b5f6020828403121561266f575f5ffd5b8135611df78161215b565b80820281158282048414176106575761065761229f565b5f826126c4577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b50049056";

type DropFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DropFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DropFacet__factory extends ContractFactory {
  constructor(...args: DropFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DropFacet> {
    return super.deploy(overrides || {}) as Promise<DropFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DropFacet {
    return super.attach(address) as DropFacet;
  }
  override connect(signer: Signer): DropFacet__factory {
    return super.connect(signer) as DropFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DropFacetInterface {
    return new utils.Interface(_abi) as DropFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DropFacet {
    return new Contract(address, _abi, signerOrProvider) as DropFacet;
  }
}

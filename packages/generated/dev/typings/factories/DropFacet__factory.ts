/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DropFacet, DropFacetInterface } from "../DropFacet";

const _abi = [
  {
    type: "function",
    name: "__DropFacet_init",
    inputs: [
      {
        name: "rewardsDistribution",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addClaimCondition",
    inputs: [
      {
        name: "condition",
        type: "tuple",
        internalType: "struct DropClaimLib.ClaimCondition",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimAndStake",
    inputs: [
      {
        name: "claim",
        type: "tuple",
        internalType: "struct DropClaimLib.Claim",
        components: [
          {
            name: "conditionId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "account",
            type: "address",
            internalType: "address",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "points",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "proof",
            type: "bytes32[]",
            internalType: "bytes32[]",
          },
        ],
      },
      {
        name: "delegatee",
        type: "address",
        internalType: "address",
      },
      {
        name: "deadline",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claimWithPenalty",
    inputs: [
      {
        name: "claim",
        type: "tuple",
        internalType: "struct DropClaimLib.Claim",
        components: [
          {
            name: "conditionId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "account",
            type: "address",
            internalType: "address",
          },
          {
            name: "quantity",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "points",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "proof",
            type: "bytes32[]",
            internalType: "bytes32[]",
          },
        ],
      },
      {
        name: "expectedPenaltyBps",
        type: "uint16",
        internalType: "uint16",
      },
    ],
    outputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getActiveClaimConditionId",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getClaimConditionById",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "condition",
        type: "tuple",
        internalType: "struct DropClaimLib.ClaimCondition",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getClaimConditions",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct DropClaimLib.ClaimCondition[]",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDepositIdByWallet",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "conditionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSupplyClaimedByWallet",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "conditionId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "setClaimConditions",
    inputs: [
      {
        name: "conditions",
        type: "tuple[]",
        internalType: "struct DropClaimLib.ClaimCondition[]",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "DropFacet_ClaimConditionAdded",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "condition",
        type: "tuple",
        indexed: false,
        internalType: "struct DropClaimLib.ClaimCondition",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DropFacet_ClaimConditionsUpdated",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "conditions",
        type: "tuple[]",
        indexed: false,
        internalType: "struct DropClaimLib.ClaimCondition[]",
        components: [
          {
            name: "currency",
            type: "address",
            internalType: "address",
          },
          {
            name: "startTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "endTimestamp",
            type: "uint40",
            internalType: "uint40",
          },
          {
            name: "penaltyBps",
            type: "uint16",
            internalType: "uint16",
          },
          {
            name: "maxClaimableSupply",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "supplyClaimed",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "merkleRoot",
            type: "bytes32",
            internalType: "bytes32",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DropFacet_Claimed_And_Staked",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DropFacet_Claimed_WithPenalty",
    inputs: [
      {
        name: "conditionId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "claimer",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "account",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceAdded",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceRemoved",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "DropFacet__AlreadyClaimed",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__CannotSetClaimConditions",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__ClaimConditionsNotInAscendingOrder",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__ClaimHasEnded",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__ClaimHasNotStarted",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__CurrencyNotSet",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__ExceedsMaxClaimableSupply",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__InsufficientBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__InvalidProof",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__MerkleRootNotSet",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__NoActiveClaimCondition",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__PointsMustBeGreaterThanZero",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__QuantityMustBeGreaterThanZero",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__RewardsDistributionNotSet",
    inputs: [],
  },
  {
    type: "error",
    name: "DropFacet__UnexpectedPenaltyBps",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC20InsufficientBalance",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "Initializable_InInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_NotInInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_AlreadySupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_NotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Ownable__NotOwner",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "Ownable__ZeroAddress",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b5060156019565b60bd565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef520008054640100000000900460ff16156064576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff908116101560ba57805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b612677806100ca5f395ff3fe608060405234801561000f575f5ffd5b50600436106100b9575f3560e01c806381045e3611610072578063c68907de11610058578063c68907de14610166578063c9ac93681461016e578063fff9637414610181575f5ffd5b806381045e361461013e578063a1550b2f14610151575f5ffd5b806364843393116100a257806364843393146100f85780636f8934f41461010b5780637a05557c1461012b575f5ffd5b806314c9fcbc146100bd57806333d42dc6146100d2575b5f5ffd5b6100d06100cb366004611de6565b610194565b005b6100e56100e0366004611e01565b61022c565b6040519081526020015b60405180910390f35b6100d0610106366004611e2b565b610291565b61011e610119366004611e44565b610332565b6040516100ef9190611e5b565b6100e5610139366004611e01565b61045d565b6100e561014c366004611eff565b610494565b61015961061a565b6040516100ef9190611f4e565b6100e561064a565b6100d061017c366004612002565b610674565b6100e561018f366004612073565b610715565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef5200054640100000000900460ff166101f7576040517f77a399b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102207f9251dd0600000000000000000000000000000000000000000000000000000000610956565b61022981610aab565b50565b5f61028782847feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab005b5f9283526001016020908152604080842073ffffffffffffffffffffffffffffffffffffffff9093168452919052902090565b5490505b92915050565b7f4675fa8241f86f37157864d3d49b85ad4b164352c516da28e1678a90470ae3005473ffffffffffffffffffffffffffffffffffffffff163314610308576040517f65f490650000000000000000000000000000000000000000000000000000000081523360048201526024015b60405180910390fd5b6102297feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab0082610ad5565b604080515f80825260208201819052818301819052606082018190526080820181905260a0820181905260c08201529081905261039c827feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab005b5f9182526002016020526040902090565b6040805160e081018252825473ffffffffffffffffffffffffffffffffffffffff8116825274010000000000000000000000000000000000000000810464ffffffffff9081166020840152790100000000000000000000000000000000000000000000000000820416928201929092527e0100000000000000000000000000000000000000000000000000000000000090910461ffff16606082015260018201546080820152600282015460a082015260039091015460c082015292915050565b5f61048982847feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab00610254565b600101549392505050565b5f806104c184357feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab0061038b565b90505f6104ff85356104d96040880160208901611de6565b7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab00610254565b905061050c828287610d87565b610517828686611046565b92506105248282856110da565b7f25a22d57af6f735dc617e9781981413da3bc5a71376b4237270a04c144aaf7006105646105586040880160208901611de6565b829060608901356110fa565b82546105979073ffffffffffffffffffffffffffffffffffffffff163061059160408a0160208b01611de6565b87611116565b6105a76040870160208801611de6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16875f01357f970af01ab25e63f8131277859b2c17e9a07c2eb257e6db87449000d91c0f84018760405161060991815260200190565b60405180910390a450505092915050565b60606106457feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab006111af565b905090565b5f6106457feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab006113da565b7f4675fa8241f86f37157864d3d49b85ad4b164352c516da28e1678a90470ae3005473ffffffffffffffffffffffffffffffffffffffff1633146106e6576040517f65f490650000000000000000000000000000000000000000000000000000000081523360048201526024016102ff565b6107117feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab008383611549565b5050565b5f8061074287357feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab0061038b565b90505f61075a88356104d960408b0160208c01611de6565b905061076782828a610d87565b610776828260408b01356110da565b7f25a22d57af6f735dc617e9781981413da3bc5a71376b4237270a04c144aaf7006107b66107aa60408b0160208c01611de6565b829060608c01356110fa565b6107e57feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab008460408c01356117fb565b5f7feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab005473ffffffffffffffffffffffffffffffffffffffff1663e69f949561083060408d0135611895565b8b8d60200160208101906108449190611de6565b8e60200160208101906108579190611de6565b8d8d8d6040518863ffffffff1660e01b815260040161087c9796959493929190612124565b6020604051808303815f875af1158015610898573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108bc91906121e3565b6001840181905590506108d560408b0160208c01611de6565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff168b5f01357ff08f338c8905e343697a35fef11af2f611a36658016e0653521354c865373ea78d6040013560405161093b91815260200190565b60405180910390a45050506040909601359695505050505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b00602052604090205460ff16610a2a577fffffffff0000000000000000000000000000000000000000000000000000000081165f9081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b006020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055610a5c565b6040517ff2cfeefa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fffffffff000000000000000000000000000000000000000000000000000000008216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f22905f90a250565b6102297feda6a1e2ce6f1639b6d3066254ca87a2daf51c4f0ad5038d408bbab6cc2cab00826118b6565b815465ffffffffffff7401000000000000000000000000000000000000000082048116917a0100000000000000000000000000000000000000000000000000009004165f610b238284612227565b905065ffffffffffff821615610cb0576040805160e0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091525065ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201165f90815260028087016020908152604092839020835160e081018552815473ffffffffffffffffffffffffffffffffffffffff8116825264ffffffffff7401000000000000000000000000000000000000000082048116838601527901000000000000000000000000000000000000000000000000008204168287015261ffff7e01000000000000000000000000000000000000000000000000000000000000909104166060820152600182015460808201529281015460a08401526003015460c08301529091610c6d91908701908701612257565b64ffffffffff16816020015164ffffffffff1610610cae57610cae7f7b10269c0000000000000000000000000000000000000000000000000000000061193c565b505b610cca610cc06020860186611de6565b8560800135611944565b65ffffffffffff81165f90815260028601602052604090208490610cee828261228a565b50610cfc9050826001612227565b855479ffffffffffffffffffffffffffffffffffffffffffffffffffff167a01000000000000000000000000000000000000000000000000000065ffffffffffff92831602178655604051908216907fb2d7f7a48138c995ec7024ac4e176fad4415d42377559f3178e3830941b0484190610d78908790612493565b60405180910390a25050505050565b6003830154610db957610db97ff235dd010000000000000000000000000000000000000000000000000000000061193c565b80604001355f03610ded57610ded7fdf4e56a50000000000000000000000000000000000000000000000000000000061193c565b80606001355f03610e2157610e217f14574b490000000000000000000000000000000000000000000000000000000061193c565b825473ffffffffffffffffffffffffffffffffffffffff16610e6657610e667fe211c34c0000000000000000000000000000000000000000000000000000000061193c565b826001015481604001358460020154610e7f91906124a1565b1115610eae57610eae7fb0b4e6d40000000000000000000000000000000000000000000000000000000061193c565b825474010000000000000000000000000000000000000000900464ffffffffff16421015610eff57610eff7f4b3950d80000000000000000000000000000000000000000000000000000000061193c565b8254790100000000000000000000000000000000000000000000000000900464ffffffffff1615801590610f5857508254790100000000000000000000000000000000000000000000000000900464ffffffffff164210155b15610f8657610f867fd87c5b1d0000000000000000000000000000000000000000000000000000000061193c565b815415610fb657610fb67f7f76444f0000000000000000000000000000000000000000000000000000000061193c565b5f610ff0610fca6040840160208501611de6565b604080515f92835281860135602090815260608088013584528420845290922091905290565b6003850154909150611013908261100a60808601866124b4565b90929091611a00565b611040576110407f592fca340000000000000000000000000000000000000000000000000000000061193c565b50505050565b82545f9061ffff7e01000000000000000000000000000000000000000000000000000000000000909104811690831681146110a4576110a47f70566c000000000000000000000000000000000000000000000000000000000061193c565b6040840135915061ffff8116156110d2575f6110c885604001358361ffff16611a38565b6040860135039250505b509392505050565b80836002015f8282546110ed91906124a1565b9091555050815401905550565b611105838383611ae9565b600290920180549290920390915550565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160315611040573073ffffffffffffffffffffffffffffffffffffffff84160361118d5761118873ffffffffffffffffffffffffffffffffffffffff85168383611b5f565b611040565b61104073ffffffffffffffffffffffffffffffffffffffff8516848484611bb2565b80546060907a010000000000000000000000000000000000000000000000000000900465ffffffffffff1667ffffffffffffffff8111156111f2576111f261251f565b60405190808252806020026020018201604052801561127657816020015b6040805160e0810182525f8082526020808301829052928201819052606082018190526080820181905260a0820181905260c082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816112105790505b5090505f5b82547a010000000000000000000000000000000000000000000000000000900465ffffffffffff168110156113d457825460028401905f906112de90849074010000000000000000000000000000000000000000900465ffffffffffff166124a1565b815260208082019290925260409081015f20815160e081018352815473ffffffffffffffffffffffffffffffffffffffff8116825274010000000000000000000000000000000000000000810464ffffffffff908116958301959095527901000000000000000000000000000000000000000000000000008104909416928101929092527e0100000000000000000000000000000000000000000000000000000000000090920461ffff16606082015260018201546080820152600282015460a082015260039091015460c082015282518390839081106113c1576113c161254c565b602090810291909101015260010161127b565b50919050565b80545f9065ffffffffffff7401000000000000000000000000000000000000000082048116917a01000000000000000000000000000000000000000000000000000090041680830361144f5761144f7f44d5f0940000000000000000000000000000000000000000000000000000000061193c565b65ffffffffffff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8383010116805b8365ffffffffffff168110611517575f8181526002870160205260409020805464ffffffffff79010000000000000000000000000000000000000000000000000082048116917401000000000000000000000000000000000000000090041642108015906114f357508015806114f357508042105b156115045750909695505050505050565b50508061151090612579565b905061147e565b506115417f44d5f0940000000000000000000000000000000000000000000000000000000061193c565b505050919050565b825465ffffffffffff7401000000000000000000000000000000000000000082048116917a010000000000000000000000000000000000000000000000000000900481169061159884846124a1565b11156115c7576115c77fae4eeeb10000000000000000000000000000000000000000000000000000000061193c565b825f80805b8365ffffffffffff1681101561170357368888838181106115ef576115ef61254c565b905060e00201905080602001602081019061160a9190612257565b64ffffffffff168465ffffffffffff1610611648576116487f7b10269c0000000000000000000000000000000000000000000000000000000061193c565b5f60028b01816116608565ffffffffffff8c166124a1565b81526020019081526020015f2090505f8160020154905082608001358111156116ac576116ac7fae4eeeb10000000000000000000000000000000000000000000000000000000061193c565b6116b68284611c14565b6116c66040840160208501612257565b64ffffffffff1695506116dd6080840135866124a1565b94506116f56116ef6020850185611de6565b86611944565b5050508060010190506115cc565b50875465ffffffffffff8085167a010000000000000000000000000000000000000000000000000000810279ffffffffffffffffffffffffffffffffffffffffffffffffffff909316929092178a55851611156117af5765ffffffffffff83165b8465ffffffffffff168110156117ad5765ffffffffffff861681015f9081526002808b016020526040822082815560018082018490559181018390556003019190915501611764565b505b8465ffffffffffff167ff91c9c864018770f197086e7e64354d3a54259e85887953cbbe7d02ba32aba8e88886040516117e99291906125ad565b60405180910390a25050505050505050565b815483546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201526024810184905291169063095ea7b3906044016020604051808303815f875af1158015611871573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061104091906125ee565b5f6c0100000000000000000000000082106118b2576118b2611d91565b5090565b73ffffffffffffffffffffffffffffffffffffffff81166118fa576118fa7fe3224c780000000000000000000000000000000000000000000000000000000061193c565b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116179055565b805f5260045ffd5b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa1580156119ac573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119d091906121e3565b811115610711576107117f42e1bedf0000000000000000000000000000000000000000000000000000000061193c565b5f8315611a30578360051b8501855b803580851160051b94855260209485185260405f209301818110611a0f5750505b501492915050565b5f612710821115611acb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f426173697320706f696e74732063616e6e6f74206578636565642031305f303060448201527f300000000000000000000000000000000000000000000000000000000000000060648201526084016102ff565b612710611ad8838561260d565b611ae29190612624565b9392505050565b5f5f611af6858585611d9e565b915091508115611b58576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260248101829052604481018490526064016102ff565b5050505050565b81601452806034526fa9059cbb0000000000000000000000005f5260205f604460105f875af18060015f511416611ba857803d853b151710611ba8576390b8ec185f526004601cfd5b505f603452505050565b60405181606052826040528360601b602c526f23b872dd000000000000000000000000600c5260205f6064601c5f895af18060015f511416611c0657803d873b151710611c0657637939f4245f526004601cfd5b505f60605260405250505050565b611c246040820160208301612257565b825464ffffffffff9190911674010000000000000000000000000000000000000000027fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff909116178255611c7e6060820160408301612257565b825464ffffffffff91909116790100000000000000000000000000000000000000000000000000027fffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff9091161782556080810135600183015560c08101356003830155611cee6020820182611de6565b82547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116178255611d3e608082016060830161265c565b825461ffff919091167e01000000000000000000000000000000000000000000000000000000000000027dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9091161790915550565b6335278d125f526004601cfd5b5f82815260208490526040902080548281109182611dbc5783820381555b50935093915050565b73ffffffffffffffffffffffffffffffffffffffff81168114610229575f5ffd5b5f60208284031215611df6575f5ffd5b8135611ae281611dc5565b5f5f60408385031215611e12575f5ffd5b8235611e1d81611dc5565b946020939093013593505050565b5f60e0828403128015611e3c575f5ffd5b509092915050565b5f60208284031215611e54575f5ffd5b5035919050565b60e0810161028b828473ffffffffffffffffffffffffffffffffffffffff815116825264ffffffffff602082015116602083015264ffffffffff604082015116604083015261ffff60608201511660608301526080810151608083015260a081015160a083015260c081015160c08301525050565b5f60a082840312156113d4575f5ffd5b61ffff81168114610229575f5ffd5b8035611efa81611ee0565b919050565b5f5f60408385031215611f10575f5ffd5b823567ffffffffffffffff811115611f26575f5ffd5b611f3285828601611ed0565b9250506020830135611f4381611ee0565b809150509250929050565b602080825282518282018190525f918401906040840190835b81811015611ff757611fe183855173ffffffffffffffffffffffffffffffffffffffff815116825264ffffffffff602082015116602083015264ffffffffff604082015116604083015261ffff60608201511660608301526080810151608083015260a081015160a083015260c081015160c08301525050565b6020939093019260e09290920191600101611f67565b509095945050505050565b5f5f60208385031215612013575f5ffd5b823567ffffffffffffffff811115612029575f5ffd5b8301601f81018513612039575f5ffd5b803567ffffffffffffffff81111561204f575f5ffd5b85602060e083028401011115612063575f5ffd5b6020919091019590945092505050565b5f5f5f5f5f60808688031215612087575f5ffd5b853567ffffffffffffffff81111561209d575f5ffd5b6120a988828901611ed0565b95505060208601356120ba81611dc5565b935060408601359250606086013567ffffffffffffffff8111156120dc575f5ffd5b8601601f810188136120ec575f5ffd5b803567ffffffffffffffff811115612102575f5ffd5b886020828401011115612113575f5ffd5b959894975092955050506020019190565b6bffffffffffffffffffffffff8816815273ffffffffffffffffffffffffffffffffffffffff8716602082015273ffffffffffffffffffffffffffffffffffffffff8616604082015273ffffffffffffffffffffffffffffffffffffffff8516606082015283608082015260c060a08201528160c0820152818360e08301375f81830160e090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601019695505050505050565b5f602082840312156121f3575f5ffd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b65ffffffffffff818116838216019081111561028b5761028b6121fa565b64ffffffffff81168114610229575f5ffd5b5f60208284031215612267575f5ffd5b8135611ae281612245565b5f813561028b81612245565b5f813561028b81611ee0565b813561229581611dc5565b73ffffffffffffffffffffffffffffffffffffffff81167fffffffffffffffffffffffff00000000000000000000000000000000000000008354161782555060208201356122e281612245565b81547fffffffffffffff0000000000ffffffffffffffffffffffffffffffffffffffff1660a09190911b78ffffffffff00000000000000000000000000000000000000001617815561238861233960408401612272565b82547fffff0000000000ffffffffffffffffffffffffffffffffffffffffffffffffff1660c89190911b7dffffffffff0000000000000000000000000000000000000000000000000016178255565b6123e66123976060840161227e565b82547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660f09190911b7fffff00000000000000000000000000000000000000000000000000000000000016178255565b6080820135600182015560a0820135600282015560c090910135600390910155565b803561241381611dc5565b73ffffffffffffffffffffffffffffffffffffffff168252602081013561243981612245565b64ffffffffff166020830152604081013561245381612245565b64ffffffffff16604083015261246b60608201611eef565b61ffff1660608301526080818101359083015260a0808201359083015260c090810135910152565b60e0810161028b8284612408565b8082018082111561028b5761028b6121fa565b5f5f83357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126124e7575f5ffd5b83018035915067ffffffffffffffff821115612501575f5ffd5b6020019150600581901b3603821315612518575f5ffd5b9250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81612587576125876121fa565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b602080825281018290525f8360408301825b858110156125e4576125d18284612408565b60e09283019291909101906001016125bf565b5095945050505050565b5f602082840312156125fe575f5ffd5b81518015158114611ae2575f5ffd5b808202811582820484141761028b5761028b6121fa565b5f82612657577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b500490565b5f6020828403121561266c575f5ffd5b8135611ae281611ee056";

type DropFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DropFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DropFacet__factory extends ContractFactory {
  constructor(...args: DropFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DropFacet> {
    return super.deploy(overrides || {}) as Promise<DropFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DropFacet {
    return super.attach(address) as DropFacet;
  }
  override connect(signer: Signer): DropFacet__factory {
    return super.connect(signer) as DropFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DropFacetInterface {
    return new utils.Interface(_abi) as DropFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DropFacet {
    return new Contract(address, _abi, signerOrProvider) as DropFacet;
  }
}

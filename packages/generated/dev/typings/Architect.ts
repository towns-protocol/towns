/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface ArchitectInterface extends utils.Interface {
  functions: {
    "__Architect_init(address,address,address,address)": FunctionFragment;
    "getProxyInitializer()": FunctionFragment;
    "getSpaceArchitectImplementations()": FunctionFragment;
    "getSpaceByTokenId(uint256)": FunctionFragment;
    "getTokenIdBySpace(address)": FunctionFragment;
    "setProxyInitializer(address)": FunctionFragment;
    "setSpaceArchitectImplementations(address,address,address,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "__Architect_init"
      | "getProxyInitializer"
      | "getSpaceArchitectImplementations"
      | "getSpaceByTokenId"
      | "getTokenIdBySpace"
      | "setProxyInitializer"
      | "setSpaceArchitectImplementations"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "__Architect_init",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getProxyInitializer",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSpaceArchitectImplementations",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSpaceByTokenId",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenIdBySpace",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setProxyInitializer",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setSpaceArchitectImplementations",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "__Architect_init",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProxyInitializer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSpaceArchitectImplementations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSpaceByTokenId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenIdBySpace",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProxyInitializer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSpaceArchitectImplementations",
    data: BytesLike
  ): Result;

  events: {
    "Architect__ProxyInitializerSet(address)": EventFragment;
    "Initialized(uint32)": EventFragment;
    "InterfaceAdded(bytes4)": EventFragment;
    "InterfaceRemoved(bytes4)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "Paused(address)": EventFragment;
    "SpaceCreated(address,uint256,address)": EventFragment;
    "Unpaused(address)": EventFragment;
  };

  getEvent(
    nameOrSignatureOrTopic: "Architect__ProxyInitializerSet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "InterfaceAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "InterfaceRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Paused"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SpaceCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Unpaused"): EventFragment;
}

export interface Architect__ProxyInitializerSetEventObject {
  proxyInitializer: string;
}
export type Architect__ProxyInitializerSetEvent = TypedEvent<
  [string],
  Architect__ProxyInitializerSetEventObject
>;

export type Architect__ProxyInitializerSetEventFilter =
  TypedEventFilter<Architect__ProxyInitializerSetEvent>;

export interface InitializedEventObject {
  version: number;
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>;

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;

export interface InterfaceAddedEventObject {
  interfaceId: string;
}
export type InterfaceAddedEvent = TypedEvent<
  [string],
  InterfaceAddedEventObject
>;

export type InterfaceAddedEventFilter = TypedEventFilter<InterfaceAddedEvent>;

export interface InterfaceRemovedEventObject {
  interfaceId: string;
}
export type InterfaceRemovedEvent = TypedEvent<
  [string],
  InterfaceRemovedEventObject
>;

export type InterfaceRemovedEventFilter =
  TypedEventFilter<InterfaceRemovedEvent>;

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface PausedEventObject {
  account: string;
}
export type PausedEvent = TypedEvent<[string], PausedEventObject>;

export type PausedEventFilter = TypedEventFilter<PausedEvent>;

export interface SpaceCreatedEventObject {
  owner: string;
  tokenId: BigNumber;
  space: string;
}
export type SpaceCreatedEvent = TypedEvent<
  [string, BigNumber, string],
  SpaceCreatedEventObject
>;

export type SpaceCreatedEventFilter = TypedEventFilter<SpaceCreatedEvent>;

export interface UnpausedEventObject {
  account: string;
}
export type UnpausedEvent = TypedEvent<[string], UnpausedEventObject>;

export type UnpausedEventFilter = TypedEventFilter<UnpausedEvent>;

export interface Architect extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ArchitectInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    __Architect_init(
      ownerImplementation: PromiseOrValue<string>,
      userEntitlementImplementation: PromiseOrValue<string>,
      ruleEntitlementImplementation: PromiseOrValue<string>,
      legacyRuleEntitlement: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getProxyInitializer(overrides?: CallOverrides): Promise<[string]>;

    getSpaceArchitectImplementations(
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, string] & {
        spaceToken: string;
        userEntitlementImplementation: string;
        ruleEntitlementImplementation: string;
        legacyRuleEntitlement: string;
      }
    >;

    getSpaceByTokenId(
      tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getTokenIdBySpace(
      space: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    setProxyInitializer(
      proxyInitializer: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setSpaceArchitectImplementations(
      spaceToken: PromiseOrValue<string>,
      userEntitlementImplementation: PromiseOrValue<string>,
      ruleEntitlementImplementation: PromiseOrValue<string>,
      legacyRuleEntitlement: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  __Architect_init(
    ownerImplementation: PromiseOrValue<string>,
    userEntitlementImplementation: PromiseOrValue<string>,
    ruleEntitlementImplementation: PromiseOrValue<string>,
    legacyRuleEntitlement: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getProxyInitializer(overrides?: CallOverrides): Promise<string>;

  getSpaceArchitectImplementations(
    overrides?: CallOverrides
  ): Promise<
    [string, string, string, string] & {
      spaceToken: string;
      userEntitlementImplementation: string;
      ruleEntitlementImplementation: string;
      legacyRuleEntitlement: string;
    }
  >;

  getSpaceByTokenId(
    tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getTokenIdBySpace(
    space: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setProxyInitializer(
    proxyInitializer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setSpaceArchitectImplementations(
    spaceToken: PromiseOrValue<string>,
    userEntitlementImplementation: PromiseOrValue<string>,
    ruleEntitlementImplementation: PromiseOrValue<string>,
    legacyRuleEntitlement: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    __Architect_init(
      ownerImplementation: PromiseOrValue<string>,
      userEntitlementImplementation: PromiseOrValue<string>,
      ruleEntitlementImplementation: PromiseOrValue<string>,
      legacyRuleEntitlement: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    getProxyInitializer(overrides?: CallOverrides): Promise<string>;

    getSpaceArchitectImplementations(
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, string] & {
        spaceToken: string;
        userEntitlementImplementation: string;
        ruleEntitlementImplementation: string;
        legacyRuleEntitlement: string;
      }
    >;

    getSpaceByTokenId(
      tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getTokenIdBySpace(
      space: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setProxyInitializer(
      proxyInitializer: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setSpaceArchitectImplementations(
      spaceToken: PromiseOrValue<string>,
      userEntitlementImplementation: PromiseOrValue<string>,
      ruleEntitlementImplementation: PromiseOrValue<string>,
      legacyRuleEntitlement: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "Architect__ProxyInitializerSet(address)"(
      proxyInitializer?: PromiseOrValue<string> | null
    ): Architect__ProxyInitializerSetEventFilter;
    Architect__ProxyInitializerSet(
      proxyInitializer?: PromiseOrValue<string> | null
    ): Architect__ProxyInitializerSetEventFilter;

    "Initialized(uint32)"(version?: null): InitializedEventFilter;
    Initialized(version?: null): InitializedEventFilter;

    "InterfaceAdded(bytes4)"(
      interfaceId?: PromiseOrValue<BytesLike> | null
    ): InterfaceAddedEventFilter;
    InterfaceAdded(
      interfaceId?: PromiseOrValue<BytesLike> | null
    ): InterfaceAddedEventFilter;

    "InterfaceRemoved(bytes4)"(
      interfaceId?: PromiseOrValue<BytesLike> | null
    ): InterfaceRemovedEventFilter;
    InterfaceRemoved(
      interfaceId?: PromiseOrValue<BytesLike> | null
    ): InterfaceRemovedEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;

    "Paused(address)"(account?: null): PausedEventFilter;
    Paused(account?: null): PausedEventFilter;

    "SpaceCreated(address,uint256,address)"(
      owner?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      space?: PromiseOrValue<string> | null
    ): SpaceCreatedEventFilter;
    SpaceCreated(
      owner?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      space?: PromiseOrValue<string> | null
    ): SpaceCreatedEventFilter;

    "Unpaused(address)"(account?: null): UnpausedEventFilter;
    Unpaused(account?: null): UnpausedEventFilter;
  };

  estimateGas: {
    __Architect_init(
      ownerImplementation: PromiseOrValue<string>,
      userEntitlementImplementation: PromiseOrValue<string>,
      ruleEntitlementImplementation: PromiseOrValue<string>,
      legacyRuleEntitlement: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getProxyInitializer(overrides?: CallOverrides): Promise<BigNumber>;

    getSpaceArchitectImplementations(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpaceByTokenId(
      tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenIdBySpace(
      space: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setProxyInitializer(
      proxyInitializer: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setSpaceArchitectImplementations(
      spaceToken: PromiseOrValue<string>,
      userEntitlementImplementation: PromiseOrValue<string>,
      ruleEntitlementImplementation: PromiseOrValue<string>,
      legacyRuleEntitlement: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    __Architect_init(
      ownerImplementation: PromiseOrValue<string>,
      userEntitlementImplementation: PromiseOrValue<string>,
      ruleEntitlementImplementation: PromiseOrValue<string>,
      legacyRuleEntitlement: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getProxyInitializer(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSpaceArchitectImplementations(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSpaceByTokenId(
      tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenIdBySpace(
      space: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setProxyInitializer(
      proxyInitializer: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setSpaceArchitectImplementations(
      spaceToken: PromiseOrValue<string>,
      userEntitlementImplementation: PromiseOrValue<string>,
      ruleEntitlementImplementation: PromiseOrValue<string>,
      legacyRuleEntitlement: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}

version: '3.8'
name: towns
services:
    subgraph-db:
        image: postgres:16.1-alpine
        restart: always
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U postgres']
            interval: 10s
            timeout: 5s
            retries: 5
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=postgres
        ports:
            - '5432:5432'
        volumes:
            - subgraph-db:/var/lib/postgresql/data

    subgraph-indexer:
        build:
            context: ../../
            dockerfile: packages/subgraph/Dockerfile
        depends_on:
            subgraph-db:
                condition: service_healthy
        environment:
            - NODE_ENV=production
            - DATABASE_SCHEMA=public
            - DB_HOST=subgraph-db
            - DB_PORT=5432
            - DB_USER=postgres
            - DB_PASSWORD=postgres
            - PONDER_CONFIG=${PONDER_CONFIG}
            - PONDER_RPC_URL_1=${PONDER_RPC_URL_1}
            - PONDER_START_BLOCK=${PONDER_START_BLOCK}
            - PONDER_ENVIRONMENT=${PONDER_ENVIRONMENT}

    subgraph-server:
        build:
            context: ../../
            dockerfile: packages/subgraph/Dockerfile
        depends_on:
            subgraph-db:
                condition: service_healthy
            subgraph-indexer:
                condition: service_started
        entrypoint: ['pnpm', 'ponder', 'serve', '--config', '${PONDER_CONFIG}']
        environment:
            - NODE_ENV=production
            - DATABASE_SCHEMA=public
            - DATABASE_URL=postgresql://postgres:postgres@subgraph-db:5432/postgres
            - PONDER_RPC_URL_1=${PONDER_RPC_URL_1}
            - PONDER_START_BLOCK=${PONDER_START_BLOCK}
            - PONDER_ENVIRONMENT=${PONDER_ENVIRONMENT}
        ports:
            - '42069:42069'

volumes:
    subgraph-db:
        driver: local

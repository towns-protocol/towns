{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MaxSupply",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintPriceNotPaid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonExistentTokenURI",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawTransfer",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "allowlistMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "alreadyMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "privateMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startPublicMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startWaitlistMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "waitlistMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPayments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162001bbf38038062001bbf8339810160408190526200003491620001bb565b83836000620000448382620002e3565b506001620000538282620002e3565b505050620000706200006a6200009860201b60201c565b6200009c565b60076200007e8382620002e3565b506080525050600a805460ff1916600117905550620003af565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011657600080fd5b81516001600160401b0380821115620001335762000133620000ee565b604051601f8301601f19908116603f011681019082821181831017156200015e576200015e620000ee565b816040528381526020925086838588010111156200017b57600080fd5b600091505b838210156200019f578582018301518183018401529082019062000180565b83821115620001b15760008385830101525b9695505050505050565b60008060008060808587031215620001d257600080fd5b84516001600160401b0380821115620001ea57600080fd5b620001f88883890162000104565b955060208701519150808211156200020f57600080fd5b6200021d8883890162000104565b945060408701519150808211156200023457600080fd5b50620002438782880162000104565b606096909601519497939650505050565b600181811c908216806200026957607f821691505b6020821081036200028a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002de57600081815260208120601f850160051c81016020861015620002b95750805b601f850160051c820191505b81811015620002da57828155600101620002c5565b5050505b505050565b81516001600160401b03811115620002ff57620002ff620000ee565b620003178162000310845462000254565b8462000290565b602080601f8311600181146200034f5760008415620003365750858301515b600019600386901b1c1916600185901b178555620002da565b600085815260208120601f198616915b8281101562000380578886015182559484019460019091019084016200035f565b50858210156200039f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516117f4620003cb6000396000610bef01526117f46000f3fe60806040526004361061013b5760003560e01c80629a9b7b1461014057806301ffc9a71461016957806306fdde0314610199578063081812fc146101bb578063095ea7b3146102095780630a398b881461022b57806323b872dd1461025b57806326092b831461027b57806331b3eb941461029b57806341fbddbd146102bb57806342842e0e146102d55780636352211e146102f55780636a627842146103155780636c0360eb1461032857806370a082311461033d578063715018a61461035d57806376c64c62146103725780638da5cb5b1461038757806395d89b411461039c5780639886a902146103b1578063a22cb465146103c4578063a839e501146103e4578063aebb096c146103f9578063b88d4fde14610418578063c87b56dd14610438578063e985e9c514610458578063f2fde38b14610493575b600080fd5b34801561014c57600080fd5b5061015660085481565b6040519081526020015b60405180910390f35b34801561017557600080fd5b50610189610184366004611289565b6104b3565b6040519015158152602001610160565b3480156101a557600080fd5b506101ae610505565b60405161016091906112a6565b3480156101c757600080fd5b506101f16101d63660046112fb565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610160565b34801561021557600080fd5b50610229610224366004611329565b610593565b005b34801561023757600080fd5b50610189610246366004611355565b60096020526000908152604090205460ff1681565b34801561026757600080fd5b50610229610276366004611372565b61065d565b34801561028757600080fd5b50600a546101899062010000900460ff1681565b3480156102a757600080fd5b506102296102b6366004611355565b6107cd565b3480156102c757600080fd5b50600a546101899060ff1681565b3480156102e157600080fd5b506102296102f0366004611372565b61084e565b34801561030157600080fd5b506101f16103103660046112fb565b610908565b610156610323366004611355565b61095f565b34801561033457600080fd5b506101ae610a30565b34801561034957600080fd5b50610156610358366004611355565b610a3d565b34801561036957600080fd5b50610229610aa0565b34801561037e57600080fd5b50610229610ab4565b34801561039357600080fd5b506101f1610acf565b3480156103a857600080fd5b506101ae610ade565b6101566103bf3660046113b3565b610aeb565b3480156103d057600080fd5b506102296103df36600461143e565b610c84565b3480156103f057600080fd5b50610229610cf0565b34801561040557600080fd5b50600a5461018990610100900460ff1681565b34801561042457600080fd5b5061022961043336600461147c565b610d0a565b34801561044457600080fd5b506101ae6104533660046112fb565b610dcf565b34801561046457600080fd5b5061018961047336600461151a565b600560209081526000928352604080842090915290825290205460ff1681565b34801561049f57600080fd5b506102296104ae366004611355565b610e55565b60006301ffc9a760e01b6001600160e01b0319831614806104e457506380ac58cd60e01b6001600160e01b03198316145b806104ff5750635b5e139f60e01b6001600160e01b03198316145b92915050565b6000805461051290611548565b80601f016020809104026020016040519081016040528092919081815260200182805461053e90611548565b801561058b5780601f106105605761010080835404028352916020019161058b565b820191906000526020600020905b81548152906001019060200180831161056e57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806105dc57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106015760405162461bcd60e51b81526004016105f890611582565b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600260205260409020546001600160a01b038481169116146106b35760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016105f8565b6001600160a01b0382166106d95760405162461bcd60e51b81526004016105f8906115aa565b336001600160a01b038416148061071357506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061073457506000818152600460205260409020546001600160a01b031633145b6107505760405162461bcd60e51b81526004016105f890611582565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b031990811683179091556004909252848320805490921690915592518493929160008051602061179f83398151915291a4505050565b6107d5610ece565b60405147906000906001600160a01b0384169083908381818185875af1925050503d8060008114610822576040519150601f19603f3d011682016040523d82523d6000602084013e610827565b606091505b50509050806108495760405163d23a9e8960e01b815260040160405180910390fd5b505050565b61085983838361065d565b6001600160a01b0382163b15806108ec5750604051630a85bd0160e11b808252906001600160a01b0384169063150b7a029061089d903390889087906004016115d5565b6020604051808303816000875af11580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e09190611608565b6001600160e01b031916145b6108495760405162461bcd60e51b81526004016105f890611625565b6000818152600260205260409020546001600160a01b03168061095a5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016105f8565b919050565b6001600160a01b03811660009081526009602052604081205460ff16156109c05760405162461bcd60e51b8152602060048201526015602482015274105b1c9958591e481b5a5b9d195908185b88139195605a1b60448201526064016105f8565b600a5462010000900460ff161515600114610a275760405162461bcd60e51b815260206004820152602160248201527f5075626c6963206d696e74696e67206973206e6f7420616c6c6f7765642079656044820152601d60fa1b60648201526084016105f8565b6104ff82610f2d565b6007805461051290611548565b60006001600160a01b038216610a845760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016105f8565b506001600160a01b031660009081526003602052604090205490565b610aa8610ece565b610ab26000610ff9565b565b610abc610ece565b600a805462ffffff191662010000179055565b6006546001600160a01b031690565b6001805461051290611548565b6001600160a01b03841660009081526009602052604081205460ff1615610b2557604051631bbdf5c560e31b815260040160405180910390fd5b600a5460ff161515600103610b7e5783600114610b7e5760405162461bcd60e51b8152602060048201526017602482015276139bdd08185b1b1bddd959081d1bc81b5a5b9d081e595d604a1b60448201526064016105f8565b6040516001600160601b0319606087901b16602082015260348101859052600090605401604051602081830303815290604052805190602001209050610c1a8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f0000000000000000000000000000000000000000000000000000000000000000925085915061104b9050565b610c715760405162461bcd60e51b815260206004820152602260248201527f496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c69604482015261195960f21b60648201526084016105f8565b610c7a86610f2d565b9695505050505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610cf8610ece565b600a805462ffffff1916610100179055565b610d1585858561065d565b6001600160a01b0384163b1580610dac5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610d5d9033908a9089908990899060040161164f565b6020604051808303816000875af1158015610d7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da09190611608565b6001600160e01b031916145b610dc85760405162461bcd60e51b81526004016105f890611625565b5050505050565b60606000610ddc83610908565b6001600160a01b031603610e035760405163d872946b60e01b815260040160405180910390fd5b600060078054610e1290611548565b905011610e2e57604051806020016040528060008152506104ff565b6007604051602001610e4091906116a3565b60405160208183030381529060405292915050565b610e5d610ece565b6001600160a01b038116610ec25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f8565b610ecb81610ff9565b50565b33610ed7610acf565b6001600160a01b031614610ab25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f8565b600067011c37937e0800003414610f57576040516310f0c8f160e11b815260040160405180910390fd5b6000600860008154610f6890611761565b918290555090506109c4811115610f9257604051632cdb04a160e21b815260040160405180910390fd5b6001600160a01b0383166000908152600960205260409020805460ff19166001179055610fbf8382611061565b6040516001600160a01b038416907f90ddedd5a25821bba11fbb98de02ec1f75c1be90ae147d6450ce873e7b78b5d890600090a292915050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600082611058858461111f565b14949350505050565b61106b828261116c565b6001600160a01b0382163b15806110ff5750604051630a85bd0160e11b808252906001600160a01b0384169063150b7a02906110b090339060009087906004016115d5565b6020604051808303816000875af11580156110cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f39190611608565b6001600160e01b031916145b61111b5760405162461bcd60e51b81526004016105f890611625565b5050565b600081815b8451811015611164576111508286838151811061114357611143611788565b6020026020010151611241565b91508061115c81611761565b915050611124565b509392505050565b6001600160a01b0382166111925760405162461bcd60e51b81526004016105f8906115aa565b6000818152600260205260409020546001600160a01b0316156111e85760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016105f8565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b03191684179055518392919060008051602061179f833981519152908290a45050565b600081831061125d57600082815260208490526040902061126c565b60008381526020839052604090205b9392505050565b6001600160e01b031981168114610ecb57600080fd5b60006020828403121561129b57600080fd5b813561126c81611273565b600060208083528351808285015260005b818110156112d3578581018301518582016040015282016112b7565b818111156112e5576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561130d57600080fd5b5035919050565b6001600160a01b0381168114610ecb57600080fd5b6000806040838503121561133c57600080fd5b823561134781611314565b946020939093013593505050565b60006020828403121561136757600080fd5b813561126c81611314565b60008060006060848603121561138757600080fd5b833561139281611314565b925060208401356113a281611314565b929592945050506040919091013590565b600080600080606085870312156113c957600080fd5b84356113d481611314565b93506020850135925060408501356001600160401b03808211156113f757600080fd5b818701915087601f83011261140b57600080fd5b81358181111561141a57600080fd5b8860208260051b850101111561142f57600080fd5b95989497505060200194505050565b6000806040838503121561145157600080fd5b823561145c81611314565b91506020830135801515811461147157600080fd5b809150509250929050565b60008060008060006080868803121561149457600080fd5b853561149f81611314565b945060208601356114af81611314565b93506040860135925060608601356001600160401b03808211156114d257600080fd5b818801915088601f8301126114e657600080fd5b8135818111156114f557600080fd5b89602082850101111561150757600080fd5b9699959850939650602001949392505050565b6000806040838503121561152d57600080fd5b823561153881611314565b9150602083013561147181611314565b600181811c9082168061155c57607f821691505b60208210810361157c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600e908201526d1393d517d055551213d49256915160921b604082015260600190565b6020808252601190820152701253959053125117d49150d25412515395607a1b604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260806060820181905260009082015260a00190565b60006020828403121561161a57600080fd5b815161126c81611273565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600080835481600182811c9150808316806116bf57607f831692505b602080841082036116de57634e487b7160e01b86526022600452602486fd5b8180156116f2576001811461170757611734565b60ff1986168952841515850289019650611734565b60008a81526020902060005b8681101561172c5781548b820152908501908301611713565b505084890196505b505050505050611759816e636f756e63696c6d6574616461746160881b8152600f0190565b949350505050565b60006001820161178157634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220e4b0175cbeda034516b6fc0a183b955ad177b6fb80c2f942dec178799bad51a464736f6c634300080f0033",
    "sourceMap": "614:4058:0:-:0;;;1232:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1354:5;1361:7;2220:4:51;:12;1354:5:0;2220:4:51;:12;:::i;:::-;-1:-1:-1;2242:6:51;:16;2251:7;2242:6;:16;:::i;:::-;;2154:111;;936:32:42;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1376:7:0::1;:18;1386:8:::0;1376:7;:18:::1;:::i;:::-;-1:-1:-1::0;1400:12:0::1;::::0;-1:-1:-1;;1418:13:0::1;:20:::0;;-1:-1:-1;;1418:20:0::1;1434:4;1418:20;::::0;;-1:-1:-1;614:4058:0;;640:96:47;719:10;;640:96::o;2433:187:42:-;2525:6;;;-1:-1:-1;;;;;2541:17:42;;;-1:-1:-1;;;;;;2541:17:42;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:92:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:92;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:92;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:92:o;1036:828::-;1163:6;1171;1179;1187;1240:3;1228:9;1219:7;1215:23;1211:33;1208:53;;;1257:1;1254;1247:12;1208:53;1284:16;;-1:-1:-1;;;;;1349:14:92;;;1346:34;;;1376:1;1373;1366:12;1346:34;1399:61;1452:7;1443:6;1432:9;1428:22;1399:61;:::i;:::-;1389:71;;1506:2;1495:9;1491:18;1485:25;1469:41;;1535:2;1525:8;1522:16;1519:36;;;1551:1;1548;1541:12;1519:36;1574:63;1629:7;1618:8;1607:9;1603:24;1574:63;:::i;:::-;1564:73;;1683:2;1672:9;1668:18;1662:25;1646:41;;1712:2;1702:8;1699:16;1696:36;;;1728:1;1725;1718:12;1696:36;;1751:63;1806:7;1795:8;1784:9;1780:24;1751:63;:::i;:::-;1854:2;1839:18;;;;1833:25;1036:828;;;;-1:-1:-1;;;;1036:828:92:o;1869:380::-;1948:1;1944:12;;;;1991;;;2012:61;;2066:4;2058:6;2054:17;2044:27;;2012:61;2119:2;2111:6;2108:14;2088:18;2085:38;2082:161;;2165:10;2160:3;2156:20;2153:1;2146:31;2200:4;2197:1;2190:15;2228:4;2225:1;2218:15;2082:161;;1869:380;;;:::o;2380:545::-;2482:2;2477:3;2474:11;2471:448;;;2518:1;2543:5;2539:2;2532:17;2588:4;2584:2;2574:19;2658:2;2646:10;2642:19;2639:1;2635:27;2629:4;2625:38;2694:4;2682:10;2679:20;2676:47;;;-1:-1:-1;2717:4:92;2676:47;2772:2;2767:3;2763:12;2760:1;2756:20;2750:4;2746:31;2736:41;;2827:82;2845:2;2838:5;2835:13;2827:82;;;2890:17;;;2871:1;2860:13;2827:82;;;2831:3;;;2471:448;2380:545;;;:::o;3101:1352::-;3221:10;;-1:-1:-1;;;;;3243:30:92;;3240:56;;;3276:18;;:::i;:::-;3305:97;3395:6;3355:38;3387:4;3381:11;3355:38;:::i;:::-;3349:4;3305:97;:::i;:::-;3457:4;;3521:2;3510:14;;3538:1;3533:663;;;;4240:1;4257:6;4254:89;;;-1:-1:-1;4309:19:92;;;4303:26;4254:89;-1:-1:-1;;3058:1:92;3054:11;;;3050:24;3046:29;3036:40;3082:1;3078:11;;;3033:57;4356:81;;3503:944;;3533:663;2327:1;2320:14;;;2364:4;2351:18;;-1:-1:-1;;3569:20:92;;;3687:236;3701:7;3698:1;3695:14;3687:236;;;3790:19;;;3784:26;3769:42;;3882:27;;;;3850:1;3838:14;;;;3717:19;;3687:236;;;3691:3;3951:6;3942:7;3939:19;3936:201;;;4012:19;;;4006:26;-1:-1:-1;;4095:1:92;4091:14;;;4107:3;4087:24;4083:37;4079:42;4064:58;4049:74;;3936:201;-1:-1:-1;;;;;4183:1:92;4167:14;;;4163:22;4150:36;;-1:-1:-1;3101:1352:92:o;:::-;614:4058:0;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061013b5760003560e01c80629a9b7b1461014057806301ffc9a71461016957806306fdde0314610199578063081812fc146101bb578063095ea7b3146102095780630a398b881461022b57806323b872dd1461025b57806326092b831461027b57806331b3eb941461029b57806341fbddbd146102bb57806342842e0e146102d55780636352211e146102f55780636a627842146103155780636c0360eb1461032857806370a082311461033d578063715018a61461035d57806376c64c62146103725780638da5cb5b1461038757806395d89b411461039c5780639886a902146103b1578063a22cb465146103c4578063a839e501146103e4578063aebb096c146103f9578063b88d4fde14610418578063c87b56dd14610438578063e985e9c514610458578063f2fde38b14610493575b600080fd5b34801561014c57600080fd5b5061015660085481565b6040519081526020015b60405180910390f35b34801561017557600080fd5b50610189610184366004611289565b6104b3565b6040519015158152602001610160565b3480156101a557600080fd5b506101ae610505565b60405161016091906112a6565b3480156101c757600080fd5b506101f16101d63660046112fb565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610160565b34801561021557600080fd5b50610229610224366004611329565b610593565b005b34801561023757600080fd5b50610189610246366004611355565b60096020526000908152604090205460ff1681565b34801561026757600080fd5b50610229610276366004611372565b61065d565b34801561028757600080fd5b50600a546101899062010000900460ff1681565b3480156102a757600080fd5b506102296102b6366004611355565b6107cd565b3480156102c757600080fd5b50600a546101899060ff1681565b3480156102e157600080fd5b506102296102f0366004611372565b61084e565b34801561030157600080fd5b506101f16103103660046112fb565b610908565b610156610323366004611355565b61095f565b34801561033457600080fd5b506101ae610a30565b34801561034957600080fd5b50610156610358366004611355565b610a3d565b34801561036957600080fd5b50610229610aa0565b34801561037e57600080fd5b50610229610ab4565b34801561039357600080fd5b506101f1610acf565b3480156103a857600080fd5b506101ae610ade565b6101566103bf3660046113b3565b610aeb565b3480156103d057600080fd5b506102296103df36600461143e565b610c84565b3480156103f057600080fd5b50610229610cf0565b34801561040557600080fd5b50600a5461018990610100900460ff1681565b34801561042457600080fd5b5061022961043336600461147c565b610d0a565b34801561044457600080fd5b506101ae6104533660046112fb565b610dcf565b34801561046457600080fd5b5061018961047336600461151a565b600560209081526000928352604080842090915290825290205460ff1681565b34801561049f57600080fd5b506102296104ae366004611355565b610e55565b60006301ffc9a760e01b6001600160e01b0319831614806104e457506380ac58cd60e01b6001600160e01b03198316145b806104ff5750635b5e139f60e01b6001600160e01b03198316145b92915050565b6000805461051290611548565b80601f016020809104026020016040519081016040528092919081815260200182805461053e90611548565b801561058b5780601f106105605761010080835404028352916020019161058b565b820191906000526020600020905b81548152906001019060200180831161056e57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806105dc57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106015760405162461bcd60e51b81526004016105f890611582565b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600260205260409020546001600160a01b038481169116146106b35760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016105f8565b6001600160a01b0382166106d95760405162461bcd60e51b81526004016105f8906115aa565b336001600160a01b038416148061071357506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061073457506000818152600460205260409020546001600160a01b031633145b6107505760405162461bcd60e51b81526004016105f890611582565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b031990811683179091556004909252848320805490921690915592518493929160008051602061179f83398151915291a4505050565b6107d5610ece565b60405147906000906001600160a01b0384169083908381818185875af1925050503d8060008114610822576040519150601f19603f3d011682016040523d82523d6000602084013e610827565b606091505b50509050806108495760405163d23a9e8960e01b815260040160405180910390fd5b505050565b61085983838361065d565b6001600160a01b0382163b15806108ec5750604051630a85bd0160e11b808252906001600160a01b0384169063150b7a029061089d903390889087906004016115d5565b6020604051808303816000875af11580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e09190611608565b6001600160e01b031916145b6108495760405162461bcd60e51b81526004016105f890611625565b6000818152600260205260409020546001600160a01b03168061095a5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016105f8565b919050565b6001600160a01b03811660009081526009602052604081205460ff16156109c05760405162461bcd60e51b8152602060048201526015602482015274105b1c9958591e481b5a5b9d195908185b88139195605a1b60448201526064016105f8565b600a5462010000900460ff161515600114610a275760405162461bcd60e51b815260206004820152602160248201527f5075626c6963206d696e74696e67206973206e6f7420616c6c6f7765642079656044820152601d60fa1b60648201526084016105f8565b6104ff82610f2d565b6007805461051290611548565b60006001600160a01b038216610a845760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016105f8565b506001600160a01b031660009081526003602052604090205490565b610aa8610ece565b610ab26000610ff9565b565b610abc610ece565b600a805462ffffff191662010000179055565b6006546001600160a01b031690565b6001805461051290611548565b6001600160a01b03841660009081526009602052604081205460ff1615610b2557604051631bbdf5c560e31b815260040160405180910390fd5b600a5460ff161515600103610b7e5783600114610b7e5760405162461bcd60e51b8152602060048201526017602482015276139bdd08185b1b1bddd959081d1bc81b5a5b9d081e595d604a1b60448201526064016105f8565b6040516001600160601b0319606087901b16602082015260348101859052600090605401604051602081830303815290604052805190602001209050610c1a8484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f0000000000000000000000000000000000000000000000000000000000000000925085915061104b9050565b610c715760405162461bcd60e51b815260206004820152602260248201527f496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c69604482015261195960f21b60648201526084016105f8565b610c7a86610f2d565b9695505050505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610cf8610ece565b600a805462ffffff1916610100179055565b610d1585858561065d565b6001600160a01b0384163b1580610dac5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610d5d9033908a9089908990899060040161164f565b6020604051808303816000875af1158015610d7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da09190611608565b6001600160e01b031916145b610dc85760405162461bcd60e51b81526004016105f890611625565b5050505050565b60606000610ddc83610908565b6001600160a01b031603610e035760405163d872946b60e01b815260040160405180910390fd5b600060078054610e1290611548565b905011610e2e57604051806020016040528060008152506104ff565b6007604051602001610e4091906116a3565b60405160208183030381529060405292915050565b610e5d610ece565b6001600160a01b038116610ec25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f8565b610ecb81610ff9565b50565b33610ed7610acf565b6001600160a01b031614610ab25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f8565b600067011c37937e0800003414610f57576040516310f0c8f160e11b815260040160405180910390fd5b6000600860008154610f6890611761565b918290555090506109c4811115610f9257604051632cdb04a160e21b815260040160405180910390fd5b6001600160a01b0383166000908152600960205260409020805460ff19166001179055610fbf8382611061565b6040516001600160a01b038416907f90ddedd5a25821bba11fbb98de02ec1f75c1be90ae147d6450ce873e7b78b5d890600090a292915050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600082611058858461111f565b14949350505050565b61106b828261116c565b6001600160a01b0382163b15806110ff5750604051630a85bd0160e11b808252906001600160a01b0384169063150b7a02906110b090339060009087906004016115d5565b6020604051808303816000875af11580156110cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f39190611608565b6001600160e01b031916145b61111b5760405162461bcd60e51b81526004016105f890611625565b5050565b600081815b8451811015611164576111508286838151811061114357611143611788565b6020026020010151611241565b91508061115c81611761565b915050611124565b509392505050565b6001600160a01b0382166111925760405162461bcd60e51b81526004016105f8906115aa565b6000818152600260205260409020546001600160a01b0316156111e85760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016105f8565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b03191684179055518392919060008051602061179f833981519152908290a45050565b600081831061125d57600082815260208490526040902061126c565b60008381526020839052604090205b9392505050565b6001600160e01b031981168114610ecb57600080fd5b60006020828403121561129b57600080fd5b813561126c81611273565b600060208083528351808285015260005b818110156112d3578581018301518582016040015282016112b7565b818111156112e5576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561130d57600080fd5b5035919050565b6001600160a01b0381168114610ecb57600080fd5b6000806040838503121561133c57600080fd5b823561134781611314565b946020939093013593505050565b60006020828403121561136757600080fd5b813561126c81611314565b60008060006060848603121561138757600080fd5b833561139281611314565b925060208401356113a281611314565b929592945050506040919091013590565b600080600080606085870312156113c957600080fd5b84356113d481611314565b93506020850135925060408501356001600160401b03808211156113f757600080fd5b818701915087601f83011261140b57600080fd5b81358181111561141a57600080fd5b8860208260051b850101111561142f57600080fd5b95989497505060200194505050565b6000806040838503121561145157600080fd5b823561145c81611314565b91506020830135801515811461147157600080fd5b809150509250929050565b60008060008060006080868803121561149457600080fd5b853561149f81611314565b945060208601356114af81611314565b93506040860135925060608601356001600160401b03808211156114d257600080fd5b818801915088601f8301126114e657600080fd5b8135818111156114f557600080fd5b89602082850101111561150757600080fd5b9699959850939650602001949392505050565b6000806040838503121561152d57600080fd5b823561153881611314565b9150602083013561147181611314565b600181811c9082168061155c57607f821691505b60208210810361157c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600e908201526d1393d517d055551213d49256915160921b604082015260600190565b6020808252601190820152701253959053125117d49150d25412515395607a1b604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260806060820181905260009082015260a00190565b60006020828403121561161a57600080fd5b815161126c81611273565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600080835481600182811c9150808316806116bf57607f831692505b602080841082036116de57634e487b7160e01b86526022600452602486fd5b8180156116f2576001811461170757611734565b60ff1986168952841515850289019650611734565b60008a81526020902060005b8681101561172c5781548b820152908501908301611713565b505084890196505b505050505050611759816e636f756e63696c6d6574616461746160881b8152600f0190565b949350505050565b60006001820161178157634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220e4b0175cbeda034516b6fc0a183b955ad177b6fb80c2f942dec178799bad51a464736f6c634300080f0033",
    "sourceMap": "614:4058:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:29;;;;;;;;;;;;;;;;;;;160:25:92;;;148:2;133:18;834:29:0;;;;;;;;4714:335:51;;;;;;;;;;-1:-1:-1;4714:335:51;;;;;:::i;:::-;;:::i;:::-;;;747:14:92;;740:22;722:41;;710:2;695:18;4714:335:51;582:187:92;899:18:51;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1844:46::-;;;;;;;;;;-1:-1:-1;1844:46:51;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1844:46:51;;;;;;-1:-1:-1;;;;;1725:32:92;;;1707:51;;1695:2;1680:18;1844:46:51;1561:203:92;2453:282:51;;;;;;;;;;-1:-1:-1;2453:282:51;;;;;:::i;:::-;;:::i;:::-;;939:45:0;;;;;;;;;;-1:-1:-1;939:45:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;2950:741:51;;;;;;;;;;-1:-1:-1;2950:741:51;;;;;:::i;:::-;;:::i;1109:22:0:-;;;;;;;;;;-1:-1:-1;1109:22:0;;;;;;;;;;;4069:245;;;;;;;;;;-1:-1:-1;4069:245:0;;;;;:::i;:::-;;:::i;1052:25::-;;;;;;;;;;-1:-1:-1;1052:25:0;;;;;;;;3697:396:51;;;;;;;;;;-1:-1:-1;3697:396:51;;;;;:::i;:::-;;:::i;1327:149::-;;;;;;;;;;-1:-1:-1;1327:149:51;;;;;:::i;:::-;;:::i;2634:244:0:-;;;;;;:::i;:::-;;:::i;755:21::-;;;;;;;;;;;;;:::i;1482:168:51:-;;;;;;;;;;-1:-1:-1;1482:168:51;;;;;:::i;:::-;;:::i;1831:101:42:-;;;;;;;;;;;;;:::i;4545:125:0:-;;;;;;;;;;;;;:::i;1201:85:42:-;;;;;;;;;;;;;:::i;924:20:51:-;;;;;;;;;;;;;:::i;1851:579:0:-;;;;;;:::i;:::-;;:::i;2741:203:51:-;;;;;;;;;;-1:-1:-1;2741:203:51;;;;;:::i;:::-;;:::i;4367:127:0:-;;;;;;;;;;;;;:::i;1081:24::-;;;;;;;;;;-1:-1:-1;1081:24:0;;;;;;;;;;;4099:427:51;;;;;;;;;;-1:-1:-1;4099:427:51;;;;;:::i;:::-;;:::i;3617:326:0:-;;;;;;;;;;-1:-1:-1;3617:326:0;;;;;:::i;:::-;;:::i;1897:68:51:-;;;;;;;;;;-1:-1:-1;1897:68:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2081:198:42;;;;;;;;;;-1:-1:-1;2081:198:42;;;;;:::i;:::-;;:::i;4714:335:51:-;4790:4;-1:-1:-1;;;;;;;;;4825:25:51;;;;:100;;-1:-1:-1;;;;;;;;;;4900:25:51;;;4825:100;:175;;;-1:-1:-1;;;;;;;;;;4975:25:51;;;4825:175;4806:194;4714:335;-1:-1:-1;;4714:335:51:o;899:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2453:282::-;2524:13;2540:12;;;:8;:12;;;;;;-1:-1:-1;;;;;2540:12:51;2571:10;:19;;;:58;;-1:-1:-1;;;;;;2594:23:51;;;;;;:16;:23;;;;;;;;2618:10;2594:35;;;;;;;;;;2571:58;2563:85;;;;-1:-1:-1;;;2563:85:51;;;;;;;:::i;:::-;;;;;;;;;2659:15;;;;:11;:15;;;;;;:25;;-1:-1:-1;;;;;;2659:25:51;-1:-1:-1;;;;;2659:25:51;;;;;;;;;2700:28;;2659:15;;2700:28;;;;;;;2514:221;2453:282;;:::o;2950:741::-;3081:12;;;;:8;:12;;;;;;-1:-1:-1;;;;;3073:20:51;;;3081:12;;3073:20;3065:43;;;;-1:-1:-1;;;3065:43:51;;6706:2:92;3065:43:51;;;6688:21:92;6745:2;6725:18;;;6718:30;-1:-1:-1;;;6764:18:92;;;6757:40;6814:18;;3065:43:51;6504:334:92;3065:43:51;-1:-1:-1;;;;;3127:16:51;;3119:46;;;;-1:-1:-1;;;3119:46:51;;;;;;;:::i;:::-;3197:10;-1:-1:-1;;;;;3197:18:51;;;;:56;;-1:-1:-1;;;;;;3219:22:51;;;;;;:16;:22;;;;;;;;3242:10;3219:34;;;;;;;;;;3197:56;:89;;;-1:-1:-1;3271:15:51;;;;:11;:15;;;;;;-1:-1:-1;;;;;3271:15:51;3257:10;:29;3197:89;3176:150;;;;-1:-1:-1;;;3176:150:51;;;;;;;:::i;:::-;-1:-1:-1;;;;;3526:16:51;;;;;;;:10;:16;;;;;;;;:18;;-1:-1:-1;;3526:18:51;;;3559:14;;;;;;;;;:16;;3526:18;3559:16;;;3596:12;;;:8;:12;;;;;:17;;-1:-1:-1;;;;;;3596:17:51;;;;;;;;3631:11;:15;;;;;;3624:22;;;;;;;;3662;;3605:2;;3559:14;3526:16;-1:-1:-1;;;;;;;;;;;3662:22:51;;2950:741;;;:::o;4069:245:0:-;1094:13:42;:11;:13::i;:::-;4210:30:0::1;::::0;4161:21:::1;::::0;4143:15:::1;::::0;-1:-1:-1;;;;;4210:10:0;::::1;::::0;4161:21;;4143:15;4210:30;4143:15;4210:30;4161:21;4210:10;:30:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4188:52;;;4251:10;4246:64;;4278:25;;-1:-1:-1::0;;;4278:25:0::1;;;;;;;;;;;4246:64;4137:177;;4069:245:::0;:::o;3697:396:51:-;3816:26;3829:4;3835:2;3839;3816:12;:26::i;:::-;-1:-1:-1;;;;;3874:14:51;;;:19;;:170;;-1:-1:-1;3913:66:51;;-1:-1:-1;;;3913:66:51;;;3999:45;-1:-1:-1;;;;;3913:40:51;;;3999:45;;3913:66;;3954:10;;3966:4;;3972:2;;3913:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3913:131:51;;3874:170;3853:233;;;;-1:-1:-1;;;3853:233:51;;;;;;;:::i;1327:149::-;1385:13;1427:12;;;:8;:12;;;;;;-1:-1:-1;;;;;1427:12:51;;1410:59;;;;-1:-1:-1;;;1410:59:51;;8760:2:92;1410:59:51;;;8742:21:92;8799:2;8779:18;;;8772:30;-1:-1:-1;;;8818:18:92;;;8811:40;8868:18;;1410:59:51;8558:334:92;1410:59:51;1327:149;;;:::o;2634:244:0:-;-1:-1:-1;;;;;2714:24:0;;2691:7;2714:24;;;:13;:24;;;;;;;;:33;2706:67;;;;-1:-1:-1;;;2706:67:0;;9099:2:92;2706:67:0;;;9081:21:92;9138:2;9118:18;;;9111:30;-1:-1:-1;;;9157:18:92;;;9150:51;9218:18;;2706:67:0;8897:345:92;2706:67:0;2787:10;;;;;;;:18;;2801:4;2787:18;2779:64;;;;-1:-1:-1;;;2779:64:0;;9449:2:92;2779:64:0;;;9431:21:92;9488:2;9468:18;;;9461:30;9527:34;9507:18;;;9500:62;-1:-1:-1;;;9578:18:92;;;9571:31;9619:19;;2779:64:0;9247:397:92;2779:64:0;2856:17;2863:9;2856:6;:17::i;755:21::-;;;;;;;:::i;1482:168:51:-;1545:7;-1:-1:-1;;;;;1572:19:51;;1564:44;;;;-1:-1:-1;;;1564:44:51;;9851:2:92;1564:44:51;;;9833:21:92;9890:2;9870:18;;;9863:30;-1:-1:-1;;;9909:18:92;;;9902:42;9961:18;;1564:44:51;9649:336:92;1564:44:51;-1:-1:-1;;;;;;1626:17:51;;;;;:10;:17;;;;;;;1482:168::o;1831:101:42:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4545:125:0:-;1094:13:42;:11;:13::i;:::-;4595::0::1;:21:::0;;-1:-1:-1;;4648:17:0;;::::1;::::0;;4545:125::o;1201:85:42:-;1273:6;;-1:-1:-1;;;;;1273:6:42;;1201:85::o;924:20:51:-;;;;;;;:::i;1851:579:0:-;-1:-1:-1;;;;;1995:24:0;;1976:7;1995:24;;;:13;:24;;;;;;;;1991:59;;;2028:22;;-1:-1:-1;;;2028:22:0;;;;;;;;;;;1991:59;2061:13;;;;:21;;:13;:21;2057:92;;2100:9;2113:1;2100:14;2092:50;;;;-1:-1:-1;;;2092:50:0;;10192:2:92;2092:50:0;;;10174:21:92;10231:2;10211:18;;;10204:30;-1:-1:-1;;;10250:18:92;;;10243:53;10313:18;;2092:50:0;9990:347:92;2092:50:0;2243:38;;-1:-1:-1;;;;;;10544:2:92;10515:15;;;10511:45;2243:38:0;;;10499:58:92;10573:12;;;10566:28;;;2215:15:0;;10610:12:92;;2243:38:0;;;;;;;;;;;;2233:49;;;;;;2215:67;;2304:40;2323:5;;2304:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2330:4:0;;-1:-1:-1;2336:7:0;;-1:-1:-1;2304:18:0;;-1:-1:-1;2304:40:0:i;:::-;2289:105;;;;-1:-1:-1;;;2289:105:0;;10835:2:92;2289:105:0;;;10817:21:92;10874:2;10854:18;;;10847:30;10913:34;10893:18;;;10886:62;-1:-1:-1;;;10964:18:92;;;10957:32;11006:19;;2289:105:0;10633:398:92;2289:105:0;2408:17;2415:9;2408:6;:17::i;:::-;2401:24;1851:579;-1:-1:-1;;;;;;1851:579:0:o;2741:203:51:-;2843:10;2826:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2826:38:51;;;;;;;;;;;;:49;;-1:-1:-1;;2826:49:51;;;;;;;;;;2891:46;;722:41:92;;;2826:38:51;;2843:10;2891:46;;695:18:92;2891:46:51;;;;;;;2741:203;;:::o;4367:127:0:-;1094:13:42;:11;:13::i;:::-;4419::0::1;:21:::0;;-1:-1:-1;;4471:18:0;4419:21:::1;4471:18:::0;;;4367:127::o;4099:427:51:-;4247:26;4260:4;4266:2;4270;4247:12;:26::i;:::-;-1:-1:-1;;;;;4305:14:51;;;:19;;:172;;-1:-1:-1;4344:68:51;;-1:-1:-1;;;4344:68:51;;;4432:45;-1:-1:-1;;;;;4344:40:51;;;4432:45;;4344:68;;4385:10;;4397:4;;4403:2;;4407:4;;;;4344:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4344:133:51;;4305:172;4284:235;;;;-1:-1:-1;;;4284:235:51;;;;;;;:::i;:::-;4099:427;;;;;:::o;3617:326:0:-;3710:13;3765:1;3737:16;3745:7;3737;:16::i;:::-;-1:-1:-1;;;;;3737:30:0;;3733:86;;3784:28;;-1:-1:-1;;;3784:28:0;;;;;;;;;;;3733:86;3861:1;3843:7;3837:21;;;;;:::i;:::-;;;:25;:101;;;;;;;;;;;;;;;;;3897:7;3880:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;3824:114;3617:326;-1:-1:-1;;3617:326:0:o;2081:198:42:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:42;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:42;;13430:2:92;2161:73:42::1;::::0;::::1;13412:21:92::0;13469:2;13449:18;;;13442:30;13508:34;13488:18;;;13481:62;-1:-1:-1;;;13559:18:92;;;13552:36;13605:19;;2161:73:42::1;13228:402:92::0;2161:73:42::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;719:10:47;1422:7:42;:5;:7::i;:::-;-1:-1:-1;;;;;1422:23:42;;1414:68;;;;-1:-1:-1;;;1414:68:42;;13837:2:92;1414:68:42;;;13819:21:92;;;13856:18;;;13849:30;13915:34;13895:18;;;13888:62;13967:18;;1414:68:42;13635:356:92;3056:390:0;3108:7;270:10:2;3127:9:0;:33;3123:71;;3169:25;;-1:-1:-1;;;3169:25:0;;;;;;;;;;;3123:71;3201:17;3223:14;;3221:16;;;;;:::i;:::-;;;;;-1:-1:-1;3221:16:0;-1:-1:-1;173:4:2;3247:34:0;;3243:65;;;3290:18;;-1:-1:-1;;;3290:18:0;;;;;;;;;;;3243:65;-1:-1:-1;;;;;3315:24:0;;;;;;:13;:24;;;;;:31;;-1:-1:-1;;3315:31:0;3342:4;3315:31;;;3352;3329:9;3373;3352;:31::i;:::-;3395:24;;-1:-1:-1;;;;;3395:24:0;;;;;;;;3432:9;3056:390;-1:-1:-1;;3056:390:0:o;2433:187:42:-;2525:6;;;-1:-1:-1;;;;;2541:17:42;;;-1:-1:-1;;;;;;2541:17:42;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;1153:184:49:-;1274:4;1326;1297:25;1310:5;1317:4;1297:12;:25::i;:::-;:33;;1153:184;-1:-1:-1;;;;1153:184:49:o;6185:340:51:-;6255:13;6261:2;6265;6255:5;:13::i;:::-;-1:-1:-1;;;;;6300:14:51;;;:19;;:176;;-1:-1:-1;6339:72:51;;-1:-1:-1;;;6339:72:51;;;6431:45;-1:-1:-1;;;;;6339:40:51;;;6431:45;;6339:72;;6380:10;;6400:1;;6404:2;;6339:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6339:137:51;;6300:176;6279:239;;;;-1:-1:-1;;;6279:239:51;;;;;;;:::i;:::-;6185:340;;:::o;1991:290:49:-;2074:7;2116:4;2074:7;2130:116;2154:5;:12;2150:1;:16;2130:116;;;2202:33;2212:12;2226:5;2232:1;2226:8;;;;;;;;:::i;:::-;;;;;;;2202:9;:33::i;:::-;2187:48;-1:-1:-1;2168:3:49;;;;:::i;:::-;;;;2130:116;;;-1:-1:-1;2262:12:49;1991:290;-1:-1:-1;;;1991:290:49:o;5243:371:51:-;-1:-1:-1;;;;;5317:16:51;;5309:46;;;;-1:-1:-1;;;5309:46:51;;;;;;;:::i;:::-;5398:1;5374:12;;;:8;:12;;;;;;-1:-1:-1;;;;;5374:12:51;:26;5366:53;;;;-1:-1:-1;;;5366:53:51;;14567:2:92;5366:53:51;;;14549:21:92;14606:2;14586:18;;;14579:30;-1:-1:-1;;;14625:18:92;;;14618:44;14679:18;;5366:53:51;14365:338:92;5366:53:51;-1:-1:-1;;;;;5509:14:51;;;;;;:10;:14;;;;;;;;:16;;;;;;5546:12;;;:8;:12;;;;;;:17;;-1:-1:-1;;;;;;5546:17:51;;;;;5579:28;5555:2;;5509:14;;-1:-1:-1;;;;;;;;;;;5579:28:51;5509:14;;5579:28;5243:371;;:::o;8054:147:49:-;8117:7;8147:1;8143;:5;:51;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8143:51;;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8151:20;8136:58;8054:147;-1:-1:-1;;;8054:147:49:o;196:131:92:-;-1:-1:-1;;;;;;270:32:92;;260:43;;250:71;;317:1;314;307:12;332:245;390:6;443:2;431:9;422:7;418:23;414:32;411:52;;;459:1;456;449:12;411:52;498:9;485:23;517:30;541:5;517:30;:::i;774:597::-;886:4;915:2;944;933:9;926:21;976:6;970:13;1019:6;1014:2;1003:9;999:18;992:34;1044:1;1054:140;1068:6;1065:1;1062:13;1054:140;;;1163:14;;;1159:23;;1153:30;1129:17;;;1148:2;1125:26;1118:66;1083:10;;1054:140;;;1212:6;1209:1;1206:13;1203:91;;;1282:1;1277:2;1268:6;1257:9;1253:22;1249:31;1242:42;1203:91;-1:-1:-1;1355:2:92;1334:15;-1:-1:-1;;1330:29:92;1315:45;;;;1362:2;1311:54;;774:597;-1:-1:-1;;;774:597:92:o;1376:180::-;1435:6;1488:2;1476:9;1467:7;1463:23;1459:32;1456:52;;;1504:1;1501;1494:12;1456:52;-1:-1:-1;1527:23:92;;1376:180;-1:-1:-1;1376:180:92:o;1769:131::-;-1:-1:-1;;;;;1844:31:92;;1834:42;;1824:70;;1890:1;1887;1880:12;1905:315;1973:6;1981;2034:2;2022:9;2013:7;2009:23;2005:32;2002:52;;;2050:1;2047;2040:12;2002:52;2089:9;2076:23;2108:31;2133:5;2108:31;:::i;:::-;2158:5;2210:2;2195:18;;;;2182:32;;-1:-1:-1;;;1905:315:92:o;2225:247::-;2284:6;2337:2;2325:9;2316:7;2312:23;2308:32;2305:52;;;2353:1;2350;2343:12;2305:52;2392:9;2379:23;2411:31;2436:5;2411:31;:::i;2477:456::-;2554:6;2562;2570;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2678:9;2665:23;2697:31;2722:5;2697:31;:::i;:::-;2747:5;-1:-1:-1;2804:2:92;2789:18;;2776:32;2817:33;2776:32;2817:33;:::i;:::-;2477:456;;2869:7;;-1:-1:-1;;;2923:2:92;2908:18;;;;2895:32;;2477:456::o;3198:818::-;3302:6;3310;3318;3326;3379:2;3367:9;3358:7;3354:23;3350:32;3347:52;;;3395:1;3392;3385:12;3347:52;3434:9;3421:23;3453:31;3478:5;3453:31;:::i;:::-;3503:5;-1:-1:-1;3555:2:92;3540:18;;3527:32;;-1:-1:-1;3610:2:92;3595:18;;3582:32;-1:-1:-1;;;;;3663:14:92;;;3660:34;;;3690:1;3687;3680:12;3660:34;3728:6;3717:9;3713:22;3703:32;;3773:7;3766:4;3762:2;3758:13;3754:27;3744:55;;3795:1;3792;3785:12;3744:55;3835:2;3822:16;3861:2;3853:6;3850:14;3847:34;;;3877:1;3874;3867:12;3847:34;3930:7;3925:2;3915:6;3912:1;3908:14;3904:2;3900:23;3896:32;3893:45;3890:65;;;3951:1;3948;3941:12;3890:65;3198:818;;;;-1:-1:-1;;3982:2:92;3974:11;;-1:-1:-1;;;3198:818:92:o;4021:416::-;4086:6;4094;4147:2;4135:9;4126:7;4122:23;4118:32;4115:52;;;4163:1;4160;4153:12;4115:52;4202:9;4189:23;4221:31;4246:5;4221:31;:::i;:::-;4271:5;-1:-1:-1;4328:2:92;4313:18;;4300:32;4370:15;;4363:23;4351:36;;4341:64;;4401:1;4398;4391:12;4341:64;4424:7;4414:17;;;4021:416;;;;;:::o;4442:936::-;4539:6;4547;4555;4563;4571;4624:3;4612:9;4603:7;4599:23;4595:33;4592:53;;;4641:1;4638;4631:12;4592:53;4680:9;4667:23;4699:31;4724:5;4699:31;:::i;:::-;4749:5;-1:-1:-1;4806:2:92;4791:18;;4778:32;4819:33;4778:32;4819:33;:::i;:::-;4871:7;-1:-1:-1;4925:2:92;4910:18;;4897:32;;-1:-1:-1;4980:2:92;4965:18;;4952:32;-1:-1:-1;;;;;5033:14:92;;;5030:34;;;5060:1;5057;5050:12;5030:34;5098:6;5087:9;5083:22;5073:32;;5143:7;5136:4;5132:2;5128:13;5124:27;5114:55;;5165:1;5162;5155:12;5114:55;5205:2;5192:16;5231:2;5223:6;5220:14;5217:34;;;5247:1;5244;5237:12;5217:34;5292:7;5287:2;5278:6;5274:2;5270:15;5266:24;5263:37;5260:57;;;5313:1;5310;5303:12;5260:57;4442:936;;;;-1:-1:-1;4442:936:92;;-1:-1:-1;5344:2:92;5336:11;;5366:6;4442:936;-1:-1:-1;;;4442:936:92:o;5383:388::-;5451:6;5459;5512:2;5500:9;5491:7;5487:23;5483:32;5480:52;;;5528:1;5525;5518:12;5480:52;5567:9;5554:23;5586:31;5611:5;5586:31;:::i;:::-;5636:5;-1:-1:-1;5693:2:92;5678:18;;5665:32;5706:33;5665:32;5706:33;:::i;5776:380::-;5855:1;5851:12;;;;5898;;;5919:61;;5973:4;5965:6;5961:17;5951:27;;5919:61;6026:2;6018:6;6015:14;5995:18;5992:38;5989:161;;6072:10;6067:3;6063:20;6060:1;6053:31;6107:4;6104:1;6097:15;6135:4;6132:1;6125:15;5989:161;;5776:380;;;:::o;6161:338::-;6363:2;6345:21;;;6402:2;6382:18;;;6375:30;-1:-1:-1;;;6436:2:92;6421:18;;6414:44;6490:2;6475:18;;6161:338::o;6843:341::-;7045:2;7027:21;;;7084:2;7064:18;;;7057:30;-1:-1:-1;;;7118:2:92;7103:18;;7096:47;7175:2;7160:18;;6843:341::o;7399:555::-;-1:-1:-1;;;;;7722:15:92;;;7704:34;;7774:15;;;;7769:2;7754:18;;7747:43;7821:2;7806:18;;7799:34;;;;7869:3;7864:2;7849:18;;7842:31;;;7647:4;7889:19;;;7882:30;7684:3;7929:19;;7399:555::o;7959:249::-;8028:6;8081:2;8069:9;8060:7;8056:23;8052:32;8049:52;;;8097:1;8094;8087:12;8049:52;8129:9;8123:16;8148:30;8172:5;8148:30;:::i;8213:340::-;8415:2;8397:21;;;8454:2;8434:18;;;8427:30;-1:-1:-1;;;8488:2:92;8473:18;;8466:46;8544:2;8529:18;;8213:340::o;11036:662::-;-1:-1:-1;;;;;11315:15:92;;;11297:34;;11367:15;;11362:2;11347:18;;11340:43;11414:2;11399:18;;11392:34;;;11462:3;11457:2;11442:18;;11435:31;;;11482:19;;11475:35;;;11240:4;11503:6;11553;11277:3;11532:19;;11519:49;11618:1;11612:3;11603:6;11592:9;11588:22;11584:32;11577:43;11688:3;11681:2;11677:7;11672:2;11664:6;11660:15;11656:29;11645:9;11641:45;11637:55;11629:63;;11036:662;;;;;;;;:::o;11963:1260::-;12192:3;12221:1;12254:6;12248:13;12284:3;12306:1;12334:9;12330:2;12326:18;12316:28;;12394:2;12383:9;12379:18;12416;12406:61;;12460:4;12452:6;12448:17;12438:27;;12406:61;12486:2;12534;12526:6;12523:14;12503:18;12500:38;12497:165;;-1:-1:-1;;;12561:33:92;;12617:4;12614:1;12607:15;12647:4;12568:3;12635:17;12497:165;12678:18;12705:133;;;;12852:1;12847:320;;;;12671:496;;12705:133;-1:-1:-1;;12738:24:92;;12726:37;;12811:14;;12804:22;12792:35;;12783:45;;;-1:-1:-1;12705:133:92;;12847:320;11776:1;11769:14;;;11813:4;11800:18;;12942:1;12956:165;12970:6;12967:1;12964:13;12956:165;;;13048:14;;13035:11;;;13028:35;13091:16;;;;12985:10;;12956:165;;;12960:3;;13150:6;13145:3;13141:16;13134:23;;12671:496;;;;;;;13183:34;13213:3;-1:-1:-1;;;11894:30:92;;11949:2;11940:12;;11829:129;13183:34;13176:41;11963:1260;-1:-1:-1;;;;11963:1260:92:o;13996:232::-;14035:3;14056:17;;;14053:140;;14115:10;14110:3;14106:20;14103:1;14096:31;14150:4;14147:1;14140:15;14178:4;14175:1;14168:15;14053:140;-1:-1:-1;14220:1:92;14209:13;;13996:232::o;14233:127::-;14294:10;14289:3;14285:20;14282:1;14275:31;14325:4;14322:1;14315:15;14349:4;14346:1;14339:15",
    "linkReferences": {},
    "immutableReferences": {
      "42": [
        {
          "start": 3055,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowlistMint()": "41fbddbd",
    "alreadyMinted(address)": "0a398b88",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "currentTokenId()": "009a9b7b",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address)": "6a627842",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "privateMint(address,uint256,bytes32[])": "9886a902",
    "publicMint()": "26092b83",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "startPublicMint()": "76c64c62",
    "startWaitlistMint()": "a839e501",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "waitlistMint()": "aebb096c",
    "withdrawPayments(address)": "31b3eb94"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintPriceNotPaid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonExistentTokenURI\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawTransfer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowlistMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"alreadyMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"privateMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPublicMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startWaitlistMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"waitlistMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"HNT Labs\",\"kind\":\"dev\",\"methods\":{\"mint(address)\":{\"params\":{\"recipient\":\"the address that will receive the minted NFT\"},\"returns\":{\"_0\":\"tokenId token id of the minted NFT\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"privateMint(address,uint256,bytes32[])\":{\"params\":{\"allowance\":\"of 1 means user is on the allowlist, @allowance of 0 means user is on the waitlist\",\"proof\":\"the generated merkle proof that this user is on the allowlist or waitlist\",\"recipient\":\"the address that will receive the minted NFT\"},\"returns\":{\"_0\":\"tokenId token id of the minted NFT\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"the id of the token to get the tokenURI for\"},\"returns\":{\"_0\":\"the tokenURI for the given tokenId\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawPayments(address)\":{\"params\":{\"payee\":\"the address that will receive the withdrawn ether\"}}},\"title\":\"CouncilNFT\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyMinted()\":[{\"notice\":\"thrown when user tries to mint more than 1 token with same wallet\"}],\"MaxSupply()\":[{\"notice\":\"thrown when the max supply is reached\"}],\"MintPriceNotPaid()\":[{\"notice\":\"thrown when an incorrect amount of ETH is sent to mint\"}],\"NonExistentTokenURI()\":[{\"notice\":\"thrown when a token is not minted\"}],\"WithdrawTransfer()\":[{\"notice\":\"thrown when the withdraw payment transaction fails\"}]},\"kind\":\"user\",\"methods\":{\"alreadyMinted(address)\":{\"notice\":\"mapping to track which  users have already minted an nft\"},\"baseURI()\":{\"notice\":\"the base uri for the nft metadata including image uri\"},\"currentTokenId()\":{\"notice\":\"the counter token id for the next mint\"},\"mint(address)\":{\"notice\":\"the secondary minting method used only when public minting is active\"},\"privateMint(address,uint256,bytes32[])\":{\"notice\":\"the primary minting method for the allowlist and waitlist minting periods\"},\"startPublicMint()\":{\"notice\":\"starts the public minting period\"},\"startWaitlistMint()\":{\"notice\":\"starts the waitlist minting period\"},\"tokenURI(uint256)\":{\"notice\":\"Get the tokenURI for the given tokenId\"},\"withdrawPayments(address)\":{\"notice\":\"withdraw the balance from the contract\"}},\"notice\":\"This is the main NFT contract for the council of Zion\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/zion-governance/contracts/council/CouncilNFT.sol\":\"CouncilNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@harmony/=node_modules/@harmony/\",\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":contract-debug-ui/=node_modules/contract-debug-ui/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-console/=node_modules/hardhat-console/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-json-writer/=node_modules/solidity-json-writer/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/zion-governance/contracts/council/CouncilNFT.sol\":{\"keccak256\":\"0xc0c38c0d1b739167b6d5346acc580a300c7c5ce79b3c79c31b1d8313a057015b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://42db164dd4827465127197ecbb1e43d0924fcc466c8ca8d3c3e1f77bc0ae173f\",\"dweb:/ipfs/Qmerb8RcvUyTmM7qXmRjffKT54Agqw5H7phMEkK7L1ZuXu\"]},\"contracts/zion-governance/contracts/council/libraries/Constants.sol\":{\"keccak256\":\"0xd28a3be0f0d3732c1813f73019fabafdd2decc262340dc4dc5fcc47f2b40c19b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0a6dd6f360bb06f796972c0ec2df97746ea32f7b8659b40b2179c022070fd4d9\",\"dweb:/ipfs/QmcNAL4eRBDV7cm689EcAmHyr1BcSoUp8txSByZp572FjR\"]},\"contracts/zion-governance/contracts/council/libraries/Errors.sol\":{\"keccak256\":\"0x22691fed8c00c27e6baef8e747cb846a578bd699ec6978d04486c81677a24c2f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52f1e12630eb8a29450653ab64602fcf99fd568fb2157e8ff36b1a0d01976af6\",\"dweb:/ipfs/QmfY7LeGEZdthVY2sbhNxrbLbXPDHPybJfT146p9yuRFna\"]},\"contracts/zion-governance/contracts/council/libraries/Events.sol\":{\"keccak256\":\"0x373a86836994cde1f186668690f51ace6d5fc645bf9effa6ce0633cf0732659a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://92a00bb216d56259162c1657c8ea73b875ea62a335635604b5d5cb1c75228c00\",\"dweb:/ipfs/QmeW6FVzmsvN4xnVhepDoBvZETNVbFkN2vLxQa9jHeWBjZ\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f49013d50b1011c842f76e96f3c3f146ca7cb15084c8805575e0e0e1a5c700\",\"dweb:/ipfs/QmQ3n5qiuioUA74heD6ZddNkYg1kYihjQBNcy9zgwYXKgM\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "_root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxSupply"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintPriceNotPaid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonExistentTokenURI"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allowlistMint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "alreadyMinted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "privateMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "publicMint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startPublicMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startWaitlistMint"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "waitlistMint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "payee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawPayments"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "mint(address)": {
            "params": {
              "recipient": "the address that will receive the minted NFT"
            },
            "returns": {
              "_0": "tokenId token id of the minted NFT"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "privateMint(address,uint256,bytes32[])": {
            "params": {
              "allowance": "of 1 means user is on the allowlist, @allowance of 0 means user is on the waitlist",
              "proof": "the generated merkle proof that this user is on the allowlist or waitlist",
              "recipient": "the address that will receive the minted NFT"
            },
            "returns": {
              "_0": "tokenId token id of the minted NFT"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "tokenURI(uint256)": {
            "params": {
              "tokenId": "the id of the token to get the tokenURI for"
            },
            "returns": {
              "_0": "the tokenURI for the given tokenId"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdrawPayments(address)": {
            "params": {
              "payee": "the address that will receive the withdrawn ether"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "alreadyMinted(address)": {
            "notice": "mapping to track which  users have already minted an nft"
          },
          "baseURI()": {
            "notice": "the base uri for the nft metadata including image uri"
          },
          "currentTokenId()": {
            "notice": "the counter token id for the next mint"
          },
          "mint(address)": {
            "notice": "the secondary minting method used only when public minting is active"
          },
          "privateMint(address,uint256,bytes32[])": {
            "notice": "the primary minting method for the allowlist and waitlist minting periods"
          },
          "startPublicMint()": {
            "notice": "starts the public minting period"
          },
          "startWaitlistMint()": {
            "notice": "starts the waitlist minting period"
          },
          "tokenURI(uint256)": {
            "notice": "Get the tokenURI for the given tokenId"
          },
          "withdrawPayments(address)": {
            "notice": "withdraw the balance from the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@harmony/=node_modules/@harmony/",
        ":@opengsn/=node_modules/@opengsn/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":contract-debug-ui/=node_modules/contract-debug-ui/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-console/=node_modules/hardhat-console/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solidity-json-writer/=node_modules/solidity-json-writer/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/zion-governance/contracts/council/CouncilNFT.sol": "CouncilNFT"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/zion-governance/contracts/council/CouncilNFT.sol": {
        "keccak256": "0xc0c38c0d1b739167b6d5346acc580a300c7c5ce79b3c79c31b1d8313a057015b",
        "urls": [
          "bzz-raw://42db164dd4827465127197ecbb1e43d0924fcc466c8ca8d3c3e1f77bc0ae173f",
          "dweb:/ipfs/Qmerb8RcvUyTmM7qXmRjffKT54Agqw5H7phMEkK7L1ZuXu"
        ],
        "license": "Apache-2.0"
      },
      "contracts/zion-governance/contracts/council/libraries/Constants.sol": {
        "keccak256": "0xd28a3be0f0d3732c1813f73019fabafdd2decc262340dc4dc5fcc47f2b40c19b",
        "urls": [
          "bzz-raw://0a6dd6f360bb06f796972c0ec2df97746ea32f7b8659b40b2179c022070fd4d9",
          "dweb:/ipfs/QmcNAL4eRBDV7cm689EcAmHyr1BcSoUp8txSByZp572FjR"
        ],
        "license": "Apache-2.0"
      },
      "contracts/zion-governance/contracts/council/libraries/Errors.sol": {
        "keccak256": "0x22691fed8c00c27e6baef8e747cb846a578bd699ec6978d04486c81677a24c2f",
        "urls": [
          "bzz-raw://52f1e12630eb8a29450653ab64602fcf99fd568fb2157e8ff36b1a0d01976af6",
          "dweb:/ipfs/QmfY7LeGEZdthVY2sbhNxrbLbXPDHPybJfT146p9yuRFna"
        ],
        "license": "Apache-2.0"
      },
      "contracts/zion-governance/contracts/council/libraries/Events.sol": {
        "keccak256": "0x373a86836994cde1f186668690f51ace6d5fc645bf9effa6ce0633cf0732659a",
        "urls": [
          "bzz-raw://92a00bb216d56259162c1657c8ea73b875ea62a335635604b5d5cb1c75228c00",
          "dweb:/ipfs/QmeW6FVzmsvN4xnVhepDoBvZETNVbFkN2vLxQa9jHeWBjZ"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7",
        "urls": [
          "bzz-raw://d5f49013d50b1011c842f76e96f3c3f146ca7cb15084c8805575e0e0e1a5c700",
          "dweb:/ipfs/QmQ3n5qiuioUA74heD6ZddNkYg1kYihjQBNcy9zgwYXKgM"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/zion-governance/contracts/council/CouncilNFT.sol",
    "id": 330,
    "exportedSymbols": {
      "Constants": [
        903
      ],
      "CouncilNFT": [
        329
      ],
      "ERC721": [
        40095
      ],
      "ERC721TokenReceiver": [
        40115
      ],
      "Errors": [
        955
      ],
      "Events": [
        984
      ],
      "MerkleProof": [
        39539
      ],
      "Ownable": [
        38589
      ],
      "Strings": [
        39037
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:4635:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "38:23:0",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "63:35:0",
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 40116,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "99:76:0",
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 38590,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38589,
              "src": "107:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6,
        "nodeType": "ImportDirective",
        "src": "176:75:0",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "openzeppelin-contracts/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 39038,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5,
              "name": "Strings",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39037,
              "src": "184:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 8,
        "nodeType": "ImportDirective",
        "src": "252:46:0",
        "absolutePath": "contracts/zion-governance/contracts/council/libraries/Errors.sol",
        "file": "./libraries/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 956,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7,
              "name": "Errors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 955,
              "src": "260:6:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 10,
        "nodeType": "ImportDirective",
        "src": "299:46:0",
        "absolutePath": "contracts/zion-governance/contracts/council/libraries/Events.sol",
        "file": "./libraries/Events.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 985,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9,
              "name": "Events",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 984,
              "src": "307:6:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12,
        "nodeType": "ImportDirective",
        "src": "346:52:0",
        "absolutePath": "contracts/zion-governance/contracts/council/libraries/Constants.sol",
        "file": "./libraries/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 904,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11,
              "name": "Constants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 903,
              "src": "354:9:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 14,
        "nodeType": "ImportDirective",
        "src": "399:96:0",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 39540,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13,
              "name": "MerkleProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39539,
              "src": "407:11:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 329,
        "nodeType": "ContractDefinition",
        "src": "614:4058:0",
        "nodes": [
          {
            "id": 22,
            "nodeType": "UsingForDirective",
            "src": "657:26:0",
            "global": false,
            "libraryName": {
              "id": 20,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39037,
              "src": "663:7:0"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "675:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 25,
            "nodeType": "VariableDeclaration",
            "src": "755:21:0",
            "constant": false,
            "documentation": {
              "id": 23,
              "nodeType": "StructuredDocumentation",
              "src": "687:65:0",
              "text": "@notice the base uri for the nft metadata including image uri"
            },
            "functionSelector": "6c0360eb",
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "769:7:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 24,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "755:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28,
            "nodeType": "VariableDeclaration",
            "src": "834:29:0",
            "constant": false,
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "781:50:0",
              "text": "@notice the counter token id for the next mint"
            },
            "functionSelector": "009a9b7b",
            "mutability": "mutable",
            "name": "currentTokenId",
            "nameLocation": "849:14:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 27,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "834:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33,
            "nodeType": "VariableDeclaration",
            "src": "939:45:0",
            "constant": false,
            "documentation": {
              "id": 29,
              "nodeType": "StructuredDocumentation",
              "src": "868:68:0",
              "text": "@notice mapping to track which  users have already minted an nft"
            },
            "functionSelector": "0a398b88",
            "mutability": "mutable",
            "name": "alreadyMinted",
            "nameLocation": "971:13:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "947:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "939:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 31,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "958:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 35,
            "nodeType": "VariableDeclaration",
            "src": "1052:25:0",
            "constant": false,
            "functionSelector": "41fbddbd",
            "mutability": "mutable",
            "name": "allowlistMint",
            "nameLocation": "1064:13:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 34,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1052:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37,
            "nodeType": "VariableDeclaration",
            "src": "1081:24:0",
            "constant": false,
            "functionSelector": "aebb096c",
            "mutability": "mutable",
            "name": "waitlistMint",
            "nameLocation": "1093:12:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 36,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1081:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39,
            "nodeType": "VariableDeclaration",
            "src": "1109:22:0",
            "constant": false,
            "functionSelector": "26092b83",
            "mutability": "mutable",
            "name": "publicMint",
            "nameLocation": "1121:10:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 38,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1109:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 42,
            "nodeType": "VariableDeclaration",
            "src": "1196:31:0",
            "constant": false,
            "documentation": {
              "id": 40,
              "nodeType": "StructuredDocumentation",
              "src": "1136:57:0",
              "text": "@notice the root of the merkle tree for the allowlist"
            },
            "mutability": "immutable",
            "name": "root",
            "nameLocation": "1223:4:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 41,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1196:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 70,
            "nodeType": "FunctionDefinition",
            "src": "1232:211:0",
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "1370:73:0",
              "statements": [
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1376:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1386:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1376:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:18:0"
                },
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1400:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62,
                      "name": "_root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1407:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1400:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:12:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1418:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1434:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1418:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:20:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 53,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "1354:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 54,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46,
                    "src": "1361:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 55,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 52,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40095,
                  "src": "1347:6:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1347:22:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1263:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1249:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1288:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1274:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "1315:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1301:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "_root",
                  "nameLocation": "1337:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1329:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1243:103:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 129,
            "nodeType": "FunctionDefinition",
            "src": "1851:579:0",
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1985:445:0",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 83,
                      "name": "alreadyMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1995:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 85,
                    "indexExpression": {
                      "id": 84,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2009:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1995:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91,
                  "nodeType": "IfStatement",
                  "src": "1991:59:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 86,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "2028:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "AlreadyMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 942,
                        "src": "2028:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2028:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 90,
                    "nodeType": "RevertStatement",
                    "src": "2021:29:0"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 92,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2061:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2078:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2061:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 103,
                  "nodeType": "IfStatement",
                  "src": "2057:92:0",
                  "trueBody": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "2084:65:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 96,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75,
                                "src": "2100:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2113:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2100:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420616c6c6f77656420746f206d696e7420796574",
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2116:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_93e88215183578f5aaa04bb5f966ce76eb49ed954a4c7e3c4044873616fa3eee",
                                "typeString": "literal_string \"Not allowed to mint yet\""
                              },
                              "value": "Not allowed to mint yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_93e88215183578f5aaa04bb5f966ce76eb49ed954a4c7e3c4044873616fa3eee",
                                "typeString": "literal_string \"Not allowed to mint yet\""
                              }
                            ],
                            "id": 95,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2092:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2092:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101,
                        "nodeType": "ExpressionStatement",
                        "src": "2092:50:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "mutability": "mutable",
                      "name": "payload",
                      "nameLocation": "2223:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 128,
                      "src": "2215:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 104,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2215:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 113,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 109,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "2260:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 110,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "2271:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 107,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2243:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2243:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2243:38:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 106,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2233:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2233:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2215:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 117,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "2323:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 118,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "2330:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 119,
                            "name": "payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "2336:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 115,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39539,
                            "src": "2304:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$39539_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39061,
                          "src": "2304:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2304:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c696564",
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2352:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2f47add308f7d76603eeee5e3edc71de6361e9f105e76633970ce1b8dd69f22",
                          "typeString": "literal_string \"Invalid merkle tree proof supplied\""
                        },
                        "value": "Invalid merkle tree proof supplied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2f47add308f7d76603eeee5e3edc71de6361e9f105e76633970ce1b8dd69f22",
                          "typeString": "literal_string \"Invalid merkle tree proof supplied\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2289:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2289:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2289:105:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 125,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "2415:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 124,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "2408:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2408:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 82,
                  "id": 127,
                  "nodeType": "Return",
                  "src": "2401:24:0"
                }
              ]
            },
            "documentation": {
              "id": 71,
              "nodeType": "StructuredDocumentation",
              "src": "1447:401:0",
              "text": "@notice the primary minting method for the allowlist and waitlist minting periods\n @param recipient the address that will receive the minted NFT\n @param allowance of 1 means user is on the allowlist, @allowance of 0 means user is on the waitlist\n @param proof the generated merkle proof that this user is on the allowlist or waitlist\n @return tokenId token id of the minted NFT"
            },
            "functionSelector": "9886a902",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "privateMint",
            "nameLocation": "1860:11:0",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1885:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1877:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "allowance",
                  "nameLocation": "1908:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1900:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1900:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "1942:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1923:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1923:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 77,
                    "nodeType": "ArrayTypeName",
                    "src": "1923:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1871:80:0"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1976:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1976:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1975:9:0"
            },
            "scope": 329,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 158,
            "nodeType": "FunctionDefinition",
            "src": "2634:244:0",
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "2700:178:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 138,
                            "name": "alreadyMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2714:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 140,
                          "indexExpression": {
                            "id": 139,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "2728:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2714:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2742:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2714:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479206d696e74656420616e204e4654",
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2749:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08f848b7b93077c49a2062c9a8c995a84d478ced136ec2a97db79946837b3e71",
                          "typeString": "literal_string \"Already minted an NFT\""
                        },
                        "value": "Already minted an NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08f848b7b93077c49a2062c9a8c995a84d478ced136ec2a97db79946837b3e71",
                          "typeString": "literal_string \"Already minted an NFT\""
                        }
                      ],
                      "id": 137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2706:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2706:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2706:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 147,
                          "name": "publicMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "2787:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2801:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2787:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c6963206d696e74696e67206973206e6f7420616c6c6f77656420796574",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2807:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3856cc290bfb870311067a6378c21a0013e2d9c7ec535e31b3c89448b1aedb92",
                          "typeString": "literal_string \"Public minting is not allowed yet\""
                        },
                        "value": "Public minting is not allowed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3856cc290bfb870311067a6378c21a0013e2d9c7ec535e31b3c89448b1aedb92",
                          "typeString": "literal_string \"Public minting is not allowed yet\""
                        }
                      ],
                      "id": 146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2779:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2779:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2779:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 154,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "2863:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 153,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "2856:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2856:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 136,
                  "id": 156,
                  "nodeType": "Return",
                  "src": "2849:24:0"
                }
              ]
            },
            "documentation": {
              "id": 130,
              "nodeType": "StructuredDocumentation",
              "src": "2434:197:0",
              "text": "@notice the secondary minting method used only when public minting is active\n @param recipient the address that will receive the minted NFT\n @return tokenId token id of the minted NFT"
            },
            "functionSelector": "6a627842",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2643:4:0",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2656:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2648:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2647:19:0"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2691:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2690:9:0"
            },
            "scope": 329,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 212,
            "nodeType": "FunctionDefinition",
            "src": "3056:390:0",
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "3117:329:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 166,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3127:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3127:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 168,
                        "name": "Constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "3140:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Constants_$903_$",
                          "typeString": "type(library Constants)"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "MINT_PRICE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 902,
                      "src": "3140:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3127:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 176,
                  "nodeType": "IfStatement",
                  "src": "3123:71:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 171,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "3169:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "MintPriceNotPaid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "3169:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3169:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 175,
                    "nodeType": "RevertStatement",
                    "src": "3162:32:0"
                  }
                },
                {
                  "assignments": [
                    178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 178,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "3209:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "3201:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3201:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 181,
                  "initialValue": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "3221:16:0",
                    "subExpression": {
                      "id": 179,
                      "name": "currentTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "3223:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3201:36:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 182,
                      "name": "newItemId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "3247:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 183,
                        "name": "Constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "3259:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Constants_$903_$",
                          "typeString": "type(library Constants)"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TOTAL_SUPPLY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 898,
                      "src": "3259:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3247:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 191,
                  "nodeType": "IfStatement",
                  "src": "3243:65:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 186,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "3290:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "MaxSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 933,
                        "src": "3290:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3290:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 190,
                    "nodeType": "RevertStatement",
                    "src": "3283:25:0"
                  }
                },
                {
                  "expression": {
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 192,
                        "name": "alreadyMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3315:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 194,
                      "indexExpression": {
                        "id": 193,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3329:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3315:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3342:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3315:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "3315:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 199,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3362:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 200,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "3373:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 198,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        40052,
                        40094
                      ],
                      "referencedDeclaration": 40052,
                      "src": "3352:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3352:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3352:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 206,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3409:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 203,
                        "name": "Events",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "3395:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Events_$984_$",
                          "typeString": "type(library Events)"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "Minted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 962,
                      "src": "3395:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3395:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "EmitStatement",
                  "src": "3390:29:0"
                },
                {
                  "expression": {
                    "id": 209,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 178,
                    "src": "3432:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 165,
                  "id": 210,
                  "nodeType": "Return",
                  "src": "3425:16:0"
                }
              ]
            },
            "documentation": {
              "id": 159,
              "nodeType": "StructuredDocumentation",
              "src": "2882:171:0",
              "text": "@notice Verify that the user sent the proper amount of ether to mint\n @notice Verify that there are still more NFTs to mint\n @notice Mint the NFT to the user"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "3065:6:0",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3080:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "3072:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3072:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3071:19:0"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "3108:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3107:9:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 255,
            "nodeType": "FunctionDefinition",
            "src": "3617:326:0",
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "3727:216:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 222,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "3745:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 221,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39620,
                        "src": "3737:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3737:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3765:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3757:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3757:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3757:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3737:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 235,
                  "nodeType": "IfStatement",
                  "src": "3733:86:0",
                  "trueBody": {
                    "id": 234,
                    "nodeType": "Block",
                    "src": "3769:50:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 229,
                              "name": "Errors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "3784:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                                "typeString": "type(library Errors)"
                              }
                            },
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "NonExistentTokenURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 936,
                            "src": "3784:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3784:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 233,
                        "nodeType": "RevertStatement",
                        "src": "3777:35:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 238,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "3843:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3837:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 236,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3837:5:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3837:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3837:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3861:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3837:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3936:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3837:101:0",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 247,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "3897:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "hexValue": "636f756e63696c6d65746164617461",
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3906:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fe29c6027f746311fa0ffb1256ea191de5e1b7ce95dde50a8f5de26c1a095a51",
                                "typeString": "literal_string \"councilmetadata\""
                              },
                              "value": "councilmetadata"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fe29c6027f746311fa0ffb1256ea191de5e1b7ce95dde50a8f5de26c1a095a51",
                                "typeString": "literal_string \"councilmetadata\""
                              }
                            ],
                            "expression": {
                              "id": 245,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3880:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3880:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3880:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3873:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3873:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3873:52:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 220,
                  "id": 253,
                  "nodeType": "Return",
                  "src": "3824:114:0"
                }
              ]
            },
            "baseFunctions": [
              39589
            ],
            "documentation": {
              "id": 213,
              "nodeType": "StructuredDocumentation",
              "src": "3450:164:0",
              "text": "@notice Get the tokenURI for the given tokenId\n @param tokenId the id of the token to get the tokenURI for\n @return the tokenURI for the given tokenId"
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3626:8:0",
            "overrides": {
              "id": 217,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3688:8:0"
            },
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3643:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3635:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3634:17:0"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3710:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3710:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3709:15:0"
            },
            "scope": 329,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 290,
            "nodeType": "FunctionDefinition",
            "src": "4069:245:0",
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "4137:177:0",
              "statements": [
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "4151:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "4143:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 263,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4143:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 270,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 267,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4169:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CouncilNFT_$329",
                            "typeString": "contract CouncilNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CouncilNFT_$329",
                            "typeString": "contract CouncilNFT"
                          }
                        ],
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4161:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4161:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4161:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4161:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4143:39:0"
                },
                {
                  "assignments": [
                    272,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 272,
                      "mutability": "mutable",
                      "name": "transferTx",
                      "nameLocation": "4194:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "4189:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 271,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4189:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 279,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4237:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 273,
                          "name": "payee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "4210:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4210:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 275,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "4228:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4210:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4210:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4188:52:0"
                },
                {
                  "condition": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4250:11:0",
                    "subExpression": {
                      "id": 280,
                      "name": "transferTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "4251:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 288,
                  "nodeType": "IfStatement",
                  "src": "4246:64:0",
                  "trueBody": {
                    "id": 287,
                    "nodeType": "Block",
                    "src": "4263:47:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 282,
                              "name": "Errors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "4278:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                                "typeString": "type(library Errors)"
                              }
                            },
                            "id": 284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "WithdrawTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 939,
                            "src": "4278:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4278:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 286,
                        "nodeType": "RevertStatement",
                        "src": "4271:32:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 256,
              "nodeType": "StructuredDocumentation",
              "src": "3947:119:0",
              "text": "@notice withdraw the balance from the contract\n @param payee the address that will receive the withdrawn ether"
            },
            "functionSelector": "31b3eb94",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 261,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 260,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38508,
                  "src": "4127:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4127:9:0"
              }
            ],
            "name": "withdrawPayments",
            "nameLocation": "4078:16:0",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "4111:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "4095:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4095:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4094:23:0"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4137:0:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 309,
            "nodeType": "FunctionDefinition",
            "src": "4367:127:0",
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "4413:81:0",
              "statements": [
                {
                  "expression": {
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 296,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "4419:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4435:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4419:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:21:0"
                },
                {
                  "expression": {
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 300,
                      "name": "waitlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4446:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4461:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4446:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "4446:19:0"
                },
                {
                  "expression": {
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 304,
                      "name": "publicMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "4471:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4484:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4471:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "4471:18:0"
                }
              ]
            },
            "documentation": {
              "id": 291,
              "nodeType": "StructuredDocumentation",
              "src": "4318:46:0",
              "text": "@notice starts the waitlist minting period"
            },
            "functionSelector": "a839e501",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 294,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 293,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38508,
                  "src": "4403:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4403:9:0"
              }
            ],
            "name": "startWaitlistMint",
            "nameLocation": "4376:17:0",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4393:2:0"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4413:0:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 328,
            "nodeType": "FunctionDefinition",
            "src": "4545:125:0",
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "4589:81:0",
              "statements": [
                {
                  "expression": {
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 315,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "4595:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4611:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4595:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "4595:21:0"
                },
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 319,
                      "name": "waitlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4622:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4637:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4622:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "4622:20:0"
                },
                {
                  "expression": {
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 323,
                      "name": "publicMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "4648:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4661:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4648:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "4648:17:0"
                }
              ]
            },
            "documentation": {
              "id": 310,
              "nodeType": "StructuredDocumentation",
              "src": "4498:44:0",
              "text": "@notice starts the public minting period"
            },
            "functionSelector": "76c64c62",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 313,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 312,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38508,
                  "src": "4579:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4579:9:0"
              }
            ],
            "name": "startPublicMint",
            "nameLocation": "4554:15:0",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4569:2:0"
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4589:0:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40095,
              "src": "637:6:0"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "637:6:0"
          },
          {
            "baseName": {
              "id": 18,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38589,
              "src": "645:7:0"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "645:7:0"
          }
        ],
        "canonicalName": "CouncilNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15,
          "nodeType": "StructuredDocumentation",
          "src": "497:116:0",
          "text": " @title CouncilNFT\n @author HNT Labs\n @notice This is the main NFT contract for the council of Zion"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          329,
          38589,
          38811,
          40095
        ],
        "name": "CouncilNFT",
        "nameLocation": "623:10:0",
        "scope": 330,
        "usedErrors": [
          930,
          933,
          936,
          939,
          942
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 0
}
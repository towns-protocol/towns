"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CouncilStaking__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IERC721",
                name: "_councilNFT",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "NoPointsToClaim",
        type: "error",
    },
    {
        inputs: [],
        name: "NoStakedTokens",
        type: "error",
    },
    {
        inputs: [],
        name: "NotTokenOwner",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [],
        name: "claimPoints",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "councilNFT",
        outputs: [
            {
                internalType: "contract IERC721",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_staker",
                type: "address",
            },
        ],
        name: "getAvailablePoints",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_user",
                type: "address",
            },
        ],
        name: "getStakedTokensByAddress",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "staker",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256",
                    },
                ],
                internalType: "struct DataTypes.StakedToken[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
            },
        ],
        name: "getStakerAddressByTokenId",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_staker",
                type: "address",
            },
        ],
        name: "getStakerByAddress",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "amountStaked",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "staker",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "tokenId",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct DataTypes.StakedToken[]",
                        name: "stakedTokens",
                        type: "tuple[]",
                    },
                    {
                        internalType: "uint256",
                        name: "timeOfLastUpdate",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "unclaimedPoints",
                        type: "uint256",
                    },
                ],
                internalType: "struct DataTypes.Staker",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
            },
        ],
        name: "stakeToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
            },
        ],
        name: "withdrawToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a0604052620186a060035534801561001757600080fd5b50604051611152380380611152833981016040819052610036916100a4565b61003f33610054565b600180556001600160a01b03166080526100d4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100b657600080fd5b81516001600160a01b03811681146100cd57600080fd5b9392505050565b60805161104e610104600039600081816101bb0152818161079801528181610a450152610af9015261104e6000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461015f578063b503bbdb14610170578063ca1fb21b14610190578063cda6b847146101a3578063f1650069146101b6578063f2fde38b146101dd57600080fd5b806302dc0524146100b957806304d092c7146100e25780630f59165a146100ec57806318160ddd1461012d57806350baa62214610144578063715018a614610157575b600080fd5b6100cc6100c7366004610deb565b6101f0565b6040516100d99190610e08565b60405180910390f35b6100ea6103e1565b005b6101156100fa366004610e63565b6000908152600560205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016100d9565b61013660025481565b6040519081526020016100d9565b6100ea610152366004610e63565b610483565b6100ea61085b565b6000546001600160a01b0316610115565b61018361017e366004610deb565b61086f565b6040516100d99190610e7c565b61013661019e366004610deb565b610951565b6100ea6101b1366004610e63565b610980565b6101157f000000000000000000000000000000000000000000000000000000000000000081565b6100ea6101eb366004610deb565b610c59565b336000908152600460205260409020546060901561039d576001600160a01b03821660009081526004602052604081205467ffffffffffffffff81111561023957610239610f03565b60405190808252806020026020018201604052801561027e57816020015b60408051808201909152600080825260208201528152602001906001900390816102575790505b5090506000805b6001600160a01b038516600090815260046020526040902060010154811015610394576001600160a01b03851660009081526004602052604081206001018054839081106102d5576102d5610f19565b60009182526020909120600290910201546001600160a01b031614610382576001600160a01b038516600090815260046020526040902060010180548290811061032157610321610f19565b60009182526020918290206040805180820190915260029092020180546001600160a01b031682526001015491810191909152835184908490811061036857610368610f19565b6020026020010181905250818061037e90610f45565b9250505b8061038c81610f45565b915050610285565b50909392505050565b60408051600080825260208201909252906103da565b60408051808201909152600080825260208201528152602001906001900390816103b35790505b5092915050565b3360008181526004602052604081206003015490916103ff90610cd2565b6104099190610f5e565b90508060000361042b5760405162a445ad60e21b815260040160405180910390fd5b3360008181526004602052604080822042600282015560030191909155517fba953728785de35be3827ee7a7a7867a8472947562602939440e6c0bdbf4725e906104789084815260200190565b60405180910390a250565b6002600154036104da5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260015533600090815260046020526040812054900361050e57604051637ed4d00960e01b815260040160405180910390fd5b6000818152600560205260409020546001600160a01b03163314610545576040516359dc379f60e01b815260040160405180910390fd5b600061055033610cd2565b33600090815260046020526040812060030180549293508392909190610577908490610f5e565b909155505033600090815260046020526040812060010154815b8181101561063a573360009081526004602052604090206001018054869190839081106105c0576105c0610f19565b90600052602060002090600202016001015414801561061b57503360009081526004602052604081206001018054839081106105fe576105fe610f19565b60009182526020909120600290910201546001600160a01b031614155b156106285780925061063a565b8061063281610f45565b915050610591565b5033600090815260046020526040902060019081019061065a9083610f76565b8154811061066a5761066a610f19565b906000526020600020906002020160046000336001600160a01b03166001600160a01b0316815260200190815260200160002060010183815481106106b1576106b1610f19565b60009182526020808320845460029093020180546001600160a01b0319166001600160a01b039093169290921782556001938401549184019190915533825260049052604090200180548061070857610708610f8d565b6000828152602080822060026000199094019384020180546001600160a01b031916815560010182905591909255338252600490526040812080549161074d83610fa3565b90915550506000848152600560205260409081902080546001600160a01b0319169055516323b872dd60e01b8152306004820152336024820152604481018590526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401600060405180830381600087803b1580156107dc57600080fd5b505af11580156107f0573d6000803e3d6000fd5b50503360009081526004602052604081204260029182015580549350915061081783610fa3565b909155505060405184815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050600180555050565b610863610d2c565b61086d6000610d86565b565b61089a6040518060800160405280600081526020016060815260200160008152602001600081525090565b6001600160a01b03821660009081526004602090815260408083208151608081018352815481526001820180548451818702810187019095528085529195929486810194939192919084015b8282101561092e576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001908101548284015290835290920191016108e6565b505050508152602001600282015481526020016003820154815250509050919050565b33600090815260046020526040812060030154819061096f84610cd2565b6109799190610f5e565b9392505050565b6002600154036109d25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104d1565b60026001553360009081526004602052604090205415610a255760006109f733610cd2565b33600090815260046020526040812060030180549293508392909190610a1e908490610f5e565b9091555050505b6040516331a9108f60e11b81526004810182905233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610a8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab09190610fba565b6001600160a01b031614610ad7576040516359dc379f60e01b815260040160405180910390fd5b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401600060405180830381600087803b158015610b4557600080fd5b505af1158015610b59573d6000803e3d6000fd5b5050604080518082018252338082526020808301878152600083815260048352948520600180820180548083018255908852938720865160029095020180546001600160a01b0319166001600160a01b0390951694909417845591519290910191909155908352805491945090925090610bd283610f45565b9091555050600082815260056020908152604080832080546001600160a01b0319163390811790915583526004909152812042600291820155805491610c1783610f45565b909155505060405182815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9060200160405180910390a2505060018055565b610c61610d2c565b6001600160a01b038116610cc65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d1565b610ccf81610d86565b50565b6003546001600160a01b038216600090815260046020526040812080546002909101549192610e1092909190610d089042610f76565b610d129190610fd7565b610d1c9190610fd7565b610d269190610ff6565b92915050565b6000546001600160a01b0316331461086d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610ccf57600080fd5b600060208284031215610dfd57600080fd5b813561097981610dd6565b6020808252825182820181905260009190848201906040850190845b81811015610e5757835180516001600160a01b031684526020908101519084015260408301938501939250600101610e24565b50909695505050505050565b600060208284031215610e7557600080fd5b5035919050565b60208082528251828201528281015160806040840152805160a0840181905260009291820190839060c08601905b80831015610ee157835180516001600160a01b03168352602090810151908301526040820191508484019350600183019250610eaa565b5060408701516060870152606087015160808701528094505050505092915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610f5757610f57610f2f565b5060010190565b60008219821115610f7157610f71610f2f565b500190565b600082821015610f8857610f88610f2f565b500390565b634e487b7160e01b600052603160045260246000fd5b600081610fb257610fb2610f2f565b506000190190565b600060208284031215610fcc57600080fd5b815161097981610dd6565b6000816000190483118215151615610ff157610ff1610f2f565b500290565b60008261101357634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122098aa86550628df4d417284b03e60b96428b1dc906796dcf617c1246e8547043664736f6c634300080d0033";
const isSuperArgs = (xs) => xs.length > 1;
class CouncilStaking__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_councilNFT, overrides) {
        return super.deploy(_councilNFT, overrides || {});
    }
    getDeployTransaction(_councilNFT, overrides) {
        return super.getDeployTransaction(_councilNFT, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.CouncilStaking__factory = CouncilStaking__factory;
CouncilStaking__factory.bytecode = _bytecode;
CouncilStaking__factory.abi = _abi;
//# sourceMappingURL=CouncilStaking__factory.js.map
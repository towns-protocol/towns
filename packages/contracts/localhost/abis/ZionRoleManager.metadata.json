{
  "compiler": {
    "version": "0.8.17+commit.8df45f5f"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "permissionRegistry",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "InvalidParameters",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "NotSpaceManager",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "internalType": "struct DataTypes.Permission",
            "name": "permission",
            "type": "tuple"
          }
        ],
        "name": "addPermissionToRole",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          }
        ],
        "name": "createOwnerRole",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "components": [
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "internalType": "struct DataTypes.Permission[]",
            "name": "permissions",
            "type": "tuple[]"
          }
        ],
        "name": "createRole",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          }
        ],
        "name": "createRole",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "getPermissionsBySpaceIdByRoleId",
        "outputs": [
          {
            "components": [
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "internalType": "struct DataTypes.Permission[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "getRoleBySpaceIdByRoleId",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "roleId",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "internalType": "struct DataTypes.Role",
            "name": "role",
            "type": "tuple"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          }
        ],
        "name": "getRolesBySpaceId",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "roleId",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "internalType": "struct DataTypes.Role[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "newRoleName",
            "type": "string"
          }
        ],
        "name": "modifyRoleName",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "internalType": "struct DataTypes.Permission",
            "name": "permission",
            "type": "tuple"
          }
        ],
        "name": "removePermissionFromRole",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "removeRole",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spaceManager",
            "type": "address"
          }
        ],
        "name": "setSpaceManager",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/src/spaces/ZionRoleManager.sol": "ZionRoleManager"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@opengsn/=node_modules/@opengsn/",
      ":@openzeppelin/=node_modules/@openzeppelin/",
      ":council/=lib/council/contracts/",
      ":ds-test/=lib/ds-test/src/",
      ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
      ":forge-std/=lib/forge-std/src/",
      ":murky/=lib/murky/src/",
      ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
      ":solidity-json-writer/=lib/solidity-json-writer/contracts/",
      ":solmate/=lib/solmate/src/"
    ]
  },
  "sources": {
    "contracts/src/spaces/ZionRoleManager.sol": {
      "keccak256": "0xd508eb5c798ead14329de7e41fff1d59ed4a37164504abf3701491daecc357a2",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://45d0f9424b201a80d11cfc1a7fb58c9a19343aaebd5ef4a2a75890bbad588eb9",
        "dweb:/ipfs/QmbHTzKSJziHKJo94hvoAAHbbwcA4mkH3teghp5F6bCrMG"
      ]
    },
    "contracts/src/spaces/interfaces/IEntitlementModule.sol": {
      "keccak256": "0x9f87cc45c58af0f48d79089c154594c37c4e0416584c129b394ef62ddc1bd613",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://78aa9d235e4aa42fae181b356c7743def26b23c1a20c88b624f713df65c48817",
        "dweb:/ipfs/QmVz7EqmspN62hvAeeVA1t2k7HqEbuXD3QYcZoXBiv4YJi"
      ]
    },
    "contracts/src/spaces/interfaces/IPermissionRegistry.sol": {
      "keccak256": "0x07c47eb0d09cc6ee4264b66aa5befe5f474eb5c740a1d1c6f51cb52896fdaa32",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://1575f729a68ec7dea6e5bcb605fc1befb602e42460b604a36334dfa108341b7d",
        "dweb:/ipfs/QmQKAqrockkjFx46CAwuDz2WchjmCVBoi7xu4WfKSXk4SF"
      ]
    },
    "contracts/src/spaces/interfaces/ISpaceManager.sol": {
      "keccak256": "0xd1d3d8b7a196bb2ec5526eb8b25883d6a9f04d03026a05e73b895f9db187bef5",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://625064a7ac0a50c603325dd5e70375aad8cf856fb80c6376e4b5c601ada8ba55",
        "dweb:/ipfs/QmRDsV42pSCZxGsgjfPLKUbvTd1BmfbiVif7oA8b3oEuAD"
      ]
    },
    "contracts/src/spaces/libraries/Constants.sol": {
      "keccak256": "0xdf602192b1eea921112673105945a906d1fe96729fa84125ae1e7131cd4d604b",
      "license": "MIT",
      "urls": [
        "bzz-raw://486429f7d46ffcd029c5e21e14e5011dba92cb2b43698e2c5b3d86370439d67b",
        "dweb:/ipfs/QmQgRQUKmpmbXdqJphBJDBbumtBDtjyyGV89fYR7XzphNm"
      ]
    },
    "contracts/src/spaces/libraries/CreationLogic.sol": {
      "keccak256": "0x32f0b1036a16f73e99865febcfc6495d4523c649877ff28537af2f7ecadc5883",
      "license": "UNLICENSED",
      "urls": [
        "bzz-raw://528901c6fd4ca5807e4fa883f6298e9dbc31b045a5fad2f59421b9f276bc1740",
        "dweb:/ipfs/QmQ65fcZfV2T3zjhaZeiAWR5AyVNNudz4a94eFp877LHdY"
      ]
    },
    "contracts/src/spaces/libraries/DataTypes.sol": {
      "keccak256": "0x75114eced808ede585f99552ecbefcaed45f0499a141ca02bb5d8dcd294da64c",
      "license": "Apache-20",
      "urls": [
        "bzz-raw://76a2693d7c819212adfebf5a1727c59a151a729ca4c3a28239cad46be1580c99",
        "dweb:/ipfs/QmNy393dm59MyqS3ww64VHbzf38c44uGSkPDrttFxu7JbB"
      ]
    },
    "contracts/src/spaces/libraries/Errors.sol": {
      "keccak256": "0x9a941e4fc071bba09676638161d691f9d5e0cef3270d4eeb8d97c1fd091e08b5",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://b33c1d41f30be06a7dd4c4308320703bf217a568a53a22b6af7f1390fd5bc580",
        "dweb:/ipfs/QmXLCmvmkTmyGs8HGGF9McFX7vCG8Pxsu4xHorgkSPYiW6"
      ]
    },
    "contracts/src/spaces/libraries/Events.sol": {
      "keccak256": "0x75d73e771cf6ec22a6176fd01fdbc01f676ad22d55ed284f3f7d3d792e58eb8e",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://7e83cfaf7a1d90338a8ba72071d8ddfa0542417e293fe4df021ef1f7d9f66cdb",
        "dweb:/ipfs/QmUddapNGoSNzVLiTC4rx7ncWMEnZQmst5pfGJM49VShJQ"
      ]
    },
    "contracts/src/spaces/libraries/PermissionTypes.sol": {
      "keccak256": "0xf2b4fa33252ee1f20f93ef3a36c76256c5194e46a217b7630160ca95ca6d569c",
      "license": "UNLICENSED",
      "urls": [
        "bzz-raw://781f4af73155e4642927a0077660ae6e7334b801321d276d681fb671ec7a8d86",
        "dweb:/ipfs/QmR2Jsvy7KFGqttabBMAiS9SBQN52zh9CiQVTX2XxsJU6A"
      ]
    },
    "contracts/src/spaces/libraries/Utils.sol": {
      "keccak256": "0x208f0437ba3da7fa39745826f05109a76974115877c7751bd3c5aab8731fa411",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://e7f7a4af20ad9acbc951d5c3c42083f7d7b55553f6dd34998a1bcb1689973570",
        "dweb:/ipfs/QmZu3LK8rrZp6FbZfFrowTZendH8KPM1qPpKfkce3Wf6iL"
      ]
    },
    "contracts/src/spaces/storage/ZionRoleStorage.sol": {
      "keccak256": "0xb3d2846b771a38d8fd3605c0e6ec2c86ea5d294dbe0f3833a62b2314eb7825ff",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://d3b8c35ed2ab7b9e0d06fc8c18f87b3398c9843a3f8eb6c6543d15dd40312513",
        "dweb:/ipfs/QmQqLuJL7A9XsdqMYJA5fN5NCWgnEFj9A6t91s9kLWVLxH"
      ]
    },
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
      "license": "MIT",
      "urls": [
        "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
        "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
      "license": "MIT",
      "urls": [
        "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
        "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
      ]
    }
  },
  "version": 1
}
{
  "compiler": {
    "version": "0.8.17+commit.8df45f5f"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name_",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "description_",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "spaceManager_",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "roleManager_",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "InvalidParameters",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "NotSpaceManager",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "_roleManager",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "_spaceManager",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "description",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "spaceId",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "channelId",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "getEntitlementData",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "",
            "type": "address[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "spaceId",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "channelId",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          }
        ],
        "name": "getUserRoles",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "roleId",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "internalType": "struct DataTypes.Role[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "spaceId",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "channelId",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "internalType": "struct DataTypes.Permission",
            "name": "permission",
            "type": "tuple"
          }
        ],
        "name": "isEntitled",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "spaceId",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "channelId",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "entitlementData",
            "type": "bytes"
          }
        ],
        "name": "removeEntitlement",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "spaceId",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "channelId",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "entitlementData",
            "type": "bytes"
          }
        ],
        "name": "setEntitlement",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "supportsInterface(bytes4)": {
          "details": "See {IERC165-supportsInterface}."
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "description()": {
          "notice": "The description of the entitlement module"
        },
        "name()": {
          "notice": "The name of the entitlement module"
        },
        "removeEntitlement(string,string,uint256,bytes)": {
          "notice": "Removes the entitlements for a space"
        },
        "setEntitlement(string,string,uint256,bytes)": {
          "notice": "Sets the entitlements for a space"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/zion-governance/src/spaces/modules/entitlements/UserGrantedEntitlementModule.sol": "UserGrantedEntitlementModule"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 1000000
    },
    "remappings": [
      ":@harmony/=node_modules/@harmony/",
      ":@opengsn/=node_modules/@opengsn/",
      ":@openzeppelin/=node_modules/@openzeppelin/",
      ":ds-test/=lib/solmate/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":murky/=lib/murky/src/",
      ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
      ":solidity-json-writer/=node_modules/solidity-json-writer/",
      ":solmate/=lib/solmate/src/"
    ]
  },
  "sources": {
    "contracts/zion-governance/src/spaces/ZionSpaceManager.sol": {
      "keccak256": "0x0b2c4b4e5a36bdf32aa70aad254a51905d11ccadcf08e284bb040295aeacfa08",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://704c4f9992f7df12a4ae64528c39f20187ff8f59971dfc0757b091a1b05bab99",
        "dweb:/ipfs/QmTtcrNjcAgPuVWwhc6ZKAQqtq9cqVp5urS1veTaPurr59"
      ]
    },
    "contracts/zion-governance/src/spaces/interfaces/IEntitlementModule.sol": {
      "keccak256": "0xf76f459670eafa97724b77b5314ff2584b1d59e5f95092bdd0d1634204dce208",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://a2af821242fd5e6ac6470a1f9614945bd7996666de23e235d4bff67a43dc1ffc",
        "dweb:/ipfs/QmcZXEL1gSmjgCdX7RUN8USzVQ1sfK1rSjYdB87SkwC8rP"
      ]
    },
    "contracts/zion-governance/src/spaces/interfaces/IPermissionRegistry.sol": {
      "keccak256": "0xf999931f0b7bcc7b908d332e5dff937550e3be071552046f49de86f82a03933c",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://f5c1c16b55f3758b96f86613c604c9b0dbd526bc81b9c7d2910a352ff1d13301",
        "dweb:/ipfs/QmVY2ZsZh3MkJzz8rMFcubT3gUvFicN2pqAQdqZXLJXVz7"
      ]
    },
    "contracts/zion-governance/src/spaces/interfaces/IRoleManager.sol": {
      "keccak256": "0x4ebccb9b92180a6d56d9a372897ad05f5417dafb12f40cf51512a2267f8ef3ad",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://ea4c3db495f1127438f8c45c46a22891224088e75982d529608cad7b55c27083",
        "dweb:/ipfs/QmamV3fg9HaBhVDbjjNmqAQquCLHxS5ieAvPSkULQGazth"
      ]
    },
    "contracts/zion-governance/src/spaces/interfaces/ISpace.sol": {
      "keccak256": "0xab4d7dbd54d76f47d47081bbae155e541dbcc37b84a138bb107b75a22216e802",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://1963ae4b50e8fae99bbac7af0ba8a4fabeb8bd03308584aa13abcb0ef182ffe5",
        "dweb:/ipfs/QmadohGm8bMK3AmUarR3x1jPnBTUJ6ym9CnDdd9ojF9p7F"
      ]
    },
    "contracts/zion-governance/src/spaces/interfaces/ISpaceManager.sol": {
      "keccak256": "0x7b2ba69ebf5aedde5cf1ace2233c1e1e30dc1c0049bf875703abf4243e2973e6",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://591364e621b77809d1941d43be39eb82f4f23513571a93c0bc8bdd2089ed885c",
        "dweb:/ipfs/QmX7PpxV8oHpDFM6xTZ918LAZtjKVYus811bgN4DEy62YZ"
      ]
    },
    "contracts/zion-governance/src/spaces/libraries/Constants.sol": {
      "keccak256": "0xd4f2b16156d8d9f9e0cdcd4ad0835b94a67b49beabe22967eda7c069a7268407",
      "license": "MIT",
      "urls": [
        "bzz-raw://077701214ca4757cac2887f47c347ec75a9f3b4026785df11b95a0bc8b1e2ecc",
        "dweb:/ipfs/Qmd8uKoJU8EAhUhYc1MpDHBUaHHtxGGBr9V9ahVp4cUxPv"
      ]
    },
    "contracts/zion-governance/src/spaces/libraries/CreationLogic.sol": {
      "keccak256": "0x32f0b1036a16f73e99865febcfc6495d4523c649877ff28537af2f7ecadc5883",
      "license": "UNLICENSED",
      "urls": [
        "bzz-raw://528901c6fd4ca5807e4fa883f6298e9dbc31b045a5fad2f59421b9f276bc1740",
        "dweb:/ipfs/QmQ65fcZfV2T3zjhaZeiAWR5AyVNNudz4a94eFp877LHdY"
      ]
    },
    "contracts/zion-governance/src/spaces/libraries/DataTypes.sol": {
      "keccak256": "0xd9ac0adf2cd6d25426c62ef3570cbacb371d6f1442e4e1f9e6684ec599db2ddf",
      "license": "Apache-20",
      "urls": [
        "bzz-raw://24670be8e6ff6551adf3bff246b45c47a48981706a5ec9942747918c6cd5a424",
        "dweb:/ipfs/QmdtnxdK1mJcgABusYwCzhJ8ohZ3gv76osA6Z4DNZfcDCF"
      ]
    },
    "contracts/zion-governance/src/spaces/libraries/Errors.sol": {
      "keccak256": "0x26072b2e7ea794e9ea7aeb90847245b3cd0524e7663c32cb639e9dc4bc128e62",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://fdd1e560acc4faca9afb74db6731c47cff5017417a256c02f198577969768af7",
        "dweb:/ipfs/Qmc8oHNjkACzBRw33DdHvxQq4mE5hJXE2RwNJgn2YYNouv"
      ]
    },
    "contracts/zion-governance/src/spaces/libraries/Events.sol": {
      "keccak256": "0xf2672cea93eae66554e9ee207271c27205099d4b2f98d7485693780ec4f628e3",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://c066b1040ad26e2ff5e5d66e5e7953f706104d449038a79548ec80bfb4d5571e",
        "dweb:/ipfs/QmTiFb674cbZboVEVMUaPStDmuVyEHGFp8wLR9VvmztqrG"
      ]
    },
    "contracts/zion-governance/src/spaces/libraries/PermissionTypes.sol": {
      "keccak256": "0xf2b4fa33252ee1f20f93ef3a36c76256c5194e46a217b7630160ca95ca6d569c",
      "license": "UNLICENSED",
      "urls": [
        "bzz-raw://781f4af73155e4642927a0077660ae6e7334b801321d276d681fb671ec7a8d86",
        "dweb:/ipfs/QmR2Jsvy7KFGqttabBMAiS9SBQN52zh9CiQVTX2XxsJU6A"
      ]
    },
    "contracts/zion-governance/src/spaces/libraries/Utils.sol": {
      "keccak256": "0xa80bbef58a9e472109f1228b577ccb77d14f10a31a73f5bbc5ad852d490a7639",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://062ba1b53957a4cfffbecbbb5a8f918d883553f518683e61471ccb1b697ddaf0",
        "dweb:/ipfs/QmQTJP2j6M4Hm8GcakRaCy75xNCz7AMh4W3Sd1n69RCKF2"
      ]
    },
    "contracts/zion-governance/src/spaces/modules/EntitlementModuleBase.sol": {
      "keccak256": "0x3c9a4f77e8cf2851f370116a9525c23ca6b5043bda9367b4c8fb4a79e51724a2",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://a64a083b32fdd99af939ea9d2c843181e08ccce6039f5a7c2a9066a9bdafc44a",
        "dweb:/ipfs/QmWdg6ppcxu64cGKdULVAachZRpUtrE6TuoVeh7dEN8YgG"
      ]
    },
    "contracts/zion-governance/src/spaces/modules/entitlements/UserGrantedEntitlementModule.sol": {
      "keccak256": "0x1a9c7d8cd064d3af94167f2f9ac3271d1dd8ca8f9c0bb057f141d304b76aa4ad",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://5ab1a15ea07742711ecaa07dcfd84b6889b53c7e8dbf9d6385ba5e2cef3ca8d8",
        "dweb:/ipfs/Qmany2QtHHhuig8uXvfD1FzyLa9z6vCTuW6YPPvUqr2amY"
      ]
    },
    "contracts/zion-governance/src/spaces/storage/ZionSpaceManagerStorage.sol": {
      "keccak256": "0xd776a38811d83201224b71844fdde810519c2ae85d03e86d703b6074ce78e622",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://51a9210bff60d223544ec266273490bb329a3db16a8c22e60b6ff6cb11858d6b",
        "dweb:/ipfs/QmbinA6B9vWszjdECwyY7pT8owJ4h3GSgnhZeJG1vj8Gnn"
      ]
    },
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
      "license": "MIT",
      "urls": [
        "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
        "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
      "license": "MIT",
      "urls": [
        "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
        "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
      "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
      "license": "MIT",
      "urls": [
        "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
        "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
      "license": "MIT",
      "urls": [
        "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
        "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
      ]
    }
  },
  "version": 1
}
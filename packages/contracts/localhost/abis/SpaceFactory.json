{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidParameters",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NameContainsInvalidCharacters",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NameLengthInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PermissionAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SpaceAlreadyRegistered",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "SPACE_IMPLEMENTATION_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SPACE_TOKEN_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOKEN_IMPLEMENTATION_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USER_IMPLEMENTATION_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_permissions",
          "type": "string[]"
        }
      ],
      "name": "addOwnerPermissions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "spaceName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "spaceNetworkId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "spaceMetadata",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_everyonePermissions",
          "type": "string[]"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "roleName",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "permissions",
              "type": "string[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "contractAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "quantity",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isSingleToken",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "tokenIds",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct DataTypes.ExternalToken[]",
              "name": "tokens",
              "type": "tuple[]"
            },
            {
              "internalType": "address[]",
              "name": "users",
              "type": "address[]"
            }
          ],
          "internalType": "struct DataTypes.CreateSpaceExtraEntitlements",
          "name": "_extraEntitlements",
          "type": "tuple"
        }
      ],
      "name": "createSpace",
      "outputs": [
        {
          "internalType": "address",
          "name": "_spaceAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwnerPermissions",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "spaceNetworkId",
          "type": "string"
        }
      ],
      "name": "getSpaceAddressByNetworkId",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "spaceNetworkId",
          "type": "string"
        }
      ],
      "name": "getTokenIdByNetworkId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_space",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenEntitlement",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_userEntitlement",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spaceToken",
          "type": "address"
        },
        {
          "internalType": "string[]",
          "name": "_permissions",
          "type": "string[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ownerPermissions",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "spaceByHash",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "tokenByHash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_space",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenEntitlement",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_userEntitlement",
          "type": "address"
        }
      ],
      "name": "updateImplementations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
<<<<<<< HEAD
    "object": "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051613b8d6200011f600039600081816104ac015281816104f801528181610792015281816107d501526108710152613b8d6000f3fe608060405260043610620001435760003560e01c80638da5cb5b11620000b9578063cfc270371162000078578063cfc2703714620003b9578063df2cd9fe14620003dc578063dfc666ff1462000403578063f21cd4011462000428578063f2fde38b146200044b578063f3aba305146200047057600080fd5b80638da5cb5b14620002f657806396dc21e41462000316578063ad78faf3146200033b578063b28032f91462000360578063be8b5967146200039457600080fd5b80634f1ef28611620001065780634f1ef286146200025857806352d1902d146200026f578063683c72b61462000296578063715018a614620002b95780638a9ef42614620002d157600080fd5b806308bc0b4b1462000148578063150b7a0214620001885780633312540a14620001d15780633659cfe6146200020c57806345bfa5b11462000233575b600080fd5b3480156200015557600080fd5b5061012f546200016b906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200019557600080fd5b50620001b7620001a7366004620023f0565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016200017f565b348015620001de57600080fd5b506200016b620001f03660046200245f565b610132602052600090815260409020546001600160a01b031681565b3480156200021957600080fd5b50620002316200022b36600462002479565b620004a2565b005b3480156200024057600080fd5b50620002316200025236600462002562565b62000596565b6200023162000269366004620025ed565b62000788565b3480156200027c57600080fd5b506200028762000864565b6040519081526020016200017f565b348015620002a357600080fd5b50610130546200016b906001600160a01b031681565b348015620002c657600080fd5b50620002316200091a565b348015620002de57600080fd5b5062000287620002f03660046200268b565b62000932565b3480156200030357600080fd5b506033546001600160a01b03166200016b565b3480156200032357600080fd5b506200016b620003353660046200268b565b62000967565b3480156200034857600080fd5b506200016b6200035a36600462002730565b620009a5565b3480156200036d57600080fd5b50620003856200037f3660046200245f565b62000f1d565b6040516200017f91906200287a565b348015620003a157600080fd5b5062000231620003b33660046200288f565b62000fd3565b348015620003c657600080fd5b5061012e546200016b906001600160a01b031681565b348015620003e957600080fd5b50620003f4620011b2565b6040516200017f919062002921565b3480156200041057600080fd5b50620002316200042236600462002936565b62001296565b3480156200043557600080fd5b5061012d546200016b906001600160a01b031681565b3480156200045857600080fd5b50620002316200046a36600462002479565b6200132d565b3480156200047d57600080fd5b50620002876200048f3660046200245f565b6101336020526000908152604090205481565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620004f65760405162461bcd60e51b8152600401620004ed9062002980565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166200054160008051602062003b11833981519152546001600160a01b031690565b6001600160a01b0316146200056a5760405162461bcd60e51b8152600401620004ed90620029cc565b6200057581620013a9565b604080516000808252602082019092526200059391839190620013b3565b50565b600054610100900460ff1615808015620005b75750600054600160ff909116105b80620005d35750303b158015620005d3575060005460ff166001145b620006385760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620004ed565b6000805460ff1916600117905580156200065c576000805461ff0019166101001790555b620006666200152b565b6200067062001555565b6200067a62001589565b620006846200152b565b61012d80546001600160a01b038089166001600160a01b03199283161790925561012e805488841690831617905561012f805487841690831617905561013080549286169290911691909117905560005b82518110156200073857610131838281518110620006f757620006f762002a18565b6020908102919091018101518254600181018455600093845291909220019062000722908262002aae565b50806200072f8162002b7a565b915050620006d5565b50801562000780576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620007d35760405162461bcd60e51b8152600401620004ed9062002980565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166200081e60008051602062003b11833981519152546001600160a01b031690565b6001600160a01b031614620008475760405162461bcd60e51b8152600401620004ed90620029cc565b6200085282620013a9565b6200086082826001620013b3565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614620009065760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401620004ed565b5060008051602062003b1183398151915290565b62000924620015bd565b62000930600062001619565b565b60008083836040516200094792919062002ba2565b604080519182900390912060009081526101336020522054949350505050565b60008083836040516200097c92919062002ba2565b6040805191829003909120600090815261013260205220546001600160a01b0316949350505050565b6000620009b16200166b565b620009bd8a8a620016c6565b6000879003620009e057604051630e52390960e41b815260040160405180910390fd5b60008888604051620009f492919062002ba2565b6040805191829003909120600081815261013260205291909120549091506001600160a01b03161562000a3a57604051633881599b60e11b815260040160405180910390fd5b610130546040516275a31760e01b81526000916001600160a01b0316906275a3179062000a709030908c908c9060040162002bdb565b6020604051808303816000875af115801562000a90573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ab6919062002c02565b6000838152610133602052604080822083905561012e546101305491516001600160a01b03928316602482015260448101859052939450919291169060640160408051601f198184030181529181526020820180516001600160e01b031663cd6dc68760e01b1790525162000b2b90620022db565b62000b3892919062002c1c565b604051809103906000f08015801562000b55573d6000803e3d6000fd5b5061012f54610130546040516001600160a01b0391821660248201526044810186905292935060009291169060640160408051601f198184030181529181526020820180516001600160e01b031663cd6dc68760e01b1790525162000bba90620022db565b62000bc792919062002c1c565b604051809103906000f08015801562000be4573d6000803e3d6000fd5b506040805160028082526060820183529293506000929091602083019080368337019050509050828160008151811062000c225762000c2262002a18565b60200260200101906001600160a01b031690816001600160a01b031681525050818160018151811062000c595762000c5962002a18565b60200260200101906001600160a01b031690816001600160a01b03168152505061012d60009054906101000a90046001600160a01b03168f8f8f8f8561013060009054906101000a90046001600160a01b03168a60405160240162000cc5979695949392919062002c90565b60408051601f198184030181529181526020820180516001600160e01b031663f3ce6a5b60e01b1790525162000cfb90620022db565b62000d0892919062002c1c565b604051809103906000f08015801562000d25573d6000803e3d6000fd5b5060008681526101326020526040812080546001600160a01b0319166001600160a01b0384161790559096505b815181101562000def5781818151811062000d715762000d7162002a18565b602090810291909101015160405162ed014d60e21b81526001600160a01b038981166004830152909116906303b4053490602401600060405180830381600087803b15801562000dc057600080fd5b505af115801562000dd5573d6000803e3d6000fd5b50505050808062000de69062002b7a565b91505062000d52565b5062000dfd86848662001906565b62000e15868362000e0f8b8d62002cf1565b62001b8f565b62000e2d86848462000e278b62002edc565b62001d24565b610130546001600160a01b03166323b872dd30336040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101879052606401600060405180830381600087803b15801562000e9157600080fd5b505af115801562000ea6573d6000803e3d6000fd5b5050505062000eb23390565b6001600160a01b0316866001600160a01b03167f78d7e431fd0a46d11f5c8889cf2db64699be1f95ccb8b1419211c83bcdbce5808f8f60405162000ef892919062002fa1565b60405180910390a3505050505062000f106001606555565b9998505050505050505050565b610131818154811062000f2f57600080fd5b90600052602060002001600091509050805462000f4c9062002a2e565b80601f016020809104026020016040519081016040528092919081815260200182805462000f7a9062002a2e565b801562000fcb5780601f1062000f9f5761010080835404028352916020019162000fcb565b820191906000526020600020905b81548152906001019060200180831162000fad57829003601f168201915b505050505081565b62000fdd620015bd565b60005b81811015620011ad5760005b6101315481101562001148576200111484848481811062001011576200101162002a18565b905060200281019062001025919062002fb7565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506101318054909250859150811062001073576200107362002a18565b9060005260206000200180546200108a9062002a2e565b80601f0160208091040260200160405190810160405280929190818152602001828054620010b89062002a2e565b8015620011095780601f10620010dd5761010080835404028352916020019162001109565b820191906000526020600020905b815481529060010190602001808311620010eb57829003601f168201915b505050505062001fc5565b156200113357604051636571d65f60e01b815260040160405180910390fd5b806200113f8162002b7a565b91505062000fec565b5061013183838381811062001161576200116162002a18565b905060200281019062001175919062002fb7565b8254600181018455600093845260209093209092019162001197918362003000565b5080620011a48162002b7a565b91505062000fe0565b505050565b6060610131805480602002602001604051908101604052809291908181526020016000905b828210156200128d578382906000526020600020018054620011f99062002a2e565b80601f0160208091040260200160405190810160405280929190818152602001828054620012279062002a2e565b8015620012785780601f106200124c5761010080835404028352916020019162001278565b820191906000526020600020905b8154815290600101906020018083116200125a57829003601f168201915b505050505081526020019060010190620011d7565b50505050905090565b620012a0620015bd565b6001600160a01b03831615620012cd5761012d80546001600160a01b0319166001600160a01b0385161790555b6001600160a01b03821615620012fa5761012e80546001600160a01b0319166001600160a01b0384161790555b6001600160a01b03811615620011ad5761012f80546001600160a01b0383166001600160a01b0319909116179055505050565b62001337620015bd565b6001600160a01b0381166200139e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620004ed565b620005938162001619565b62000593620015bd565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615620013e957620011ad8362002022565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801562001446575060408051601f3d908101601f19168201909252620014439181019062002c02565b60015b620014ab5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401620004ed565b60008051602062003b1183398151915281146200151d5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401620004ed565b50620011ad838383620020c1565b600054610100900460ff16620009305760405162461bcd60e51b8152600401620004ed90620030cc565b600054610100900460ff166200157f5760405162461bcd60e51b8152600401620004ed90620030cc565b62000930620020ec565b600054610100900460ff16620015b35760405162461bcd60e51b8152600401620004ed90620030cc565b6200093062002121565b6033546001600160a01b03163314620009305760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620004ed565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600260655403620016bf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401620004ed565b6002606555565b600082828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825192935050600290911090508062001716575080516020105b15620017355760405163354b556f60e11b815260040160405180910390fd5b805160005b81811015620018ff57600360fc1b8382815181106200175d576200175d62002a18565b01602001516001600160f81b03191610806200179f5750603d60f91b8382815181106200178e576200178e62002a18565b01602001516001600160f81b031916115b80620018035750603960f81b838281518110620017c057620017c062002a18565b01602001516001600160f81b031916118015620018035750606160f81b838281518110620017f257620017f262002a18565b01602001516001600160f81b031916105b801562001838575082818151811062001820576200182062002a18565b6020910101516001600160f81b031916601760f91b14155b80156200186d575082818151811062001855576200185562002a18565b6020910101516001600160f81b031916602d60f81b14155b8015620018a257508281815181106200188a576200188a62002a18565b6020910101516001600160f81b031916605f60f81b14155b8015620018d75750828181518110620018bf57620018bf62002a18565b6020910101516001600160f81b031916600160fd1b14155b15620018f65760405163f8fa659760e01b815260040160405180910390fd5b6001016200173a565b5050505050565b604080516001808252818301909252600091816020015b60408051608081018252600080825260208083018290529282015260608082015282526000199092019101816200191d575050604080516001808252818301909252919250600091906020808301908036833701905050905082816000815181106200198d576200198d62002a18565b60209081029190910181019190915260408051608081018252610130546001600160a01b031681526001928101839052908101919091526060810182905282518390600090620019e157620019e162002a18565b6020908102919091010152604080516001808252818301909252600091816020015b60408051808201909152600081526060602082015281526020019060019003908162001a035790505090506040518060400160405280866001600160a01b031681526020018460405160200162001a5b919062003117565b6040516020818303038152906040528152508160008151811062001a835762001a8362002a18565b60200260200101819052506000866001600160a01b0316638fcd793d6040518060400160405280600581526020016427bbb732b960d91b815250610131856040518463ffffffff1660e01b815260040162001ae1939291906200324f565b6020604051808303816000875af115801562001b01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b27919062002c02565b6040516324ccd58b60e11b8152600481018290529091506001600160a01b03881690634999ab1690602401600060405180830381600087803b15801562001b6d57600080fd5b505af115801562001b82573d6000803e3d6000fd5b5050505050505050505050565b604080516001808252818301909252600091816020015b60408051808201909152600081526060602082015281526020019060019003908162001ba6575050604080516001808252818301909252919250600091906020808301908036833701905050905060018160008151811062001c0c5762001c0c62002a18565b60200260200101906001600160a01b031690816001600160a01b0316815250506040518060400160405280856001600160a01b031681526020018260405160200162001c59919062003352565b6040516020818303038152906040528152508260008151811062001c815762001c8162002a18565b6020026020010181905250846001600160a01b0316638fcd793d6040518060400160405280600881526020016745766572796f6e6560c01b81525085856040518463ffffffff1660e01b815260040162001cde9392919062003367565b6020604051808303816000875af115801562001cfe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000780919062002c02565b6020810151511562001fb857604080516001808252818301909252600091816020015b60408051808201909152600081526060602082015281526020019060019003908162001d47579050509050604051806040016040528060006001600160a01b03168152602001604051806020016040528060008152508152508160008151811062001db65762001db662002a18565b60200260200101819052506000856001600160a01b0316638fcd793d84600001518560200151856040518463ffffffff1660e01b815260040162001dfd9392919062003367565b6020604051808303816000875af115801562001e1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e43919062002c02565b6060840151519091501562001ef957856001600160a01b031663ba201ba8826040518060400160405280886001600160a01b03168152602001876060015160405160200162001e93919062003352565b6040516020818303038152906040528152506040518363ffffffff1660e01b815260040162001ec4929190620033b0565b600060405180830381600087803b15801562001edf57600080fd5b505af115801562001ef4573d6000803e3d6000fd5b505050505b82604001515160000362001f0f57505062001fb8565b856001600160a01b031663ba201ba8826040518060400160405280896001600160a01b03168152602001876040015160405160200162001f50919062003117565b6040516020818303038152906040528152506040518363ffffffff1660e01b815260040162001f81929190620033b0565b600060405180830381600087803b15801562001f9c57600080fd5b505af115801562001fb1573d6000803e3d6000fd5b5050505050505b50505050565b6001606555565b60008160405160200162001fda9190620033cb565b6040516020818303038152906040528051906020012083604051602001620020039190620033cb565b6040516020818303038152906040528051906020012014905092915050565b6001600160a01b0381163b620020915760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620004ed565b60008051602062003b1183398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b620020cc836200214b565b600082511180620020da5750805b15620011ad5762001fb883836200218d565b600054610100900460ff16620021165760405162461bcd60e51b8152600401620004ed90620030cc565b620009303362001619565b600054610100900460ff1662001fbe5760405162461bcd60e51b8152600401620004ed90620030cc565b620021568162002022565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b620021f75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401620004ed565b600080846001600160a01b031684604051620022149190620033cb565b600060405180830381855af49150503d806000811462002251576040519150601f19603f3d011682016040523d82523d6000602084013e62002256565b606091505b509150915062002281828260405180606001604052806027815260200162003b31602791396200228a565b95945050505050565b606083156200229b575081620022a7565b620022a78383620022ae565b9392505050565b815115620022bf5781518083602001fd5b8060405162461bcd60e51b8152600401620004ed91906200287a565b61072780620033ea83390190565b80356001600160a01b03811681146200230157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171562002341576200234162002306565b60405290565b604051601f8201601f191681016001600160401b038111828210171562002372576200237262002306565b604052919050565b600082601f8301126200238c57600080fd5b81356001600160401b03811115620023a857620023a862002306565b620023bd601f8201601f191660200162002347565b818152846020838601011115620023d357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156200240757600080fd5b6200241285620022e9565b93506200242260208601620022e9565b92506040850135915060608501356001600160401b038111156200244557600080fd5b62002453878288016200237a565b91505092959194509250565b6000602082840312156200247257600080fd5b5035919050565b6000602082840312156200248c57600080fd5b620022a782620022e9565b60006001600160401b03821115620024b357620024b362002306565b5060051b60200190565b6000620024d4620024ce8462002497565b62002347565b8381529050602080820190600585901b840186811115620024f457600080fd5b845b81811015620025345780356001600160401b03811115620025175760008081fd5b62002525898289016200237a565b855250928201928201620024f6565b505050509392505050565b600082601f8301126200255157600080fd5b620022a783833560208501620024bd565b600080600080600060a086880312156200257b57600080fd5b6200258686620022e9565b94506200259660208701620022e9565b9350620025a660408701620022e9565b9250620025b660608701620022e9565b915060808601356001600160401b03811115620025d257600080fd5b620025e0888289016200253f565b9150509295509295909350565b600080604083850312156200260157600080fd5b6200260c83620022e9565b915060208301356001600160401b038111156200262857600080fd5b62002636858286016200237a565b9150509250929050565b60008083601f8401126200265357600080fd5b5081356001600160401b038111156200266b57600080fd5b6020830191508360208285010111156200268457600080fd5b9250929050565b600080602083850312156200269f57600080fd5b82356001600160401b03811115620026b657600080fd5b620026c48582860162002640565b90969095509350505050565b60008083601f840112620026e357600080fd5b5081356001600160401b03811115620026fb57600080fd5b6020830191508360208260051b85010111156200268457600080fd5b6000608082840312156200272a57600080fd5b50919050565b600080600080600080600080600060a08a8c0312156200274f57600080fd5b89356001600160401b03808211156200276757600080fd5b620027758d838e0162002640565b909b50995060208c01359150808211156200278f57600080fd5b6200279d8d838e0162002640565b909950975060408c0135915080821115620027b757600080fd5b620027c58d838e0162002640565b909750955060608c0135915080821115620027df57600080fd5b620027ed8d838e01620026d0565b909550935060808c01359150808211156200280757600080fd5b50620028168c828d0162002717565b9150509295985092959850929598565b60005b838110156200284357818101518382015260200162002829565b50506000910152565b600081518084526200286681602086016020860162002826565b601f01601f19169290920160200192915050565b602081526000620022a760208301846200284c565b60008060208385031215620028a357600080fd5b82356001600160401b03811115620028ba57600080fd5b620026c485828601620026d0565b600081518084526020808501808196508360051b8101915082860160005b8581101562002914578284038952620029018483516200284c565b98850198935090840190600101620028e6565b5091979650505050505050565b602081526000620022a76020830184620028c8565b6000806000606084860312156200294c57600080fd5b6200295784620022e9565b92506200296760208501620022e9565b91506200297760408501620022e9565b90509250925092565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168062002a4357607f821691505b6020821081036200272a57634e487b7160e01b600052602260045260246000fd5b601f821115620011ad57600081815260208120601f850160051c8101602086101562002a8d5750805b601f850160051c820191505b81811015620007805782815560010162002a99565b81516001600160401b0381111562002aca5762002aca62002306565b62002ae28162002adb845462002a2e565b8462002a64565b602080601f83116001811462002b1a576000841562002b015750858301515b600019600386901b1c1916600185901b17855562000780565b600085815260208120601f198616915b8281101562002b4b5788860151825594840194600190910190840162002b2a565b508582101562002b6a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001820162002b9b57634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038416815260406020820181905260009062002281908301848662002bb2565b60006020828403121562002c1557600080fd5b5051919050565b6001600160a01b038316815260406020820181905260009062002c42908301846200284c565b949350505050565b600081518084526020808501945080840160005b8381101562002c855781516001600160a01b03168752958201959082019060010162002c5e565b509495945050505050565b60a08152600062002ca660a08301898b62002bb2565b828103602084015262002cbb81888a62002bb2565b9050828103604084015262002cd1818762002c4a565b6001600160a01b0395909516606084015250506080015295945050505050565b6000620022a7368484620024bd565b600082601f83011262002d1257600080fd5b8135602062002d25620024ce8362002497565b828152600592831b850182019282820191908785111562002d4557600080fd5b8387015b8581101562002e595780356001600160401b038082111562002d6b5760008081fd5b908901906080828c03601f190181131562002d865760008081fd5b62002d906200231c565b62002d9d898501620022e9565b81526040808501358a830152606080860135801515811462002dbf5760008081fd5b8383015292850135928484111562002dd75760008081fd5b83860195508e603f87011262002def57600094508485fd5b8a860135945062002e04620024ce8662002497565b85815294881b86018201948b810194508f86111562002e235760008081fd5b958201955b8587101562002e435786358552958b0195938b019362002e28565b9083015250875250505092840192840162002d49565b5090979650505050505050565b600082601f83011262002e7857600080fd5b8135602062002e8b620024ce8362002497565b82815260059290921b8401810191818101908684111562002eab57600080fd5b8286015b8481101562002ed15762002ec381620022e9565b835291830191830162002eaf565b509695505050505050565b60006080823603121562002eef57600080fd5b62002ef96200231c565b82356001600160401b038082111562002f1157600080fd5b62002f1f368387016200237a565b8352602085013591508082111562002f3657600080fd5b62002f44368387016200253f565b6020840152604085013591508082111562002f5e57600080fd5b62002f6c3683870162002d00565b6040840152606085013591508082111562002f8657600080fd5b5062002f953682860162002e66565b60608301525092915050565b60208152600062002c4260208301848662002bb2565b6000808335601e1984360301811262002fcf57600080fd5b8301803591506001600160401b0382111562002fea57600080fd5b6020019150368190038213156200268457600080fd5b6001600160401b038311156200301a576200301a62002306565b62003032836200302b835462002a2e565b8362002a64565b6000601f841160018114620030695760008515620030505750838201355b600019600387901b1c1916600186901b178355620018ff565b600083815260209020601f19861690835b828110156200309c57868501358255602094850194600190920191016200307a565b5086821015620030ba5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620031cb57898403603f19018652825180516001600160a01b031685528881015189860152878101511515888601526060908101516080918601829052805191860182905289019060a086019084905b80821015620031b55783518352928b0192918b01916001919091019062003193565b505096890196945050918701916001016200313f565b50919998505050505050505050565b60018060a01b038151168252600060208201516040602085015262002c4260408501826200284c565b600081518084526020808501808196508360051b8101915082860160005b85811015620029145782840389526200323c848351620031da565b9885019893509084019060010162003221565b6060815260006200326460608301866200284c565b602083820381850152818654808452828401915060058382821b86010160008a8152858120815b858110156200332c57601f19898503018752828254620032ab8162002a2e565b80875260018281168015620032c95760018114620032e35762003314565b60ff198416898e01528215158a1b89018d01945062003314565b8688528c8820885b848110156200330c5781548f828d01015283820191508e81019050620032eb565b8a018e019550505b50998b0199929650505091909101906001016200328b565b505050878103604089015262003343818a62003203565b9b9a5050505050505050505050565b602081526000620022a7602083018462002c4a565b6060815260006200337c60608301866200284c565b8281036020840152620033908186620028c8565b90508281036040840152620033a6818562003203565b9695505050505050565b82815260406020820152600062002c426040830184620031da565b60008251620033df81846020870162002826565b919091019291505056fe608060405260405161072738038061072783398101604081905261002291610319565b61002e82826000610035565b5050610436565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d08383604051806060016040528060278152602001610700602791396101a9565b9392505050565b6100ea8161022260201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61023160201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b0316856040516101c691906103e7565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b50909250905061021886838387610234565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a357825160000361029c576001600160a01b0385163b61029c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610148565b50816102ad565b6102ad83836102b5565b949350505050565b8151156102c55781518083602001fd5b8060405162461bcd60e51b81526004016101489190610403565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103105781810151838201526020016102f8565b50506000910152565b6000806040838503121561032c57600080fd5b82516001600160a01b038116811461034357600080fd5b60208401519092506001600160401b038082111561036057600080fd5b818501915085601f83011261037457600080fd5b815181811115610386576103866102df565b604051601f8201601f19908116603f011681019083821181831017156103ae576103ae6102df565b816040528281528860208487010111156103c757600080fd5b6103d88360208301602088016102f5565b80955050505050509250929050565b600082516103f98184602087016102f5565b9190910192915050565b60208152600082518060208401526104228160408501602087016102f5565b601f01601f19169190910160400192915050565b6102bb806104456000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025f602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516100e0919061020f565b600060405180830381855af49150503d806000811461011b576040519150601f19603f3d011682016040523d82523d6000602084013e610120565b606091505b50915091506101318683838761013b565b9695505050505050565b606083156101af5782516000036101a8576001600160a01b0385163b6101a85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b50816101b9565b6101b983836101c1565b949350505050565b8151156101d15781518083602001fd5b8060405162461bcd60e51b815260040161019f919061022b565b60005b838110156102065781810151838201526020016101ee565b50506000910152565b600082516102218184602087016101eb565b9190910192915050565b602081526000825180602084015261024a8160408501602087016101eb565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c3201b3bc85f5b49b0e0c9905d402827c9a351d780685a6ed698fc6baffa2cac64736f6c63430008110033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200ab10d823e1dbd9be61bece44b000f8fe99d37c3da6c4c5552398feea3cf225d64736f6c63430008110033",
=======
    "object": "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051613b8d6200011f600039600081816104ac015281816104f801528181610792015281816107d501526108710152613b8d6000f3fe608060405260043610620001435760003560e01c80638da5cb5b11620000b9578063cfc270371162000078578063cfc2703714620003b9578063df2cd9fe14620003dc578063dfc666ff1462000403578063f21cd4011462000428578063f2fde38b146200044b578063f3aba305146200047057600080fd5b80638da5cb5b14620002f657806396dc21e41462000316578063ad78faf3146200033b578063b28032f91462000360578063be8b5967146200039457600080fd5b80634f1ef28611620001065780634f1ef286146200025857806352d1902d146200026f578063683c72b61462000296578063715018a614620002b95780638a9ef42614620002d157600080fd5b806308bc0b4b1462000148578063150b7a0214620001885780633312540a14620001d15780633659cfe6146200020c57806345bfa5b11462000233575b600080fd5b3480156200015557600080fd5b5061012f546200016b906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200019557600080fd5b50620001b7620001a7366004620023f0565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020016200017f565b348015620001de57600080fd5b506200016b620001f03660046200245f565b610132602052600090815260409020546001600160a01b031681565b3480156200021957600080fd5b50620002316200022b36600462002479565b620004a2565b005b3480156200024057600080fd5b50620002316200025236600462002562565b62000596565b6200023162000269366004620025ed565b62000788565b3480156200027c57600080fd5b506200028762000864565b6040519081526020016200017f565b348015620002a357600080fd5b50610130546200016b906001600160a01b031681565b348015620002c657600080fd5b50620002316200091a565b348015620002de57600080fd5b5062000287620002f03660046200268b565b62000932565b3480156200030357600080fd5b506033546001600160a01b03166200016b565b3480156200032357600080fd5b506200016b620003353660046200268b565b62000967565b3480156200034857600080fd5b506200016b6200035a36600462002730565b620009a5565b3480156200036d57600080fd5b50620003856200037f3660046200245f565b62000f1d565b6040516200017f91906200287a565b348015620003a157600080fd5b5062000231620003b33660046200288f565b62000fd3565b348015620003c657600080fd5b5061012e546200016b906001600160a01b031681565b348015620003e957600080fd5b50620003f4620011b2565b6040516200017f919062002921565b3480156200041057600080fd5b50620002316200042236600462002936565b62001296565b3480156200043557600080fd5b5061012d546200016b906001600160a01b031681565b3480156200045857600080fd5b50620002316200046a36600462002479565b6200132d565b3480156200047d57600080fd5b50620002876200048f3660046200245f565b6101336020526000908152604090205481565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620004f65760405162461bcd60e51b8152600401620004ed9062002980565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166200054160008051602062003b11833981519152546001600160a01b031690565b6001600160a01b0316146200056a5760405162461bcd60e51b8152600401620004ed90620029cc565b6200057581620013a9565b604080516000808252602082019092526200059391839190620013b3565b50565b600054610100900460ff1615808015620005b75750600054600160ff909116105b80620005d35750303b158015620005d3575060005460ff166001145b620006385760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620004ed565b6000805460ff1916600117905580156200065c576000805461ff0019166101001790555b620006666200152b565b6200067062001555565b6200067a62001589565b620006846200152b565b61012d80546001600160a01b038089166001600160a01b03199283161790925561012e805488841690831617905561012f805487841690831617905561013080549286169290911691909117905560005b82518110156200073857610131838281518110620006f757620006f762002a18565b6020908102919091018101518254600181018455600093845291909220019062000722908262002aae565b50806200072f8162002b7a565b915050620006d5565b50801562000780576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620007d35760405162461bcd60e51b8152600401620004ed9062002980565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166200081e60008051602062003b11833981519152546001600160a01b031690565b6001600160a01b031614620008475760405162461bcd60e51b8152600401620004ed90620029cc565b6200085282620013a9565b6200086082826001620013b3565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614620009065760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401620004ed565b5060008051602062003b1183398151915290565b62000924620015bd565b62000930600062001619565b565b60008083836040516200094792919062002ba2565b604080519182900390912060009081526101336020522054949350505050565b60008083836040516200097c92919062002ba2565b6040805191829003909120600090815261013260205220546001600160a01b0316949350505050565b6000620009b16200166b565b620009bd8a8a620016c6565b6000879003620009e057604051630e52390960e41b815260040160405180910390fd5b60008888604051620009f492919062002ba2565b6040805191829003909120600081815261013260205291909120549091506001600160a01b03161562000a3a57604051633881599b60e11b815260040160405180910390fd5b610130546040516275a31760e01b81526000916001600160a01b0316906275a3179062000a709030908c908c9060040162002bdb565b6020604051808303816000875af115801562000a90573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ab6919062002c02565b6000838152610133602052604080822083905561012e546101305491516001600160a01b03928316602482015260448101859052939450919291169060640160408051601f198184030181529181526020820180516001600160e01b031663cd6dc68760e01b1790525162000b2b90620022db565b62000b3892919062002c1c565b604051809103906000f08015801562000b55573d6000803e3d6000fd5b5061012f54610130546040516001600160a01b0391821660248201526044810186905292935060009291169060640160408051601f198184030181529181526020820180516001600160e01b031663cd6dc68760e01b1790525162000bba90620022db565b62000bc792919062002c1c565b604051809103906000f08015801562000be4573d6000803e3d6000fd5b506040805160028082526060820183529293506000929091602083019080368337019050509050828160008151811062000c225762000c2262002a18565b60200260200101906001600160a01b031690816001600160a01b031681525050818160018151811062000c595762000c5962002a18565b60200260200101906001600160a01b031690816001600160a01b03168152505061012d60009054906101000a90046001600160a01b03168f8f8f8f8561013060009054906101000a90046001600160a01b03168a60405160240162000cc5979695949392919062002c90565b60408051601f198184030181529181526020820180516001600160e01b031663f3ce6a5b60e01b1790525162000cfb90620022db565b62000d0892919062002c1c565b604051809103906000f08015801562000d25573d6000803e3d6000fd5b5060008681526101326020526040812080546001600160a01b0319166001600160a01b0384161790559096505b815181101562000def5781818151811062000d715762000d7162002a18565b602090810291909101015160405162ed014d60e21b81526001600160a01b038981166004830152909116906303b4053490602401600060405180830381600087803b15801562000dc057600080fd5b505af115801562000dd5573d6000803e3d6000fd5b50505050808062000de69062002b7a565b91505062000d52565b5062000dfd86848662001906565b62000e15868362000e0f8b8d62002cf1565b62001b8f565b62000e2d86848462000e278b62002edc565b62001d24565b610130546001600160a01b03166323b872dd30336040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101879052606401600060405180830381600087803b15801562000e9157600080fd5b505af115801562000ea6573d6000803e3d6000fd5b5050505062000eb23390565b6001600160a01b0316866001600160a01b03167f78d7e431fd0a46d11f5c8889cf2db64699be1f95ccb8b1419211c83bcdbce5808f8f60405162000ef892919062002fa1565b60405180910390a3505050505062000f106001606555565b9998505050505050505050565b610131818154811062000f2f57600080fd5b90600052602060002001600091509050805462000f4c9062002a2e565b80601f016020809104026020016040519081016040528092919081815260200182805462000f7a9062002a2e565b801562000fcb5780601f1062000f9f5761010080835404028352916020019162000fcb565b820191906000526020600020905b81548152906001019060200180831162000fad57829003601f168201915b505050505081565b62000fdd620015bd565b60005b81811015620011ad5760005b6101315481101562001148576200111484848481811062001011576200101162002a18565b905060200281019062001025919062002fb7565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506101318054909250859150811062001073576200107362002a18565b9060005260206000200180546200108a9062002a2e565b80601f0160208091040260200160405190810160405280929190818152602001828054620010b89062002a2e565b8015620011095780601f10620010dd5761010080835404028352916020019162001109565b820191906000526020600020905b815481529060010190602001808311620010eb57829003601f168201915b505050505062001fc5565b156200113357604051636571d65f60e01b815260040160405180910390fd5b806200113f8162002b7a565b91505062000fec565b5061013183838381811062001161576200116162002a18565b905060200281019062001175919062002fb7565b8254600181018455600093845260209093209092019162001197918362003000565b5080620011a48162002b7a565b91505062000fe0565b505050565b6060610131805480602002602001604051908101604052809291908181526020016000905b828210156200128d578382906000526020600020018054620011f99062002a2e565b80601f0160208091040260200160405190810160405280929190818152602001828054620012279062002a2e565b8015620012785780601f106200124c5761010080835404028352916020019162001278565b820191906000526020600020905b8154815290600101906020018083116200125a57829003601f168201915b505050505081526020019060010190620011d7565b50505050905090565b620012a0620015bd565b6001600160a01b03831615620012cd5761012d80546001600160a01b0319166001600160a01b0385161790555b6001600160a01b03821615620012fa5761012e80546001600160a01b0319166001600160a01b0384161790555b6001600160a01b03811615620011ad5761012f80546001600160a01b0383166001600160a01b0319909116179055505050565b62001337620015bd565b6001600160a01b0381166200139e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620004ed565b620005938162001619565b62000593620015bd565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615620013e957620011ad8362002022565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801562001446575060408051601f3d908101601f19168201909252620014439181019062002c02565b60015b620014ab5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401620004ed565b60008051602062003b1183398151915281146200151d5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401620004ed565b50620011ad838383620020c1565b600054610100900460ff16620009305760405162461bcd60e51b8152600401620004ed90620030cc565b600054610100900460ff166200157f5760405162461bcd60e51b8152600401620004ed90620030cc565b62000930620020ec565b600054610100900460ff16620015b35760405162461bcd60e51b8152600401620004ed90620030cc565b6200093062002121565b6033546001600160a01b03163314620009305760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620004ed565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600260655403620016bf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401620004ed565b6002606555565b600082828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825192935050600290911090508062001716575080516020105b15620017355760405163354b556f60e11b815260040160405180910390fd5b805160005b81811015620018ff57600360fc1b8382815181106200175d576200175d62002a18565b01602001516001600160f81b03191610806200179f5750603d60f91b8382815181106200178e576200178e62002a18565b01602001516001600160f81b031916115b80620018035750603960f81b838281518110620017c057620017c062002a18565b01602001516001600160f81b031916118015620018035750606160f81b838281518110620017f257620017f262002a18565b01602001516001600160f81b031916105b801562001838575082818151811062001820576200182062002a18565b6020910101516001600160f81b031916601760f91b14155b80156200186d575082818151811062001855576200185562002a18565b6020910101516001600160f81b031916602d60f81b14155b8015620018a257508281815181106200188a576200188a62002a18565b6020910101516001600160f81b031916605f60f81b14155b8015620018d75750828181518110620018bf57620018bf62002a18565b6020910101516001600160f81b031916600160fd1b14155b15620018f65760405163f8fa659760e01b815260040160405180910390fd5b6001016200173a565b5050505050565b604080516001808252818301909252600091816020015b60408051608081018252600080825260208083018290529282015260608082015282526000199092019101816200191d575050604080516001808252818301909252919250600091906020808301908036833701905050905082816000815181106200198d576200198d62002a18565b60209081029190910181019190915260408051608081018252610130546001600160a01b031681526001928101839052908101919091526060810182905282518390600090620019e157620019e162002a18565b6020908102919091010152604080516001808252818301909252600091816020015b60408051808201909152600081526060602082015281526020019060019003908162001a035790505090506040518060400160405280866001600160a01b031681526020018460405160200162001a5b919062003117565b6040516020818303038152906040528152508160008151811062001a835762001a8362002a18565b60200260200101819052506000866001600160a01b0316638fcd793d6040518060400160405280600581526020016427bbb732b960d91b815250610131856040518463ffffffff1660e01b815260040162001ae1939291906200324f565b6020604051808303816000875af115801562001b01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b27919062002c02565b6040516324ccd58b60e11b8152600481018290529091506001600160a01b03881690634999ab1690602401600060405180830381600087803b15801562001b6d57600080fd5b505af115801562001b82573d6000803e3d6000fd5b5050505050505050505050565b604080516001808252818301909252600091816020015b60408051808201909152600081526060602082015281526020019060019003908162001ba6575050604080516001808252818301909252919250600091906020808301908036833701905050905060018160008151811062001c0c5762001c0c62002a18565b60200260200101906001600160a01b031690816001600160a01b0316815250506040518060400160405280856001600160a01b031681526020018260405160200162001c59919062003352565b6040516020818303038152906040528152508260008151811062001c815762001c8162002a18565b6020026020010181905250846001600160a01b0316638fcd793d6040518060400160405280600881526020016745766572796f6e6560c01b81525085856040518463ffffffff1660e01b815260040162001cde9392919062003367565b6020604051808303816000875af115801562001cfe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000780919062002c02565b6020810151511562001fb857604080516001808252818301909252600091816020015b60408051808201909152600081526060602082015281526020019060019003908162001d47579050509050604051806040016040528060006001600160a01b03168152602001604051806020016040528060008152508152508160008151811062001db65762001db662002a18565b60200260200101819052506000856001600160a01b0316638fcd793d84600001518560200151856040518463ffffffff1660e01b815260040162001dfd9392919062003367565b6020604051808303816000875af115801562001e1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e43919062002c02565b6060840151519091501562001ef957856001600160a01b031663ba201ba8826040518060400160405280886001600160a01b03168152602001876060015160405160200162001e93919062003352565b6040516020818303038152906040528152506040518363ffffffff1660e01b815260040162001ec4929190620033b0565b600060405180830381600087803b15801562001edf57600080fd5b505af115801562001ef4573d6000803e3d6000fd5b505050505b82604001515160000362001f0f57505062001fb8565b856001600160a01b031663ba201ba8826040518060400160405280896001600160a01b03168152602001876040015160405160200162001f50919062003117565b6040516020818303038152906040528152506040518363ffffffff1660e01b815260040162001f81929190620033b0565b600060405180830381600087803b15801562001f9c57600080fd5b505af115801562001fb1573d6000803e3d6000fd5b5050505050505b50505050565b6001606555565b60008160405160200162001fda9190620033cb565b6040516020818303038152906040528051906020012083604051602001620020039190620033cb565b6040516020818303038152906040528051906020012014905092915050565b6001600160a01b0381163b620020915760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620004ed565b60008051602062003b1183398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b620020cc836200214b565b600082511180620020da5750805b15620011ad5762001fb883836200218d565b600054610100900460ff16620021165760405162461bcd60e51b8152600401620004ed90620030cc565b620009303362001619565b600054610100900460ff1662001fbe5760405162461bcd60e51b8152600401620004ed90620030cc565b620021568162002022565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b620021f75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401620004ed565b600080846001600160a01b031684604051620022149190620033cb565b600060405180830381855af49150503d806000811462002251576040519150601f19603f3d011682016040523d82523d6000602084013e62002256565b606091505b509150915062002281828260405180606001604052806027815260200162003b31602791396200228a565b95945050505050565b606083156200229b575081620022a7565b620022a78383620022ae565b9392505050565b815115620022bf5781518083602001fd5b8060405162461bcd60e51b8152600401620004ed91906200287a565b61072780620033ea83390190565b80356001600160a01b03811681146200230157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b038111828210171562002341576200234162002306565b60405290565b604051601f8201601f191681016001600160401b038111828210171562002372576200237262002306565b604052919050565b600082601f8301126200238c57600080fd5b81356001600160401b03811115620023a857620023a862002306565b620023bd601f8201601f191660200162002347565b818152846020838601011115620023d357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156200240757600080fd5b6200241285620022e9565b93506200242260208601620022e9565b92506040850135915060608501356001600160401b038111156200244557600080fd5b62002453878288016200237a565b91505092959194509250565b6000602082840312156200247257600080fd5b5035919050565b6000602082840312156200248c57600080fd5b620022a782620022e9565b60006001600160401b03821115620024b357620024b362002306565b5060051b60200190565b6000620024d4620024ce8462002497565b62002347565b8381529050602080820190600585901b840186811115620024f457600080fd5b845b81811015620025345780356001600160401b03811115620025175760008081fd5b62002525898289016200237a565b855250928201928201620024f6565b505050509392505050565b600082601f8301126200255157600080fd5b620022a783833560208501620024bd565b600080600080600060a086880312156200257b57600080fd5b6200258686620022e9565b94506200259660208701620022e9565b9350620025a660408701620022e9565b9250620025b660608701620022e9565b915060808601356001600160401b03811115620025d257600080fd5b620025e0888289016200253f565b9150509295509295909350565b600080604083850312156200260157600080fd5b6200260c83620022e9565b915060208301356001600160401b038111156200262857600080fd5b62002636858286016200237a565b9150509250929050565b60008083601f8401126200265357600080fd5b5081356001600160401b038111156200266b57600080fd5b6020830191508360208285010111156200268457600080fd5b9250929050565b600080602083850312156200269f57600080fd5b82356001600160401b03811115620026b657600080fd5b620026c48582860162002640565b90969095509350505050565b60008083601f840112620026e357600080fd5b5081356001600160401b03811115620026fb57600080fd5b6020830191508360208260051b85010111156200268457600080fd5b6000608082840312156200272a57600080fd5b50919050565b600080600080600080600080600060a08a8c0312156200274f57600080fd5b89356001600160401b03808211156200276757600080fd5b620027758d838e0162002640565b909b50995060208c01359150808211156200278f57600080fd5b6200279d8d838e0162002640565b909950975060408c0135915080821115620027b757600080fd5b620027c58d838e0162002640565b909750955060608c0135915080821115620027df57600080fd5b620027ed8d838e01620026d0565b909550935060808c01359150808211156200280757600080fd5b50620028168c828d0162002717565b9150509295985092959850929598565b60005b838110156200284357818101518382015260200162002829565b50506000910152565b600081518084526200286681602086016020860162002826565b601f01601f19169290920160200192915050565b602081526000620022a760208301846200284c565b60008060208385031215620028a357600080fd5b82356001600160401b03811115620028ba57600080fd5b620026c485828601620026d0565b600081518084526020808501808196508360051b8101915082860160005b8581101562002914578284038952620029018483516200284c565b98850198935090840190600101620028e6565b5091979650505050505050565b602081526000620022a76020830184620028c8565b6000806000606084860312156200294c57600080fd5b6200295784620022e9565b92506200296760208501620022e9565b91506200297760408501620022e9565b90509250925092565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168062002a4357607f821691505b6020821081036200272a57634e487b7160e01b600052602260045260246000fd5b601f821115620011ad57600081815260208120601f850160051c8101602086101562002a8d5750805b601f850160051c820191505b81811015620007805782815560010162002a99565b81516001600160401b0381111562002aca5762002aca62002306565b62002ae28162002adb845462002a2e565b8462002a64565b602080601f83116001811462002b1a576000841562002b015750858301515b600019600386901b1c1916600185901b17855562000780565b600085815260208120601f198616915b8281101562002b4b5788860151825594840194600190910190840162002b2a565b508582101562002b6a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006001820162002b9b57634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038416815260406020820181905260009062002281908301848662002bb2565b60006020828403121562002c1557600080fd5b5051919050565b6001600160a01b038316815260406020820181905260009062002c42908301846200284c565b949350505050565b600081518084526020808501945080840160005b8381101562002c855781516001600160a01b03168752958201959082019060010162002c5e565b509495945050505050565b60a08152600062002ca660a08301898b62002bb2565b828103602084015262002cbb81888a62002bb2565b9050828103604084015262002cd1818762002c4a565b6001600160a01b0395909516606084015250506080015295945050505050565b6000620022a7368484620024bd565b600082601f83011262002d1257600080fd5b8135602062002d25620024ce8362002497565b828152600592831b850182019282820191908785111562002d4557600080fd5b8387015b8581101562002e595780356001600160401b038082111562002d6b5760008081fd5b908901906080828c03601f190181131562002d865760008081fd5b62002d906200231c565b62002d9d898501620022e9565b81526040808501358a830152606080860135801515811462002dbf5760008081fd5b8383015292850135928484111562002dd75760008081fd5b83860195508e603f87011262002def57600094508485fd5b8a860135945062002e04620024ce8662002497565b85815294881b86018201948b810194508f86111562002e235760008081fd5b958201955b8587101562002e435786358552958b0195938b019362002e28565b9083015250875250505092840192840162002d49565b5090979650505050505050565b600082601f83011262002e7857600080fd5b8135602062002e8b620024ce8362002497565b82815260059290921b8401810191818101908684111562002eab57600080fd5b8286015b8481101562002ed15762002ec381620022e9565b835291830191830162002eaf565b509695505050505050565b60006080823603121562002eef57600080fd5b62002ef96200231c565b82356001600160401b038082111562002f1157600080fd5b62002f1f368387016200237a565b8352602085013591508082111562002f3657600080fd5b62002f44368387016200253f565b6020840152604085013591508082111562002f5e57600080fd5b62002f6c3683870162002d00565b6040840152606085013591508082111562002f8657600080fd5b5062002f953682860162002e66565b60608301525092915050565b60208152600062002c4260208301848662002bb2565b6000808335601e1984360301811262002fcf57600080fd5b8301803591506001600160401b0382111562002fea57600080fd5b6020019150368190038213156200268457600080fd5b6001600160401b038311156200301a576200301a62002306565b62003032836200302b835462002a2e565b8362002a64565b6000601f841160018114620030695760008515620030505750838201355b600019600387901b1c1916600186901b178355620018ff565b600083815260209020601f19861690835b828110156200309c57868501358255602094850194600190920191016200307a565b5086821015620030ba5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015620031cb57898403603f19018652825180516001600160a01b031685528881015189860152878101511515888601526060908101516080918601829052805191860182905289019060a086019084905b80821015620031b55783518352928b0192918b01916001919091019062003193565b505096890196945050918701916001016200313f565b50919998505050505050505050565b60018060a01b038151168252600060208201516040602085015262002c4260408501826200284c565b600081518084526020808501808196508360051b8101915082860160005b85811015620029145782840389526200323c848351620031da565b9885019893509084019060010162003221565b6060815260006200326460608301866200284c565b602083820381850152818654808452828401915060058382821b86010160008a8152858120815b858110156200332c57601f19898503018752828254620032ab8162002a2e565b80875260018281168015620032c95760018114620032e35762003314565b60ff198416898e01528215158a1b89018d01945062003314565b8688528c8820885b848110156200330c5781548f828d01015283820191508e81019050620032eb565b8a018e019550505b50998b0199929650505091909101906001016200328b565b505050878103604089015262003343818a62003203565b9b9a5050505050505050505050565b602081526000620022a7602083018462002c4a565b6060815260006200337c60608301866200284c565b8281036020840152620033908186620028c8565b90508281036040840152620033a6818562003203565b9695505050505050565b82815260406020820152600062002c426040830184620031da565b60008251620033df81846020870162002826565b919091019291505056fe608060405260405161072738038061072783398101604081905261002291610319565b61002e82826000610035565b5050610436565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d08383604051806060016040528060278152602001610700602791396101a9565b9392505050565b6100ea8161022260201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61023160201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b0316856040516101c691906103e7565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b50909250905061021886838387610234565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a357825160000361029c576001600160a01b0385163b61029c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610148565b50816102ad565b6102ad83836102b5565b949350505050565b8151156102c55781518083602001fd5b8060405162461bcd60e51b81526004016101489190610403565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103105781810151838201526020016102f8565b50506000910152565b6000806040838503121561032c57600080fd5b82516001600160a01b038116811461034357600080fd5b60208401519092506001600160401b038082111561036057600080fd5b818501915085601f83011261037457600080fd5b815181811115610386576103866102df565b604051601f8201601f19908116603f011681019083821181831017156103ae576103ae6102df565b816040528281528860208487010111156103c757600080fd5b6103d88360208301602088016102f5565b80955050505050509250929050565b600082516103f98184602087016102f5565b9190910192915050565b60208152600082518060208401526104228160408501602087016102f5565b601f01601f19169190910160400192915050565b6102bb806104456000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025f602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516100e0919061020f565b600060405180830381855af49150503d806000811461011b576040519150601f19603f3d011682016040523d82523d6000602084013e610120565b606091505b50915091506101318683838761013b565b9695505050505050565b606083156101af5782516000036101a8576001600160a01b0385163b6101a85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b50816101b9565b6101b983836101c1565b949350505050565b8151156101d15781518083602001fd5b8060405162461bcd60e51b815260040161019f919061022b565b60005b838110156102065781810151838201526020016101ee565b50506000910152565b600082516102218184602087016101eb565b9190910192915050565b602081526000825180602084015261024a8160408501602087016101eb565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c3201b3bc85f5b49b0e0c9905d402827c9a351d780685a6ed698fc6baffa2cac64736f6c63430008110033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122080ee59be94770f8f69c983ebc3197f048d6986a20ededf6d7af90ef9247966f664736f6c63430008110033",
>>>>>>> main
    "sourceMap": "1450:8705:14:-:0;;;1332:4:103;1289:48;;2316:47:14;;;;;;;;;-1:-1:-1;2336:22:14;:20;:22::i;:::-;1450:8705;;5928:280:102;5996:13;;;;;;;5995:14;5987:66;;;;-1:-1:-1;;;5987:66:102;;216:2:150;5987:66:102;;;198:21:150;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:150;;;338:37;392:19;;5987:66:102;;;;;;;;6067:12;;6083:15;6067:12;;;:31;6063:139;;6114:12;:30;;-1:-1:-1;;6114:30:102;6129:15;6114:30;;;;;;6163:28;;564:36:150;;;6163:28:102;;552:2:150;537:18;6163:28:102;;;;;;;6063:139;5928:280::o;422:184:150:-;1450:8705:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
<<<<<<< HEAD
    "object": "",
    "sourceMap": "1450:8705:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1815:42;;;;;;;;;;-1:-1:-1;1815:42:14;;;;-1:-1:-1;;;;;1815:42:14;;;;;;-1:-1:-1;;;;;178:32:150;;;160:51;;148:2;133:18;1815:42:14;;;;;;;;834:200:106;;;;;;;;;;-1:-1:-1;834:200:106;;;;;:::i;:::-;-1:-1:-1;;;834:200:106;;;;;;;;;;-1:-1:-1;;;;;;2309:33:150;;;2291:52;;2279:2;2264:18;834:200:106;2147:202:150;1936:46:14;;;;;;;;;;-1:-1:-1;1936:46:14;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1936:46:14;;;3317:197:103;;;;;;;;;;-1:-1:-1;3317:197:103;;;;;:::i;:::-;;:::i;:::-;;2367:597:14;;;;;;;;;;-1:-1:-1;2367:597:14;;;;;:::i;:::-;;:::i;3763:222:103:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;:::-;;;5146:25:150;;;5134:2;5119:18;3006:131:103;5000:177:150;1861:34:14;;;;;;;;;;-1:-1:-1;1861:34:14;;;;-1:-1:-1;;;;;1861:34:14;;;2071:101:98;;;;;;;;;;;;;:::i;6759:207:14:-;;;;;;;;;;-1:-1:-1;6759:207:14;;;;;:::i;:::-;;:::i;1441:85:98:-;;;;;;;;;;-1:-1:-1;1513:6:98;;-1:-1:-1;;;;;1513:6:98;1441:85;;7002:212:14;;;;;;;;;;-1:-1:-1;7002:212:14;;;;;:::i;:::-;;:::i;3436:2758::-;;;;;;;;;;-1:-1:-1;3436:2758:14;;;;;:::i;:::-;;:::i;1900:32::-;;;;;;;;;;-1:-1:-1;1900:32:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6230:493::-;;;;;;;;;;-1:-1:-1;6230:493:14;;;;;:::i;:::-;;:::i;1768:43::-;;;;;;;;;;-1:-1:-1;1768:43:14;;;;-1:-1:-1;;;;;1768:43:14;;;7250:105;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3000:400::-;;;;;;;;;;-1:-1:-1;3000:400:14;;;;;:::i;:::-;;:::i;1721:43::-;;;;;;;;;;-1:-1:-1;1721:43:14;;;;-1:-1:-1;;;;;1721:43:14;;;2321:198:98;;;;;;;;;;-1:-1:-1;2321:198:98;;;;;:::i;:::-;;:::i;1986:46:14:-;;;;;;;;;;-1:-1:-1;1986:46:14;;;;;:::i;:::-;;;;;;;;;;;;;;3317:197:103;-1:-1:-1;;;;;1898:6:103;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:103;;;;;;;:::i;:::-;;;;;;;;;1995:6;-1:-1:-1;;;;;1971:30:103;:20;-1:-1:-1;;;;;;;;;;;1642:65:100;-1:-1:-1;;;;;1642:65:100;;1563:151;1971:20:103;-1:-1:-1;;;;;1971:30:103;;1963:87;;;;-1:-1:-1;;;1963:87:103;;;;;;;:::i;:::-;3400:36:::1;3418:17;3400;:36::i;:::-;3487:12;::::0;;3497:1:::1;3487:12:::0;;;::::1;::::0;::::1;::::0;;;3446:61:::1;::::0;3468:17;;3487:12;3446:21:::1;:61::i;:::-;3317:197:::0;:::o;2367:597:14:-;3268:19:102;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:102;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:102;1476:19:107;:23;;;3376:66:102;;-1:-1:-1;3425:12:102;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:102;;12000:2:150;3314:201:102;;;11982:21:150;12039:2;12019:18;;;12012:30;12078:34;12058:18;;;12051:62;-1:-1:-1;;;12129:18:150;;;12122:44;12183:19;;3314:201:102;11798:410:150;3314:201:102;3525:12;:16;;-1:-1:-1;;3525:16:102;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:102;;;;;3551:65;2558:24:14::1;:22;:24::i;:::-;2588:16;:14;:16::i;:::-;2610:24;:22;:24::i;:::-;2640:21;:19;:21::i;:::-;2668:28;:37:::0;;-1:-1:-1;;;;;2668:37:14;;::::1;-1:-1:-1::0;;;;;;2668:37:14;;::::1;;::::0;;;2711:28:::1;:48:::0;;;;::::1;::::0;;::::1;;::::0;;2765:27:::1;:46:::0;;;;::::1;::::0;;::::1;;::::0;;2817:19:::1;:33:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2668:28:::1;2857:103;2881:12;:19;2877:1;:23;2857:103;;;2915:16;2937:12;2950:1;2937:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;2915:38;;::::1;::::0;::::1;::::0;;-1:-1:-1;2915:38:14;;;;;;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;2902:3:14;::::1;::::0;::::1;:::i;:::-;;;;2857:103;;;;3640:14:102::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:102;;;3710:14;;-1:-1:-1;15323:36:150;;3710:14:102;;15311:2:150;15296:18;3710:14:102;;;;;;;3636:99;3258:483;2367:597:14;;;;;:::o;3763:222:103:-;-1:-1:-1;;;;;1898:6:103;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:103;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:103;:20;-1:-1:-1;;;;;;;;;;;1642:65:100;-1:-1:-1;;;;;1642:65:100;;1563:151;1971:20:103;-1:-1:-1;;;;;1971:30:103;;1963:87;;;;-1:-1:-1;;;1963:87:103;;;;;;;:::i;:::-;3880:36:::1;3898:17;3880;:36::i;:::-;3926:52;3948:17;3967:4;3973;3926:21;:52::i;:::-;3763:222:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:103;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:103;;15572:2:150;2308:92:103;;;15554:21:150;15611:2;15591:18;;;15584:30;15650:34;15630:18;;;15623:62;15721:26;15701:18;;;15694:54;15765:19;;2308:92:103;15370:420:150;2308:92:103;-1:-1:-1;;;;;;;;;;;;3006:131:103;:::o;2071:101:98:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;6759:207:14:-;6853:7;6868:20;6907:14;;6891:32;;;;;;;:::i;:::-;;;;;;;;;;;6936:25;;;;:11;:25;;;;;6759:207;-1:-1:-1;;;;6759:207:14:o;7002:212::-;7101:7;7116:20;7155:14;;7139:32;;;;;;;:::i;:::-;;;;;;;;;;;7184:25;;;;:11;:25;;;;-1:-1:-1;;;;;7184:25:14;;7002:212;-1:-1:-1;;;;7002:212:14:o;3436:2758::-;3710:21;2490::104;:19;:21::i;:::-;3766:29:14::1;3785:9;;3766:18;:29::i;:::-;3871:1;3839:33:::0;;;3835:87:::1;;3889:26;;-1:-1:-1::0;;;3889:26:14::1;;;;;;;;;;;3835:87;3955:20;3994:14;;3978:32;;;;;;;:::i;:::-;;::::0;;;;;::::1;::::0;;;4118:1:::1;4081:25:::0;;;:11:::1;:25;::::0;;;;;;3978:32;;-1:-1:-1;;;;;;4081:25:14::1;:39:::0;4077:98:::1;;4137:31;;-1:-1:-1::0;;;4137:31:14::1;;;;;;;;;;;4077:98;4242:19;::::0;4231:86:::1;::::0;-1:-1:-1;;;4231:86:14;;4212:16:::1;::::0;-1:-1:-1;;;;;4242:19:14::1;::::0;4231:38:::1;::::0;:86:::1;::::0;4285:4:::1;::::0;4298:13;;;;4231:86:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4356:25;::::0;;;:11:::1;:25;::::0;;;;;:36;;;4507:28:::1;::::0;4611:19:::1;::::0;4545:106;;-1:-1:-1;;;;;4611:19:14;;::::1;4545:106;::::0;::::1;17055:51:150::0;17122:18;;;17115:34;;;4356:36:14;;-1:-1:-1;4356:25:14;;4507:28;::::1;::::0;17028:18:150;;4545:106:14::1;::::0;;-1:-1:-1;;4545:106:14;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4545:106:14::1;-1:-1:-1::0;;;4545:106:14::1;::::0;;4481:178;::::1;::::0;::::1;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;4778:27:14::1;::::0;4880:19:::1;::::0;4815:105:::1;::::0;-1:-1:-1;;;;;4880:19:14;;::::1;4815:105;::::0;::::1;17055:51:150::0;17122:18;;;17115:34;;;4438:227:14;;-1:-1:-1;4710:24:14::1;::::0;4778:27;::::1;::::0;17028:18:150;;4815:105:14::1;::::0;;-1:-1:-1;;4815:105:14;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4815:105:14::1;-1:-1:-1::0;;;4815:105:14::1;::::0;;4752:176;::::1;::::0;::::1;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;4974:16:14::1;::::0;;4988:1:::1;4974:16:::0;;;;;::::1;::::0;;4710:224;;-1:-1:-1;4941:30:14::1;::::0;4974:16;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;4974:16:14::1;4941:49;;5015:17;4996:13;5010:1;4996:16;;;;;;;;:::i;:::-;;;;;;:36;-1:-1:-1::0;;;;;4996:36:14::1;;;-1:-1:-1::0;;;;;4996:36:14::1;;;::::0;::::1;5057:16;5038:13;5052:1;5038:16;;;;;;;;:::i;:::-;;;;;;:35;-1:-1:-1::0;;;;;5038:35:14::1;;;-1:-1:-1::0;;;;;5038:35:14::1;;;::::0;::::1;5170:28;;;;;;;;;-1:-1:-1::0;;;;;5170:28:14::1;5276:9;;5299:14;;5327:13;5354:19;;;;;;;;;-1:-1:-1::0;;;;;5354:19:14::1;5387:8;5208:209;;;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;5208:209:14;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;5208:209:14::1;-1:-1:-1::0;;;5208:209:14::1;::::0;;5144:281;::::1;::::0;::::1;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;5475:25:14::1;::::0;;;:11:::1;:25;::::0;;;;:41;;-1:-1:-1;;;;;;5475:41:14::1;-1:-1:-1::0;;;;;5475:41:14;::::1;;::::0;;;;-1:-1:-1;5563:120:14::1;5587:13;:20;5583:1;:24;5563:120;;;5635:13;5649:1;5635:16;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;5622:54:::1;::::0;-1:-1:-1;;;5622:54:14;;-1:-1:-1;;;;;178:32:150;;;5622:54:14::1;::::0;::::1;160:51:150::0;5622:39:14;;::::1;::::0;::::1;::::0;133:18:150;;5622:54:14::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5609:3;;;;;:::i;:::-;;;;5563:120;;;;5689:67;5713:13;5728:17;5747:8;5689:23;:67::i;:::-;5762:105;5796:13:::0;5817:16;5762:105:::1;5841:20:::0;;5762:105:::1;:::i;:::-;:26;:105::i;:::-;5873:126;5905:13:::0;5926:17;5951:16;5873:126:::1;5975:18:::0;5873:126:::1;:::i;:::-;:24;:126::i;:::-;6017:19;::::0;-1:-1:-1;;;;;6017:19:14::1;6006:44;6066:4;929:10:108::0;6006:107:14::1;::::0;-1:-1:-1;;;;;;6006:107:14::1;::::0;;;;;;-1:-1:-1;;;;;23694:15:150;;;6006:107:14::1;::::0;::::1;23676:34:150::0;23746:15;;23726:18;;;23719:43;23778:18;;;23771:34;;;23611:18;;6006:107:14::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6160:12;929:10:108::0;;850:96;6160:12:14::1;-1:-1:-1::0;;;;;6125:64:14::1;6145:13;-1:-1:-1::0;;;;;6125:64:14::1;;6174:14;;6125:64;;;;;;;:::i;:::-;;;;;;;;3733:2461;;;;;2532:20:104::0;1772:1;3038:7;:22;2858:209;2532:20;3436:2758:14;;;;;;;;;;;:::o;1900:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6230:493::-;1334:13:98;:11;:13::i;:::-;6375:9:14::1;6370:349;6390:23:::0;;::::1;6370:349;;;6433:9;6428:191;6452:16;:23:::0;6448:27;::::1;6428:191;;;6496:51;6510:12;;6523:1;6510:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;6496:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;6527:16:14::1;:19:::0;;:16;;-1:-1:-1;6544:1:14;;-1:-1:-1;6527:19:14;::::1;;;;;:::i;:::-;;;;;;;;6496:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:51::i;:::-;6492:119;;;6568:32;;-1:-1:-1::0;;;6568:32:14::1;;;;;;;;;;;6492:119;6477:3:::0;::::1;::::0;::::1;:::i;:::-;;;;6428:191;;;;6674:16;6696:12;;6709:1;6696:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;6674:38:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;6674:38:14;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;6415:3:14;::::1;::::0;::::1;:::i;:::-;;;;6370:349;;;;6230:493:::0;;:::o;7250:105::-;7304:15;7334:16;7327:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7250:105;:::o;3000:400::-;1334:13:98;:11;:13::i;:::-;-1:-1:-1;;;;;3145:20:14;::::1;::::0;3141:63:::1;;3167:28;:37:::0;;-1:-1:-1;;;;;;3167:37:14::1;-1:-1:-1::0;;;;;3167:37:14;::::1;;::::0;;3141:63:::1;-1:-1:-1::0;;;;;3214:31:14;::::1;::::0;3210:91:::1;;3253:28;:48:::0;;-1:-1:-1;;;;;;3253:48:14::1;-1:-1:-1::0;;;;;3253:48:14;::::1;;::::0;;3210:91:::1;-1:-1:-1::0;;;;;3311:30:14;::::1;::::0;3307:88:::1;;3349:27;:46:::0;;-1:-1:-1;;;;;3349:46:14;::::1;-1:-1:-1::0;;;;;;3349:46:14;;::::1;;::::0;;3000:400;;;:::o;2321:198:98:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:98;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:98;;26008:2:150;2401:73:98::1;::::0;::::1;25990:21:150::0;26047:2;26027:18;;;26020:30;26086:34;26066:18;;;26059:62;-1:-1:-1;;;26137:18:150;;;26130:36;26183:19;;2401:73:98::1;25806:402:150::0;2401:73:98::1;2484:28;2503:8;2484:18;:28::i;10061:92:14:-:0;1334:13:98;:11;:13::i;2938:974:100:-;951:66;3384:59;;;3380:526;;;3459:37;3478:17;3459:18;:37::i;3380:526::-;3560:17;-1:-1:-1;;;;;3531:61:100;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3531:63:100;;;;;;;;-1:-1:-1;;3531:63:100;;;;;;;;;;;;:::i;:::-;;;3527:302;;3758:56;;-1:-1:-1;;;3758:56:100;;26604:2:150;3758:56:100;;;26586:21:150;26643:2;26623:18;;;26616:30;26682:34;26662:18;;;26655:62;-1:-1:-1;;;26733:18:150;;;26726:44;26787:19;;3758:56:100;26402:410:150;3527:302:100;-1:-1:-1;;;;;;;;;;;3644:28:100;;3636:82;;;;-1:-1:-1;;;3636:82:100;;27019:2:150;3636:82:100;;;27001:21:150;27058:2;27038:18;;;27031:30;27097:34;27077:18;;;27070:62;-1:-1:-1;;;27148:18:150;;;27141:39;27197:19;;3636:82:100;26817:405:150;3636:82:100;3595:138;3842:53;3860:17;3879:4;3885:9;3842:17;:53::i;1042:67:103:-;5363:13:102;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:102;;;;;;;:::i;1003:95:98:-;5363:13:102;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:102;;;;;;;:::i;:::-;1065:26:98::1;:24;:26::i;1853:111:104:-:0;5363:13:102;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:102;;;;;;;:::i;:::-;1923:34:104::1;:32;:34::i;1599:130:98:-:0;1513:6;;-1:-1:-1;;;;;1513:6:98;929:10:108;1662:23:98;1654:68;;;;-1:-1:-1;;;1654:68:98;;27841:2:150;1654:68:98;;;27823:21:150;;;27860:18;;;27853:30;27919:34;27899:18;;;27892:62;27971:18;;1654:68:98;27639:356:150;2673:187:98;2765:6;;;-1:-1:-1;;;;;2781:17:98;;;-1:-1:-1;;;;;;2781:17:98;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;2565:287:104:-;1815:1;2697:7;;:19;2689:63;;;;-1:-1:-1;;;2689:63:104;;28202:2:150;2689:63:104;;;28184:21:150;28241:2;28221:18;;;28214:30;28280:33;28260:18;;;28253:61;28331:18;;2689:63:104;28000:355:150;2689:63:104;1815:1;2827:7;:18;2565:287::o;806:665:29:-;870:21;900:4;;870:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;916:15:29;;870:35;;-1:-1:-1;;162:1:29;916:33;;;;-1:-1:-1;916:33:29;:70;;-1:-1:-1;953:15:29;;209:2;-1:-1:-1;916:70:29;912:115;;;1001:26;;-1:-1:-1;;;1001:26:29;;;;;;;;;;;912:115;1059:15;;1034:22;1080:387;1104:14;1100:1;:18;1080:387;;;-1:-1:-1;;;1144:8:29;1153:1;1144:11;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1144:11:29;:17;;:48;;;-1:-1:-1;;;1175:8:29;1184:1;1175:11;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1175:11:29;:17;1144:48;:102;;;;-1:-1:-1;;;1207:8:29;1216:1;1207:11;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1207:11:29;:17;:38;;;;;-1:-1:-1;;;1228:8:29;1237:1;1228:11;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1228:11:29;:17;1207:38;1143:134;;;;;1259:8;1268:1;1259:11;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;1259:11:29;-1:-1:-1;;;1259:18:29;;1143:134;:164;;;;;1289:8;1298:1;1289:11;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;1289:11:29;-1:-1:-1;;;1289:18:29;;1143:164;:194;;;;;1319:8;1328:1;1319:11;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;1319:11:29;-1:-1:-1;;;1319:18:29;;1143:194;:224;;;;;1349:8;1358:1;1349:11;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;1349:11:29;-1:-1:-1;;;1349:18:29;;1143:224;1130:291;;;1383:38;;-1:-1:-1;;;1383:38:29;;;;;;;;;;;1130:291;1449:3;;1080:387;;;;864:607;;806:665;;:::o;8551:960:14:-;8754:32;;;8784:1;8754:32;;;;;;;;;8712:39;;8754:32;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;8754:32:14;;-1:-1:-1;;8754:32:14;;;;;;;;-1:-1:-1;;8821:16:14;;;8835:1;8821:16;;;;;;;;;8712:74;;-1:-1:-1;8793:25:14;;8821:16;;;;;;;;;;;;-1:-1:-1;8821:16:14;8793:44;;8857:7;8843:8;8852:1;8843:11;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;;8918:147;;;;;;;;8967:19;;-1:-1:-1;;;;;8967:19:14;8918:147;;8967:19;8918:147;;;;;;;;;;;;;;;;;;;8906:9;;:6;;-1:-1:-1;;8906:9:14;;;;:::i;:::-;;;;;;;;;;:159;9119:42;;;9154:1;9119:42;;;;;;;;;9072:44;;9119:42;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9119:42:14;;;;;;;;;;;;;;;9072:89;;9186;;;;;;;;9224:12;-1:-1:-1;;;;;9186:89:14;;;;;9261:6;9250:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;9186:89;;;9167:13;9181:1;9167:16;;;;;;;;:::i;:::-;;;;;;:108;;;;9328:19;9356:12;-1:-1:-1;;;;;9350:30:14;;9388:13;;;;;;;;;;;;;-1:-1:-1;;;9388:13:14;;;9409:16;9433:13;9350:102;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9459:47;;-1:-1:-1;;;9459:47:14;;;;;5146:25:150;;;9328:124:14;;-1:-1:-1;;;;;;9459:34:14;;;;;5119:18:150;;9459:47:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8670:841;;;;8551:960;;;:::o;9515:542::-;9702:42;;;9737:1;9702:42;;;;;;;;;9655:44;;9702:42;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9702:42:14;;;;;;;;;;;;-1:-1:-1;;9776:16:14;;;9790:1;9776:16;;;;;;;;;9655:89;;-1:-1:-1;9751:22:14;;9776:16;;;;;;;;;;;;-1:-1:-1;9776:16:14;9751:41;;262:42:29;9798:5:14;9804:1;9798:8;;;;;;;;:::i;:::-;;;;;;:33;-1:-1:-1;;;;;9798:33:14;;;-1:-1:-1;;;;;9798:33:14;;;;;9857:87;;;;;;;;9895:11;-1:-1:-1;;;;;9857:87:14;;;;;9931:5;9920:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;9857:87;;;9838:13;9852:1;9838:16;;;;;;;;:::i;:::-;;;;;;:106;;;;9957:12;-1:-1:-1;;;;;9951:30:14;;9989:16;;;;;;;;;;;;;-1:-1:-1;;;9989:16:14;;;10013:12;10033:13;9951:101;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7454:1093::-;7658:30;;;;:37;7654:55;7702:7;7654:55;7762:42;;;7797:1;7762:42;;;;;;;;;7715:44;;7762:42;;;;-1:-1:-1;;;;;;;;;;;;;;;;;7762:42:14;;;;;;;;;;;;;;;7715:89;;7829:37;;;;;;;;7859:1;-1:-1:-1;;;;;7829:37:14;;;;;;;;;;;;;;;;;;;;7810:13;7824:1;7810:16;;;;;;;;:::i;:::-;;;;;;:56;;;;7873:24;7906:12;-1:-1:-1;;;;;7900:30:14;;7938:18;:27;;;7973:18;:30;;;8011:13;7900:130;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8080:24;;;;:31;7873:157;;-1:-1:-1;8080:35:14;8076:212;;8131:12;-1:-1:-1;;;;;8125:40:14;;8175:16;8201:72;;;;;;;;8223:11;-1:-1:-1;;;;;8201:72:14;;;;;8247:18;:24;;;8236:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;8201:72;;;8125:156;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8076:212;8338:18;:25;;;:32;8374:1;8338:37;8334:50;;8377:7;;;;8334:50;8396:12;-1:-1:-1;;;;;8390:40:14;;8438:16;8462:74;;;;;;;;8484:12;-1:-1:-1;;;;;8462:74:14;;;;;8509:18;:25;;;8498:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;8462:74;;;8390:152;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7648:899;;7454:1093;;;;;:::o;2858:209:104:-;1772:1;3038:7;:22;2858:209::o;309:178:29:-;397:4;478:2;461:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;451:31;;;;;;443:2;426:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;416:31;;;;;;:66;409:73;;309:178;;;;:::o;1805:281:100:-;-1:-1:-1;;;;;1476:19:107;;;1878:106:100;;;;-1:-1:-1;;;1878:106:100;;34894:2:150;1878:106:100;;;34876:21:150;34933:2;34913:18;;;34906:30;34972:34;34952:18;;;34945:62;-1:-1:-1;;;35023:18:150;;;35016:43;35076:19;;1878:106:100;34692:409:150;1878:106:100;-1:-1:-1;;;;;;;;;;;1994:85:100;;-1:-1:-1;;;;;;1994:85:100;-1:-1:-1;;;;;1994:85:100;;;;;;;;;;1805:281::o;2478:288::-;2616:29;2627:17;2616:10;:29::i;:::-;2673:1;2659:4;:11;:15;:28;;;;2678:9;2659:28;2655:105;;;2703:46;2725:17;2744:4;2703:21;:46::i;1104:111:98:-;5363:13:102;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:102;;;;;;;:::i;:::-;1176:32:98::1;929:10:108::0;1176:18:98::1;:32::i;1970:109:104:-:0;5363:13:102;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:102;;;;;;;:::i;2192:152:100:-;2258:37;2277:17;2258:18;:37::i;:::-;2310:27;;-1:-1:-1;;;;;2310:27:100;;;;;;;;2192:152;:::o;7088:455::-;7171:12;-1:-1:-1;;;;;1476:19:107;;;7195:88:100;;;;-1:-1:-1;;;7195:88:100;;35308:2:150;7195:88:100;;;35290:21:150;35347:2;35327:18;;;35320:30;35386:34;35366:18;;;35359:62;-1:-1:-1;;;35437:18:150;;;35430:36;35483:19;;7195:88:100;35106:402:150;7195:88:100;7354:12;7368:23;7395:6;-1:-1:-1;;;;;7395:19:100;7415:4;7395:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7353:67;;;;7437:99;7473:7;7482:10;7437:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7430:106;7088:455;-1:-1:-1;;;;;7088:455:100:o;7437:295:107:-;7583:12;7611:7;7607:119;;;-1:-1:-1;7641:10:107;7634:17;;7607:119;7682:33;7690:10;7702:12;7682:7;:33::i;:::-;7437:295;;;;;:::o;7738:540::-;7897:17;;:21;7893:379;;8125:10;8119:17;8181:15;8168:10;8164:2;8160:19;8153:44;7893:379;8248:12;8241:20;;-1:-1:-1;;;8241:20:107;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;222:173:150:-;290:20;;-1:-1:-1;;;;;339:31:150;;329:42;;319:70;;385:1;382;375:12;319:70;222:173;;;:::o;400:127::-;461:10;456:3;452:20;449:1;442:31;492:4;489:1;482:15;516:4;513:1;506:15;532:253;604:2;598:9;646:4;634:17;;-1:-1:-1;;;;;666:34:150;;702:22;;;663:62;660:88;;;728:18;;:::i;:::-;764:2;757:22;532:253;:::o;790:275::-;861:2;855:9;926:2;907:13;;-1:-1:-1;;903:27:150;891:40;;-1:-1:-1;;;;;946:34:150;;982:22;;;943:62;940:88;;;1008:18;;:::i;:::-;1044:2;1037:22;790:275;;-1:-1:-1;790:275:150:o;1070:530::-;1112:5;1165:3;1158:4;1150:6;1146:17;1142:27;1132:55;;1183:1;1180;1173:12;1132:55;1219:6;1206:20;-1:-1:-1;;;;;1241:2:150;1238:26;1235:52;;;1267:18;;:::i;:::-;1311:55;1354:2;1335:13;;-1:-1:-1;;1331:27:150;1360:4;1327:38;1311:55;:::i;:::-;1391:2;1382:7;1375:19;1437:3;1430:4;1425:2;1417:6;1413:15;1409:26;1406:35;1403:55;;;1454:1;1451;1444:12;1403:55;1519:2;1512:4;1504:6;1500:17;1493:4;1484:7;1480:18;1467:55;1567:1;1542:16;;;1560:4;1538:27;1531:38;;;;1546:7;1070:530;-1:-1:-1;;;1070:530:150:o;1605:537::-;1700:6;1708;1716;1724;1777:3;1765:9;1756:7;1752:23;1748:33;1745:53;;;1794:1;1791;1784:12;1745:53;1817:29;1836:9;1817:29;:::i;:::-;1807:39;;1865:38;1899:2;1888:9;1884:18;1865:38;:::i;:::-;1855:48;;1950:2;1939:9;1935:18;1922:32;1912:42;;2005:2;1994:9;1990:18;1977:32;-1:-1:-1;;;;;2024:6:150;2021:30;2018:50;;;2064:1;2061;2054:12;2018:50;2087:49;2128:7;2119:6;2108:9;2104:22;2087:49;:::i;:::-;2077:59;;;1605:537;;;;;;;:::o;2354:180::-;2413:6;2466:2;2454:9;2445:7;2441:23;2437:32;2434:52;;;2482:1;2479;2472:12;2434:52;-1:-1:-1;2505:23:150;;2354:180;-1:-1:-1;2354:180:150:o;2539:186::-;2598:6;2651:2;2639:9;2630:7;2626:23;2622:32;2619:52;;;2667:1;2664;2657:12;2619:52;2690:29;2709:9;2690:29;:::i;2730:182::-;2789:4;-1:-1:-1;;;;;2814:6:150;2811:30;2808:56;;;2844:18;;:::i;:::-;-1:-1:-1;2889:1:150;2885:14;2901:4;2881:25;;2730:182::o;2917:772::-;2995:5;3024:63;3040:46;3079:6;3040:46;:::i;:::-;3024:63;:::i;:::-;3121:21;;;3015:72;-1:-1:-1;3161:4:150;3181:14;;;;3234:1;3230:14;;;3218:27;;3257:15;;;3254:35;;;3285:1;3282;3275:12;3254:35;3309:6;3324:359;3340:6;3335:3;3332:15;3324:359;;;3426:3;3413:17;-1:-1:-1;;;;;3449:11:150;3446:35;3443:125;;;3522:1;3551:2;3547;3540:14;3443:125;3593:47;3636:3;3622:11;3614:6;3610:24;3593:47;:::i;:::-;3581:60;;-1:-1:-1;3661:12:150;;;;3357;;3324:359;;;3328:3;;;;2917:772;;;;;:::o;3694:242::-;3747:5;3800:3;3793:4;3785:6;3781:17;3777:27;3767:55;;3818:1;3815;3808:12;3767:55;3840:90;3926:3;3917:6;3904:20;3897:4;3889:6;3885:17;3840:90;:::i;3941:655::-;4071:6;4079;4087;4095;4103;4156:3;4144:9;4135:7;4131:23;4127:33;4124:53;;;4173:1;4170;4163:12;4124:53;4196:29;4215:9;4196:29;:::i;:::-;4186:39;;4244:38;4278:2;4267:9;4263:18;4244:38;:::i;:::-;4234:48;;4301:38;4335:2;4324:9;4320:18;4301:38;:::i;:::-;4291:48;;4358:38;4392:2;4381:9;4377:18;4358:38;:::i;:::-;4348:48;;4447:3;4436:9;4432:19;4419:33;-1:-1:-1;;;;;4467:6:150;4464:30;4461:50;;;4507:1;4504;4497:12;4461:50;4530:60;4582:7;4573:6;4562:9;4558:22;4530:60;:::i;:::-;4520:70;;;3941:655;;;;;;;;:::o;4601:394::-;4678:6;4686;4739:2;4727:9;4718:7;4714:23;4710:32;4707:52;;;4755:1;4752;4745:12;4707:52;4778:29;4797:9;4778:29;:::i;:::-;4768:39;;4858:2;4847:9;4843:18;4830:32;-1:-1:-1;;;;;4877:6:150;4874:30;4871:50;;;4917:1;4914;4907:12;4871:50;4940:49;4981:7;4972:6;4961:9;4957:22;4940:49;:::i;:::-;4930:59;;;4601:394;;;;;:::o;5182:348::-;5234:8;5244:6;5298:3;5291:4;5283:6;5279:17;5275:27;5265:55;;5316:1;5313;5306:12;5265:55;-1:-1:-1;5339:20:150;;-1:-1:-1;;;;;5371:30:150;;5368:50;;;5414:1;5411;5404:12;5368:50;5451:4;5443:6;5439:17;5427:29;;5503:3;5496:4;5487:6;5479;5475:19;5471:30;5468:39;5465:59;;;5520:1;5517;5510:12;5465:59;5182:348;;;;;:::o;5535:411::-;5606:6;5614;5667:2;5655:9;5646:7;5642:23;5638:32;5635:52;;;5683:1;5680;5673:12;5635:52;5723:9;5710:23;-1:-1:-1;;;;;5748:6:150;5745:30;5742:50;;;5788:1;5785;5778:12;5742:50;5827:59;5878:7;5869:6;5858:9;5854:22;5827:59;:::i;:::-;5905:8;;5801:85;;-1:-1:-1;5535:411:150;-1:-1:-1;;;;5535:411:150:o;6133:375::-;6204:8;6214:6;6268:3;6261:4;6253:6;6249:17;6245:27;6235:55;;6286:1;6283;6276:12;6235:55;-1:-1:-1;6309:20:150;;-1:-1:-1;;;;;6341:30:150;;6338:50;;;6384:1;6381;6374:12;6338:50;6421:4;6413:6;6409:17;6397:29;;6481:3;6474:4;6464:6;6461:1;6457:14;6449:6;6445:27;6441:38;6438:47;6435:67;;;6498:1;6495;6488:12;6513:177;6594:5;6639:3;6630:6;6625:3;6621:16;6617:26;6614:46;;;6656:1;6653;6646:12;6614:46;-1:-1:-1;6678:6:150;6513:177;-1:-1:-1;6513:177:150:o;6695:1624::-;6914:6;6922;6930;6938;6946;6954;6962;6970;6978;7031:3;7019:9;7010:7;7006:23;7002:33;6999:53;;;7048:1;7045;7038:12;6999:53;7088:9;7075:23;-1:-1:-1;;;;;7158:2:150;7150:6;7147:14;7144:34;;;7174:1;7171;7164:12;7144:34;7213:59;7264:7;7255:6;7244:9;7240:22;7213:59;:::i;:::-;7291:8;;-1:-1:-1;7187:85:150;-1:-1:-1;7379:2:150;7364:18;;7351:32;;-1:-1:-1;7395:16:150;;;7392:36;;;7424:1;7421;7414:12;7392:36;7463:61;7516:7;7505:8;7494:9;7490:24;7463:61;:::i;:::-;7543:8;;-1:-1:-1;7437:87:150;-1:-1:-1;7631:2:150;7616:18;;7603:32;;-1:-1:-1;7647:16:150;;;7644:36;;;7676:1;7673;7666:12;7644:36;7715:61;7768:7;7757:8;7746:9;7742:24;7715:61;:::i;:::-;7795:8;;-1:-1:-1;7689:87:150;-1:-1:-1;7883:2:150;7868:18;;7855:32;;-1:-1:-1;7899:16:150;;;7896:36;;;7928:1;7925;7918:12;7896:36;7967:80;8039:7;8028:8;8017:9;8013:24;7967:80;:::i;:::-;8066:8;;-1:-1:-1;7941:106:150;-1:-1:-1;8154:3:150;8139:19;;8126:33;;-1:-1:-1;8171:16:150;;;8168:36;;;8200:1;8197;8190:12;8168:36;;8223:90;8305:7;8294:8;8283:9;8279:24;8223:90;:::i;:::-;8213:100;;;6695:1624;;;;;;;;;;;:::o;8509:250::-;8594:1;8604:113;8618:6;8615:1;8612:13;8604:113;;;8694:11;;;8688:18;8675:11;;;8668:39;8640:2;8633:10;8604:113;;;-1:-1:-1;;8751:1:150;8733:16;;8726:27;8509:250::o;8764:271::-;8806:3;8844:5;8838:12;8871:6;8866:3;8859:19;8887:76;8956:6;8949:4;8944:3;8940:14;8933:4;8926:5;8922:16;8887:76;:::i;:::-;9017:2;8996:15;-1:-1:-1;;8992:29:150;8983:39;;;;9024:4;8979:50;;8764:271;-1:-1:-1;;8764:271:150:o;9040:220::-;9189:2;9178:9;9171:21;9152:4;9209:45;9250:2;9239:9;9235:18;9227:6;9209:45;:::i;9265:457::-;9363:6;9371;9424:2;9412:9;9403:7;9399:23;9395:32;9392:52;;;9440:1;9437;9430:12;9392:52;9480:9;9467:23;-1:-1:-1;;;;;9505:6:150;9502:30;9499:50;;;9545:1;9542;9535:12;9499:50;9584:78;9654:7;9645:6;9634:9;9630:22;9584:78;:::i;9727:616::-;9779:3;9817:5;9811:12;9844:6;9839:3;9832:19;9870:4;9911:2;9906:3;9902:12;9936:11;9963;9956:18;;10013:6;10010:1;10006:14;9999:5;9995:26;9983:38;;10055:2;10048:5;10044:14;10076:1;10086:231;10100:6;10097:1;10094:13;10086:231;;;10171:5;10165:4;10161:16;10156:3;10149:29;10199:38;10232:4;10223:6;10217:13;10199:38;:::i;:::-;10295:12;;;;10191:46;-1:-1:-1;10260:15:150;;;;10122:1;10115:9;10086:231;;;-1:-1:-1;10333:4:150;;9727:616;-1:-1:-1;;;;;;;9727:616:150:o;10348:280::-;10547:2;10536:9;10529:21;10510:4;10567:55;10618:2;10607:9;10603:18;10595:6;10567:55;:::i;10633:334::-;10710:6;10718;10726;10779:2;10767:9;10758:7;10754:23;10750:32;10747:52;;;10795:1;10792;10785:12;10747:52;10818:29;10837:9;10818:29;:::i;:::-;10808:39;;10866:38;10900:2;10889:9;10885:18;10866:38;:::i;:::-;10856:48;;10923:38;10957:2;10946:9;10942:18;10923:38;:::i;:::-;10913:48;;10633:334;;;;;:::o;10972:408::-;11174:2;11156:21;;;11213:2;11193:18;;;11186:30;11252:34;11247:2;11232:18;;11225:62;-1:-1:-1;;;11318:2:150;11303:18;;11296:42;11370:3;11355:19;;10972:408::o;11385:::-;11587:2;11569:21;;;11626:2;11606:18;;;11599:30;11665:34;11660:2;11645:18;;11638:62;-1:-1:-1;;;11731:2:150;11716:18;;11709:42;11783:3;11768:19;;11385:408::o;12213:127::-;12274:10;12269:3;12265:20;12262:1;12255:31;12305:4;12302:1;12295:15;12329:4;12326:1;12319:15;12345:380;12424:1;12420:12;;;;12467;;;12488:61;;12542:4;12534:6;12530:17;12520:27;;12488:61;12595:2;12587:6;12584:14;12564:18;12561:38;12558:161;;12641:10;12636:3;12632:20;12629:1;12622:31;12676:4;12673:1;12666:15;12704:4;12701:1;12694:15;12856:545;12958:2;12953:3;12950:11;12947:448;;;12994:1;13019:5;13015:2;13008:17;13064:4;13060:2;13050:19;13134:2;13122:10;13118:19;13115:1;13111:27;13105:4;13101:38;13170:4;13158:10;13155:20;13152:47;;;-1:-1:-1;13193:4:150;13152:47;13248:2;13243:3;13239:12;13236:1;13232:20;13226:4;13222:31;13212:41;;13303:82;13321:2;13314:5;13311:13;13303:82;;;13366:17;;;13347:1;13336:13;13303:82;;13577:1352;13703:3;13697:10;-1:-1:-1;;;;;13722:6:150;13719:30;13716:56;;;13752:18;;:::i;:::-;13781:97;13871:6;13831:38;13863:4;13857:11;13831:38;:::i;:::-;13825:4;13781:97;:::i;:::-;13933:4;;13997:2;13986:14;;14014:1;14009:663;;;;14716:1;14733:6;14730:89;;;-1:-1:-1;14785:19:150;;;14779:26;14730:89;-1:-1:-1;;13534:1:150;13530:11;;;13526:24;13522:29;13512:40;13558:1;13554:11;;;13509:57;14832:81;;13979:944;;14009:663;12803:1;12796:14;;;12840:4;12827:18;;-1:-1:-1;;14045:20:150;;;14163:236;14177:7;14174:1;14171:14;14163:236;;;14266:19;;;14260:26;14245:42;;14358:27;;;;14326:1;14314:14;;;;14193:19;;14163:236;;;14167:3;14427:6;14418:7;14415:19;14412:201;;;14488:19;;;14482:26;-1:-1:-1;;14571:1:150;14567:14;;;14583:3;14563:24;14559:37;14555:42;14540:58;14525:74;;14412:201;-1:-1:-1;;;;;14659:1:150;14643:14;;;14639:22;14626:36;;-1:-1:-1;13577:1352:150:o;14934:232::-;14973:3;14994:17;;;14991:140;;15053:10;15048:3;15044:20;15041:1;15034:31;15088:4;15085:1;15078:15;15116:4;15113:1;15106:15;14991:140;-1:-1:-1;15158:1:150;15147:13;;14934:232::o;15795:271::-;15978:6;15970;15965:3;15952:33;15934:3;16004:16;;16029:13;;;16004:16;15795:271;-1:-1:-1;15795:271:150:o;16071:267::-;16160:6;16155:3;16148:19;16212:6;16205:5;16198:4;16193:3;16189:14;16176:43;-1:-1:-1;16264:1:150;16239:16;;;16257:4;16235:27;;;16228:38;;;;16320:2;16299:15;;;-1:-1:-1;;16295:29:150;16286:39;;;16282:50;;16071:267::o;16343:344::-;-1:-1:-1;;;;;16530:32:150;;16512:51;;16599:2;16594;16579:18;;16572:30;;;-1:-1:-1;;16619:62:150;;16662:18;;16654:6;16646;16619:62;:::i;16692:184::-;16762:6;16815:2;16803:9;16794:7;16790:23;16786:32;16783:52;;;16831:1;16828;16821:12;16783:52;-1:-1:-1;16854:16:150;;16692:184;-1:-1:-1;16692:184:150:o;17160:315::-;-1:-1:-1;;;;;17335:32:150;;17317:51;;17404:2;17399;17384:18;;17377:30;;;-1:-1:-1;;17424:45:150;;17450:18;;17442:6;17424:45;:::i;:::-;17416:53;17160:315;-1:-1:-1;;;;17160:315:150:o;17480:461::-;17533:3;17571:5;17565:12;17598:6;17593:3;17586:19;17624:4;17653:2;17648:3;17644:12;17637:19;;17690:2;17683:5;17679:14;17711:1;17721:195;17735:6;17732:1;17729:13;17721:195;;;17800:13;;-1:-1:-1;;;;;17796:39:150;17784:52;;17856:12;;;;17891:15;;;;17832:1;17750:9;17721:195;;;-1:-1:-1;17932:3:150;;17480:461;-1:-1:-1;;;;;17480:461:150:o;17946:812::-;18297:3;18286:9;18279:22;18260:4;18324:63;18382:3;18371:9;18367:19;18359:6;18351;18324:63;:::i;:::-;18435:9;18427:6;18423:22;18418:2;18407:9;18403:18;18396:50;18469;18512:6;18504;18496;18469:50;:::i;:::-;18455:64;;18567:9;18559:6;18555:22;18550:2;18539:9;18535:18;18528:50;18595:44;18632:6;18624;18595:44;:::i;:::-;-1:-1:-1;;;;;18675:32:150;;;;18670:2;18655:18;;18648:60;-1:-1:-1;;18739:3:150;18724:19;18717:35;18587:52;17946:812;-1:-1:-1;;;;;17946:812:150:o;18763:256::-;18901:9;18938:75;18998:14;18990:6;18983:5;18938:75;:::i;19024:2613::-;19091:5;19144:3;19137:4;19129:6;19125:17;19121:27;19111:55;;19162:1;19159;19152:12;19111:55;19198:6;19185:20;19224:4;19248:59;19264:42;19303:2;19264:42;:::i;19248:59::-;19341:15;;;19403:1;19443:11;;;19431:24;;19427:33;;;19372:12;;;;19329:3;19472:15;;;19469:35;;;19500:1;19497;19490:12;19469:35;19536:2;19528:6;19524:15;19548:2060;19564:6;19559:3;19556:15;19548:2060;;;19650:3;19637:17;-1:-1:-1;;;;;19727:2:150;19714:11;19711:19;19708:109;;;19771:1;19800:2;19796;19789:14;19708:109;19840:24;;;;19887:4;19915:12;;;-1:-1:-1;;19911:26:150;19907:35;-1:-1:-1;19904:125:150;;;19983:1;20012:2;20008;20001:14;19904:125;20055:22;;:::i;:::-;20104:31;20131:2;20127;20123:11;20104:31;:::i;:::-;20097:5;20090:46;20159:2;20218;20214;20210:11;20197:25;20192:2;20185:5;20181:14;20174:49;20247:2;20298:3;20294:2;20290:12;20277:26;20352:7;20345:15;20338:23;20329:7;20326:36;20316:137;;20405:1;20435:3;20430;20423:16;20316:137;20473:14;;;20466:31;20539:11;;;20526:25;;20567:16;;;20564:109;;;20625:1;20655:3;20650;20643:16;20564:109;20705:8;20701:2;20697:17;20686:28;;20755:3;20750:2;20745:3;20741:12;20737:22;20727:123;;20802:1;20791:12;;20832:3;20827;20820:16;20727:123;20896:2;20891:3;20887:12;20874:26;20863:37;;20926:60;20942:43;20981:3;20942:43;:::i;20926:60::-;21030:18;;;21126:12;;;21117:22;;21113:31;;;21070:14;;;;-1:-1:-1;21160:17:150;;;21157:110;;;21219:1;21249:3;21244;21237:16;21157:110;21293:12;;;;21318:174;21336:8;21329:5;21326:19;21318:174;;;21418:19;;21404:34;;21357:14;;;;21464;;;;21318:174;;;21512:15;;;21505:30;-1:-1:-1;21548:18:150;;-1:-1:-1;;;21586:12:150;;;;19581;;19548:2060;;;-1:-1:-1;21626:5:150;;19024:2613;-1:-1:-1;;;;;;;19024:2613:150:o;21642:667::-;21696:5;21749:3;21742:4;21734:6;21730:17;21726:27;21716:55;;21767:1;21764;21757:12;21716:55;21803:6;21790:20;21829:4;21853:59;21869:42;21908:2;21869:42;:::i;21853:59::-;21946:15;;;22032:1;22028:10;;;;22016:23;;22012:32;;;21977:12;;;;22056:15;;;22053:35;;;22084:1;22081;22074:12;22053:35;22120:2;22112:6;22108:15;22132:148;22148:6;22143:3;22140:15;22132:148;;;22214:23;22233:3;22214:23;:::i;:::-;22202:36;;22258:12;;;;22165;;22132:148;;;-1:-1:-1;22298:5:150;21642:667;-1:-1:-1;;;;;;21642:667:150:o;22314:1117::-;22460:9;22519:4;22511:5;22495:14;22491:26;22487:37;22484:57;;;22537:1;22534;22527:12;22484:57;22565:22;;:::i;:::-;22623:5;22610:19;-1:-1:-1;;;;;22689:2:150;22681:6;22678:14;22675:34;;;22705:1;22702;22695:12;22675:34;22734:52;22771:14;22762:6;22755:5;22751:18;22734:52;:::i;:::-;22725:7;22718:69;22836:2;22829:5;22825:14;22812:28;22796:44;;22865:2;22855:8;22852:16;22849:36;;;22881:1;22878;22871:12;22849:36;22919:65;22969:14;22958:8;22951:5;22947:20;22919:65;:::i;:::-;22914:2;22905:7;22901:16;22894:91;23034:2;23027:5;23023:14;23010:28;22994:44;;23063:2;23053:8;23050:16;23047:36;;;23079:1;23076;23069:12;23047:36;23117:79;23181:14;23170:8;23163:5;23159:20;23117:79;:::i;:::-;23112:2;23103:7;23099:16;23092:105;23246:2;23239:5;23235:14;23222:28;23206:44;;23275:2;23265:8;23262:16;23259:36;;;23291:1;23288;23281:12;23259:36;;23329:66;23380:14;23369:8;23362:5;23358:20;23329:66;:::i;:::-;23324:2;23311:16;;23304:92;-1:-1:-1;23315:7:150;22314:1117;-1:-1:-1;;22314:1117:150:o;23816:247::-;23975:2;23964:9;23957:21;23938:4;23995:62;24053:2;24042:9;24038:18;24030:6;24022;23995:62;:::i;24068:522::-;24146:4;24152:6;24212:11;24199:25;24306:2;24302:7;24291:8;24275:14;24271:29;24267:43;24247:18;24243:68;24233:96;;24325:1;24322;24315:12;24233:96;24352:33;;24404:20;;;-1:-1:-1;;;;;;24436:30:150;;24433:50;;;24479:1;24476;24469:12;24433:50;24512:4;24500:17;;-1:-1:-1;24543:14:150;24539:27;;;24529:38;;24526:58;;;24580:1;24577;24570:12;24595:1206;-1:-1:-1;;;;;24714:3:150;24711:27;24708:53;;;24741:18;;:::i;:::-;24770:94;24860:3;24820:38;24852:4;24846:11;24820:38;:::i;:::-;24814:4;24770:94;:::i;:::-;24890:1;24915:2;24910:3;24907:11;24932:1;24927:616;;;;25587:1;25604:3;25601:93;;;-1:-1:-1;25660:19:150;;;25647:33;25601:93;-1:-1:-1;;13534:1:150;13530:11;;;13526:24;13522:29;13512:40;13558:1;13554:11;;;13509:57;25707:78;;24900:895;;24927:616;12803:1;12796:14;;;12840:4;12827:18;;-1:-1:-1;;24963:17:150;;;25064:9;25086:229;25100:7;25097:1;25094:14;25086:229;;;25189:19;;;25176:33;25161:49;;25296:4;25281:20;;;;25249:1;25237:14;;;;25116:12;25086:229;;;25090:3;25343;25334:7;25331:16;25328:159;;;25467:1;25463:6;25457:3;25451;25448:1;25444:11;25440:21;25436:34;25432:39;25419:9;25414:3;25410:19;25397:33;25393:79;25385:6;25378:95;25328:159;;;25530:1;25524:3;25521:1;25517:11;25513:19;25507:4;25500:33;24900:895;;24595:1206;;;:::o;27227:407::-;27429:2;27411:21;;;27468:2;27448:18;;;27441:30;27507:34;27502:2;27487:18;;27480:62;-1:-1:-1;;;27573:2:150;27558:18;;27551:41;27624:3;27609:19;;27227:407::o;28360:1727::-;28566:4;28595:2;28635;28624:9;28620:18;28665:2;28654:9;28647:21;28688:6;28723;28717:13;28754:6;28746;28739:22;28780:2;28770:12;;28813:2;28802:9;28798:18;28791:25;;28875:2;28865:6;28862:1;28858:14;28847:9;28843:30;28839:39;28913:2;28905:6;28901:15;28934:1;28955;28965:1093;28981:6;28976:3;28973:15;28965:1093;;;29050:22;;;-1:-1:-1;;29046:36:150;29034:49;;29106:13;;29220:9;;-1:-1:-1;;;;;29216:35:150;29201:51;;29295:11;;;29289:18;29272:15;;;29265:43;29365:11;;;29359:18;29352:26;29345:34;29328:15;;;29321:59;29403:4;29446:11;;;29440:18;29142:4;29478:15;;;29471:27;;;29559:19;;29173:15;;;29591:24;;;29682:21;;;29239:3;29637:16;;;29727:1;;29741:209;29757:8;29752:3;29749:17;29741:209;;;29834:15;;29820:30;;29919:17;;;;29876:14;;;;29785:1;29776:11;;;;;29741:209;;;-1:-1:-1;;30036:12:150;;;;29973:5;-1:-1:-1;;30001:15:150;;;;29007:1;28998:11;28965:1093;;;-1:-1:-1;30075:6:150;;28360:1727;-1:-1:-1;;;;;;;;;28360:1727:150:o;30092:281::-;30211:1;30207;30202:3;30198:11;30194:19;30186:5;30180:12;30176:38;30171:3;30164:51;30146:3;30261:4;30254:5;30250:16;30244:23;30299:4;30292;30287:3;30283:14;30276:28;30320:47;30361:4;30356:3;30352:14;30338:12;30320:47;:::i;30378:640::-;30442:3;30480:5;30474:12;30507:6;30502:3;30495:19;30533:4;30574:2;30569:3;30565:12;30599:11;30626;30619:18;;30676:6;30673:1;30669:14;30662:5;30658:26;30646:38;;30718:2;30711:5;30707:14;30739:1;30749:243;30763:6;30760:1;30757:13;30749:243;;;30834:5;30828:4;30824:16;30819:3;30812:29;30862:50;30907:4;30898:6;30892:13;30862:50;:::i;:::-;30970:12;;;;30854:58;-1:-1:-1;30935:15:150;;;;30785:1;30778:9;30749:243;;31023:2033;31402:2;31391:9;31384:21;31365:4;31428:45;31469:2;31458:9;31454:18;31446:6;31428:45;:::i;:::-;31492:2;31542:9;31534:6;31530:22;31525:2;31514:9;31510:18;31503:50;31573:6;31608;31602:13;31639:6;31631;31624:22;31674:2;31666:6;31662:15;31655:22;;31696:1;31754:2;31744:6;31740:2;31736:15;31728:6;31724:28;31720:37;31776:1;31797:6;31793:2;31786:18;31841:2;31837;31827:17;31862:2;31873:1046;31887:6;31884:1;31881:13;31873:1046;;;31977:2;31973:7;31964:6;31956;31952:19;31948:33;31943:3;31936:46;32006:2;32044:6;32038:13;32080:36;32106:9;32080:36;:::i;:::-;32129:24;;;32176:1;32197:18;;;32228:167;;;;32413:1;32408:405;;;;32190:623;;32228:167;-1:-1:-1;;32277:24:150;;32260:15;;;32253:49;32357:16;;32350:24;32342:33;;32330:46;;32326:55;;;-1:-1:-1;32228:167:150;;32408:405;32444:6;32440:2;32433:18;32497:2;32493;32483:17;32528:2;32547:203;32563:8;32558:3;32555:17;32547:203;;;32675:7;32669:14;32664:2;32658:3;32650:6;32646:16;32642:25;32635:49;32729:2;32720:7;32716:16;32705:27;;32591:2;32586:3;32582:12;32575:19;;32547:203;;;32778:16;;32774:25;;;-1:-1:-1;;32190:623:150;-1:-1:-1;32897:12:150;;;;32836:3;;-1:-1:-1;;;32862:15:150;;;;;31909:1;31902:9;31873:1046;;;31877:3;;;32967:9;32959:6;32955:22;32950:2;32939:9;32935:18;32928:50;32995:55;33043:6;33035;32995:55;:::i;:::-;32987:63;31023:2033;-1:-1:-1;;;;;;;;;;;31023:2033:150:o;33061:261::-;33240:2;33229:9;33222:21;33203:4;33260:56;33312:2;33301:9;33297:18;33289:6;33260:56;:::i;33327:718::-;33712:2;33701:9;33694:21;33675:4;33738:45;33779:2;33768:9;33764:18;33756:6;33738:45;:::i;:::-;33831:9;33823:6;33819:22;33814:2;33803:9;33799:18;33792:50;33865:43;33901:6;33893;33865:43;:::i;:::-;33851:57;;33956:9;33948:6;33944:22;33939:2;33928:9;33924:18;33917:50;33984:55;34032:6;34024;33984:55;:::i;:::-;33976:63;33327:718;-1:-1:-1;;;;;;33327:718:150:o;34050:343::-;34267:6;34256:9;34249:25;34310:2;34305;34294:9;34290:18;34283:30;34230:4;34330:57;34383:2;34372:9;34368:18;34360:6;34330:57;:::i;34398:289::-;34529:3;34567:6;34561:13;34583:66;34642:6;34637:3;34630:4;34622:6;34618:17;34583:66;:::i;:::-;34665:16;;;;;34398:289;-1:-1:-1;;34398:289:150:o",
    "linkReferences": {},
    "immutableReferences": {
      "56074": [
=======
    "object": "",
    "sourceMap": "1450:8705:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1815:42;;;;;;;;;;-1:-1:-1;1815:42:14;;;;-1:-1:-1;;;;;1815:42:14;;;;;;-1:-1:-1;;;;;178:32:150;;;160:51;;148:2;133:18;1815:42:14;;;;;;;;834:200:106;;;;;;;;;;-1:-1:-1;834:200:106;;;;;:::i;:::-;-1:-1:-1;;;834:200:106;;;;;;;;;;-1:-1:-1;;;;;;2309:33:150;;;2291:52;;2279:2;2264:18;834:200:106;2147:202:150;1936:46:14;;;;;;;;;;-1:-1:-1;1936:46:14;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1936:46:14;;;3317:197:103;;;;;;;;;;-1:-1:-1;3317:197:103;;;;;:::i;:::-;;:::i;:::-;;2367:597:14;;;;;;;;;;-1:-1:-1;2367:597:14;;;;;:::i;:::-;;:::i;3763:222:103:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;:::-;;;5146:25:150;;;5134:2;5119:18;3006:131:103;5000:177:150;1861:34:14;;;;;;;;;;-1:-1:-1;1861:34:14;;;;-1:-1:-1;;;;;1861:34:14;;;2071:101:98;;;;;;;;;;;;;:::i;6759:207:14:-;;;;;;;;;;-1:-1:-1;6759:207:14;;;;;:::i;:::-;;:::i;1441:85:98:-;;;;;;;;;;-1:-1:-1;1513:6:98;;-1:-1:-1;;;;;1513:6:98;1441:85;;7002:212:14;;;;;;;;;;-1:-1:-1;7002:212:14;;;;;:::i;:::-;;:::i;3436:2758::-;;;;;;;;;;-1:-1:-1;3436:2758:14;;;;;:::i;:::-;;:::i;1900:32::-;;;;;;;;;;-1:-1:-1;1900:32:14;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6230:493::-;;;;;;;;;;-1:-1:-1;6230:493:14;;;;;:::i;:::-;;:::i;1768:43::-;;;;;;;;;;-1:-1:-1;1768:43:14;;;;-1:-1:-1;;;;;1768:43:14;;;7250:105;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3000:400::-;;;;;;;;;;-1:-1:-1;3000:400:14;;;;;:::i;:::-;;:::i;1721:43::-;;;;;;;;;;-1:-1:-1;1721:43:14;;;;-1:-1:-1;;;;;1721:43:14;;;2321:198:98;;;;;;;;;;-1:-1:-1;2321:198:98;;;;;:::i;:::-;;:::i;1986:46:14:-;;;;;;;;;;-1:-1:-1;1986:46:14;;;;;:::i;:::-;;;;;;;;;;;;;;3317:197:103;-1:-1:-1;;;;;1898:6:103;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:103;;;;;;;:::i;:::-;;;;;;;;;1995:6;-1:-1:-1;;;;;1971:30:103;:20;-1:-1:-1;;;;;;;;;;;1642:65:100;-1:-1:-1;;;;;1642:65:100;;1563:151;1971:20:103;-1:-1:-1;;;;;1971:30:103;;1963:87;;;;-1:-1:-1;;;1963:87:103;;;;;;;:::i;:::-;3400:36:::1;3418:17;3400;:36::i;:::-;3487:12;::::0;;3497:1:::1;3487:12:::0;;;::::1;::::0;::::1;::::0;;;3446:61:::1;::::0;3468:17;;3487:12;3446:21:::1;:61::i;:::-;3317:197:::0;:::o;2367:597:14:-;3268:19:102;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:102;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:102;1476:19:107;:23;;;3376:66:102;;-1:-1:-1;3425:12:102;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:102;;12000:2:150;3314:201:102;;;11982:21:150;12039:2;12019:18;;;12012:30;12078:34;12058:18;;;12051:62;-1:-1:-1;;;12129:18:150;;;12122:44;12183:19;;3314:201:102;11798:410:150;3314:201:102;3525:12;:16;;-1:-1:-1;;3525:16:102;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:102;;;;;3551:65;2558:24:14::1;:22;:24::i;:::-;2588:16;:14;:16::i;:::-;2610:24;:22;:24::i;:::-;2640:21;:19;:21::i;:::-;2668:28;:37:::0;;-1:-1:-1;;;;;2668:37:14;;::::1;-1:-1:-1::0;;;;;;2668:37:14;;::::1;;::::0;;;2711:28:::1;:48:::0;;;;::::1;::::0;;::::1;;::::0;;2765:27:::1;:46:::0;;;;::::1;::::0;;::::1;;::::0;;2817:19:::1;:33:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2668:28:::1;2857:103;2881:12;:19;2877:1;:23;2857:103;;;2915:16;2937:12;2950:1;2937:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;2915:38;;::::1;::::0;::::1;::::0;;-1:-1:-1;2915:38:14;;;;;;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;2902:3:14;::::1;::::0;::::1;:::i;:::-;;;;2857:103;;;;3640:14:102::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:102;;;3710:14;;-1:-1:-1;15323:36:150;;3710:14:102;;15311:2:150;15296:18;3710:14:102;;;;;;;3636:99;3258:483;2367:597:14;;;;;:::o;3763:222:103:-;-1:-1:-1;;;;;1898:6:103;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:103;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:103;:20;-1:-1:-1;;;;;;;;;;;1642:65:100;-1:-1:-1;;;;;1642:65:100;;1563:151;1971:20:103;-1:-1:-1;;;;;1971:30:103;;1963:87;;;;-1:-1:-1;;;1963:87:103;;;;;;;:::i;:::-;3880:36:::1;3898:17;3880;:36::i;:::-;3926:52;3948:17;3967:4;3973;3926:21;:52::i;:::-;3763:222:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:103;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:103;;15572:2:150;2308:92:103;;;15554:21:150;15611:2;15591:18;;;15584:30;15650:34;15630:18;;;15623:62;15721:26;15701:18;;;15694:54;15765:19;;2308:92:103;15370:420:150;2308:92:103;-1:-1:-1;;;;;;;;;;;;3006:131:103;:::o;2071:101:98:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;6759:207:14:-;6853:7;6868:20;6907:14;;6891:32;;;;;;;:::i;:::-;;;;;;;;;;;6936:25;;;;:11;:25;;;;;6759:207;-1:-1:-1;;;;6759:207:14:o;7002:212::-;7101:7;7116:20;7155:14;;7139:32;;;;;;;:::i;:::-;;;;;;;;;;;7184:25;;;;:11;:25;;;;-1:-1:-1;;;;;7184:25:14;;7002:212;-1:-1:-1;;;;7002:212:14:o;3436:2758::-;3710:21;2490::104;:19;:21::i;:::-;3766:29:14::1;3785:9;;3766:18;:29::i;:::-;3871:1;3839:33:::0;;;3835:87:::1;;3889:26;;-1:-1:-1::0;;;3889:26:14::1;;;;;;;;;;;3835:87;3955:20;3994:14;;3978:32;;;;;;;:::i;:::-;;::::0;;;;;::::1;::::0;;;4118:1:::1;4081:25:::0;;;:11:::1;:25;::::0;;;;;;3978:32;;-1:-1:-1;;;;;;4081:25:14::1;:39:::0;4077:98:::1;;4137:31;;-1:-1:-1::0;;;4137:31:14::1;;;;;;;;;;;4077:98;4242:19;::::0;4231:86:::1;::::0;-1:-1:-1;;;4231:86:14;;4212:16:::1;::::0;-1:-1:-1;;;;;4242:19:14::1;::::0;4231:38:::1;::::0;:86:::1;::::0;4285:4:::1;::::0;4298:13;;;;4231:86:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4356:25;::::0;;;:11:::1;:25;::::0;;;;;:36;;;4507:28:::1;::::0;4611:19:::1;::::0;4545:106;;-1:-1:-1;;;;;4611:19:14;;::::1;4545:106;::::0;::::1;17055:51:150::0;17122:18;;;17115:34;;;4356:36:14;;-1:-1:-1;4356:25:14;;4507:28;::::1;::::0;17028:18:150;;4545:106:14::1;::::0;;-1:-1:-1;;4545:106:14;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4545:106:14::1;-1:-1:-1::0;;;4545:106:14::1;::::0;;4481:178;::::1;::::0;::::1;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;4778:27:14::1;::::0;4880:19:::1;::::0;4815:105:::1;::::0;-1:-1:-1;;;;;4880:19:14;;::::1;4815:105;::::0;::::1;17055:51:150::0;17122:18;;;17115:34;;;4438:227:14;;-1:-1:-1;4710:24:14::1;::::0;4778:27;::::1;::::0;17028:18:150;;4815:105:14::1;::::0;;-1:-1:-1;;4815:105:14;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4815:105:14::1;-1:-1:-1::0;;;4815:105:14::1;::::0;;4752:176;::::1;::::0;::::1;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;4974:16:14::1;::::0;;4988:1:::1;4974:16:::0;;;;;::::1;::::0;;4710:224;;-1:-1:-1;4941:30:14::1;::::0;4974:16;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;4974:16:14::1;4941:49;;5015:17;4996:13;5010:1;4996:16;;;;;;;;:::i;:::-;;;;;;:36;-1:-1:-1::0;;;;;4996:36:14::1;;;-1:-1:-1::0;;;;;4996:36:14::1;;;::::0;::::1;5057:16;5038:13;5052:1;5038:16;;;;;;;;:::i;:::-;;;;;;:35;-1:-1:-1::0;;;;;5038:35:14::1;;;-1:-1:-1::0;;;;;5038:35:14::1;;;::::0;::::1;5170:28;;;;;;;;;-1:-1:-1::0;;;;;5170:28:14::1;5276:9;;5299:14;;5327:13;5354:19;;;;;;;;;-1:-1:-1::0;;;;;5354:19:14::1;5387:8;5208:209;;;;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;5208:209:14;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;5208:209:14::1;-1:-1:-1::0;;;5208:209:14::1;::::0;;5144:281;::::1;::::0;::::1;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;5475:25:14::1;::::0;;;:11:::1;:25;::::0;;;;:41;;-1:-1:-1;;;;;;5475:41:14::1;-1:-1:-1::0;;;;;5475:41:14;::::1;;::::0;;;;-1:-1:-1;5563:120:14::1;5587:13;:20;5583:1;:24;5563:120;;;5635:13;5649:1;5635:16;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;5622:54:::1;::::0;-1:-1:-1;;;5622:54:14;;-1:-1:-1;;;;;178:32:150;;;5622:54:14::1;::::0;::::1;160:51:150::0;5622:39:14;;::::1;::::0;::::1;::::0;133:18:150;;5622:54:14::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5609:3;;;;;:::i;:::-;;;;5563:120;;;;5689:67;5713:13;5728:17;5747:8;5689:23;:67::i;:::-;5762:105;5796:13:::0;5817:16;5762:105:::1;5841:20:::0;;5762:105:::1;:::i;:::-;:26;:105::i;:::-;5873:126;5905:13:::0;5926:17;5951:16;5873:126:::1;5975:18:::0;5873:126:::1;:::i;:::-;:24;:126::i;:::-;6017:19;::::0;-1:-1:-1;;;;;6017:19:14::1;6006:44;6066:4;929:10:108::0;6006:107:14::1;::::0;-1:-1:-1;;;;;;6006:107:14::1;::::0;;;;;;-1:-1:-1;;;;;23694:15:150;;;6006:107:14::1;::::0;::::1;23676:34:150::0;23746:15;;23726:18;;;23719:43;23778:18;;;23771:34;;;23611:18;;6006:107:14::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6160:12;929:10:108::0;;850:96;6160:12:14::1;-1:-1:-1::0;;;;;6125:64:14::1;6145:13;-1:-1:-1::0;;;;;6125:64:14::1;;6174:14;;6125:64;;;;;;;:::i;:::-;;;;;;;;3733:2461;;;;;2532:20:104::0;1772:1;3038:7;:22;2858:209;2532:20;3436:2758:14;;;;;;;;;;;:::o;1900:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6230:493::-;1334:13:98;:11;:13::i;:::-;6375:9:14::1;6370:349;6390:23:::0;;::::1;6370:349;;;6433:9;6428:191;6452:16;:23:::0;6448:27;::::1;6428:191;;;6496:51;6510:12;;6523:1;6510:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;6496:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;6527:16:14::1;:19:::0;;:16;;-1:-1:-1;6544:1:14;;-1:-1:-1;6527:19:14;::::1;;;;;:::i;:::-;;;;;;;;6496:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:51::i;:::-;6492:119;;;6568:32;;-1:-1:-1::0;;;6568:32:14::1;;;;;;;;;;;6492:119;6477:3:::0;::::1;::::0;::::1;:::i;:::-;;;;6428:191;;;;6674:16;6696:12;;6709:1;6696:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;6674:38:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;6674:38:14;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;6415:3:14;::::1;::::0;::::1;:::i;:::-;;;;6370:349;;;;6230:493:::0;;:::o;7250:105::-;7304:15;7334:16;7327:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7250:105;:::o;3000:400::-;1334:13:98;:11;:13::i;:::-;-1:-1:-1;;;;;3145:20:14;::::1;::::0;3141:63:::1;;3167:28;:37:::0;;-1:-1:-1;;;;;;3167:37:14::1;-1:-1:-1::0;;;;;3167:37:14;::::1;;::::0;;3141:63:::1;-1:-1:-1::0;;;;;3214:31:14;::::1;::::0;3210:91:::1;;3253:28;:48:::0;;-1:-1:-1;;;;;;3253:48:14::1;-1:-1:-1::0;;;;;3253:48:14;::::1;;::::0;;3210:91:::1;-1:-1:-1::0;;;;;3311:30:14;::::1;::::0;3307:88:::1;;3349:27;:46:::0;;-1:-1:-1;;;;;3349:46:14;::::1;-1:-1:-1::0;;;;;;3349:46:14;;::::1;;::::0;;3000:400;;;:::o;2321:198:98:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:98;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:98;;26008:2:150;2401:73:98::1;::::0;::::1;25990:21:150::0;26047:2;26027:18;;;26020:30;26086:34;26066:18;;;26059:62;-1:-1:-1;;;26137:18:150;;;26130:36;26183:19;;2401:73:98::1;25806:402:150::0;2401:73:98::1;2484:28;2503:8;2484:18;:28::i;10061:92:14:-:0;1334:13:98;:11;:13::i;2938:974:100:-;951:66;3384:59;;;3380:526;;;3459:37;3478:17;3459:18;:37::i;3380:526::-;3560:17;-1:-1:-1;;;;;3531:61:100;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3531:63:100;;;;;;;;-1:-1:-1;;3531:63:100;;;;;;;;;;;;:::i;:::-;;;3527:302;;3758:56;;-1:-1:-1;;;3758:56:100;;26604:2:150;3758:56:100;;;26586:21:150;26643:2;26623:18;;;26616:30;26682:34;26662:18;;;26655:62;-1:-1:-1;;;26733:18:150;;;26726:44;26787:19;;3758:56:100;26402:410:150;3527:302:100;-1:-1:-1;;;;;;;;;;;3644:28:100;;3636:82;;;;-1:-1:-1;;;3636:82:100;;27019:2:150;3636:82:100;;;27001:21:150;27058:2;27038:18;;;27031:30;27097:34;27077:18;;;27070:62;-1:-1:-1;;;27148:18:150;;;27141:39;27197:19;;3636:82:100;26817:405:150;3636:82:100;3595:138;3842:53;3860:17;3879:4;3885:9;3842:17;:53::i;1042:67:103:-;5363:13:102;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:102;;;;;;;:::i;1003:95:98:-;5363:13:102;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:102;;;;;;;:::i;:::-;1065:26:98::1;:24;:26::i;1853:111:104:-:0;5363:13:102;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:102;;;;;;;:::i;:::-;1923:34:104::1;:32;:34::i;1599:130:98:-:0;1513:6;;-1:-1:-1;;;;;1513:6:98;929:10:108;1662:23:98;1654:68;;;;-1:-1:-1;;;1654:68:98;;27841:2:150;1654:68:98;;;27823:21:150;;;27860:18;;;27853:30;27919:34;27899:18;;;27892:62;27971:18;;1654:68:98;27639:356:150;2673:187:98;2765:6;;;-1:-1:-1;;;;;2781:17:98;;;-1:-1:-1;;;;;;2781:17:98;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;2565:287:104:-;1815:1;2697:7;;:19;2689:63;;;;-1:-1:-1;;;2689:63:104;;28202:2:150;2689:63:104;;;28184:21:150;28241:2;28221:18;;;28214:30;28280:33;28260:18;;;28253:61;28331:18;;2689:63:104;28000:355:150;2689:63:104;1815:1;2827:7;:18;2565:287::o;806:665:29:-;870:21;900:4;;870:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;916:15:29;;870:35;;-1:-1:-1;;162:1:29;916:33;;;;-1:-1:-1;916:33:29;:70;;-1:-1:-1;953:15:29;;209:2;-1:-1:-1;916:70:29;912:115;;;1001:26;;-1:-1:-1;;;1001:26:29;;;;;;;;;;;912:115;1059:15;;1034:22;1080:387;1104:14;1100:1;:18;1080:387;;;-1:-1:-1;;;1144:8:29;1153:1;1144:11;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1144:11:29;:17;;:48;;;-1:-1:-1;;;1175:8:29;1184:1;1175:11;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1175:11:29;:17;1144:48;:102;;;;-1:-1:-1;;;1207:8:29;1216:1;1207:11;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1207:11:29;:17;:38;;;;;-1:-1:-1;;;1228:8:29;1237:1;1228:11;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;1228:11:29;:17;1207:38;1143:134;;;;;1259:8;1268:1;1259:11;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;1259:11:29;-1:-1:-1;;;1259:18:29;;1143:134;:164;;;;;1289:8;1298:1;1289:11;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;1289:11:29;-1:-1:-1;;;1289:18:29;;1143:164;:194;;;;;1319:8;1328:1;1319:11;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;1319:11:29;-1:-1:-1;;;1319:18:29;;1143:194;:224;;;;;1349:8;1358:1;1349:11;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;1349:11:29;-1:-1:-1;;;1349:18:29;;1143:224;1130:291;;;1383:38;;-1:-1:-1;;;1383:38:29;;;;;;;;;;;1130:291;1449:3;;1080:387;;;;864:607;;806:665;;:::o;8551:960:14:-;8754:32;;;8784:1;8754:32;;;;;;;;;8712:39;;8754:32;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;8754:32:14;;-1:-1:-1;;8754:32:14;;;;;;;;-1:-1:-1;;8821:16:14;;;8835:1;8821:16;;;;;;;;;8712:74;;-1:-1:-1;8793:25:14;;8821:16;;;;;;;;;;;;-1:-1:-1;8821:16:14;8793:44;;8857:7;8843:8;8852:1;8843:11;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;;8918:147;;;;;;;;8967:19;;-1:-1:-1;;;;;8967:19:14;8918:147;;8967:19;8918:147;;;;;;;;;;;;;;;;;;;8906:9;;:6;;-1:-1:-1;;8906:9:14;;;;:::i;:::-;;;;;;;;;;:159;9119:42;;;9154:1;9119:42;;;;;;;;;9072:44;;9119:42;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9119:42:14;;;;;;;;;;;;;;;9072:89;;9186;;;;;;;;9224:12;-1:-1:-1;;;;;9186:89:14;;;;;9261:6;9250:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;9186:89;;;9167:13;9181:1;9167:16;;;;;;;;:::i;:::-;;;;;;:108;;;;9328:19;9356:12;-1:-1:-1;;;;;9350:30:14;;9388:13;;;;;;;;;;;;;-1:-1:-1;;;9388:13:14;;;9409:16;9433:13;9350:102;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9459:47;;-1:-1:-1;;;9459:47:14;;;;;5146:25:150;;;9328:124:14;;-1:-1:-1;;;;;;9459:34:14;;;;;5119:18:150;;9459:47:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8670:841;;;;8551:960;;;:::o;9515:542::-;9702:42;;;9737:1;9702:42;;;;;;;;;9655:44;;9702:42;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9702:42:14;;;;;;;;;;;;-1:-1:-1;;9776:16:14;;;9790:1;9776:16;;;;;;;;;9655:89;;-1:-1:-1;9751:22:14;;9776:16;;;;;;;;;;;;-1:-1:-1;9776:16:14;9751:41;;262:42:29;9798:5:14;9804:1;9798:8;;;;;;;;:::i;:::-;;;;;;:33;-1:-1:-1;;;;;9798:33:14;;;-1:-1:-1;;;;;9798:33:14;;;;;9857:87;;;;;;;;9895:11;-1:-1:-1;;;;;9857:87:14;;;;;9931:5;9920:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;9857:87;;;9838:13;9852:1;9838:16;;;;;;;;:::i;:::-;;;;;;:106;;;;9957:12;-1:-1:-1;;;;;9951:30:14;;9989:16;;;;;;;;;;;;;-1:-1:-1;;;9989:16:14;;;10013:12;10033:13;9951:101;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7454:1093::-;7658:30;;;;:37;7654:55;7702:7;7654:55;7762:42;;;7797:1;7762:42;;;;;;;;;7715:44;;7762:42;;;;-1:-1:-1;;;;;;;;;;;;;;;;;7762:42:14;;;;;;;;;;;;;;;7715:89;;7829:37;;;;;;;;7859:1;-1:-1:-1;;;;;7829:37:14;;;;;;;;;;;;;;;;;;;;7810:13;7824:1;7810:16;;;;;;;;:::i;:::-;;;;;;:56;;;;7873:24;7906:12;-1:-1:-1;;;;;7900:30:14;;7938:18;:27;;;7973:18;:30;;;8011:13;7900:130;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8080:24;;;;:31;7873:157;;-1:-1:-1;8080:35:14;8076:212;;8131:12;-1:-1:-1;;;;;8125:40:14;;8175:16;8201:72;;;;;;;;8223:11;-1:-1:-1;;;;;8201:72:14;;;;;8247:18;:24;;;8236:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;8201:72;;;8125:156;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8076:212;8338:18;:25;;;:32;8374:1;8338:37;8334:50;;8377:7;;;;8334:50;8396:12;-1:-1:-1;;;;;8390:40:14;;8438:16;8462:74;;;;;;;;8484:12;-1:-1:-1;;;;;8462:74:14;;;;;8509:18;:25;;;8498:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;8462:74;;;8390:152;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7648:899;;7454:1093;;;;;:::o;2858:209:104:-;1772:1;3038:7;:22;2858:209::o;309:178:29:-;397:4;478:2;461:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;451:31;;;;;;443:2;426:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;416:31;;;;;;:66;409:73;;309:178;;;;:::o;1805:281:100:-;-1:-1:-1;;;;;1476:19:107;;;1878:106:100;;;;-1:-1:-1;;;1878:106:100;;34894:2:150;1878:106:100;;;34876:21:150;34933:2;34913:18;;;34906:30;34972:34;34952:18;;;34945:62;-1:-1:-1;;;35023:18:150;;;35016:43;35076:19;;1878:106:100;34692:409:150;1878:106:100;-1:-1:-1;;;;;;;;;;;1994:85:100;;-1:-1:-1;;;;;;1994:85:100;-1:-1:-1;;;;;1994:85:100;;;;;;;;;;1805:281::o;2478:288::-;2616:29;2627:17;2616:10;:29::i;:::-;2673:1;2659:4;:11;:15;:28;;;;2678:9;2659:28;2655:105;;;2703:46;2725:17;2744:4;2703:21;:46::i;1104:111:98:-;5363:13:102;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:102;;;;;;;:::i;:::-;1176:32:98::1;929:10:108::0;1176:18:98::1;:32::i;1970:109:104:-:0;5363:13:102;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:102;;;;;;;:::i;2192:152:100:-;2258:37;2277:17;2258:18;:37::i;:::-;2310:27;;-1:-1:-1;;;;;2310:27:100;;;;;;;;2192:152;:::o;7088:455::-;7171:12;-1:-1:-1;;;;;1476:19:107;;;7195:88:100;;;;-1:-1:-1;;;7195:88:100;;35308:2:150;7195:88:100;;;35290:21:150;35347:2;35327:18;;;35320:30;35386:34;35366:18;;;35359:62;-1:-1:-1;;;35437:18:150;;;35430:36;35483:19;;7195:88:100;35106:402:150;7195:88:100;7354:12;7368:23;7395:6;-1:-1:-1;;;;;7395:19:100;7415:4;7395:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7353:67;;;;7437:99;7473:7;7482:10;7437:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7430:106;7088:455;-1:-1:-1;;;;;7088:455:100:o;7437:295:107:-;7583:12;7611:7;7607:119;;;-1:-1:-1;7641:10:107;7634:17;;7607:119;7682:33;7690:10;7702:12;7682:7;:33::i;:::-;7437:295;;;;;:::o;7738:540::-;7897:17;;:21;7893:379;;8125:10;8119:17;8181:15;8168:10;8164:2;8160:19;8153:44;7893:379;8248:12;8241:20;;-1:-1:-1;;;8241:20:107;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;222:173:150:-;290:20;;-1:-1:-1;;;;;339:31:150;;329:42;;319:70;;385:1;382;375:12;319:70;222:173;;;:::o;400:127::-;461:10;456:3;452:20;449:1;442:31;492:4;489:1;482:15;516:4;513:1;506:15;532:253;604:2;598:9;646:4;634:17;;-1:-1:-1;;;;;666:34:150;;702:22;;;663:62;660:88;;;728:18;;:::i;:::-;764:2;757:22;532:253;:::o;790:275::-;861:2;855:9;926:2;907:13;;-1:-1:-1;;903:27:150;891:40;;-1:-1:-1;;;;;946:34:150;;982:22;;;943:62;940:88;;;1008:18;;:::i;:::-;1044:2;1037:22;790:275;;-1:-1:-1;790:275:150:o;1070:530::-;1112:5;1165:3;1158:4;1150:6;1146:17;1142:27;1132:55;;1183:1;1180;1173:12;1132:55;1219:6;1206:20;-1:-1:-1;;;;;1241:2:150;1238:26;1235:52;;;1267:18;;:::i;:::-;1311:55;1354:2;1335:13;;-1:-1:-1;;1331:27:150;1360:4;1327:38;1311:55;:::i;:::-;1391:2;1382:7;1375:19;1437:3;1430:4;1425:2;1417:6;1413:15;1409:26;1406:35;1403:55;;;1454:1;1451;1444:12;1403:55;1519:2;1512:4;1504:6;1500:17;1493:4;1484:7;1480:18;1467:55;1567:1;1542:16;;;1560:4;1538:27;1531:38;;;;1546:7;1070:530;-1:-1:-1;;;1070:530:150:o;1605:537::-;1700:6;1708;1716;1724;1777:3;1765:9;1756:7;1752:23;1748:33;1745:53;;;1794:1;1791;1784:12;1745:53;1817:29;1836:9;1817:29;:::i;:::-;1807:39;;1865:38;1899:2;1888:9;1884:18;1865:38;:::i;:::-;1855:48;;1950:2;1939:9;1935:18;1922:32;1912:42;;2005:2;1994:9;1990:18;1977:32;-1:-1:-1;;;;;2024:6:150;2021:30;2018:50;;;2064:1;2061;2054:12;2018:50;2087:49;2128:7;2119:6;2108:9;2104:22;2087:49;:::i;:::-;2077:59;;;1605:537;;;;;;;:::o;2354:180::-;2413:6;2466:2;2454:9;2445:7;2441:23;2437:32;2434:52;;;2482:1;2479;2472:12;2434:52;-1:-1:-1;2505:23:150;;2354:180;-1:-1:-1;2354:180:150:o;2539:186::-;2598:6;2651:2;2639:9;2630:7;2626:23;2622:32;2619:52;;;2667:1;2664;2657:12;2619:52;2690:29;2709:9;2690:29;:::i;2730:182::-;2789:4;-1:-1:-1;;;;;2814:6:150;2811:30;2808:56;;;2844:18;;:::i;:::-;-1:-1:-1;2889:1:150;2885:14;2901:4;2881:25;;2730:182::o;2917:772::-;2995:5;3024:63;3040:46;3079:6;3040:46;:::i;:::-;3024:63;:::i;:::-;3121:21;;;3015:72;-1:-1:-1;3161:4:150;3181:14;;;;3234:1;3230:14;;;3218:27;;3257:15;;;3254:35;;;3285:1;3282;3275:12;3254:35;3309:6;3324:359;3340:6;3335:3;3332:15;3324:359;;;3426:3;3413:17;-1:-1:-1;;;;;3449:11:150;3446:35;3443:125;;;3522:1;3551:2;3547;3540:14;3443:125;3593:47;3636:3;3622:11;3614:6;3610:24;3593:47;:::i;:::-;3581:60;;-1:-1:-1;3661:12:150;;;;3357;;3324:359;;;3328:3;;;;2917:772;;;;;:::o;3694:242::-;3747:5;3800:3;3793:4;3785:6;3781:17;3777:27;3767:55;;3818:1;3815;3808:12;3767:55;3840:90;3926:3;3917:6;3904:20;3897:4;3889:6;3885:17;3840:90;:::i;3941:655::-;4071:6;4079;4087;4095;4103;4156:3;4144:9;4135:7;4131:23;4127:33;4124:53;;;4173:1;4170;4163:12;4124:53;4196:29;4215:9;4196:29;:::i;:::-;4186:39;;4244:38;4278:2;4267:9;4263:18;4244:38;:::i;:::-;4234:48;;4301:38;4335:2;4324:9;4320:18;4301:38;:::i;:::-;4291:48;;4358:38;4392:2;4381:9;4377:18;4358:38;:::i;:::-;4348:48;;4447:3;4436:9;4432:19;4419:33;-1:-1:-1;;;;;4467:6:150;4464:30;4461:50;;;4507:1;4504;4497:12;4461:50;4530:60;4582:7;4573:6;4562:9;4558:22;4530:60;:::i;:::-;4520:70;;;3941:655;;;;;;;;:::o;4601:394::-;4678:6;4686;4739:2;4727:9;4718:7;4714:23;4710:32;4707:52;;;4755:1;4752;4745:12;4707:52;4778:29;4797:9;4778:29;:::i;:::-;4768:39;;4858:2;4847:9;4843:18;4830:32;-1:-1:-1;;;;;4877:6:150;4874:30;4871:50;;;4917:1;4914;4907:12;4871:50;4940:49;4981:7;4972:6;4961:9;4957:22;4940:49;:::i;:::-;4930:59;;;4601:394;;;;;:::o;5182:348::-;5234:8;5244:6;5298:3;5291:4;5283:6;5279:17;5275:27;5265:55;;5316:1;5313;5306:12;5265:55;-1:-1:-1;5339:20:150;;-1:-1:-1;;;;;5371:30:150;;5368:50;;;5414:1;5411;5404:12;5368:50;5451:4;5443:6;5439:17;5427:29;;5503:3;5496:4;5487:6;5479;5475:19;5471:30;5468:39;5465:59;;;5520:1;5517;5510:12;5465:59;5182:348;;;;;:::o;5535:411::-;5606:6;5614;5667:2;5655:9;5646:7;5642:23;5638:32;5635:52;;;5683:1;5680;5673:12;5635:52;5723:9;5710:23;-1:-1:-1;;;;;5748:6:150;5745:30;5742:50;;;5788:1;5785;5778:12;5742:50;5827:59;5878:7;5869:6;5858:9;5854:22;5827:59;:::i;:::-;5905:8;;5801:85;;-1:-1:-1;5535:411:150;-1:-1:-1;;;;5535:411:150:o;6133:375::-;6204:8;6214:6;6268:3;6261:4;6253:6;6249:17;6245:27;6235:55;;6286:1;6283;6276:12;6235:55;-1:-1:-1;6309:20:150;;-1:-1:-1;;;;;6341:30:150;;6338:50;;;6384:1;6381;6374:12;6338:50;6421:4;6413:6;6409:17;6397:29;;6481:3;6474:4;6464:6;6461:1;6457:14;6449:6;6445:27;6441:38;6438:47;6435:67;;;6498:1;6495;6488:12;6513:177;6594:5;6639:3;6630:6;6625:3;6621:16;6617:26;6614:46;;;6656:1;6653;6646:12;6614:46;-1:-1:-1;6678:6:150;6513:177;-1:-1:-1;6513:177:150:o;6695:1624::-;6914:6;6922;6930;6938;6946;6954;6962;6970;6978;7031:3;7019:9;7010:7;7006:23;7002:33;6999:53;;;7048:1;7045;7038:12;6999:53;7088:9;7075:23;-1:-1:-1;;;;;7158:2:150;7150:6;7147:14;7144:34;;;7174:1;7171;7164:12;7144:34;7213:59;7264:7;7255:6;7244:9;7240:22;7213:59;:::i;:::-;7291:8;;-1:-1:-1;7187:85:150;-1:-1:-1;7379:2:150;7364:18;;7351:32;;-1:-1:-1;7395:16:150;;;7392:36;;;7424:1;7421;7414:12;7392:36;7463:61;7516:7;7505:8;7494:9;7490:24;7463:61;:::i;:::-;7543:8;;-1:-1:-1;7437:87:150;-1:-1:-1;7631:2:150;7616:18;;7603:32;;-1:-1:-1;7647:16:150;;;7644:36;;;7676:1;7673;7666:12;7644:36;7715:61;7768:7;7757:8;7746:9;7742:24;7715:61;:::i;:::-;7795:8;;-1:-1:-1;7689:87:150;-1:-1:-1;7883:2:150;7868:18;;7855:32;;-1:-1:-1;7899:16:150;;;7896:36;;;7928:1;7925;7918:12;7896:36;7967:80;8039:7;8028:8;8017:9;8013:24;7967:80;:::i;:::-;8066:8;;-1:-1:-1;7941:106:150;-1:-1:-1;8154:3:150;8139:19;;8126:33;;-1:-1:-1;8171:16:150;;;8168:36;;;8200:1;8197;8190:12;8168:36;;8223:90;8305:7;8294:8;8283:9;8279:24;8223:90;:::i;:::-;8213:100;;;6695:1624;;;;;;;;;;;:::o;8509:250::-;8594:1;8604:113;8618:6;8615:1;8612:13;8604:113;;;8694:11;;;8688:18;8675:11;;;8668:39;8640:2;8633:10;8604:113;;;-1:-1:-1;;8751:1:150;8733:16;;8726:27;8509:250::o;8764:271::-;8806:3;8844:5;8838:12;8871:6;8866:3;8859:19;8887:76;8956:6;8949:4;8944:3;8940:14;8933:4;8926:5;8922:16;8887:76;:::i;:::-;9017:2;8996:15;-1:-1:-1;;8992:29:150;8983:39;;;;9024:4;8979:50;;8764:271;-1:-1:-1;;8764:271:150:o;9040:220::-;9189:2;9178:9;9171:21;9152:4;9209:45;9250:2;9239:9;9235:18;9227:6;9209:45;:::i;9265:457::-;9363:6;9371;9424:2;9412:9;9403:7;9399:23;9395:32;9392:52;;;9440:1;9437;9430:12;9392:52;9480:9;9467:23;-1:-1:-1;;;;;9505:6:150;9502:30;9499:50;;;9545:1;9542;9535:12;9499:50;9584:78;9654:7;9645:6;9634:9;9630:22;9584:78;:::i;9727:616::-;9779:3;9817:5;9811:12;9844:6;9839:3;9832:19;9870:4;9911:2;9906:3;9902:12;9936:11;9963;9956:18;;10013:6;10010:1;10006:14;9999:5;9995:26;9983:38;;10055:2;10048:5;10044:14;10076:1;10086:231;10100:6;10097:1;10094:13;10086:231;;;10171:5;10165:4;10161:16;10156:3;10149:29;10199:38;10232:4;10223:6;10217:13;10199:38;:::i;:::-;10295:12;;;;10191:46;-1:-1:-1;10260:15:150;;;;10122:1;10115:9;10086:231;;;-1:-1:-1;10333:4:150;;9727:616;-1:-1:-1;;;;;;;9727:616:150:o;10348:280::-;10547:2;10536:9;10529:21;10510:4;10567:55;10618:2;10607:9;10603:18;10595:6;10567:55;:::i;10633:334::-;10710:6;10718;10726;10779:2;10767:9;10758:7;10754:23;10750:32;10747:52;;;10795:1;10792;10785:12;10747:52;10818:29;10837:9;10818:29;:::i;:::-;10808:39;;10866:38;10900:2;10889:9;10885:18;10866:38;:::i;:::-;10856:48;;10923:38;10957:2;10946:9;10942:18;10923:38;:::i;:::-;10913:48;;10633:334;;;;;:::o;10972:408::-;11174:2;11156:21;;;11213:2;11193:18;;;11186:30;11252:34;11247:2;11232:18;;11225:62;-1:-1:-1;;;11318:2:150;11303:18;;11296:42;11370:3;11355:19;;10972:408::o;11385:::-;11587:2;11569:21;;;11626:2;11606:18;;;11599:30;11665:34;11660:2;11645:18;;11638:62;-1:-1:-1;;;11731:2:150;11716:18;;11709:42;11783:3;11768:19;;11385:408::o;12213:127::-;12274:10;12269:3;12265:20;12262:1;12255:31;12305:4;12302:1;12295:15;12329:4;12326:1;12319:15;12345:380;12424:1;12420:12;;;;12467;;;12488:61;;12542:4;12534:6;12530:17;12520:27;;12488:61;12595:2;12587:6;12584:14;12564:18;12561:38;12558:161;;12641:10;12636:3;12632:20;12629:1;12622:31;12676:4;12673:1;12666:15;12704:4;12701:1;12694:15;12856:545;12958:2;12953:3;12950:11;12947:448;;;12994:1;13019:5;13015:2;13008:17;13064:4;13060:2;13050:19;13134:2;13122:10;13118:19;13115:1;13111:27;13105:4;13101:38;13170:4;13158:10;13155:20;13152:47;;;-1:-1:-1;13193:4:150;13152:47;13248:2;13243:3;13239:12;13236:1;13232:20;13226:4;13222:31;13212:41;;13303:82;13321:2;13314:5;13311:13;13303:82;;;13366:17;;;13347:1;13336:13;13303:82;;13577:1352;13703:3;13697:10;-1:-1:-1;;;;;13722:6:150;13719:30;13716:56;;;13752:18;;:::i;:::-;13781:97;13871:6;13831:38;13863:4;13857:11;13831:38;:::i;:::-;13825:4;13781:97;:::i;:::-;13933:4;;13997:2;13986:14;;14014:1;14009:663;;;;14716:1;14733:6;14730:89;;;-1:-1:-1;14785:19:150;;;14779:26;14730:89;-1:-1:-1;;13534:1:150;13530:11;;;13526:24;13522:29;13512:40;13558:1;13554:11;;;13509:57;14832:81;;13979:944;;14009:663;12803:1;12796:14;;;12840:4;12827:18;;-1:-1:-1;;14045:20:150;;;14163:236;14177:7;14174:1;14171:14;14163:236;;;14266:19;;;14260:26;14245:42;;14358:27;;;;14326:1;14314:14;;;;14193:19;;14163:236;;;14167:3;14427:6;14418:7;14415:19;14412:201;;;14488:19;;;14482:26;-1:-1:-1;;14571:1:150;14567:14;;;14583:3;14563:24;14559:37;14555:42;14540:58;14525:74;;14412:201;-1:-1:-1;;;;;14659:1:150;14643:14;;;14639:22;14626:36;;-1:-1:-1;13577:1352:150:o;14934:232::-;14973:3;14994:17;;;14991:140;;15053:10;15048:3;15044:20;15041:1;15034:31;15088:4;15085:1;15078:15;15116:4;15113:1;15106:15;14991:140;-1:-1:-1;15158:1:150;15147:13;;14934:232::o;15795:271::-;15978:6;15970;15965:3;15952:33;15934:3;16004:16;;16029:13;;;16004:16;15795:271;-1:-1:-1;15795:271:150:o;16071:267::-;16160:6;16155:3;16148:19;16212:6;16205:5;16198:4;16193:3;16189:14;16176:43;-1:-1:-1;16264:1:150;16239:16;;;16257:4;16235:27;;;16228:38;;;;16320:2;16299:15;;;-1:-1:-1;;16295:29:150;16286:39;;;16282:50;;16071:267::o;16343:344::-;-1:-1:-1;;;;;16530:32:150;;16512:51;;16599:2;16594;16579:18;;16572:30;;;-1:-1:-1;;16619:62:150;;16662:18;;16654:6;16646;16619:62;:::i;16692:184::-;16762:6;16815:2;16803:9;16794:7;16790:23;16786:32;16783:52;;;16831:1;16828;16821:12;16783:52;-1:-1:-1;16854:16:150;;16692:184;-1:-1:-1;16692:184:150:o;17160:315::-;-1:-1:-1;;;;;17335:32:150;;17317:51;;17404:2;17399;17384:18;;17377:30;;;-1:-1:-1;;17424:45:150;;17450:18;;17442:6;17424:45;:::i;:::-;17416:53;17160:315;-1:-1:-1;;;;17160:315:150:o;17480:461::-;17533:3;17571:5;17565:12;17598:6;17593:3;17586:19;17624:4;17653:2;17648:3;17644:12;17637:19;;17690:2;17683:5;17679:14;17711:1;17721:195;17735:6;17732:1;17729:13;17721:195;;;17800:13;;-1:-1:-1;;;;;17796:39:150;17784:52;;17856:12;;;;17891:15;;;;17832:1;17750:9;17721:195;;;-1:-1:-1;17932:3:150;;17480:461;-1:-1:-1;;;;;17480:461:150:o;17946:812::-;18297:3;18286:9;18279:22;18260:4;18324:63;18382:3;18371:9;18367:19;18359:6;18351;18324:63;:::i;:::-;18435:9;18427:6;18423:22;18418:2;18407:9;18403:18;18396:50;18469;18512:6;18504;18496;18469:50;:::i;:::-;18455:64;;18567:9;18559:6;18555:22;18550:2;18539:9;18535:18;18528:50;18595:44;18632:6;18624;18595:44;:::i;:::-;-1:-1:-1;;;;;18675:32:150;;;;18670:2;18655:18;;18648:60;-1:-1:-1;;18739:3:150;18724:19;18717:35;18587:52;17946:812;-1:-1:-1;;;;;17946:812:150:o;18763:256::-;18901:9;18938:75;18998:14;18990:6;18983:5;18938:75;:::i;19024:2613::-;19091:5;19144:3;19137:4;19129:6;19125:17;19121:27;19111:55;;19162:1;19159;19152:12;19111:55;19198:6;19185:20;19224:4;19248:59;19264:42;19303:2;19264:42;:::i;19248:59::-;19341:15;;;19403:1;19443:11;;;19431:24;;19427:33;;;19372:12;;;;19329:3;19472:15;;;19469:35;;;19500:1;19497;19490:12;19469:35;19536:2;19528:6;19524:15;19548:2060;19564:6;19559:3;19556:15;19548:2060;;;19650:3;19637:17;-1:-1:-1;;;;;19727:2:150;19714:11;19711:19;19708:109;;;19771:1;19800:2;19796;19789:14;19708:109;19840:24;;;;19887:4;19915:12;;;-1:-1:-1;;19911:26:150;19907:35;-1:-1:-1;19904:125:150;;;19983:1;20012:2;20008;20001:14;19904:125;20055:22;;:::i;:::-;20104:31;20131:2;20127;20123:11;20104:31;:::i;:::-;20097:5;20090:46;20159:2;20218;20214;20210:11;20197:25;20192:2;20185:5;20181:14;20174:49;20247:2;20298:3;20294:2;20290:12;20277:26;20352:7;20345:15;20338:23;20329:7;20326:36;20316:137;;20405:1;20435:3;20430;20423:16;20316:137;20473:14;;;20466:31;20539:11;;;20526:25;;20567:16;;;20564:109;;;20625:1;20655:3;20650;20643:16;20564:109;20705:8;20701:2;20697:17;20686:28;;20755:3;20750:2;20745:3;20741:12;20737:22;20727:123;;20802:1;20791:12;;20832:3;20827;20820:16;20727:123;20896:2;20891:3;20887:12;20874:26;20863:37;;20926:60;20942:43;20981:3;20942:43;:::i;20926:60::-;21030:18;;;21126:12;;;21117:22;;21113:31;;;21070:14;;;;-1:-1:-1;21160:17:150;;;21157:110;;;21219:1;21249:3;21244;21237:16;21157:110;21293:12;;;;21318:174;21336:8;21329:5;21326:19;21318:174;;;21418:19;;21404:34;;21357:14;;;;21464;;;;21318:174;;;21512:15;;;21505:30;-1:-1:-1;21548:18:150;;-1:-1:-1;;;21586:12:150;;;;19581;;19548:2060;;;-1:-1:-1;21626:5:150;;19024:2613;-1:-1:-1;;;;;;;19024:2613:150:o;21642:667::-;21696:5;21749:3;21742:4;21734:6;21730:17;21726:27;21716:55;;21767:1;21764;21757:12;21716:55;21803:6;21790:20;21829:4;21853:59;21869:42;21908:2;21869:42;:::i;21853:59::-;21946:15;;;22032:1;22028:10;;;;22016:23;;22012:32;;;21977:12;;;;22056:15;;;22053:35;;;22084:1;22081;22074:12;22053:35;22120:2;22112:6;22108:15;22132:148;22148:6;22143:3;22140:15;22132:148;;;22214:23;22233:3;22214:23;:::i;:::-;22202:36;;22258:12;;;;22165;;22132:148;;;-1:-1:-1;22298:5:150;21642:667;-1:-1:-1;;;;;;21642:667:150:o;22314:1117::-;22460:9;22519:4;22511:5;22495:14;22491:26;22487:37;22484:57;;;22537:1;22534;22527:12;22484:57;22565:22;;:::i;:::-;22623:5;22610:19;-1:-1:-1;;;;;22689:2:150;22681:6;22678:14;22675:34;;;22705:1;22702;22695:12;22675:34;22734:52;22771:14;22762:6;22755:5;22751:18;22734:52;:::i;:::-;22725:7;22718:69;22836:2;22829:5;22825:14;22812:28;22796:44;;22865:2;22855:8;22852:16;22849:36;;;22881:1;22878;22871:12;22849:36;22919:65;22969:14;22958:8;22951:5;22947:20;22919:65;:::i;:::-;22914:2;22905:7;22901:16;22894:91;23034:2;23027:5;23023:14;23010:28;22994:44;;23063:2;23053:8;23050:16;23047:36;;;23079:1;23076;23069:12;23047:36;23117:79;23181:14;23170:8;23163:5;23159:20;23117:79;:::i;:::-;23112:2;23103:7;23099:16;23092:105;23246:2;23239:5;23235:14;23222:28;23206:44;;23275:2;23265:8;23262:16;23259:36;;;23291:1;23288;23281:12;23259:36;;23329:66;23380:14;23369:8;23362:5;23358:20;23329:66;:::i;:::-;23324:2;23311:16;;23304:92;-1:-1:-1;23315:7:150;22314:1117;-1:-1:-1;;22314:1117:150:o;23816:247::-;23975:2;23964:9;23957:21;23938:4;23995:62;24053:2;24042:9;24038:18;24030:6;24022;23995:62;:::i;24068:522::-;24146:4;24152:6;24212:11;24199:25;24306:2;24302:7;24291:8;24275:14;24271:29;24267:43;24247:18;24243:68;24233:96;;24325:1;24322;24315:12;24233:96;24352:33;;24404:20;;;-1:-1:-1;;;;;;24436:30:150;;24433:50;;;24479:1;24476;24469:12;24433:50;24512:4;24500:17;;-1:-1:-1;24543:14:150;24539:27;;;24529:38;;24526:58;;;24580:1;24577;24570:12;24595:1206;-1:-1:-1;;;;;24714:3:150;24711:27;24708:53;;;24741:18;;:::i;:::-;24770:94;24860:3;24820:38;24852:4;24846:11;24820:38;:::i;:::-;24814:4;24770:94;:::i;:::-;24890:1;24915:2;24910:3;24907:11;24932:1;24927:616;;;;25587:1;25604:3;25601:93;;;-1:-1:-1;25660:19:150;;;25647:33;25601:93;-1:-1:-1;;13534:1:150;13530:11;;;13526:24;13522:29;13512:40;13558:1;13554:11;;;13509:57;25707:78;;24900:895;;24927:616;12803:1;12796:14;;;12840:4;12827:18;;-1:-1:-1;;24963:17:150;;;25064:9;25086:229;25100:7;25097:1;25094:14;25086:229;;;25189:19;;;25176:33;25161:49;;25296:4;25281:20;;;;25249:1;25237:14;;;;25116:12;25086:229;;;25090:3;25343;25334:7;25331:16;25328:159;;;25467:1;25463:6;25457:3;25451;25448:1;25444:11;25440:21;25436:34;25432:39;25419:9;25414:3;25410:19;25397:33;25393:79;25385:6;25378:95;25328:159;;;25530:1;25524:3;25521:1;25517:11;25513:19;25507:4;25500:33;24900:895;;24595:1206;;;:::o;27227:407::-;27429:2;27411:21;;;27468:2;27448:18;;;27441:30;27507:34;27502:2;27487:18;;27480:62;-1:-1:-1;;;27573:2:150;27558:18;;27551:41;27624:3;27609:19;;27227:407::o;28360:1727::-;28566:4;28595:2;28635;28624:9;28620:18;28665:2;28654:9;28647:21;28688:6;28723;28717:13;28754:6;28746;28739:22;28780:2;28770:12;;28813:2;28802:9;28798:18;28791:25;;28875:2;28865:6;28862:1;28858:14;28847:9;28843:30;28839:39;28913:2;28905:6;28901:15;28934:1;28955;28965:1093;28981:6;28976:3;28973:15;28965:1093;;;29050:22;;;-1:-1:-1;;29046:36:150;29034:49;;29106:13;;29220:9;;-1:-1:-1;;;;;29216:35:150;29201:51;;29295:11;;;29289:18;29272:15;;;29265:43;29365:11;;;29359:18;29352:26;29345:34;29328:15;;;29321:59;29403:4;29446:11;;;29440:18;29142:4;29478:15;;;29471:27;;;29559:19;;29173:15;;;29591:24;;;29682:21;;;29239:3;29637:16;;;29727:1;;29741:209;29757:8;29752:3;29749:17;29741:209;;;29834:15;;29820:30;;29919:17;;;;29876:14;;;;29785:1;29776:11;;;;;29741:209;;;-1:-1:-1;;30036:12:150;;;;29973:5;-1:-1:-1;;30001:15:150;;;;29007:1;28998:11;28965:1093;;;-1:-1:-1;30075:6:150;;28360:1727;-1:-1:-1;;;;;;;;;28360:1727:150:o;30092:281::-;30211:1;30207;30202:3;30198:11;30194:19;30186:5;30180:12;30176:38;30171:3;30164:51;30146:3;30261:4;30254:5;30250:16;30244:23;30299:4;30292;30287:3;30283:14;30276:28;30320:47;30361:4;30356:3;30352:14;30338:12;30320:47;:::i;30378:640::-;30442:3;30480:5;30474:12;30507:6;30502:3;30495:19;30533:4;30574:2;30569:3;30565:12;30599:11;30626;30619:18;;30676:6;30673:1;30669:14;30662:5;30658:26;30646:38;;30718:2;30711:5;30707:14;30739:1;30749:243;30763:6;30760:1;30757:13;30749:243;;;30834:5;30828:4;30824:16;30819:3;30812:29;30862:50;30907:4;30898:6;30892:13;30862:50;:::i;:::-;30970:12;;;;30854:58;-1:-1:-1;30935:15:150;;;;30785:1;30778:9;30749:243;;31023:2033;31402:2;31391:9;31384:21;31365:4;31428:45;31469:2;31458:9;31454:18;31446:6;31428:45;:::i;:::-;31492:2;31542:9;31534:6;31530:22;31525:2;31514:9;31510:18;31503:50;31573:6;31608;31602:13;31639:6;31631;31624:22;31674:2;31666:6;31662:15;31655:22;;31696:1;31754:2;31744:6;31740:2;31736:15;31728:6;31724:28;31720:37;31776:1;31797:6;31793:2;31786:18;31841:2;31837;31827:17;31862:2;31873:1046;31887:6;31884:1;31881:13;31873:1046;;;31977:2;31973:7;31964:6;31956;31952:19;31948:33;31943:3;31936:46;32006:2;32044:6;32038:13;32080:36;32106:9;32080:36;:::i;:::-;32129:24;;;32176:1;32197:18;;;32228:167;;;;32413:1;32408:405;;;;32190:623;;32228:167;-1:-1:-1;;32277:24:150;;32260:15;;;32253:49;32357:16;;32350:24;32342:33;;32330:46;;32326:55;;;-1:-1:-1;32228:167:150;;32408:405;32444:6;32440:2;32433:18;32497:2;32493;32483:17;32528:2;32547:203;32563:8;32558:3;32555:17;32547:203;;;32675:7;32669:14;32664:2;32658:3;32650:6;32646:16;32642:25;32635:49;32729:2;32720:7;32716:16;32705:27;;32591:2;32586:3;32582:12;32575:19;;32547:203;;;32778:16;;32774:25;;;-1:-1:-1;;32190:623:150;-1:-1:-1;32897:12:150;;;;32836:3;;-1:-1:-1;;;32862:15:150;;;;;31909:1;31902:9;31873:1046;;;31877:3;;;32967:9;32959:6;32955:22;32950:2;32939:9;32935:18;32928:50;32995:55;33043:6;33035;32995:55;:::i;:::-;32987:63;31023:2033;-1:-1:-1;;;;;;;;;;;31023:2033:150:o;33061:261::-;33240:2;33229:9;33222:21;33203:4;33260:56;33312:2;33301:9;33297:18;33289:6;33260:56;:::i;33327:718::-;33712:2;33701:9;33694:21;33675:4;33738:45;33779:2;33768:9;33764:18;33756:6;33738:45;:::i;:::-;33831:9;33823:6;33819:22;33814:2;33803:9;33799:18;33792:50;33865:43;33901:6;33893;33865:43;:::i;:::-;33851:57;;33956:9;33948:6;33944:22;33939:2;33928:9;33924:18;33917:50;33984:55;34032:6;34024;33984:55;:::i;:::-;33976:63;33327:718;-1:-1:-1;;;;;;33327:718:150:o;34050:343::-;34267:6;34256:9;34249:25;34310:2;34305;34294:9;34290:18;34283:30;34230:4;34330:57;34383:2;34372:9;34368:18;34360:6;34330:57;:::i;34398:289::-;34529:3;34567:6;34561:13;34583:66;34642:6;34637:3;34630:4;34622:6;34618:17;34583:66;:::i;:::-;34665:16;;;;;34398:289;-1:-1:-1;;34398:289:150:o",
    "linkReferences": {},
    "immutableReferences": {
      "56097": [
>>>>>>> main
        {
          "start": 1196,
          "length": 32
        },
        {
          "start": 1272,
          "length": 32
        },
        {
          "start": 1938,
          "length": 32
        },
        {
          "start": 2005,
          "length": 32
        },
        {
          "start": 2161,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "SPACE_IMPLEMENTATION_ADDRESS()": "f21cd401",
    "SPACE_TOKEN_ADDRESS()": "683c72b6",
    "TOKEN_IMPLEMENTATION_ADDRESS()": "cfc27037",
    "USER_IMPLEMENTATION_ADDRESS()": "08bc0b4b",
    "addOwnerPermissions(string[])": "be8b5967",
    "createSpace(string,string,string,string[],(string,string[],(address,uint256,bool,uint256[])[],address[]))": "ad78faf3",
    "getOwnerPermissions()": "df2cd9fe",
    "getSpaceAddressByNetworkId(string)": "96dc21e4",
    "getTokenIdByNetworkId(string)": "8a9ef426",
    "initialize(address,address,address,address,string[])": "45bfa5b1",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "ownerPermissions(uint256)": "b28032f9",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "spaceByHash(bytes32)": "3312540a",
    "tokenByHash(bytes32)": "f3aba305",
    "transferOwnership(address)": "f2fde38b",
    "updateImplementations(address,address,address)": "dfc666ff",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
<<<<<<< HEAD
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameContainsInvalidCharacters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameLengthInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermissionAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpaceAlreadyRegistered\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SPACE_IMPLEMENTATION_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPACE_TOKEN_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_IMPLEMENTATION_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USER_IMPLEMENTATION_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_permissions\",\"type\":\"string[]\"}],\"name\":\"addOwnerPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"spaceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spaceNetworkId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_everyonePermissions\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"roleName\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"permissions\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSingleToken\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct DataTypes.ExternalToken[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"}],\"internalType\":\"struct DataTypes.CreateSpaceExtraEntitlements\",\"name\":\"_extraEntitlements\",\"type\":\"tuple\"}],\"name\":\"createSpace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_spaceAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerPermissions\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"spaceNetworkId\",\"type\":\"string\"}],\"name\":\"getSpaceAddressByNetworkId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"spaceNetworkId\",\"type\":\"string\"}],\"name\":\"getTokenIdByNetworkId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_space\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenEntitlement\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_userEntitlement\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spaceToken\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"_permissions\",\"type\":\"string[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerPermissions\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"spaceByHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tokenByHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_space\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenEntitlement\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_userEntitlement\",\"type\":\"address\"}],\"name\":\"updateImplementations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addOwnerPermissions(string[])\":{\"params\":{\"_permissions\":\"The permissions to add\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createSpace(string,string,string,string[],(string,string[],(address,uint256,bool,uint256[])[],address[]))\":{\"details\":\"The space network id must be unique\",\"params\":{\"_everyonePermissions\":\"The permissions of the everyone role\",\"_extraEntitlements\":\"The extra entitlements of the space\",\"spaceMetadata\":\"The metadata of the space\",\"spaceName\":\"The name of the space\",\"spaceNetworkId\":\"The network id of the space\"},\"returns\":{\"_spaceAddress\":\"The address of the new space\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"Added to allow future versions to add new variables in case this contract becomes      inherited. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addOwnerPermissions(string[])\":{\"notice\":\"Adds permissions to the owner role at space creation\"},\"createSpace(string,string,string,string[],(string,string[],(address,uint256,bool,uint256[])[],address[]))\":{\"notice\":\"Creates a new space\"},\"getOwnerPermissions()\":{\"notice\":\"Returns the initial owner permissions at space creation\"},\"getSpaceAddressByNetworkId(string)\":{\"notice\":\"Returns space address by network id\"},\"getTokenIdByNetworkId(string)\":{\"notice\":\"Returns token id by network id\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/core/spaces/SpaceFactory.sol\":\"SpaceFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":contracts/=contracts/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/core/spaces/Space.sol\":{\"keccak256\":\"0x00873a3b85c142f4fd4cff123671013180d0eb7744c0bfefc32e531c548f2c60\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a51d3e206d47f5e69c6afb40bc3f7422b11533efae593a49fa8165ef504556de\",\"dweb:/ipfs/QmVep63eEE2ZqmdXg5cdPQG3JMvPCxUfrU2PvoFVHsrySx\"]},\"contracts/src/core/spaces/SpaceFactory.sol\":{\"keccak256\":\"0xf3340a3c1b9f1f245e2acb670a7b1ac6816121d7724996f7782ce3647ea4df33\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4472932ab1fe683bd6d3d0e9b91771cb7952c8fa9c6458538317e0d96ab75fb4\",\"dweb:/ipfs/QmcXzbhT5QwQXs1kAeGPKv5DWw5Vs1MNaNrWfeEbKBetfL\"]},\"contracts/src/core/spaces/entitlements/TokenEntitlement.sol\":{\"keccak256\":\"0x5be95c6fa63a7e581de7107905f11bfc1e8b46c4778fb76da35ec031d528d9b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c31caedddd31297b87edca48a8b09fbd89ebb7efb43b30e25ed9c41c3ceba4e0\",\"dweb:/ipfs/QmSTYvR5SyYmnLeMLJh8RXREQNVa24yrMLvjEa86BLzR6x\"]},\"contracts/src/core/spaces/entitlements/UserEntitlement.sol\":{\"keccak256\":\"0x2cda60c1dd719e3e27726932b11199ade13a29af303c1e70836714c2e3452a14\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://631399a7485c2b077201c4b692bda3a3e335bcc714631a1d7e3ba41238831c63\",\"dweb:/ipfs/QmQ1eV7atXawYBxoWGXYNuwfC4uFgYGXJS4g3wRM68Ymwy\"]},\"contracts/src/core/tokens/SpaceOwner.sol\":{\"keccak256\":\"0x2f493a0008619ae97fe59a6e0b03157177db02c77184d331cd1d3f8ab7a522a8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://80ab0ea13bac0e03a5e6b185f6be3fec3693f4880a94d3f7aa69e15979f4c792\",\"dweb:/ipfs/QmZpUFruxGa7CKRnbYHAGrTaqYCcLVsgwTcK1hvcy5LTqi\"]},\"contracts/src/interfaces/IEntitlement.sol\":{\"keccak256\":\"0x6b5d1e8985e580580e397fead521e06f7359027b1ea323644497b5be2ec1869c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f045ea541b26bb122347aac6267a55b1c6a3f5078d57aa7dac7353cedc953d26\",\"dweb:/ipfs/QmRcnuqysKijmgNPsKC1LKnP3WVjV8ZsWPx778bNnsB7L7\"]},\"contracts/src/interfaces/ISpace.sol\":{\"keccak256\":\"0x7eeef224b80fde1f4f6a700804125ea9ac80f3baf2cf581db26ff5fd456dc617\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0907dea967ec81b3dabdf9bf0c79029ad7bda8fbf97b358eec315bd1639528ef\",\"dweb:/ipfs/QmUQYuQvToFeH46KjFfmvw3BijkbrG4dMATQaoKg4oudtH\"]},\"contracts/src/interfaces/ISpaceFactory.sol\":{\"keccak256\":\"0x1a159d5d622c05ce926a23067bd1b22d3bfa3af27b5738e38aa36c0cdd1caa0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c831ed9e0b3ac0baf2eaf785f4074ec44be8b0b996b9786ca45a03072a32ad83\",\"dweb:/ipfs/QmUs3Nor6tsqusyyN3w2ptrpdJH4c7HnEiqnC25jUdxBtr\"]},\"contracts/src/libraries/DataTypes.sol\":{\"keccak256\":\"0x20aaa270bef695e9140ea39e3c61747987617d70dc783a7b80484b990e33dd28\",\"license\":\"Apache-20\",\"urls\":[\"bzz-raw://d53673e9721e4d334e9041f84e2797d229351a96988c189d100ff04e4347e816\",\"dweb:/ipfs/QmdH4wwD3oek8N2JZrkC8JPmrpGvGV4CSYU4tutguB5xB5\"]},\"contracts/src/libraries/Errors.sol\":{\"keccak256\":\"0xa58c2c12ba0d81501a37a360097b07288341c582efee3787179f7ec7edc0509a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ef8c5a09ded0537b7c631ff38c1ee1a9eb6071cd2dfdcbbdbb8ff50fcf388ff\",\"dweb:/ipfs/QmTy1iNZfz69MCJwE1U9aDR4ZyKXujhmYUVrVjakSYFd8R\"]},\"contracts/src/libraries/Events.sol\":{\"keccak256\":\"0xf85630e7cf615f44c0e40ae2bc54fe617c7fb0ed9f5b5f2be305c1b893929281\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06c543e82bb8ac6121d0613cc405263cc6130563aae54cfa55a7958978664381\",\"dweb:/ipfs/QmV6z23bcZtTdeKxTeQZkym9syDXu1sd7mSjgiVDg1Nsnd\"]},\"contracts/src/libraries/Permissions.sol\":{\"keccak256\":\"0x1deeb80ca3a7d77dee37efa3165db7404c122d902b633257432c0367cb4b04ef\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c725f8146a3b2accc2bef98936013b7be45198bb33755cf34640525757b90673\",\"dweb:/ipfs/QmUjGiqNXAUmCNycFeZy1oicZyc6EgVmeCfAbMgSqDSwPy\"]},\"contracts/src/libraries/Utils.sol\":{\"keccak256\":\"0x0ecd26fe9fd11492c3d7e1d6e220603cc9efaa1886f9b197eaf1218636a85e0a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8fd940c467411e4fc03a2adccaf651fbc15e1cf75b80806ffe11fe9e21146f17\",\"dweb:/ipfs/QmbxRxTKi2t2i1YjmVP6RS4qbqpXzTzewxv6YdRrvUuUc4\"]},\"contracts/src/misc/MultiCaller.sol\":{\"keccak256\":\"0x327cfbd6b49c5baaef9ab213a1ca37f53dc3e232552d20af3d85946ef0d30872\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d790196392959f83a7e3949e469efdbe7c8179b2916f068392ef2b86c5da192\",\"dweb:/ipfs/QmSTcFLkpn147fi1GKpQmiYxCZyBzAY5xKzT9KxM7H91nk\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0\",\"dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xcf6837f68b5376c07f7b5130dc8de39f00f357f119113a82a15229bf2b96fdc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be1e3e05f79a714c08a446a994dba2939203092d7aa97302d7b2ab157b437fb\",\"dweb:/ipfs/QmdgBbHNijVgApRQ9UM17qds6QdhTgXxKHUoLAswA6VNyH\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xab6029e025f8da00444f741cdf6714301865d302450d24e7e8493cf27c709e2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e8109ef362b9426afb526a9280cb2de559c50fa2649b03b2cbc0ce4a7f9826c\",\"dweb:/ipfs/QmcC2XjeAHw6rgTywXDFNZt6qGv4ddTv6EhdkxYFXEoMAk\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol\":{\"keccak256\":\"0xb7f90ab8af7dae0bd4acfa088f9e606ea039110face097ca7c8beef563f71e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e980a0ad8d2f81f38d378994a80d46dbb0c46efed9799d6272f69b177e1f0f3c\",\"dweb:/ipfs/QmdgyvytrBV9RC6v8ojAnU9nFE1zPicdbGqHGskbopyHyn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xca0e780718bf80299ebf00e6852b6cda81a476e35bb39a83029aee03080c7bed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd9ccfa0e1c1b26b2fb1b0e279bdd5fe497a6b23266540ead345c275f3e190a\",\"dweb:/ipfs/QmRBSSoUAuWVE3AdbaDcCFwde3fYb1i4DGYWmquimNjGkp\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x622b1e5ba6b160cfccda15953f5040355fbd91428247decde191eb978eaafc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4db206433c87f5f161267e9d6908f0762c59a367c72c47e8676e2613791fd52\",\"dweb:/ipfs/QmbDmK1NGJqZyaYEmz8S1gGLCPyRAqYciwamMtk8thshEW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5b58c0def48629fb952407199c42b974af2c49cf554a5027312df3fbf05eec28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8975ab7fbe6959fe74eadf37be878879b87027541edcc97a88bfe44daf124410\",\"dweb:/ipfs/QmcSMJaQyBKCkVMJU1tzh3pwgzLx1oKtUBr2BJq3hHy1Zn\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a\",\"dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691\",\"dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x2cd251d89d8a49e146e681d44a4dd126924a3265333259a528dcfd76150df8fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3cb31df217eb7533f3a1e651486e62f2631877d88f4cf1df4844c8ae185079\",\"dweb:/ipfs/QmWr39ZLjM9USWsm5ewzGWJCRdMS8FtdkWPg7dGJt26zPr\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
=======
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameContainsInvalidCharacters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NameLengthInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PermissionAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpaceAlreadyRegistered\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SPACE_IMPLEMENTATION_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SPACE_TOKEN_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_IMPLEMENTATION_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USER_IMPLEMENTATION_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_permissions\",\"type\":\"string[]\"}],\"name\":\"addOwnerPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"spaceName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spaceNetworkId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"spaceMetadata\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_everyonePermissions\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"roleName\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"permissions\",\"type\":\"string[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isSingleToken\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct DataTypes.ExternalToken[]\",\"name\":\"tokens\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"}],\"internalType\":\"struct DataTypes.CreateSpaceExtraEntitlements\",\"name\":\"_extraEntitlements\",\"type\":\"tuple\"}],\"name\":\"createSpace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_spaceAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwnerPermissions\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"spaceNetworkId\",\"type\":\"string\"}],\"name\":\"getSpaceAddressByNetworkId\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"spaceNetworkId\",\"type\":\"string\"}],\"name\":\"getTokenIdByNetworkId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_space\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenEntitlement\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_userEntitlement\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spaceToken\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"_permissions\",\"type\":\"string[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerPermissions\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"spaceByHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tokenByHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_space\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenEntitlement\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_userEntitlement\",\"type\":\"address\"}],\"name\":\"updateImplementations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addOwnerPermissions(string[])\":{\"params\":{\"_permissions\":\"The permissions to add\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createSpace(string,string,string,string[],(string,string[],(address,uint256,bool,uint256[])[],address[]))\":{\"details\":\"The space network id must be unique\",\"params\":{\"_everyonePermissions\":\"The permissions of the everyone role\",\"_extraEntitlements\":\"The extra entitlements of the space\",\"spaceMetadata\":\"The metadata of the space\",\"spaceName\":\"The name of the space\",\"spaceNetworkId\":\"The network id of the space\"},\"returns\":{\"_spaceAddress\":\"The address of the new space\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"Added to allow future versions to add new variables in case this contract becomes      inherited. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addOwnerPermissions(string[])\":{\"notice\":\"Adds permissions to the owner role at space creation\"},\"createSpace(string,string,string,string[],(string,string[],(address,uint256,bool,uint256[])[],address[]))\":{\"notice\":\"Creates a new space\"},\"getOwnerPermissions()\":{\"notice\":\"Returns the initial owner permissions at space creation\"},\"getSpaceAddressByNetworkId(string)\":{\"notice\":\"Returns space address by network id\"},\"getTokenIdByNetworkId(string)\":{\"notice\":\"Returns token id by network id\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/core/spaces/SpaceFactory.sol\":\"SpaceFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":contracts/=contracts/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/core/spaces/Space.sol\":{\"keccak256\":\"0xcc04d61b5f0e166b77bf324ae93ffd7d88af590dae6a44af78207bda62336d6a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://bbc3a9d201042b79047f92deb870da7e13af1907f468ce5c6cd3d13ed62844c6\",\"dweb:/ipfs/QmZyHasCXtxREWDb57oTJVz3ZLRtBnzy46sZLXdAw1bUsN\"]},\"contracts/src/core/spaces/SpaceFactory.sol\":{\"keccak256\":\"0xf3340a3c1b9f1f245e2acb670a7b1ac6816121d7724996f7782ce3647ea4df33\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4472932ab1fe683bd6d3d0e9b91771cb7952c8fa9c6458538317e0d96ab75fb4\",\"dweb:/ipfs/QmcXzbhT5QwQXs1kAeGPKv5DWw5Vs1MNaNrWfeEbKBetfL\"]},\"contracts/src/core/spaces/entitlements/TokenEntitlement.sol\":{\"keccak256\":\"0x5be95c6fa63a7e581de7107905f11bfc1e8b46c4778fb76da35ec031d528d9b5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c31caedddd31297b87edca48a8b09fbd89ebb7efb43b30e25ed9c41c3ceba4e0\",\"dweb:/ipfs/QmSTYvR5SyYmnLeMLJh8RXREQNVa24yrMLvjEa86BLzR6x\"]},\"contracts/src/core/spaces/entitlements/UserEntitlement.sol\":{\"keccak256\":\"0x2cda60c1dd719e3e27726932b11199ade13a29af303c1e70836714c2e3452a14\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://631399a7485c2b077201c4b692bda3a3e335bcc714631a1d7e3ba41238831c63\",\"dweb:/ipfs/QmQ1eV7atXawYBxoWGXYNuwfC4uFgYGXJS4g3wRM68Ymwy\"]},\"contracts/src/core/tokens/SpaceOwner.sol\":{\"keccak256\":\"0x2f493a0008619ae97fe59a6e0b03157177db02c77184d331cd1d3f8ab7a522a8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://80ab0ea13bac0e03a5e6b185f6be3fec3693f4880a94d3f7aa69e15979f4c792\",\"dweb:/ipfs/QmZpUFruxGa7CKRnbYHAGrTaqYCcLVsgwTcK1hvcy5LTqi\"]},\"contracts/src/interfaces/IEntitlement.sol\":{\"keccak256\":\"0x6b5d1e8985e580580e397fead521e06f7359027b1ea323644497b5be2ec1869c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f045ea541b26bb122347aac6267a55b1c6a3f5078d57aa7dac7353cedc953d26\",\"dweb:/ipfs/QmRcnuqysKijmgNPsKC1LKnP3WVjV8ZsWPx778bNnsB7L7\"]},\"contracts/src/interfaces/ISpace.sol\":{\"keccak256\":\"0x62f7e7afea3330c30d616fb915cdd58d3c21d52bc9b3d3d04bfba691bbc564da\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e8db81a4dbf693165c830d3fe1ac34254a319b82933794427c67b7ea7bd60271\",\"dweb:/ipfs/QmWCpJqcVe16qGZBRC5bmLEJooxm8N5aep8XQRZqjZYhu4\"]},\"contracts/src/interfaces/ISpaceFactory.sol\":{\"keccak256\":\"0x1a159d5d622c05ce926a23067bd1b22d3bfa3af27b5738e38aa36c0cdd1caa0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c831ed9e0b3ac0baf2eaf785f4074ec44be8b0b996b9786ca45a03072a32ad83\",\"dweb:/ipfs/QmUs3Nor6tsqusyyN3w2ptrpdJH4c7HnEiqnC25jUdxBtr\"]},\"contracts/src/libraries/DataTypes.sol\":{\"keccak256\":\"0xb197af32e239bb8b7830e881ec6897cc8999c506e5eb5767a9392044714ac8aa\",\"license\":\"Apache-20\",\"urls\":[\"bzz-raw://d623ea6245d5a24e23b51f58d6b95fb07f2e08619fdc945b99d09d3794cc3dc6\",\"dweb:/ipfs/QmQomUMxCQ5ks4T176YQdHzqMiXE44J1Vqwmb5HRnLxFj6\"]},\"contracts/src/libraries/Errors.sol\":{\"keccak256\":\"0xa58c2c12ba0d81501a37a360097b07288341c582efee3787179f7ec7edc0509a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ef8c5a09ded0537b7c631ff38c1ee1a9eb6071cd2dfdcbbdbb8ff50fcf388ff\",\"dweb:/ipfs/QmTy1iNZfz69MCJwE1U9aDR4ZyKXujhmYUVrVjakSYFd8R\"]},\"contracts/src/libraries/Events.sol\":{\"keccak256\":\"0xf85630e7cf615f44c0e40ae2bc54fe617c7fb0ed9f5b5f2be305c1b893929281\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://06c543e82bb8ac6121d0613cc405263cc6130563aae54cfa55a7958978664381\",\"dweb:/ipfs/QmV6z23bcZtTdeKxTeQZkym9syDXu1sd7mSjgiVDg1Nsnd\"]},\"contracts/src/libraries/Permissions.sol\":{\"keccak256\":\"0x1deeb80ca3a7d77dee37efa3165db7404c122d902b633257432c0367cb4b04ef\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c725f8146a3b2accc2bef98936013b7be45198bb33755cf34640525757b90673\",\"dweb:/ipfs/QmUjGiqNXAUmCNycFeZy1oicZyc6EgVmeCfAbMgSqDSwPy\"]},\"contracts/src/libraries/Utils.sol\":{\"keccak256\":\"0x0ecd26fe9fd11492c3d7e1d6e220603cc9efaa1886f9b197eaf1218636a85e0a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8fd940c467411e4fc03a2adccaf651fbc15e1cf75b80806ffe11fe9e21146f17\",\"dweb:/ipfs/QmbxRxTKi2t2i1YjmVP6RS4qbqpXzTzewxv6YdRrvUuUc4\"]},\"contracts/src/misc/MultiCaller.sol\":{\"keccak256\":\"0x327cfbd6b49c5baaef9ab213a1ca37f53dc3e232552d20af3d85946ef0d30872\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d790196392959f83a7e3949e469efdbe7c8179b2916f068392ef2b86c5da192\",\"dweb:/ipfs/QmSTcFLkpn147fi1GKpQmiYxCZyBzAY5xKzT9KxM7H91nk\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2\",\"dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0\",\"dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xcf6837f68b5376c07f7b5130dc8de39f00f357f119113a82a15229bf2b96fdc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be1e3e05f79a714c08a446a994dba2939203092d7aa97302d7b2ab157b437fb\",\"dweb:/ipfs/QmdgBbHNijVgApRQ9UM17qds6QdhTgXxKHUoLAswA6VNyH\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xab6029e025f8da00444f741cdf6714301865d302450d24e7e8493cf27c709e2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e8109ef362b9426afb526a9280cb2de559c50fa2649b03b2cbc0ce4a7f9826c\",\"dweb:/ipfs/QmcC2XjeAHw6rgTywXDFNZt6qGv4ddTv6EhdkxYFXEoMAk\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol\":{\"keccak256\":\"0xb7f90ab8af7dae0bd4acfa088f9e606ea039110face097ca7c8beef563f71e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e980a0ad8d2f81f38d378994a80d46dbb0c46efed9799d6272f69b177e1f0f3c\",\"dweb:/ipfs/QmdgyvytrBV9RC6v8ojAnU9nFE1zPicdbGqHGskbopyHyn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xca0e780718bf80299ebf00e6852b6cda81a476e35bb39a83029aee03080c7bed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cd9ccfa0e1c1b26b2fb1b0e279bdd5fe497a6b23266540ead345c275f3e190a\",\"dweb:/ipfs/QmRBSSoUAuWVE3AdbaDcCFwde3fYb1i4DGYWmquimNjGkp\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x622b1e5ba6b160cfccda15953f5040355fbd91428247decde191eb978eaafc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4db206433c87f5f161267e9d6908f0762c59a367c72c47e8676e2613791fd52\",\"dweb:/ipfs/QmbDmK1NGJqZyaYEmz8S1gGLCPyRAqYciwamMtk8thshEW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5b58c0def48629fb952407199c42b974af2c49cf554a5027312df3fbf05eec28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8975ab7fbe6959fe74eadf37be878879b87027541edcc97a88bfe44daf124410\",\"dweb:/ipfs/QmcSMJaQyBKCkVMJU1tzh3pwgzLx1oKtUBr2BJq3hHy1Zn\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a\",\"dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691\",\"dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71\",\"dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x2cd251d89d8a49e146e681d44a4dd126924a3265333259a528dcfd76150df8fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da3cb31df217eb7533f3a1e651486e62f2631877d88f4cf1df4844c8ae185079\",\"dweb:/ipfs/QmWr39ZLjM9USWsm5ewzGWJCRdMS8FtdkWPg7dGJt26zPr\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
>>>>>>> main
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidParameters"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NameContainsInvalidCharacters"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NameLengthInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PermissionAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SpaceAlreadyRegistered"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SPACE_IMPLEMENTATION_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SPACE_TOKEN_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TOKEN_IMPLEMENTATION_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USER_IMPLEMENTATION_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string[]",
              "name": "_permissions",
              "type": "string[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addOwnerPermissions"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "spaceName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "spaceNetworkId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "spaceMetadata",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "_everyonePermissions",
              "type": "string[]"
            },
            {
              "internalType": "struct DataTypes.CreateSpaceExtraEntitlements",
              "name": "_extraEntitlements",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "roleName",
                  "type": "string"
                },
                {
                  "internalType": "string[]",
                  "name": "permissions",
                  "type": "string[]"
                },
                {
                  "internalType": "struct DataTypes.ExternalToken[]",
                  "name": "tokens",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "contractAddress",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "quantity",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSingleToken",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "tokenIds",
                      "type": "uint256[]"
                    }
                  ]
                },
                {
                  "internalType": "address[]",
                  "name": "users",
                  "type": "address[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createSpace",
          "outputs": [
            {
              "internalType": "address",
              "name": "_spaceAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOwnerPermissions",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "spaceNetworkId",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSpaceAddressByNetworkId",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "spaceNetworkId",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenIdByNetworkId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_space",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_tokenEntitlement",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_userEntitlement",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_spaceToken",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "_permissions",
              "type": "string[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerPermissions",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "spaceByHash",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenByHash",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_space",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_tokenEntitlement",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_userEntitlement",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateImplementations"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addOwnerPermissions(string[])": {
            "params": {
              "_permissions": "The permissions to add"
            }
          },
          "constructor": {
            "custom:oz-upgrades-unsafe-allow": "constructor"
          },
          "createSpace(string,string,string,string[],(string,string[],(address,uint256,bool,uint256[])[],address[]))": {
            "details": "The space network id must be unique",
            "params": {
              "_everyonePermissions": "The permissions of the everyone role",
              "_extraEntitlements": "The extra entitlements of the space",
              "spaceMetadata": "The metadata of the space",
              "spaceName": "The name of the space",
              "spaceNetworkId": "The network id of the space"
            },
            "returns": {
              "_spaceAddress": "The address of the new space"
            }
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addOwnerPermissions(string[])": {
            "notice": "Adds permissions to the owner role at space creation"
          },
          "createSpace(string,string,string,string[],(string,string[],(address,uint256,bool,uint256[])[],address[]))": {
            "notice": "Creates a new space"
          },
          "getOwnerPermissions()": {
            "notice": "Returns the initial owner permissions at space creation"
          },
          "getSpaceAddressByNetworkId(string)": {
            "notice": "Returns space address by network id"
          },
          "getTokenIdByNetworkId(string)": {
            "notice": "Returns token id by network id"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@opengsn/=node_modules/@opengsn/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":contracts/=contracts/",
        ":council/=lib/council/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/src/core/spaces/SpaceFactory.sol": "SpaceFactory"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/core/spaces/Space.sol": {
<<<<<<< HEAD
        "keccak256": "0x00873a3b85c142f4fd4cff123671013180d0eb7744c0bfefc32e531c548f2c60",
        "urls": [
          "bzz-raw://a51d3e206d47f5e69c6afb40bc3f7422b11533efae593a49fa8165ef504556de",
          "dweb:/ipfs/QmVep63eEE2ZqmdXg5cdPQG3JMvPCxUfrU2PvoFVHsrySx"
=======
        "keccak256": "0xcc04d61b5f0e166b77bf324ae93ffd7d88af590dae6a44af78207bda62336d6a",
        "urls": [
          "bzz-raw://bbc3a9d201042b79047f92deb870da7e13af1907f468ce5c6cd3d13ed62844c6",
          "dweb:/ipfs/QmZyHasCXtxREWDb57oTJVz3ZLRtBnzy46sZLXdAw1bUsN"
>>>>>>> main
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/core/spaces/SpaceFactory.sol": {
        "keccak256": "0xf3340a3c1b9f1f245e2acb670a7b1ac6816121d7724996f7782ce3647ea4df33",
        "urls": [
          "bzz-raw://4472932ab1fe683bd6d3d0e9b91771cb7952c8fa9c6458538317e0d96ab75fb4",
          "dweb:/ipfs/QmcXzbhT5QwQXs1kAeGPKv5DWw5Vs1MNaNrWfeEbKBetfL"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/core/spaces/entitlements/TokenEntitlement.sol": {
        "keccak256": "0x5be95c6fa63a7e581de7107905f11bfc1e8b46c4778fb76da35ec031d528d9b5",
        "urls": [
          "bzz-raw://c31caedddd31297b87edca48a8b09fbd89ebb7efb43b30e25ed9c41c3ceba4e0",
          "dweb:/ipfs/QmSTYvR5SyYmnLeMLJh8RXREQNVa24yrMLvjEa86BLzR6x"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/core/spaces/entitlements/UserEntitlement.sol": {
        "keccak256": "0x2cda60c1dd719e3e27726932b11199ade13a29af303c1e70836714c2e3452a14",
        "urls": [
          "bzz-raw://631399a7485c2b077201c4b692bda3a3e335bcc714631a1d7e3ba41238831c63",
          "dweb:/ipfs/QmQ1eV7atXawYBxoWGXYNuwfC4uFgYGXJS4g3wRM68Ymwy"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/core/tokens/SpaceOwner.sol": {
        "keccak256": "0x2f493a0008619ae97fe59a6e0b03157177db02c77184d331cd1d3f8ab7a522a8",
        "urls": [
          "bzz-raw://80ab0ea13bac0e03a5e6b185f6be3fec3693f4880a94d3f7aa69e15979f4c792",
          "dweb:/ipfs/QmZpUFruxGa7CKRnbYHAGrTaqYCcLVsgwTcK1hvcy5LTqi"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/IEntitlement.sol": {
        "keccak256": "0x6b5d1e8985e580580e397fead521e06f7359027b1ea323644497b5be2ec1869c",
        "urls": [
          "bzz-raw://f045ea541b26bb122347aac6267a55b1c6a3f5078d57aa7dac7353cedc953d26",
          "dweb:/ipfs/QmRcnuqysKijmgNPsKC1LKnP3WVjV8ZsWPx778bNnsB7L7"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/ISpace.sol": {
<<<<<<< HEAD
        "keccak256": "0x7eeef224b80fde1f4f6a700804125ea9ac80f3baf2cf581db26ff5fd456dc617",
        "urls": [
          "bzz-raw://0907dea967ec81b3dabdf9bf0c79029ad7bda8fbf97b358eec315bd1639528ef",
          "dweb:/ipfs/QmUQYuQvToFeH46KjFfmvw3BijkbrG4dMATQaoKg4oudtH"
=======
        "keccak256": "0x62f7e7afea3330c30d616fb915cdd58d3c21d52bc9b3d3d04bfba691bbc564da",
        "urls": [
          "bzz-raw://e8db81a4dbf693165c830d3fe1ac34254a319b82933794427c67b7ea7bd60271",
          "dweb:/ipfs/QmWCpJqcVe16qGZBRC5bmLEJooxm8N5aep8XQRZqjZYhu4"
>>>>>>> main
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/interfaces/ISpaceFactory.sol": {
        "keccak256": "0x1a159d5d622c05ce926a23067bd1b22d3bfa3af27b5738e38aa36c0cdd1caa0b",
        "urls": [
          "bzz-raw://c831ed9e0b3ac0baf2eaf785f4074ec44be8b0b996b9786ca45a03072a32ad83",
          "dweb:/ipfs/QmUs3Nor6tsqusyyN3w2ptrpdJH4c7HnEiqnC25jUdxBtr"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/DataTypes.sol": {
        "keccak256": "0xb197af32e239bb8b7830e881ec6897cc8999c506e5eb5767a9392044714ac8aa",
        "urls": [
          "bzz-raw://d623ea6245d5a24e23b51f58d6b95fb07f2e08619fdc945b99d09d3794cc3dc6",
          "dweb:/ipfs/QmQomUMxCQ5ks4T176YQdHzqMiXE44J1Vqwmb5HRnLxFj6"
        ],
        "license": "Apache-20"
      },
      "contracts/src/libraries/Errors.sol": {
        "keccak256": "0xa58c2c12ba0d81501a37a360097b07288341c582efee3787179f7ec7edc0509a",
        "urls": [
          "bzz-raw://9ef8c5a09ded0537b7c631ff38c1ee1a9eb6071cd2dfdcbbdbb8ff50fcf388ff",
          "dweb:/ipfs/QmTy1iNZfz69MCJwE1U9aDR4ZyKXujhmYUVrVjakSYFd8R"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/Events.sol": {
        "keccak256": "0xf85630e7cf615f44c0e40ae2bc54fe617c7fb0ed9f5b5f2be305c1b893929281",
        "urls": [
          "bzz-raw://06c543e82bb8ac6121d0613cc405263cc6130563aae54cfa55a7958978664381",
          "dweb:/ipfs/QmV6z23bcZtTdeKxTeQZkym9syDXu1sd7mSjgiVDg1Nsnd"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/libraries/Permissions.sol": {
        "keccak256": "0x1deeb80ca3a7d77dee37efa3165db7404c122d902b633257432c0367cb4b04ef",
        "urls": [
          "bzz-raw://c725f8146a3b2accc2bef98936013b7be45198bb33755cf34640525757b90673",
          "dweb:/ipfs/QmUjGiqNXAUmCNycFeZy1oicZyc6EgVmeCfAbMgSqDSwPy"
        ],
        "license": "UNLICENSED"
      },
      "contracts/src/libraries/Utils.sol": {
        "keccak256": "0x0ecd26fe9fd11492c3d7e1d6e220603cc9efaa1886f9b197eaf1218636a85e0a",
        "urls": [
          "bzz-raw://8fd940c467411e4fc03a2adccaf651fbc15e1cf75b80806ffe11fe9e21146f17",
          "dweb:/ipfs/QmbxRxTKi2t2i1YjmVP6RS4qbqpXzTzewxv6YdRrvUuUc4"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/misc/MultiCaller.sol": {
        "keccak256": "0x327cfbd6b49c5baaef9ab213a1ca37f53dc3e232552d20af3d85946ef0d30872",
        "urls": [
          "bzz-raw://7d790196392959f83a7e3949e469efdbe7c8179b2916f068392ef2b86c5da192",
          "dweb:/ipfs/QmSTcFLkpn147fi1GKpQmiYxCZyBzAY5xKzT9KxM7H91nk"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823",
        "urls": [
          "bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2",
          "dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549",
        "urls": [
          "bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0",
          "dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xcf6837f68b5376c07f7b5130dc8de39f00f357f119113a82a15229bf2b96fdc5",
        "urls": [
          "bzz-raw://6be1e3e05f79a714c08a446a994dba2939203092d7aa97302d7b2ab157b437fb",
          "dweb:/ipfs/QmdgBbHNijVgApRQ9UM17qds6QdhTgXxKHUoLAswA6VNyH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xab6029e025f8da00444f741cdf6714301865d302450d24e7e8493cf27c709e2f",
        "urls": [
          "bzz-raw://0e8109ef362b9426afb526a9280cb2de559c50fa2649b03b2cbc0ce4a7f9826c",
          "dweb:/ipfs/QmcC2XjeAHw6rgTywXDFNZt6qGv4ddTv6EhdkxYFXEoMAk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol": {
        "keccak256": "0xb7f90ab8af7dae0bd4acfa088f9e606ea039110face097ca7c8beef563f71e90",
        "urls": [
          "bzz-raw://e980a0ad8d2f81f38d378994a80d46dbb0c46efed9799d6272f69b177e1f0f3c",
          "dweb:/ipfs/QmdgyvytrBV9RC6v8ojAnU9nFE1zPicdbGqHGskbopyHyn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0",
        "urls": [
          "bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de",
          "dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a",
        "urls": [
          "bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3",
          "dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d",
        "urls": [
          "bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5",
          "dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0xca0e780718bf80299ebf00e6852b6cda81a476e35bb39a83029aee03080c7bed",
        "urls": [
          "bzz-raw://5cd9ccfa0e1c1b26b2fb1b0e279bdd5fe497a6b23266540ead345c275f3e190a",
          "dweb:/ipfs/QmRBSSoUAuWVE3AdbaDcCFwde3fYb1i4DGYWmquimNjGkp"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x622b1e5ba6b160cfccda15953f5040355fbd91428247decde191eb978eaafc39",
        "urls": [
          "bzz-raw://a4db206433c87f5f161267e9d6908f0762c59a367c72c47e8676e2613791fd52",
          "dweb:/ipfs/QmbDmK1NGJqZyaYEmz8S1gGLCPyRAqYciwamMtk8thshEW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x5b58c0def48629fb952407199c42b974af2c49cf554a5027312df3fbf05eec28",
        "urls": [
          "bzz-raw://8975ab7fbe6959fe74eadf37be878879b87027541edcc97a88bfe44daf124410",
          "dweb:/ipfs/QmcSMJaQyBKCkVMJU1tzh3pwgzLx1oKtUBr2BJq3hHy1Zn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886",
        "urls": [
          "bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a",
          "dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
        "keccak256": "0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038",
        "urls": [
          "bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691",
          "dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
        "urls": [
          "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
          "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x2cd251d89d8a49e146e681d44a4dd126924a3265333259a528dcfd76150df8fb",
        "urls": [
          "bzz-raw://da3cb31df217eb7533f3a1e651486e62f2631877d88f4cf1df4844c8ae185079",
          "dweb:/ipfs/QmWr39ZLjM9USWsm5ewzGWJCRdMS8FtdkWPg7dGJt26zPr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41",
        "urls": [
          "bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903",
          "dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/core/spaces/SpaceFactory.sol",
<<<<<<< HEAD
    "id": 6517,
    "exportedSymbols": {
      "DataTypes": [
        10171
      ],
      "ERC1967Proxy": [
        57973
      ],
      "ERC721HolderUpgradeable": [
        56328
      ],
      "Errors": [
        10226
      ],
      "Events": [
        10265
      ],
      "IEntitlement": [
        9798
      ],
      "ISpaceFactory": [
        10116
      ],
      "Initializable": [
        56043
      ],
      "OwnableUpgradeable": [
        55485
      ],
      "Permissions": [
        10310
      ],
      "ReentrancyGuardUpgradeable": [
        56263
      ],
      "Space": [
        5692
      ],
      "SpaceFactory": [
        6516
      ],
      "SpaceOwner": [
        9366
      ],
      "TokenEntitlement": [
        7813
      ],
      "UUPSUpgradeable": [
        56179
      ],
      "UserEntitlement": [
        8901
      ],
      "Utils": [
        10478
=======
    "id": 6552,
    "exportedSymbols": {
      "DataTypes": [
        10215
      ],
      "ERC1967Proxy": [
        57996
      ],
      "ERC721HolderUpgradeable": [
        56351
      ],
      "Errors": [
        10270
      ],
      "Events": [
        10309
      ],
      "IEntitlement": [
        9833
      ],
      "ISpaceFactory": [
        10151
      ],
      "Initializable": [
        56066
      ],
      "OwnableUpgradeable": [
        55508
      ],
      "Permissions": [
        10354
      ],
      "ReentrancyGuardUpgradeable": [
        56286
      ],
      "Space": [
        5727
      ],
      "SpaceFactory": [
        6551
      ],
      "SpaceOwner": [
        9401
      ],
      "TokenEntitlement": [
        7848
      ],
      "UUPSUpgradeable": [
        56202
      ],
      "UserEntitlement": [
        8936
      ],
      "Utils": [
        10522
>>>>>>> main
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:10117:14",
    "nodes": [
      {
<<<<<<< HEAD
        "id": 5694,
=======
        "id": 5729,
>>>>>>> main
        "nodeType": "PragmaDirective",
        "src": "39:23:14",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
<<<<<<< HEAD
        "id": 5696,
=======
        "id": 5731,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "82:73:14",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/ISpaceFactory.sol",
        "file": "contracts/src/interfaces/ISpaceFactory.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 10117,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5695,
              "name": "ISpaceFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10116,
=======
        "scope": 6552,
        "sourceUnit": 10152,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5730,
              "name": "ISpaceFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10151,
>>>>>>> main
              "src": "90:13:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5698,
=======
        "id": 5733,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "156:71:14",
        "nodes": [],
        "absolutePath": "contracts/src/interfaces/IEntitlement.sol",
        "file": "contracts/src/interfaces/IEntitlement.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 9799,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5697,
              "name": "IEntitlement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9798,
=======
        "scope": 6552,
        "sourceUnit": 9834,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5732,
              "name": "IEntitlement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9833,
>>>>>>> main
              "src": "164:12:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5700,
=======
        "id": 5735,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "246:68:14",
        "nodes": [],
        "absolutePath": "contracts/src/libraries/Permissions.sol",
        "file": "contracts/src/libraries/Permissions.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 10311,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5699,
              "name": "Permissions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10310,
=======
        "scope": 6552,
        "sourceUnit": 10355,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5734,
              "name": "Permissions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10354,
>>>>>>> main
              "src": "254:11:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5702,
=======
        "id": 5737,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "315:64:14",
        "nodes": [],
        "absolutePath": "contracts/src/libraries/DataTypes.sol",
        "file": "contracts/src/libraries/DataTypes.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 10172,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5701,
              "name": "DataTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10171,
=======
        "scope": 6552,
        "sourceUnit": 10216,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5736,
              "name": "DataTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10215,
>>>>>>> main
              "src": "323:9:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5704,
=======
        "id": 5739,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "380:58:14",
        "nodes": [],
        "absolutePath": "contracts/src/libraries/Events.sol",
        "file": "contracts/src/libraries/Events.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 10266,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5703,
              "name": "Events",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10265,
=======
        "scope": 6552,
        "sourceUnit": 10310,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5738,
              "name": "Events",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10309,
>>>>>>> main
              "src": "388:6:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5706,
=======
        "id": 5741,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "439:58:14",
        "nodes": [],
        "absolutePath": "contracts/src/libraries/Errors.sol",
        "file": "contracts/src/libraries/Errors.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 10227,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5705,
              "name": "Errors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10226,
=======
        "scope": 6552,
        "sourceUnit": 10271,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5740,
              "name": "Errors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10270,
>>>>>>> main
              "src": "447:6:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5708,
=======
        "id": 5743,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "498:56:14",
        "nodes": [],
        "absolutePath": "contracts/src/libraries/Utils.sol",
        "file": "contracts/src/libraries/Utils.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 10479,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5707,
              "name": "Utils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10478,
=======
        "scope": 6552,
        "sourceUnit": 10523,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5742,
              "name": "Utils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10522,
>>>>>>> main
              "src": "506:5:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5710,
=======
        "id": 5745,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "573:93:14",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 57974,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5709,
              "name": "ERC1967Proxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57973,
=======
        "scope": 6552,
        "sourceUnit": 57997,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5744,
              "name": "ERC1967Proxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57996,
>>>>>>> main
              "src": "581:12:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5712,
=======
        "id": 5747,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "667:95:14",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 56044,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5711,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56043,
=======
        "scope": 6552,
        "sourceUnit": 56067,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5746,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56066,
>>>>>>> main
              "src": "675:13:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5714,
=======
        "id": 5749,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "763:100:14",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 55486,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5713,
              "name": "OwnableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55485,
=======
        "scope": 6552,
        "sourceUnit": 55509,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5748,
              "name": "OwnableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55508,
>>>>>>> main
              "src": "771:18:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5716,
=======
        "id": 5751,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "864:118:14",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 56264,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5715,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56263,
=======
        "scope": 6552,
        "sourceUnit": 56287,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5750,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56286,
>>>>>>> main
              "src": "872:26:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5718,
=======
        "id": 5753,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "983:99:14",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 56180,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5717,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56179,
=======
        "scope": 6552,
        "sourceUnit": 56203,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5752,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56202,
>>>>>>> main
              "src": "991:15:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5720,
=======
        "id": 5755,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "1083:122:14",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 56329,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5719,
              "name": "ERC721HolderUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56328,
=======
        "scope": 6552,
        "sourceUnit": 56352,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5754,
              "name": "ERC721HolderUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56351,
>>>>>>> main
              "src": "1091:23:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5722,
=======
        "id": 5757,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "1207:69:14",
        "nodes": [],
        "absolutePath": "contracts/src/core/spaces/entitlements/TokenEntitlement.sol",
        "file": "./entitlements/TokenEntitlement.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 7814,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5721,
              "name": "TokenEntitlement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7813,
=======
        "scope": 6552,
        "sourceUnit": 7849,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5756,
              "name": "TokenEntitlement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7848,
>>>>>>> main
              "src": "1215:16:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5724,
=======
        "id": 5759,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "1277:67:14",
        "nodes": [],
        "absolutePath": "contracts/src/core/spaces/entitlements/UserEntitlement.sol",
        "file": "./entitlements/UserEntitlement.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 8902,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5723,
              "name": "UserEntitlement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8901,
=======
        "scope": 6552,
        "sourceUnit": 8937,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5758,
              "name": "UserEntitlement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8936,
>>>>>>> main
              "src": "1285:15:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5726,
=======
        "id": 5761,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "1345:34:14",
        "nodes": [],
        "absolutePath": "contracts/src/core/spaces/Space.sol",
        "file": "./Space.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 5693,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5725,
              "name": "Space",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5692,
=======
        "scope": 6552,
        "sourceUnit": 5728,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5760,
              "name": "Space",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5727,
>>>>>>> main
              "src": "1353:5:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 5728,
=======
        "id": 5763,
>>>>>>> main
        "nodeType": "ImportDirective",
        "src": "1380:68:14",
        "nodes": [],
        "absolutePath": "contracts/src/core/tokens/SpaceOwner.sol",
        "file": "contracts/src/core/tokens/SpaceOwner.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
        "scope": 6517,
        "sourceUnit": 9367,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5727,
              "name": "SpaceOwner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9366,
=======
        "scope": 6552,
        "sourceUnit": 9402,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5762,
              "name": "SpaceOwner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 9401,
>>>>>>> main
              "src": "1388:10:14",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
<<<<<<< HEAD
        "id": 6516,
=======
        "id": 6551,
>>>>>>> main
        "nodeType": "ContractDefinition",
        "src": "1450:8705:14",
        "nodes": [
          {
<<<<<<< HEAD
            "id": 5743,
=======
            "id": 5778,
>>>>>>> main
            "nodeType": "VariableDeclaration",
            "src": "1610:54:14",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "everyoneRoleName",
            "nameLocation": "1635:16:14",
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 5741,
=======
              "id": 5776,
>>>>>>> main
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1610:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "45766572796f6e65",
<<<<<<< HEAD
              "id": 5742,
=======
              "id": 5777,
>>>>>>> main
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1654:10:14",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_504b46dee56d00987224621cac5d12fa3a6ac89d666caa390fd4148151b9b738",
                "typeString": "literal_string \"Everyone\""
              },
              "value": "Everyone"
            },
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 5746,
=======
            "id": 5781,
>>>>>>> main
            "nodeType": "VariableDeclaration",
            "src": "1668:48:14",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ownerRoleName",
            "nameLocation": "1693:13:14",
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 5744,
=======
              "id": 5779,
>>>>>>> main
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1668:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4f776e6572",
<<<<<<< HEAD
              "id": 5745,
=======
              "id": 5780,
>>>>>>> main
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1709:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_929f3fd6848015f83b9210c89f7744e3941acae1195c8bf9f5798c090dc8f497",
                "typeString": "literal_string \"Owner\""
              },
              "value": "Owner"
            },
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 5748,
=======
            "id": 5783,
>>>>>>> main
            "nodeType": "VariableDeclaration",
            "src": "1721:43:14",
            "nodes": [],
            "constant": false,
            "functionSelector": "f21cd401",
            "mutability": "mutable",
            "name": "SPACE_IMPLEMENTATION_ADDRESS",
            "nameLocation": "1736:28:14",
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 5747,
=======
              "id": 5782,
>>>>>>> main
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1721:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "id": 5750,
=======
            "id": 5785,
>>>>>>> main
            "nodeType": "VariableDeclaration",
            "src": "1768:43:14",
            "nodes": [],
            "constant": false,
            "functionSelector": "cfc27037",
            "mutability": "mutable",
            "name": "TOKEN_IMPLEMENTATION_ADDRESS",
            "nameLocation": "1783:28:14",
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 5749,
=======
              "id": 5784,
>>>>>>> main
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1768:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "id": 5752,
=======
            "id": 5787,
>>>>>>> main
            "nodeType": "VariableDeclaration",
            "src": "1815:42:14",
            "nodes": [],
            "constant": false,
            "functionSelector": "08bc0b4b",
            "mutability": "mutable",
            "name": "USER_IMPLEMENTATION_ADDRESS",
            "nameLocation": "1830:27:14",
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 5751,
=======
              "id": 5786,
>>>>>>> main
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1815:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "id": 5754,
=======
            "id": 5789,
>>>>>>> main
            "nodeType": "VariableDeclaration",
            "src": "1861:34:14",
            "nodes": [],
            "constant": false,
            "functionSelector": "683c72b6",
            "mutability": "mutable",
            "name": "SPACE_TOKEN_ADDRESS",
            "nameLocation": "1876:19:14",
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 5753,
=======
              "id": 5788,
>>>>>>> main
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1861:7:14",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "id": 5757,
=======
            "id": 5792,
>>>>>>> main
            "nodeType": "VariableDeclaration",
            "src": "1900:32:14",
            "nodes": [],
            "constant": false,
            "functionSelector": "b28032f9",
            "mutability": "mutable",
            "name": "ownerPermissions",
            "nameLocation": "1916:16:14",
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
<<<<<<< HEAD
                "id": 5755,
=======
                "id": 5790,
>>>>>>> main
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1900:6:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
<<<<<<< HEAD
              "id": 5756,
=======
              "id": 5791,
>>>>>>> main
              "nodeType": "ArrayTypeName",
              "src": "1900:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "id": 5761,
=======
            "id": 5796,
>>>>>>> main
            "nodeType": "VariableDeclaration",
            "src": "1936:46:14",
            "nodes": [],
            "constant": false,
            "functionSelector": "3312540a",
            "mutability": "mutable",
            "name": "spaceByHash",
            "nameLocation": "1971:11:14",
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 5760,
              "keyType": {
                "id": 5758,
=======
              "id": 5795,
              "keyType": {
                "id": 5793,
>>>>>>> main
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1944:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1936:27:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 5759,
=======
                "id": 5794,
>>>>>>> main
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1955:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "id": 5765,
=======
            "id": 5800,
>>>>>>> main
            "nodeType": "VariableDeclaration",
            "src": "1986:46:14",
            "nodes": [],
            "constant": false,
            "functionSelector": "f3aba305",
            "mutability": "mutable",
            "name": "tokenByHash",
            "nameLocation": "2021:11:14",
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 5764,
              "keyType": {
                "id": 5762,
=======
              "id": 5799,
              "keyType": {
                "id": 5797,
>>>>>>> main
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1994:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1986:27:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
<<<<<<< HEAD
                "id": 5763,
=======
                "id": 5798,
>>>>>>> main
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2005:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "id": 5770,
=======
            "id": 5805,
>>>>>>> main
            "nodeType": "VariableDeclaration",
            "src": "2235:25:14",
            "nodes": [],
            "constant": false,
            "documentation": {
<<<<<<< HEAD
              "id": 5766,
=======
              "id": 5801,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "2037:195:14",
              "text": " @dev Added to allow future versions to add new variables in case this contract becomes\n      inherited. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "2255:5:14",
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
<<<<<<< HEAD
                "id": 5767,
=======
                "id": 5802,
>>>>>>> main
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2235:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
<<<<<<< HEAD
              "id": 5769,
              "length": {
                "hexValue": "3439",
                "id": 5768,
=======
              "id": 5804,
              "length": {
                "hexValue": "3439",
                "id": 5803,
>>>>>>> main
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2243:2:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "2235:11:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          },
          {
<<<<<<< HEAD
            "id": 5778,
=======
            "id": 5813,
>>>>>>> main
            "nodeType": "FunctionDefinition",
            "src": "2316:47:14",
            "nodes": [],
            "body": {
<<<<<<< HEAD
              "id": 5777,
=======
              "id": 5812,
>>>>>>> main
              "nodeType": "Block",
              "src": "2330:33:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
<<<<<<< HEAD
                      "id": 5774,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56024,
=======
                      "id": 5809,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56047,
>>>>>>> main
                      "src": "2336:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
<<<<<<< HEAD
                    "id": 5775,
=======
                    "id": 5810,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2336:22:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 5776,
=======
                  "id": 5811,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "2336:22:14"
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 5771,
=======
              "id": 5806,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "2265:48:14",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
<<<<<<< HEAD
              "id": 5772,
=======
              "id": 5807,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2327:2:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 5773,
=======
              "id": 5808,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2330:0:14"
            },
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
<<<<<<< HEAD
            "id": 5844,
=======
            "id": 5879,
>>>>>>> main
            "nodeType": "FunctionDefinition",
            "src": "2367:597:14",
            "nodes": [],
            "body": {
<<<<<<< HEAD
              "id": 5843,
=======
              "id": 5878,
>>>>>>> main
              "nodeType": "Block",
              "src": "2552:412:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
<<<<<<< HEAD
                      "id": 5794,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56061,
=======
                      "id": 5829,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56084,
>>>>>>> main
                      "src": "2558:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
<<<<<<< HEAD
                    "id": 5795,
=======
                    "id": 5830,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:24:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 5796,
=======
                  "id": 5831,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "2558:24:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
<<<<<<< HEAD
                      "id": 5797,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55380,
=======
                      "id": 5832,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55403,
>>>>>>> main
                      "src": "2588:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
<<<<<<< HEAD
                    "id": 5798,
=======
                    "id": 5833,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2588:16:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 5799,
=======
                  "id": 5834,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "2588:16:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
<<<<<<< HEAD
                      "id": 5800,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56202,
=======
                      "id": 5835,
                      "name": "__ReentrancyGuard_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56225,
>>>>>>> main
                      "src": "2610:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
<<<<<<< HEAD
                    "id": 5801,
=======
                    "id": 5836,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2610:24:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 5802,
=======
                  "id": 5837,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "2610:24:14"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
<<<<<<< HEAD
                      "id": 5803,
                      "name": "__ERC721Holder_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56296,
=======
                      "id": 5838,
                      "name": "__ERC721Holder_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56319,
>>>>>>> main
                      "src": "2640:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
<<<<<<< HEAD
                    "id": 5804,
=======
                    "id": 5839,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2640:21:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 5805,
=======
                  "id": 5840,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "2640:21:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 5808,
=======
                    "id": 5843,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 5806,
                      "name": "SPACE_IMPLEMENTATION_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5748,
=======
                      "id": 5841,
                      "name": "SPACE_IMPLEMENTATION_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5783,
>>>>>>> main
                      "src": "2668:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 5807,
                      "name": "_space",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5780,
=======
                      "id": 5842,
                      "name": "_space",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5815,
>>>>>>> main
                      "src": "2699:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2668:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 5809,
=======
                  "id": 5844,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "2668:37:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 5812,
=======
                    "id": 5847,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 5810,
                      "name": "TOKEN_IMPLEMENTATION_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5750,
=======
                      "id": 5845,
                      "name": "TOKEN_IMPLEMENTATION_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5785,
>>>>>>> main
                      "src": "2711:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 5811,
                      "name": "_tokenEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5782,
=======
                      "id": 5846,
                      "name": "_tokenEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5817,
>>>>>>> main
                      "src": "2742:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2711:48:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 5813,
=======
                  "id": 5848,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "2711:48:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 5816,
=======
                    "id": 5851,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 5814,
                      "name": "USER_IMPLEMENTATION_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5752,
=======
                      "id": 5849,
                      "name": "USER_IMPLEMENTATION_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5787,
>>>>>>> main
                      "src": "2765:27:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 5815,
                      "name": "_userEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5784,
=======
                      "id": 5850,
                      "name": "_userEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5819,
>>>>>>> main
                      "src": "2795:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2765:46:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 5817,
=======
                  "id": 5852,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "2765:46:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 5820,
=======
                    "id": 5855,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 5818,
                      "name": "SPACE_TOKEN_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5754,
=======
                      "id": 5853,
                      "name": "SPACE_TOKEN_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5789,
>>>>>>> main
                      "src": "2817:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 5819,
                      "name": "_spaceToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5786,
=======
                      "id": 5854,
                      "name": "_spaceToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5821,
>>>>>>> main
                      "src": "2839:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2817:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 5821,
=======
                  "id": 5856,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "2817:33:14"
                },
                {
                  "body": {
<<<<<<< HEAD
                    "id": 5841,
=======
                    "id": 5876,
>>>>>>> main
                    "nodeType": "Block",
                    "src": "2907:53:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
<<<<<<< HEAD
                                "id": 5836,
                                "name": "_permissions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5789,
=======
                                "id": 5871,
                                "name": "_permissions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5824,
>>>>>>> main
                                "src": "2937:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
<<<<<<< HEAD
                              "id": 5838,
                              "indexExpression": {
                                "id": 5837,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5823,
=======
                              "id": 5873,
                              "indexExpression": {
                                "id": 5872,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5858,
>>>>>>> main
                                "src": "2950:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2937:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
<<<<<<< HEAD
                              "id": 5833,
                              "name": "ownerPermissions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5757,
=======
                              "id": 5868,
                              "name": "ownerPermissions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5792,
>>>>>>> main
                              "src": "2915:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
<<<<<<< HEAD
                            "id": 5835,
=======
                            "id": 5870,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2932:4:14",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2915:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                              "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                            }
                          },
<<<<<<< HEAD
                          "id": 5839,
=======
                          "id": 5874,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2915:38:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< HEAD
                        "id": 5840,
=======
                        "id": 5875,
>>>>>>> main
                        "nodeType": "ExpressionStatement",
                        "src": "2915:38:14"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 5829,
=======
                    "id": 5864,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
<<<<<<< HEAD
                      "id": 5826,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5823,
=======
                      "id": 5861,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5858,
>>>>>>> main
                      "src": "2877:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
<<<<<<< HEAD
                        "id": 5827,
                        "name": "_permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5789,
=======
                        "id": 5862,
                        "name": "_permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5824,
>>>>>>> main
                        "src": "2881:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
<<<<<<< HEAD
                      "id": 5828,
=======
                      "id": 5863,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2894:6:14",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2881:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2877:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 5842,
                  "initializationExpression": {
                    "assignments": [
                      5823
=======
                  "id": 5877,
                  "initializationExpression": {
                    "assignments": [
                      5858
>>>>>>> main
                    ],
                    "declarations": [
                      {
                        "constant": false,
<<<<<<< HEAD
                        "id": 5823,
=======
                        "id": 5858,
>>>>>>> main
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2870:1:14",
                        "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                        "scope": 5842,
=======
                        "scope": 5877,
>>>>>>> main
                        "src": "2862:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
<<<<<<< HEAD
                          "id": 5822,
=======
                          "id": 5857,
>>>>>>> main
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2862:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
<<<<<<< HEAD
                    "id": 5825,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 5824,
=======
                    "id": 5860,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 5859,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2874:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2862:13:14"
                  },
                  "loopExpression": {
                    "expression": {
<<<<<<< HEAD
                      "id": 5831,
=======
                      "id": 5866,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2902:3:14",
                      "subExpression": {
<<<<<<< HEAD
                        "id": 5830,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5823,
=======
                        "id": 5865,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5858,
>>>>>>> main
                        "src": "2902:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "id": 5832,
=======
                    "id": 5867,
>>>>>>> main
                    "nodeType": "ExpressionStatement",
                    "src": "2902:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "2857:103:14"
                }
              ]
            },
            "functionSelector": "45bfa5b1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 5792,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5791,
=======
                "id": 5827,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5826,
>>>>>>> main
                  "name": "initializer",
                  "nameLocations": [
                    "2540:11:14"
                  ],
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 55945,
=======
                  "referencedDeclaration": 55968,
>>>>>>> main
                  "src": "2540:11:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "2540:11:14"
              }
            ],
            "name": "initialize",
            "nameLocation": "2376:10:14",
            "parameters": {
<<<<<<< HEAD
              "id": 5790,
=======
              "id": 5825,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5780,
=======
                  "id": 5815,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_space",
                  "nameLocation": "2400:6:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 5844,
=======
                  "scope": 5879,
>>>>>>> main
                  "src": "2392:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 5779,
=======
                    "id": 5814,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2392:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5782,
=======
                  "id": 5817,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_tokenEntitlement",
                  "nameLocation": "2420:17:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 5844,
=======
                  "scope": 5879,
>>>>>>> main
                  "src": "2412:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 5781,
=======
                    "id": 5816,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2412:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5784,
=======
                  "id": 5819,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_userEntitlement",
                  "nameLocation": "2451:16:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 5844,
=======
                  "scope": 5879,
>>>>>>> main
                  "src": "2443:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 5783,
=======
                    "id": 5818,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2443:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5786,
=======
                  "id": 5821,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_spaceToken",
                  "nameLocation": "2481:11:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 5844,
=======
                  "scope": 5879,
>>>>>>> main
                  "src": "2473:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 5785,
=======
                    "id": 5820,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2473:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5789,
=======
                  "id": 5824,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_permissions",
                  "nameLocation": "2514:12:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 5844,
=======
                  "scope": 5879,
>>>>>>> main
                  "src": "2498:28:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
<<<<<<< HEAD
                      "id": 5787,
=======
                      "id": 5822,
>>>>>>> main
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2498:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
<<<<<<< HEAD
                    "id": 5788,
=======
                    "id": 5823,
>>>>>>> main
                    "nodeType": "ArrayTypeName",
                    "src": "2498:8:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2386:144:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 5793,
=======
              "id": 5828,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2552:0:14"
            },
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
<<<<<<< HEAD
            "id": 5890,
=======
            "id": 5925,
>>>>>>> main
            "nodeType": "FunctionDefinition",
            "src": "3000:400:14",
            "nodes": [],
            "body": {
<<<<<<< HEAD
              "id": 5889,
=======
              "id": 5924,
>>>>>>> main
              "nodeType": "Block",
              "src": "3135:265:14",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
<<<<<<< HEAD
                    "id": 5861,
=======
                    "id": 5896,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
<<<<<<< HEAD
                      "id": 5856,
                      "name": "_space",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5847,
=======
                      "id": 5891,
                      "name": "_space",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5882,
>>>>>>> main
                      "src": "3145:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 5859,
=======
                          "id": 5894,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3163:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
<<<<<<< HEAD
                        "id": 5858,
=======
                        "id": 5893,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3155:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
<<<<<<< HEAD
                          "id": 5857,
=======
                          "id": 5892,
>>>>>>> main
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3155:7:14",
                          "typeDescriptions": {}
                        }
                      },
<<<<<<< HEAD
                      "id": 5860,
=======
                      "id": 5895,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3155:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3145:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 5866,
=======
                  "id": 5901,
>>>>>>> main
                  "nodeType": "IfStatement",
                  "src": "3141:63:14",
                  "trueBody": {
                    "expression": {
<<<<<<< HEAD
                      "id": 5864,
=======
                      "id": 5899,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
<<<<<<< HEAD
                        "id": 5862,
                        "name": "SPACE_IMPLEMENTATION_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5748,
=======
                        "id": 5897,
                        "name": "SPACE_IMPLEMENTATION_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5783,
>>>>>>> main
                        "src": "3167:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
<<<<<<< HEAD
                        "id": 5863,
                        "name": "_space",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5847,
=======
                        "id": 5898,
                        "name": "_space",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5882,
>>>>>>> main
                        "src": "3198:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3167:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "id": 5865,
=======
                    "id": 5900,
>>>>>>> main
                    "nodeType": "ExpressionStatement",
                    "src": "3167:37:14"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
<<<<<<< HEAD
                    "id": 5872,
=======
                    "id": 5907,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
<<<<<<< HEAD
                      "id": 5867,
                      "name": "_tokenEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5849,
=======
                      "id": 5902,
                      "name": "_tokenEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5884,
>>>>>>> main
                      "src": "3214:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 5870,
=======
                          "id": 5905,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3243:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
<<<<<<< HEAD
                        "id": 5869,
=======
                        "id": 5904,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3235:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
<<<<<<< HEAD
                          "id": 5868,
=======
                          "id": 5903,
>>>>>>> main
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3235:7:14",
                          "typeDescriptions": {}
                        }
                      },
<<<<<<< HEAD
                      "id": 5871,
=======
                      "id": 5906,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3235:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3214:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 5877,
=======
                  "id": 5912,
>>>>>>> main
                  "nodeType": "IfStatement",
                  "src": "3210:91:14",
                  "trueBody": {
                    "expression": {
<<<<<<< HEAD
                      "id": 5875,
=======
                      "id": 5910,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
<<<<<<< HEAD
                        "id": 5873,
                        "name": "TOKEN_IMPLEMENTATION_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5750,
=======
                        "id": 5908,
                        "name": "TOKEN_IMPLEMENTATION_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5785,
>>>>>>> main
                        "src": "3253:28:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
<<<<<<< HEAD
                        "id": 5874,
                        "name": "_tokenEntitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5849,
=======
                        "id": 5909,
                        "name": "_tokenEntitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5884,
>>>>>>> main
                        "src": "3284:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3253:48:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "id": 5876,
=======
                    "id": 5911,
>>>>>>> main
                    "nodeType": "ExpressionStatement",
                    "src": "3253:48:14"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
<<<<<<< HEAD
                    "id": 5883,
=======
                    "id": 5918,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
<<<<<<< HEAD
                      "id": 5878,
                      "name": "_userEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5851,
=======
                      "id": 5913,
                      "name": "_userEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5886,
>>>>>>> main
                      "src": "3311:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 5881,
=======
                          "id": 5916,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3339:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
<<<<<<< HEAD
                        "id": 5880,
=======
                        "id": 5915,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3331:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
<<<<<<< HEAD
                          "id": 5879,
=======
                          "id": 5914,
>>>>>>> main
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3331:7:14",
                          "typeDescriptions": {}
                        }
                      },
<<<<<<< HEAD
                      "id": 5882,
=======
                      "id": 5917,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3331:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3311:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 5888,
=======
                  "id": 5923,
>>>>>>> main
                  "nodeType": "IfStatement",
                  "src": "3307:88:14",
                  "trueBody": {
                    "expression": {
<<<<<<< HEAD
                      "id": 5886,
=======
                      "id": 5921,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
<<<<<<< HEAD
                        "id": 5884,
                        "name": "USER_IMPLEMENTATION_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5752,
=======
                        "id": 5919,
                        "name": "USER_IMPLEMENTATION_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5787,
>>>>>>> main
                        "src": "3349:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
<<<<<<< HEAD
                        "id": 5885,
                        "name": "_userEntitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5851,
=======
                        "id": 5920,
                        "name": "_userEntitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5886,
>>>>>>> main
                        "src": "3379:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3349:46:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "id": 5887,
=======
                    "id": 5922,
>>>>>>> main
                    "nodeType": "ExpressionStatement",
                    "src": "3349:46:14"
                  }
                }
              ]
            },
            "baseFunctions": [
<<<<<<< HEAD
              10067
            ],
            "documentation": {
              "id": 5845,
=======
              10102
            ],
            "documentation": {
              "id": 5880,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "2968:29:14",
              "text": "@inheritdoc ISpaceFactory"
            },
            "functionSelector": "dfc666ff",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 5854,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5853,
=======
                "id": 5889,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5888,
>>>>>>> main
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3125:9:14"
                  ],
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 55399,
=======
                  "referencedDeclaration": 55422,
>>>>>>> main
                  "src": "3125:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3125:9:14"
              }
            ],
            "name": "updateImplementations",
            "nameLocation": "3009:21:14",
            "parameters": {
<<<<<<< HEAD
              "id": 5852,
=======
              "id": 5887,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5847,
=======
                  "id": 5882,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_space",
                  "nameLocation": "3044:6:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 5890,
=======
                  "scope": 5925,
>>>>>>> main
                  "src": "3036:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 5846,
=======
                    "id": 5881,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3036:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5849,
=======
                  "id": 5884,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_tokenEntitlement",
                  "nameLocation": "3064:17:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 5890,
=======
                  "scope": 5925,
>>>>>>> main
                  "src": "3056:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 5848,
=======
                    "id": 5883,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3056:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5851,
=======
                  "id": 5886,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_userEntitlement",
                  "nameLocation": "3095:16:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 5890,
=======
                  "scope": 5925,
>>>>>>> main
                  "src": "3087:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 5850,
=======
                    "id": 5885,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3087:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3030:85:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 5855,
=======
              "id": 5890,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3135:0:14"
            },
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
<<<<<<< HEAD
            "id": 6126,
=======
            "id": 6161,
>>>>>>> main
            "nodeType": "FunctionDefinition",
            "src": "3436:2758:14",
            "nodes": [],
            "body": {
<<<<<<< HEAD
              "id": 6125,
=======
              "id": 6160,
>>>>>>> main
              "nodeType": "Block",
              "src": "3733:2461:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 5913,
                        "name": "spaceName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5893,
=======
                        "id": 5948,
                        "name": "spaceName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5928,
>>>>>>> main
                        "src": "3785:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 5910,
                        "name": "Utils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10478,
                        "src": "3766:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Utils_$10478_$",
                          "typeString": "type(library Utils)"
                        }
                      },
                      "id": 5912,
=======
                        "id": 5945,
                        "name": "Utils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10522,
                        "src": "3766:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Utils_$10522_$",
                          "typeString": "type(library Utils)"
                        }
                      },
                      "id": 5947,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3772:12:14",
                      "memberName": "validateName",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 10477,
=======
                      "referencedDeclaration": 10521,
>>>>>>> main
                      "src": "3766:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_calldata_ptr_$returns$__$",
                        "typeString": "function (string calldata) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 5914,
=======
                    "id": 5949,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3766:29:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 5915,
=======
                  "id": 5950,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "3766:29:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 5922,
=======
                    "id": 5957,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 5918,
                            "name": "spaceNetworkId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5895,
=======
                            "id": 5953,
                            "name": "spaceNetworkId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5930,
>>>>>>> main
                            "src": "3845:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
<<<<<<< HEAD
                          "id": 5917,
=======
                          "id": 5952,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3839:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 5916,
=======
                            "id": 5951,
>>>>>>> main
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3839:5:14",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 5919,
=======
                        "id": 5954,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3839:21:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
<<<<<<< HEAD
                      "id": 5920,
=======
                      "id": 5955,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3861:6:14",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3839:28:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 5921,
=======
                      "id": 5956,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3871:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3839:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 5929,
                  "nodeType": "IfStatement",
                  "src": "3835:87:14",
                  "trueBody": {
                    "id": 5928,
=======
                  "id": 5964,
                  "nodeType": "IfStatement",
                  "src": "3835:87:14",
                  "trueBody": {
                    "id": 5963,
>>>>>>> main
                    "nodeType": "Block",
                    "src": "3874:48:14",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
<<<<<<< HEAD
                              "id": 5923,
                              "name": "Errors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10226,
                              "src": "3889:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Errors_$10226_$",
                                "typeString": "type(library Errors)"
                              }
                            },
                            "id": 5925,
=======
                              "id": 5958,
                              "name": "Errors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10270,
                              "src": "3889:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Errors_$10270_$",
                                "typeString": "type(library Errors)"
                              }
                            },
                            "id": 5960,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3896:17:14",
                            "memberName": "InvalidParameters",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 10175,
=======
                            "referencedDeclaration": 10219,
>>>>>>> main
                            "src": "3889:24:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
<<<<<<< HEAD
                          "id": 5926,
=======
                          "id": 5961,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3889:26:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< HEAD
                        "id": 5927,
=======
                        "id": 5962,
>>>>>>> main
                        "nodeType": "RevertStatement",
                        "src": "3882:33:14"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    5931
=======
                    5966
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 5931,
=======
                      "id": 5966,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "_networkHash",
                      "nameLocation": "3963:12:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6125,
=======
                      "scope": 6160,
>>>>>>> main
                      "src": "3955:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 5930,
=======
                        "id": 5965,
>>>>>>> main
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3955:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 5938,
=======
                  "id": 5973,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 5935,
                            "name": "spaceNetworkId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5895,
=======
                            "id": 5970,
                            "name": "spaceNetworkId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5930,
>>>>>>> main
                            "src": "3994:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
<<<<<<< HEAD
                          "id": 5934,
=======
                          "id": 5969,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3988:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 5933,
=======
                            "id": 5968,
>>>>>>> main
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3988:5:14",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 5936,
=======
                        "id": 5971,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3988:21:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
<<<<<<< HEAD
                      "id": 5932,
=======
                      "id": 5967,
>>>>>>> main
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3978:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
<<<<<<< HEAD
                    "id": 5937,
=======
                    "id": 5972,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3978:32:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3955:55:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
<<<<<<< HEAD
                    "id": 5946,
=======
                    "id": 5981,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 5939,
                        "name": "spaceByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5761,
=======
                        "id": 5974,
                        "name": "spaceByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5796,
>>>>>>> main
                        "src": "4081:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
<<<<<<< HEAD
                      "id": 5941,
                      "indexExpression": {
                        "id": 5940,
                        "name": "_networkHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5931,
=======
                      "id": 5976,
                      "indexExpression": {
                        "id": 5975,
                        "name": "_networkHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5966,
>>>>>>> main
                        "src": "4093:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4081:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 5944,
=======
                          "id": 5979,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4118:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
<<<<<<< HEAD
                        "id": 5943,
=======
                        "id": 5978,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4110:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
<<<<<<< HEAD
                          "id": 5942,
=======
                          "id": 5977,
>>>>>>> main
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4110:7:14",
                          "typeDescriptions": {}
                        }
                      },
<<<<<<< HEAD
                      "id": 5945,
=======
                      "id": 5980,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4110:10:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4081:39:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 5953,
                  "nodeType": "IfStatement",
                  "src": "4077:98:14",
                  "trueBody": {
                    "id": 5952,
=======
                  "id": 5988,
                  "nodeType": "IfStatement",
                  "src": "4077:98:14",
                  "trueBody": {
                    "id": 5987,
>>>>>>> main
                    "nodeType": "Block",
                    "src": "4122:53:14",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
<<<<<<< HEAD
                              "id": 5947,
                              "name": "Errors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10226,
                              "src": "4137:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Errors_$10226_$",
                                "typeString": "type(library Errors)"
                              }
                            },
                            "id": 5949,
=======
                              "id": 5982,
                              "name": "Errors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10270,
                              "src": "4137:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Errors_$10270_$",
                                "typeString": "type(library Errors)"
                              }
                            },
                            "id": 5984,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4144:22:14",
                            "memberName": "SpaceAlreadyRegistered",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 10181,
=======
                            "referencedDeclaration": 10225,
>>>>>>> main
                            "src": "4137:29:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
<<<<<<< HEAD
                          "id": 5950,
=======
                          "id": 5985,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4137:31:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< HEAD
                        "id": 5951,
=======
                        "id": 5986,
>>>>>>> main
                        "nodeType": "RevertStatement",
                        "src": "4130:38:14"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    5955
=======
                    5990
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 5955,
=======
                      "id": 5990,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "_tokenId",
                      "nameLocation": "4220:8:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6125,
=======
                      "scope": 6160,
>>>>>>> main
                      "src": "4212:16:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 5954,
=======
                        "id": 5989,
>>>>>>> main
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4212:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 5966,
=======
                  "id": 6001,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 5962,
=======
                            "id": 5997,
>>>>>>> main
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4285:4:14",
                            "typeDescriptions": {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_SpaceFactory_$6516",
=======
                              "typeIdentifier": "t_contract$_SpaceFactory_$6551",
>>>>>>> main
                              "typeString": "contract SpaceFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_SpaceFactory_$6516",
                              "typeString": "contract SpaceFactory"
                            }
                          ],
                          "id": 5961,
=======
                              "typeIdentifier": "t_contract$_SpaceFactory_$6551",
                              "typeString": "contract SpaceFactory"
                            }
                          ],
                          "id": 5996,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4277:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 5960,
=======
                            "id": 5995,
>>>>>>> main
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4277:7:14",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 5963,
=======
                        "id": 5998,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4277:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 5964,
                        "name": "spaceMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5897,
=======
                        "id": 5999,
                        "name": "spaceMetadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5932,
>>>>>>> main
                        "src": "4298:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 5957,
                            "name": "SPACE_TOKEN_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5754,
=======
                            "id": 5992,
                            "name": "SPACE_TOKEN_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5789,
>>>>>>> main
                            "src": "4242:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
<<<<<<< HEAD
                          "id": 5956,
                          "name": "SpaceOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9366,
                          "src": "4231:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SpaceOwner_$9366_$",
                            "typeString": "type(contract SpaceOwner)"
                          }
                        },
                        "id": 5958,
=======
                          "id": 5991,
                          "name": "SpaceOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9401,
                          "src": "4231:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SpaceOwner_$9401_$",
                            "typeString": "type(contract SpaceOwner)"
                          }
                        },
                        "id": 5993,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4231:31:14",
                        "tryCall": false,
                        "typeDescriptions": {
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_SpaceOwner_$9366",
                          "typeString": "contract SpaceOwner"
                        }
                      },
                      "id": 5959,
=======
                          "typeIdentifier": "t_contract$_SpaceOwner_$9401",
                          "typeString": "contract SpaceOwner"
                        }
                      },
                      "id": 5994,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4263:6:14",
                      "memberName": "mintTo",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 9353,
=======
                      "referencedDeclaration": 9388,
>>>>>>> main
                      "src": "4231:38:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (address,string memory) external returns (uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 5965,
=======
                    "id": 6000,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4231:86:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4212:105:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 5971,
=======
                    "id": 6006,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 5967,
                        "name": "tokenByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5765,
=======
                        "id": 6002,
                        "name": "tokenByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5800,
>>>>>>> main
                        "src": "4356:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 5969,
                      "indexExpression": {
                        "id": 5968,
                        "name": "_networkHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5931,
=======
                      "id": 6004,
                      "indexExpression": {
                        "id": 6003,
                        "name": "_networkHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5966,
>>>>>>> main
                        "src": "4368:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4356:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 5970,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5955,
=======
                      "id": 6005,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5990,
>>>>>>> main
                      "src": "4384:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4356:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 5972,
=======
                  "id": 6007,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "4356:36:14"
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    5974
=======
                    6009
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 5974,
=======
                      "id": 6009,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "_tokenEntitlement",
                      "nameLocation": "4446:17:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6125,
=======
                      "scope": 6160,
>>>>>>> main
                      "src": "4438:25:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 5973,
=======
                        "id": 6008,
>>>>>>> main
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4438:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 5991,
=======
                  "id": 6026,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 5980,
                            "name": "TOKEN_IMPLEMENTATION_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5750,
=======
                            "id": 6015,
                            "name": "TOKEN_IMPLEMENTATION_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5785,
>>>>>>> main
                            "src": "4507:28:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
<<<<<<< HEAD
                                  "id": 5983,
                                  "name": "TokenEntitlement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7813,
                                  "src": "4571:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_TokenEntitlement_$7813_$",
                                    "typeString": "type(contract TokenEntitlement)"
                                  }
                                },
                                "id": 5984,
=======
                                  "id": 6018,
                                  "name": "TokenEntitlement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7848,
                                  "src": "4571:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_TokenEntitlement_$7848_$",
                                    "typeString": "type(contract TokenEntitlement)"
                                  }
                                },
                                "id": 6019,
>>>>>>> main
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4588:10:14",
                                "memberName": "initialize",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 6667,
=======
                                "referencedDeclaration": 6702,
>>>>>>> main
                                "src": "4571:27:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function TokenEntitlement.initialize(address,uint256)"
                                }
                              },
                              {
                                "components": [
                                  {
<<<<<<< HEAD
                                    "id": 5985,
                                    "name": "SPACE_TOKEN_ADDRESS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5754,
=======
                                    "id": 6020,
                                    "name": "SPACE_TOKEN_ADDRESS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5789,
>>>>>>> main
                                    "src": "4611:19:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
<<<<<<< HEAD
                                    "id": 5986,
                                    "name": "_tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5955,
=======
                                    "id": 6021,
                                    "name": "_tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5990,
>>>>>>> main
                                    "src": "4632:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
<<<<<<< HEAD
                                "id": 5987,
=======
                                "id": 6022,
>>>>>>> main
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4610:31:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                  "typeString": "tuple(address,uint256)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function TokenEntitlement.initialize(address,uint256)"
                                },
                                {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                  "typeString": "tuple(address,uint256)"
                                }
                              ],
                              "expression": {
<<<<<<< HEAD
                                "id": 5981,
=======
                                "id": 6016,
>>>>>>> main
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4545:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
<<<<<<< HEAD
                              "id": 5982,
=======
                              "id": 6017,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4549:10:14",
                              "memberName": "encodeCall",
                              "nodeType": "MemberAccess",
                              "src": "4545:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
<<<<<<< HEAD
                            "id": 5988,
=======
                            "id": 6023,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4545:106:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
<<<<<<< HEAD
                          "id": 5979,
=======
                          "id": 6014,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "4481:16:14",
                          "typeDescriptions": {
<<<<<<< HEAD
                            "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$57973_$",
                            "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                          },
                          "typeName": {
                            "id": 5978,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 5977,
=======
                            "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$57996_$",
                            "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                          },
                          "typeName": {
                            "id": 6013,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 6012,
>>>>>>> main
                              "name": "ERC1967Proxy",
                              "nameLocations": [
                                "4485:12:14"
                              ],
                              "nodeType": "IdentifierPath",
<<<<<<< HEAD
                              "referencedDeclaration": 57973,
                              "src": "4485:12:14"
                            },
                            "referencedDeclaration": 57973,
                            "src": "4485:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC1967Proxy_$57973",
=======
                              "referencedDeclaration": 57996,
                              "src": "4485:12:14"
                            },
                            "referencedDeclaration": 57996,
                            "src": "4485:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC1967Proxy_$57996",
>>>>>>> main
                              "typeString": "contract ERC1967Proxy"
                            }
                          }
                        },
<<<<<<< HEAD
                        "id": 5989,
=======
                        "id": 6024,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4481:178:14",
                        "tryCall": false,
                        "typeDescriptions": {
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_ERC1967Proxy_$57973",
=======
                          "typeIdentifier": "t_contract$_ERC1967Proxy_$57996",
>>>>>>> main
                          "typeString": "contract ERC1967Proxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_ERC1967Proxy_$57973",
                          "typeString": "contract ERC1967Proxy"
                        }
                      ],
                      "id": 5976,
=======
                          "typeIdentifier": "t_contract$_ERC1967Proxy_$57996",
                          "typeString": "contract ERC1967Proxy"
                        }
                      ],
                      "id": 6011,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4466:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 5975,
=======
                        "id": 6010,
>>>>>>> main
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4466:7:14",
                        "typeDescriptions": {}
                      }
                    },
<<<<<<< HEAD
                    "id": 5990,
=======
                    "id": 6025,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4466:199:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4438:227:14"
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    5993
=======
                    6028
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 5993,
=======
                      "id": 6028,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "_userEntitlement",
                      "nameLocation": "4718:16:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6125,
=======
                      "scope": 6160,
>>>>>>> main
                      "src": "4710:24:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 5992,
=======
                        "id": 6027,
>>>>>>> main
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4710:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 6010,
=======
                  "id": 6045,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 5999,
                            "name": "USER_IMPLEMENTATION_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5752,
=======
                            "id": 6034,
                            "name": "USER_IMPLEMENTATION_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5787,
>>>>>>> main
                            "src": "4778:27:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
<<<<<<< HEAD
                                  "id": 6002,
                                  "name": "UserEntitlement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8901,
                                  "src": "4841:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_UserEntitlement_$8901_$",
                                    "typeString": "type(contract UserEntitlement)"
                                  }
                                },
                                "id": 6003,
=======
                                  "id": 6037,
                                  "name": "UserEntitlement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8936,
                                  "src": "4841:15:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_UserEntitlement_$8936_$",
                                    "typeString": "type(contract UserEntitlement)"
                                  }
                                },
                                "id": 6038,
>>>>>>> main
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4857:10:14",
                                "memberName": "initialize",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 7957,
=======
                                "referencedDeclaration": 7992,
>>>>>>> main
                                "src": "4841:26:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function UserEntitlement.initialize(address,uint256)"
                                }
                              },
                              {
                                "components": [
                                  {
<<<<<<< HEAD
                                    "id": 6004,
                                    "name": "SPACE_TOKEN_ADDRESS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5754,
=======
                                    "id": 6039,
                                    "name": "SPACE_TOKEN_ADDRESS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5789,
>>>>>>> main
                                    "src": "4880:19:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
<<<<<<< HEAD
                                    "id": 6005,
                                    "name": "_tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5955,
=======
                                    "id": 6040,
                                    "name": "_tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5990,
>>>>>>> main
                                    "src": "4901:8:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
<<<<<<< HEAD
                                "id": 6006,
=======
                                "id": 6041,
>>>>>>> main
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4879:31:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                  "typeString": "tuple(address,uint256)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function UserEntitlement.initialize(address,uint256)"
                                },
                                {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                                  "typeString": "tuple(address,uint256)"
                                }
                              ],
                              "expression": {
<<<<<<< HEAD
                                "id": 6000,
=======
                                "id": 6035,
>>>>>>> main
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4815:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
<<<<<<< HEAD
                              "id": 6001,
=======
                              "id": 6036,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4819:10:14",
                              "memberName": "encodeCall",
                              "nodeType": "MemberAccess",
                              "src": "4815:14:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
<<<<<<< HEAD
                            "id": 6007,
=======
                            "id": 6042,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4815:105:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
<<<<<<< HEAD
                          "id": 5998,
=======
                          "id": 6033,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "4752:16:14",
                          "typeDescriptions": {
<<<<<<< HEAD
                            "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$57973_$",
                            "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                          },
                          "typeName": {
                            "id": 5997,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 5996,
=======
                            "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$57996_$",
                            "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                          },
                          "typeName": {
                            "id": 6032,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 6031,
>>>>>>> main
                              "name": "ERC1967Proxy",
                              "nameLocations": [
                                "4756:12:14"
                              ],
                              "nodeType": "IdentifierPath",
<<<<<<< HEAD
                              "referencedDeclaration": 57973,
                              "src": "4756:12:14"
                            },
                            "referencedDeclaration": 57973,
                            "src": "4756:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC1967Proxy_$57973",
=======
                              "referencedDeclaration": 57996,
                              "src": "4756:12:14"
                            },
                            "referencedDeclaration": 57996,
                            "src": "4756:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC1967Proxy_$57996",
>>>>>>> main
                              "typeString": "contract ERC1967Proxy"
                            }
                          }
                        },
<<<<<<< HEAD
                        "id": 6008,
=======
                        "id": 6043,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4752:176:14",
                        "tryCall": false,
                        "typeDescriptions": {
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_ERC1967Proxy_$57973",
=======
                          "typeIdentifier": "t_contract$_ERC1967Proxy_$57996",
>>>>>>> main
                          "typeString": "contract ERC1967Proxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_ERC1967Proxy_$57973",
                          "typeString": "contract ERC1967Proxy"
                        }
                      ],
                      "id": 5995,
=======
                          "typeIdentifier": "t_contract$_ERC1967Proxy_$57996",
                          "typeString": "contract ERC1967Proxy"
                        }
                      ],
                      "id": 6030,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4737:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 5994,
=======
                        "id": 6029,
>>>>>>> main
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4737:7:14",
                        "typeDescriptions": {}
                      }
                    },
<<<<<<< HEAD
                    "id": 6009,
=======
                    "id": 6044,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4737:197:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4710:224:14"
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    6015
=======
                    6050
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 6015,
=======
                      "id": 6050,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "_entitlements",
                      "nameLocation": "4958:13:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6125,
=======
                      "scope": 6160,
>>>>>>> main
                      "src": "4941:30:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6013,
=======
                          "id": 6048,
>>>>>>> main
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4941:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "id": 6014,
=======
                        "id": 6049,
>>>>>>> main
                        "nodeType": "ArrayTypeName",
                        "src": "4941:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 6021,
=======
                  "id": 6056,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
<<<<<<< HEAD
                        "id": 6019,
=======
                        "id": 6054,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4988:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
<<<<<<< HEAD
                      "id": 6018,
=======
                      "id": 6053,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4974:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6016,
=======
                          "id": 6051,
>>>>>>> main
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4978:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "id": 6017,
=======
                        "id": 6052,
>>>>>>> main
                        "nodeType": "ArrayTypeName",
                        "src": "4978:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 6020,
=======
                    "id": 6055,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4974:16:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4941:49:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 6026,
=======
                    "id": 6061,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 6022,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6015,
=======
                        "id": 6057,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6050,
>>>>>>> main
                        "src": "4996:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
<<<<<<< HEAD
                      "id": 6024,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6023,
=======
                      "id": 6059,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6058,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5010:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4996:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 6025,
                      "name": "_tokenEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5974,
=======
                      "id": 6060,
                      "name": "_tokenEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6009,
>>>>>>> main
                      "src": "5015:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4996:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 6027,
=======
                  "id": 6062,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "4996:36:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 6032,
=======
                    "id": 6067,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 6028,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6015,
=======
                        "id": 6063,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6050,
>>>>>>> main
                        "src": "5038:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
<<<<<<< HEAD
                      "id": 6030,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 6029,
=======
                      "id": 6065,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 6064,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5052:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5038:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 6031,
                      "name": "_userEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5993,
=======
                      "id": 6066,
                      "name": "_userEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6028,
>>>>>>> main
                      "src": "5057:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5038:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 6033,
=======
                  "id": 6068,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "5038:35:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 6054,
=======
                    "id": 6089,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
<<<<<<< HEAD
                      "id": 6034,
                      "name": "_spaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5908,
=======
                      "id": 6069,
                      "name": "_spaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5943,
>>>>>>> main
                      "src": "5113:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 6040,
                              "name": "SPACE_IMPLEMENTATION_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5748,
=======
                              "id": 6075,
                              "name": "SPACE_IMPLEMENTATION_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5783,
>>>>>>> main
                              "src": "5170:28:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
<<<<<<< HEAD
                                    "id": 6043,
                                    "name": "Space",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5692,
                                    "src": "5234:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Space_$5692_$",
                                      "typeString": "type(contract Space)"
                                    }
                                  },
                                  "id": 6044,
=======
                                    "id": 6078,
                                    "name": "Space",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5727,
                                    "src": "5234:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Space_$5727_$",
                                      "typeString": "type(contract Space)"
                                    }
                                  },
                                  "id": 6079,
>>>>>>> main
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "5240:10:14",
                                  "memberName": "initialize",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3807,
                                  "src": "5234:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function Space.initialize(string memory,string memory,address[] memory,address,uint256)"
                                  }
                                },
                                {
                                  "components": [
                                    {
<<<<<<< HEAD
                                      "id": 6045,
                                      "name": "spaceName",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5893,
=======
                                      "id": 6080,
                                      "name": "spaceName",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5928,
>>>>>>> main
                                      "src": "5276:9:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    },
                                    {
<<<<<<< HEAD
                                      "id": 6046,
                                      "name": "spaceNetworkId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5895,
=======
                                      "id": 6081,
                                      "name": "spaceNetworkId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5930,
>>>>>>> main
                                      "src": "5299:14:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    },
                                    {
<<<<<<< HEAD
                                      "id": 6047,
                                      "name": "_entitlements",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6015,
=======
                                      "id": 6082,
                                      "name": "_entitlements",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6050,
>>>>>>> main
                                      "src": "5327:13:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    {
<<<<<<< HEAD
                                      "id": 6048,
                                      "name": "SPACE_TOKEN_ADDRESS",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5754,
=======
                                      "id": 6083,
                                      "name": "SPACE_TOKEN_ADDRESS",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5789,
>>>>>>> main
                                      "src": "5354:19:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
<<<<<<< HEAD
                                      "id": 6049,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5955,
=======
                                      "id": 6084,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5990,
>>>>>>> main
                                      "src": "5387:8:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
<<<<<<< HEAD
                                  "id": 6050,
=======
                                  "id": 6085,
>>>>>>> main
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5262:145:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_string_calldata_ptr_$_t_string_calldata_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(string calldata,string calldata,address[] memory,address,uint256)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function Space.initialize(string memory,string memory,address[] memory,address,uint256)"
                                  },
                                  {
                                    "typeIdentifier": "t_tuple$_t_string_calldata_ptr_$_t_string_calldata_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$",
                                    "typeString": "tuple(string calldata,string calldata,address[] memory,address,uint256)"
                                  }
                                ],
                                "expression": {
<<<<<<< HEAD
                                  "id": 6041,
=======
                                  "id": 6076,
>>>>>>> main
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5208:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
<<<<<<< HEAD
                                "id": 6042,
=======
                                "id": 6077,
>>>>>>> main
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "5212:10:14",
                                "memberName": "encodeCall",
                                "nodeType": "MemberAccess",
                                "src": "5208:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
<<<<<<< HEAD
                              "id": 6051,
=======
                              "id": 6086,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5208:209:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
<<<<<<< HEAD
                            "id": 6039,
=======
                            "id": 6074,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5144:16:14",
                            "typeDescriptions": {
<<<<<<< HEAD
                              "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$57973_$",
                              "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                            },
                            "typeName": {
                              "id": 6038,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 6037,
=======
                              "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$57996_$",
                              "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                            },
                            "typeName": {
                              "id": 6073,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 6072,
>>>>>>> main
                                "name": "ERC1967Proxy",
                                "nameLocations": [
                                  "5148:12:14"
                                ],
                                "nodeType": "IdentifierPath",
<<<<<<< HEAD
                                "referencedDeclaration": 57973,
                                "src": "5148:12:14"
                              },
                              "referencedDeclaration": 57973,
                              "src": "5148:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$57973",
=======
                                "referencedDeclaration": 57996,
                                "src": "5148:12:14"
                              },
                              "referencedDeclaration": 57996,
                              "src": "5148:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$57996",
>>>>>>> main
                                "typeString": "contract ERC1967Proxy"
                              }
                            }
                          },
<<<<<<< HEAD
                          "id": 6052,
=======
                          "id": 6087,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5144:281:14",
                          "tryCall": false,
                          "typeDescriptions": {
<<<<<<< HEAD
                            "typeIdentifier": "t_contract$_ERC1967Proxy_$57973",
=======
                            "typeIdentifier": "t_contract$_ERC1967Proxy_$57996",
>>>>>>> main
                            "typeString": "contract ERC1967Proxy"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
<<<<<<< HEAD
                            "typeIdentifier": "t_contract$_ERC1967Proxy_$57973",
                            "typeString": "contract ERC1967Proxy"
                          }
                        ],
                        "id": 6036,
=======
                            "typeIdentifier": "t_contract$_ERC1967Proxy_$57996",
                            "typeString": "contract ERC1967Proxy"
                          }
                        ],
                        "id": 6071,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5129:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
<<<<<<< HEAD
                          "id": 6035,
=======
                          "id": 6070,
>>>>>>> main
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5129:7:14",
                          "typeDescriptions": {}
                        }
                      },
<<<<<<< HEAD
                      "id": 6053,
=======
                      "id": 6088,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5129:302:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5113:318:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 6055,
=======
                  "id": 6090,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "5113:318:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 6060,
=======
                    "id": 6095,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 6056,
                        "name": "spaceByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5761,
=======
                        "id": 6091,
                        "name": "spaceByHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5796,
>>>>>>> main
                        "src": "5475:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
<<<<<<< HEAD
                      "id": 6058,
                      "indexExpression": {
                        "id": 6057,
                        "name": "_networkHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5931,
=======
                      "id": 6093,
                      "indexExpression": {
                        "id": 6092,
                        "name": "_networkHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5966,
>>>>>>> main
                        "src": "5487:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5475:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 6059,
                      "name": "_spaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5908,
=======
                      "id": 6094,
                      "name": "_spaceAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5943,
>>>>>>> main
                      "src": "5503:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5475:41:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 6061,
=======
                  "id": 6096,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "5475:41:14"
                },
                {
                  "body": {
<<<<<<< HEAD
                    "id": 6082,
=======
                    "id": 6117,
>>>>>>> main
                    "nodeType": "Block",
                    "src": "5614:69:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 6079,
                              "name": "_spaceAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5908,
=======
                              "id": 6114,
                              "name": "_spaceAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5943,
>>>>>>> main
                              "src": "5662:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
<<<<<<< HEAD
                                    "id": 6074,
                                    "name": "_entitlements",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6015,
=======
                                    "id": 6109,
                                    "name": "_entitlements",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6050,
>>>>>>> main
                                    "src": "5635:13:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 6076,
                                  "indexExpression": {
                                    "id": 6075,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6063,
=======
                                  "id": 6111,
                                  "indexExpression": {
                                    "id": 6110,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6098,
>>>>>>> main
                                    "src": "5649:1:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5635:16:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 6073,
                                "name": "IEntitlement",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9798,
                                "src": "5622:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IEntitlement_$9798_$",
                                  "typeString": "type(contract IEntitlement)"
                                }
                              },
                              "id": 6077,
=======
                                "id": 6108,
                                "name": "IEntitlement",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9833,
                                "src": "5622:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IEntitlement_$9833_$",
                                  "typeString": "type(contract IEntitlement)"
                                }
                              },
                              "id": 6112,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5622:30:14",
                              "tryCall": false,
                              "typeDescriptions": {
<<<<<<< HEAD
                                "typeIdentifier": "t_contract$_IEntitlement_$9798",
                                "typeString": "contract IEntitlement"
                              }
                            },
                            "id": 6078,
=======
                                "typeIdentifier": "t_contract$_IEntitlement_$9833",
                                "typeString": "contract IEntitlement"
                              }
                            },
                            "id": 6113,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5653:8:14",
                            "memberName": "setSpace",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 9730,
=======
                            "referencedDeclaration": 9765,
>>>>>>> main
                            "src": "5622:39:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
<<<<<<< HEAD
                          "id": 6080,
=======
                          "id": 6115,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5622:54:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< HEAD
                        "id": 6081,
=======
                        "id": 6116,
>>>>>>> main
                        "nodeType": "ExpressionStatement",
                        "src": "5622:54:14"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 6069,
=======
                    "id": 6104,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
<<<<<<< HEAD
                      "id": 6066,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6063,
=======
                      "id": 6101,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6098,
>>>>>>> main
                      "src": "5583:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
<<<<<<< HEAD
                        "id": 6067,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6015,
=======
                        "id": 6102,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6050,
>>>>>>> main
                        "src": "5587:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
<<<<<<< HEAD
                      "id": 6068,
=======
                      "id": 6103,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5601:6:14",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5587:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5583:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 6083,
                  "initializationExpression": {
                    "assignments": [
                      6063
=======
                  "id": 6118,
                  "initializationExpression": {
                    "assignments": [
                      6098
>>>>>>> main
                    ],
                    "declarations": [
                      {
                        "constant": false,
<<<<<<< HEAD
                        "id": 6063,
=======
                        "id": 6098,
>>>>>>> main
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5576:1:14",
                        "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                        "scope": 6083,
=======
                        "scope": 6118,
>>>>>>> main
                        "src": "5568:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
<<<<<<< HEAD
                          "id": 6062,
=======
                          "id": 6097,
>>>>>>> main
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5568:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
<<<<<<< HEAD
                    "id": 6065,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6064,
=======
                    "id": 6100,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6099,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5580:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5568:13:14"
                  },
                  "loopExpression": {
                    "expression": {
<<<<<<< HEAD
                      "id": 6071,
=======
                      "id": 6106,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5609:3:14",
                      "subExpression": {
<<<<<<< HEAD
                        "id": 6070,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6063,
=======
                        "id": 6105,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6098,
>>>>>>> main
                        "src": "5609:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "id": 6072,
=======
                    "id": 6107,
>>>>>>> main
                    "nodeType": "ExpressionStatement",
                    "src": "5609:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "5563:120:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 6085,
                        "name": "_spaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5908,
=======
                        "id": 6120,
                        "name": "_spaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5943,
>>>>>>> main
                        "src": "5713:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6086,
                        "name": "_tokenEntitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5974,
=======
                        "id": 6121,
                        "name": "_tokenEntitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6009,
>>>>>>> main
                        "src": "5728:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6087,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5955,
=======
                        "id": 6122,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5990,
>>>>>>> main
                        "src": "5747:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
                      "id": 6084,
                      "name": "_createOwnerEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6442,
=======
                      "id": 6119,
                      "name": "_createOwnerEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6477,
>>>>>>> main
                      "src": "5689:23:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 6088,
=======
                    "id": 6123,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5689:67:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 6089,
=======
                  "id": 6124,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "5689:67:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 6091,
                        "name": "_spaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5908,
=======
                        "id": 6126,
                        "name": "_spaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5943,
>>>>>>> main
                        "src": "5796:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6092,
                        "name": "_userEntitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5993,
=======
                        "id": 6127,
                        "name": "_userEntitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6028,
>>>>>>> main
                        "src": "5817:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6093,
                        "name": "_everyonePermissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5900,
=======
                        "id": 6128,
                        "name": "_everyonePermissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5935,
>>>>>>> main
                        "src": "5841:20:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "string calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "string calldata[] calldata"
                        }
                      ],
<<<<<<< HEAD
                      "id": 6090,
                      "name": "_createEveryoneEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6506,
=======
                      "id": 6125,
                      "name": "_createEveryoneEntitlement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6541,
>>>>>>> main
                      "src": "5762:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory[] memory)"
                      }
                    },
<<<<<<< HEAD
                    "id": 6094,
=======
                    "id": 6129,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5762:105:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 6095,
=======
                  "id": 6130,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "5762:105:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 6097,
                        "name": "_spaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5908,
=======
                        "id": 6132,
                        "name": "_spaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5943,
>>>>>>> main
                        "src": "5905:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6098,
                        "name": "_tokenEntitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5974,
=======
                        "id": 6133,
                        "name": "_tokenEntitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6009,
>>>>>>> main
                        "src": "5926:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6099,
                        "name": "_userEntitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5993,
=======
                        "id": 6134,
                        "name": "_userEntitlement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6028,
>>>>>>> main
                        "src": "5951:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6100,
                        "name": "_extraEntitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5903,
                        "src": "5975:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10170_calldata_ptr",
=======
                        "id": 6135,
                        "name": "_extraEntitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5938,
                        "src": "5975:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10214_calldata_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.CreateSpaceExtraEntitlements calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10170_calldata_ptr",
                          "typeString": "struct DataTypes.CreateSpaceExtraEntitlements calldata"
                        }
                      ],
                      "id": 6096,
                      "name": "_createExtraEntitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6346,
                      "src": "5873:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_struct$_CreateSpaceExtraEntitlements_$10170_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,struct DataTypes.CreateSpaceExtraEntitlements memory)"
                      }
                    },
                    "id": 6101,
=======
                          "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10214_calldata_ptr",
                          "typeString": "struct DataTypes.CreateSpaceExtraEntitlements calldata"
                        }
                      ],
                      "id": 6131,
                      "name": "_createExtraEntitlements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6381,
                      "src": "5873:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_struct$_CreateSpaceExtraEntitlements_$10214_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,struct DataTypes.CreateSpaceExtraEntitlements memory)"
                      }
                    },
                    "id": 6136,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5873:126:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 6102,
=======
                  "id": 6137,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "5873:126:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 6109,
=======
                            "id": 6144,
>>>>>>> main
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6066:4:14",
                            "typeDescriptions": {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_SpaceFactory_$6516",
=======
                              "typeIdentifier": "t_contract$_SpaceFactory_$6551",
>>>>>>> main
                              "typeString": "contract SpaceFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
<<<<<<< HEAD
                              "typeIdentifier": "t_contract$_SpaceFactory_$6516",
                              "typeString": "contract SpaceFactory"
                            }
                          ],
                          "id": 6108,
=======
                              "typeIdentifier": "t_contract$_SpaceFactory_$6551",
                              "typeString": "contract SpaceFactory"
                            }
                          ],
                          "id": 6143,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6058:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 6107,
=======
                            "id": 6142,
>>>>>>> main
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6058:7:14",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 6110,
=======
                        "id": 6145,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6058:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
<<<<<<< HEAD
                          "id": 6111,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56639,
=======
                          "id": 6146,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56662,
>>>>>>> main
                          "src": "6079:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
<<<<<<< HEAD
                        "id": 6112,
=======
                        "id": 6147,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6079:12:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6113,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5955,
=======
                        "id": 6148,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5990,
>>>>>>> main
                        "src": "6099:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 6104,
                            "name": "SPACE_TOKEN_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5754,
=======
                            "id": 6139,
                            "name": "SPACE_TOKEN_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5789,
>>>>>>> main
                            "src": "6017:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
<<<<<<< HEAD
                          "id": 6103,
                          "name": "SpaceOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9366,
                          "src": "6006:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SpaceOwner_$9366_$",
                            "typeString": "type(contract SpaceOwner)"
                          }
                        },
                        "id": 6105,
=======
                          "id": 6138,
                          "name": "SpaceOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9401,
                          "src": "6006:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SpaceOwner_$9401_$",
                            "typeString": "type(contract SpaceOwner)"
                          }
                        },
                        "id": 6140,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6006:31:14",
                        "tryCall": false,
                        "typeDescriptions": {
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_SpaceOwner_$9366",
                          "typeString": "contract SpaceOwner"
                        }
                      },
                      "id": 6106,
=======
                          "typeIdentifier": "t_contract$_SpaceOwner_$9401",
                          "typeString": "contract SpaceOwner"
                        }
                      },
                      "id": 6141,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6038:12:14",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 60846,
=======
                      "referencedDeclaration": 60869,
>>>>>>> main
                      "src": "6006:44:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 6114,
=======
                    "id": 6149,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6006:107:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 6115,
=======
                  "id": 6150,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "6006:107:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 6119,
                        "name": "_spaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5908,
=======
                        "id": 6154,
                        "name": "_spaceAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5943,
>>>>>>> main
                        "src": "6145:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
<<<<<<< HEAD
                          "id": 6120,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56639,
=======
                          "id": 6155,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56662,
>>>>>>> main
                          "src": "6160:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
<<<<<<< HEAD
                        "id": 6121,
=======
                        "id": 6156,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6160:12:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6122,
                        "name": "spaceNetworkId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5895,
=======
                        "id": 6157,
                        "name": "spaceNetworkId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5930,
>>>>>>> main
                        "src": "6174:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
                        "id": 6116,
                        "name": "Events",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10265,
                        "src": "6125:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Events_$10265_$",
                          "typeString": "type(library Events)"
                        }
                      },
                      "id": 6118,
=======
                        "id": 6151,
                        "name": "Events",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10309,
                        "src": "6125:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Events_$10309_$",
                          "typeString": "type(library Events)"
                        }
                      },
                      "id": 6153,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6132:12:14",
                      "memberName": "SpaceCreated",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 10236,
=======
                      "referencedDeclaration": 10280,
>>>>>>> main
                      "src": "6125:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory)"
                      }
                    },
<<<<<<< HEAD
                    "id": 6123,
=======
                    "id": 6158,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6125:64:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 6124,
=======
                  "id": 6159,
>>>>>>> main
                  "nodeType": "EmitStatement",
                  "src": "6120:69:14"
                }
              ]
            },
            "baseFunctions": [
<<<<<<< HEAD
              10085
            ],
            "documentation": {
              "id": 5891,
=======
              10120
            ],
            "documentation": {
              "id": 5926,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "3404:29:14",
              "text": "@inheritdoc ISpaceFactory"
            },
            "functionSelector": "ad78faf3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 5906,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5905,
=======
                "id": 5941,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5940,
>>>>>>> main
                  "name": "nonReentrant",
                  "nameLocations": [
                    "3688:12:14"
                  ],
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 56223,
=======
                  "referencedDeclaration": 56246,
>>>>>>> main
                  "src": "3688:12:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "3688:12:14"
              }
            ],
            "name": "createSpace",
            "nameLocation": "3445:11:14",
            "parameters": {
<<<<<<< HEAD
              "id": 5904,
=======
              "id": 5939,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5893,
=======
                  "id": 5928,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "spaceName",
                  "nameLocation": "3478:9:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6126,
=======
                  "scope": 6161,
>>>>>>> main
                  "src": "3462:25:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 5892,
=======
                    "id": 5927,
>>>>>>> main
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3462:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5895,
=======
                  "id": 5930,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "spaceNetworkId",
                  "nameLocation": "3509:14:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6126,
=======
                  "scope": 6161,
>>>>>>> main
                  "src": "3493:30:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 5894,
=======
                    "id": 5929,
>>>>>>> main
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3493:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5897,
=======
                  "id": 5932,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "spaceMetadata",
                  "nameLocation": "3545:13:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6126,
=======
                  "scope": 6161,
>>>>>>> main
                  "src": "3529:29:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 5896,
=======
                    "id": 5931,
>>>>>>> main
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3529:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5900,
=======
                  "id": 5935,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_everyonePermissions",
                  "nameLocation": "3582:20:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6126,
=======
                  "scope": 6161,
>>>>>>> main
                  "src": "3564:38:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
<<<<<<< HEAD
                      "id": 5898,
=======
                      "id": 5933,
>>>>>>> main
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "3564:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
<<<<<<< HEAD
                    "id": 5899,
=======
                    "id": 5934,
>>>>>>> main
                    "nodeType": "ArrayTypeName",
                    "src": "3564:8:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5903,
=======
                  "id": 5938,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_extraEntitlements",
                  "nameLocation": "3656:18:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6126,
=======
                  "scope": 6161,
>>>>>>> main
                  "src": "3608:66:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10170_calldata_ptr",
                    "typeString": "struct DataTypes.CreateSpaceExtraEntitlements"
                  },
                  "typeName": {
                    "id": 5902,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5901,
=======
                    "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10214_calldata_ptr",
                    "typeString": "struct DataTypes.CreateSpaceExtraEntitlements"
                  },
                  "typeName": {
                    "id": 5937,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5936,
>>>>>>> main
                      "name": "DataTypes.CreateSpaceExtraEntitlements",
                      "nameLocations": [
                        "3608:9:14",
                        "3618:28:14"
                      ],
                      "nodeType": "IdentifierPath",
<<<<<<< HEAD
                      "referencedDeclaration": 10170,
                      "src": "3608:38:14"
                    },
                    "referencedDeclaration": 10170,
                    "src": "3608:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10170_storage_ptr",
=======
                      "referencedDeclaration": 10214,
                      "src": "3608:38:14"
                    },
                    "referencedDeclaration": 10214,
                    "src": "3608:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10214_storage_ptr",
>>>>>>> main
                      "typeString": "struct DataTypes.CreateSpaceExtraEntitlements"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3456:222:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 5909,
=======
              "id": 5944,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 5908,
=======
                  "id": 5943,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_spaceAddress",
                  "nameLocation": "3718:13:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6126,
=======
                  "scope": 6161,
>>>>>>> main
                  "src": "3710:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 5907,
=======
                    "id": 5942,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3710:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3709:23:14"
            },
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
<<<<<<< HEAD
            "id": 6186,
=======
            "id": 6221,
>>>>>>> main
            "nodeType": "FunctionDefinition",
            "src": "6230:493:14",
            "nodes": [],
            "body": {
<<<<<<< HEAD
              "id": 6185,
=======
              "id": 6220,
>>>>>>> main
              "nodeType": "Block",
              "src": "6318:405:14",
              "nodes": [],
              "statements": [
                {
                  "body": {
<<<<<<< HEAD
                    "id": 6183,
=======
                    "id": 6218,
>>>>>>> main
                    "nodeType": "Block",
                    "src": "6420:299:14",
                    "statements": [
                      {
                        "body": {
<<<<<<< HEAD
                          "id": 6173,
=======
                          "id": 6208,
>>>>>>> main
                          "nodeType": "Block",
                          "src": "6482:137:14",
                          "statements": [
                            {
                              "condition": {
                                "arguments": [
                                  {
                                    "baseExpression": {
<<<<<<< HEAD
                                      "id": 6159,
                                      "name": "_permissions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6130,
=======
                                      "id": 6194,
                                      "name": "_permissions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6165,
>>>>>>> main
                                      "src": "6510:12:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                                        "typeString": "string calldata[] calldata"
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 6161,
                                    "indexExpression": {
                                      "id": 6160,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6136,
=======
                                    "id": 6196,
                                    "indexExpression": {
                                      "id": 6195,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6171,
>>>>>>> main
                                      "src": "6523:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6510:15:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_calldata_ptr",
                                      "typeString": "string calldata"
                                    }
                                  },
                                  {
                                    "baseExpression": {
<<<<<<< HEAD
                                      "id": 6162,
                                      "name": "ownerPermissions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5757,
=======
                                      "id": 6197,
                                      "name": "ownerPermissions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5792,
>>>>>>> main
                                      "src": "6527:16:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                        "typeString": "string storage ref[] storage ref"
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 6164,
                                    "indexExpression": {
                                      "id": 6163,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6147,
=======
                                    "id": 6199,
                                    "indexExpression": {
                                      "id": 6198,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6182,
>>>>>>> main
                                      "src": "6544:1:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6527:19:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_calldata_ptr",
                                      "typeString": "string calldata"
                                    },
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
<<<<<<< HEAD
                                    "id": 6157,
                                    "name": "Utils",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10478,
                                    "src": "6496:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Utils_$10478_$",
                                      "typeString": "type(library Utils)"
                                    }
                                  },
                                  "id": 6158,
=======
                                    "id": 6192,
                                    "name": "Utils",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10522,
                                    "src": "6496:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Utils_$10522_$",
                                      "typeString": "type(library Utils)"
                                    }
                                  },
                                  "id": 6193,
>>>>>>> main
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6502:7:14",
                                  "memberName": "isEqual",
                                  "nodeType": "MemberAccess",
<<<<<<< HEAD
                                  "referencedDeclaration": 10347,
=======
                                  "referencedDeclaration": 10391,
>>>>>>> main
                                  "src": "6496:13:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                                    "typeString": "function (string memory,string memory) pure returns (bool)"
                                  }
                                },
<<<<<<< HEAD
                                "id": 6165,
=======
                                "id": 6200,
>>>>>>> main
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6496:51:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
<<<<<<< HEAD
                              "id": 6172,
                              "nodeType": "IfStatement",
                              "src": "6492:119:14",
                              "trueBody": {
                                "id": 6171,
=======
                              "id": 6207,
                              "nodeType": "IfStatement",
                              "src": "6492:119:14",
                              "trueBody": {
                                "id": 6206,
>>>>>>> main
                                "nodeType": "Block",
                                "src": "6549:62:14",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
<<<<<<< HEAD
                                          "id": 6166,
                                          "name": "Errors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10226,
                                          "src": "6568:6:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_Errors_$10226_$",
                                            "typeString": "type(library Errors)"
                                          }
                                        },
                                        "id": 6168,
=======
                                          "id": 6201,
                                          "name": "Errors",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 10270,
                                          "src": "6568:6:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_Errors_$10270_$",
                                            "typeString": "type(library Errors)"
                                          }
                                        },
                                        "id": 6203,
>>>>>>> main
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "6575:23:14",
                                        "memberName": "PermissionAlreadyExists",
                                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                                        "referencedDeclaration": 10215,
=======
                                        "referencedDeclaration": 10259,
>>>>>>> main
                                        "src": "6568:30:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
<<<<<<< HEAD
                                      "id": 6169,
=======
                                      "id": 6204,
>>>>>>> main
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6568:32:14",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 6170,
=======
                                    "id": 6205,
>>>>>>> main
                                    "nodeType": "RevertStatement",
                                    "src": "6561:39:14"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
<<<<<<< HEAD
                          "id": 6153,
=======
                          "id": 6188,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
<<<<<<< HEAD
                            "id": 6150,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6147,
=======
                            "id": 6185,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6182,
>>>>>>> main
                            "src": "6448:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
<<<<<<< HEAD
                              "id": 6151,
                              "name": "ownerPermissions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5757,
=======
                              "id": 6186,
                              "name": "ownerPermissions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5792,
>>>>>>> main
                              "src": "6452:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
<<<<<<< HEAD
                            "id": 6152,
=======
                            "id": 6187,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6469:6:14",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6452:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6448:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
<<<<<<< HEAD
                        "id": 6174,
                        "initializationExpression": {
                          "assignments": [
                            6147
=======
                        "id": 6209,
                        "initializationExpression": {
                          "assignments": [
                            6182
>>>>>>> main
                          ],
                          "declarations": [
                            {
                              "constant": false,
<<<<<<< HEAD
                              "id": 6147,
=======
                              "id": 6182,
>>>>>>> main
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "6441:1:14",
                              "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                              "scope": 6174,
=======
                              "scope": 6209,
>>>>>>> main
                              "src": "6433:9:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
<<<<<<< HEAD
                                "id": 6146,
=======
                                "id": 6181,
>>>>>>> main
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6433:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
<<<<<<< HEAD
                          "id": 6149,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 6148,
=======
                          "id": 6184,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 6183,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6445:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6433:13:14"
                        },
                        "loopExpression": {
                          "expression": {
<<<<<<< HEAD
                            "id": 6155,
=======
                            "id": 6190,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6477:3:14",
                            "subExpression": {
<<<<<<< HEAD
                              "id": 6154,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6147,
=======
                              "id": 6189,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6182,
>>>>>>> main
                              "src": "6477:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
<<<<<<< HEAD
                          "id": 6156,
=======
                          "id": 6191,
>>>>>>> main
                          "nodeType": "ExpressionStatement",
                          "src": "6477:3:14"
                        },
                        "nodeType": "ForStatement",
                        "src": "6428:191:14"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
<<<<<<< HEAD
                                "id": 6178,
                                "name": "_permissions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6130,
=======
                                "id": 6213,
                                "name": "_permissions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6165,
>>>>>>> main
                                "src": "6696:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "string calldata[] calldata"
                                }
                              },
<<<<<<< HEAD
                              "id": 6180,
                              "indexExpression": {
                                "id": 6179,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6136,
=======
                              "id": 6215,
                              "indexExpression": {
                                "id": 6214,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6171,
>>>>>>> main
                                "src": "6709:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6696:15:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "expression": {
<<<<<<< HEAD
                              "id": 6175,
                              "name": "ownerPermissions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5757,
=======
                              "id": 6210,
                              "name": "ownerPermissions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5792,
>>>>>>> main
                              "src": "6674:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                                "typeString": "string storage ref[] storage ref"
                              }
                            },
<<<<<<< HEAD
                            "id": 6177,
=======
                            "id": 6212,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6691:4:14",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6674:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$bound_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
                              "typeString": "function (string storage ref[] storage pointer,string storage ref)"
                            }
                          },
<<<<<<< HEAD
                          "id": 6181,
=======
                          "id": 6216,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6674:38:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< HEAD
                        "id": 6182,
=======
                        "id": 6217,
>>>>>>> main
                        "nodeType": "ExpressionStatement",
                        "src": "6674:38:14"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 6142,
=======
                    "id": 6177,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
<<<<<<< HEAD
                      "id": 6139,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6136,
=======
                      "id": 6174,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6171,
>>>>>>> main
                      "src": "6390:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
<<<<<<< HEAD
                        "id": 6140,
                        "name": "_permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6130,
=======
                        "id": 6175,
                        "name": "_permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6165,
>>>>>>> main
                        "src": "6394:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "string calldata[] calldata"
                        }
                      },
<<<<<<< HEAD
                      "id": 6141,
=======
                      "id": 6176,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6407:6:14",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6394:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6390:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 6184,
                  "initializationExpression": {
                    "assignments": [
                      6136
=======
                  "id": 6219,
                  "initializationExpression": {
                    "assignments": [
                      6171
>>>>>>> main
                    ],
                    "declarations": [
                      {
                        "constant": false,
<<<<<<< HEAD
                        "id": 6136,
=======
                        "id": 6171,
>>>>>>> main
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6383:1:14",
                        "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                        "scope": 6184,
=======
                        "scope": 6219,
>>>>>>> main
                        "src": "6375:9:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
<<<<<<< HEAD
                          "id": 6135,
=======
                          "id": 6170,
>>>>>>> main
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6375:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
<<<<<<< HEAD
                    "id": 6138,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6137,
=======
                    "id": 6173,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6172,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6387:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6375:13:14"
                  },
                  "loopExpression": {
                    "expression": {
<<<<<<< HEAD
                      "id": 6144,
=======
                      "id": 6179,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6415:3:14",
                      "subExpression": {
<<<<<<< HEAD
                        "id": 6143,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6136,
=======
                        "id": 6178,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6171,
>>>>>>> main
                        "src": "6415:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "id": 6145,
=======
                    "id": 6180,
>>>>>>> main
                    "nodeType": "ExpressionStatement",
                    "src": "6415:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "6370:349:14"
                }
              ]
            },
            "baseFunctions": [
<<<<<<< HEAD
              10092
            ],
            "documentation": {
              "id": 6127,
=======
              10127
            ],
            "documentation": {
              "id": 6162,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "6198:29:14",
              "text": "@inheritdoc ISpaceFactory"
            },
            "functionSelector": "be8b5967",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 6133,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6132,
=======
                "id": 6168,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6167,
>>>>>>> main
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6308:9:14"
                  ],
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 55399,
=======
                  "referencedDeclaration": 55422,
>>>>>>> main
                  "src": "6308:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "6308:9:14"
              }
            ],
            "name": "addOwnerPermissions",
            "nameLocation": "6239:19:14",
            "parameters": {
<<<<<<< HEAD
              "id": 6131,
=======
              "id": 6166,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6130,
=======
                  "id": 6165,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_permissions",
                  "nameLocation": "6282:12:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6186,
=======
                  "scope": 6221,
>>>>>>> main
                  "src": "6264:30:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
<<<<<<< HEAD
                      "id": 6128,
=======
                      "id": 6163,
>>>>>>> main
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "6264:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
<<<<<<< HEAD
                    "id": 6129,
=======
                    "id": 6164,
>>>>>>> main
                    "nodeType": "ArrayTypeName",
                    "src": "6264:8:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6258:40:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 6134,
=======
              "id": 6169,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6318:0:14"
            },
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
<<<<<<< HEAD
            "id": 6208,
=======
            "id": 6243,
>>>>>>> main
            "nodeType": "FunctionDefinition",
            "src": "6759:207:14",
            "nodes": [],
            "body": {
<<<<<<< HEAD
              "id": 6207,
=======
              "id": 6242,
>>>>>>> main
              "nodeType": "Block",
              "src": "6862:104:14",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
<<<<<<< HEAD
                    6195
=======
                    6230
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 6195,
=======
                      "id": 6230,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "_networkHash",
                      "nameLocation": "6876:12:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6207,
=======
                      "scope": 6242,
>>>>>>> main
                      "src": "6868:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 6194,
=======
                        "id": 6229,
>>>>>>> main
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6868:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 6202,
=======
                  "id": 6237,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 6199,
                            "name": "spaceNetworkId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6189,
=======
                            "id": 6234,
                            "name": "spaceNetworkId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6224,
>>>>>>> main
                            "src": "6907:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
<<<<<<< HEAD
                          "id": 6198,
=======
                          "id": 6233,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6901:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 6197,
=======
                            "id": 6232,
>>>>>>> main
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6901:5:14",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 6200,
=======
                        "id": 6235,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6901:21:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
<<<<<<< HEAD
                      "id": 6196,
=======
                      "id": 6231,
>>>>>>> main
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "6891:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
<<<<<<< HEAD
                    "id": 6201,
=======
                    "id": 6236,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6891:32:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6868:55:14"
                },
                {
                  "expression": {
                    "baseExpression": {
<<<<<<< HEAD
                      "id": 6203,
                      "name": "tokenByHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5765,
=======
                      "id": 6238,
                      "name": "tokenByHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5800,
>>>>>>> main
                      "src": "6936:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      }
                    },
<<<<<<< HEAD
                    "id": 6205,
                    "indexExpression": {
                      "id": 6204,
                      "name": "_networkHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6195,
=======
                    "id": 6240,
                    "indexExpression": {
                      "id": 6239,
                      "name": "_networkHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6230,
>>>>>>> main
                      "src": "6948:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6936:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 6193,
                  "id": 6206,
=======
                  "functionReturnParameters": 6228,
                  "id": 6241,
>>>>>>> main
                  "nodeType": "Return",
                  "src": "6929:32:14"
                }
              ]
            },
            "baseFunctions": [
<<<<<<< HEAD
              10100
            ],
            "documentation": {
              "id": 6187,
=======
              10135
            ],
            "documentation": {
              "id": 6222,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "6727:29:14",
              "text": "@inheritdoc ISpaceFactory"
            },
            "functionSelector": "8a9ef426",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenIdByNetworkId",
            "nameLocation": "6768:21:14",
            "parameters": {
<<<<<<< HEAD
              "id": 6190,
=======
              "id": 6225,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6189,
=======
                  "id": 6224,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "spaceNetworkId",
                  "nameLocation": "6811:14:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6208,
=======
                  "scope": 6243,
>>>>>>> main
                  "src": "6795:30:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6188,
=======
                    "id": 6223,
>>>>>>> main
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6795:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6789:40:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 6193,
=======
              "id": 6228,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6192,
=======
                  "id": 6227,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6208,
=======
                  "scope": 6243,
>>>>>>> main
                  "src": "6853:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6191,
=======
                    "id": 6226,
>>>>>>> main
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6853:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6852:9:14"
            },
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
<<<<<<< HEAD
            "id": 6230,
=======
            "id": 6265,
>>>>>>> main
            "nodeType": "FunctionDefinition",
            "src": "7002:212:14",
            "nodes": [],
            "body": {
<<<<<<< HEAD
              "id": 6229,
=======
              "id": 6264,
>>>>>>> main
              "nodeType": "Block",
              "src": "7110:104:14",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
<<<<<<< HEAD
                    6217
=======
                    6252
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 6217,
=======
                      "id": 6252,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "_networkHash",
                      "nameLocation": "7124:12:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6229,
=======
                      "scope": 6264,
>>>>>>> main
                      "src": "7116:20:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 6216,
=======
                        "id": 6251,
>>>>>>> main
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7116:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 6224,
=======
                  "id": 6259,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 6221,
                            "name": "spaceNetworkId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6211,
=======
                            "id": 6256,
                            "name": "spaceNetworkId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6246,
>>>>>>> main
                            "src": "7155:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
<<<<<<< HEAD
                          "id": 6220,
=======
                          "id": 6255,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7149:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
<<<<<<< HEAD
                            "id": 6219,
=======
                            "id": 6254,
>>>>>>> main
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7149:5:14",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 6222,
=======
                        "id": 6257,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7149:21:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
<<<<<<< HEAD
                      "id": 6218,
=======
                      "id": 6253,
>>>>>>> main
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7139:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
<<<<<<< HEAD
                    "id": 6223,
=======
                    "id": 6258,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7139:32:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7116:55:14"
                },
                {
                  "expression": {
                    "baseExpression": {
<<<<<<< HEAD
                      "id": 6225,
                      "name": "spaceByHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5761,
=======
                      "id": 6260,
                      "name": "spaceByHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5796,
>>>>>>> main
                      "src": "7184:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
<<<<<<< HEAD
                    "id": 6227,
                    "indexExpression": {
                      "id": 6226,
                      "name": "_networkHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6217,
=======
                    "id": 6262,
                    "indexExpression": {
                      "id": 6261,
                      "name": "_networkHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6252,
>>>>>>> main
                      "src": "7196:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7184:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 6215,
                  "id": 6228,
=======
                  "functionReturnParameters": 6250,
                  "id": 6263,
>>>>>>> main
                  "nodeType": "Return",
                  "src": "7177:32:14"
                }
              ]
            },
            "baseFunctions": [
<<<<<<< HEAD
              10108
            ],
            "documentation": {
              "id": 6209,
=======
              10143
            ],
            "documentation": {
              "id": 6244,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "6970:29:14",
              "text": "@inheritdoc ISpaceFactory"
            },
            "functionSelector": "96dc21e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSpaceAddressByNetworkId",
            "nameLocation": "7011:26:14",
            "parameters": {
<<<<<<< HEAD
              "id": 6212,
=======
              "id": 6247,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6211,
=======
                  "id": 6246,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "spaceNetworkId",
                  "nameLocation": "7059:14:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6230,
=======
                  "scope": 6265,
>>>>>>> main
                  "src": "7043:30:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6210,
=======
                    "id": 6245,
>>>>>>> main
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7043:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7037:40:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 6215,
=======
              "id": 6250,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6214,
=======
                  "id": 6249,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6230,
=======
                  "scope": 6265,
>>>>>>> main
                  "src": "7101:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6213,
=======
                    "id": 6248,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7101:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7100:9:14"
            },
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
<<<<<<< HEAD
            "id": 6240,
=======
            "id": 6275,
>>>>>>> main
            "nodeType": "FunctionDefinition",
            "src": "7250:105:14",
            "nodes": [],
            "body": {
<<<<<<< HEAD
              "id": 6239,
=======
              "id": 6274,
>>>>>>> main
              "nodeType": "Block",
              "src": "7321:34:14",
              "nodes": [],
              "statements": [
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 6237,
                    "name": "ownerPermissions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5757,
=======
                    "id": 6272,
                    "name": "ownerPermissions",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5792,
>>>>>>> main
                    "src": "7334:16:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                      "typeString": "string storage ref[] storage ref"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 6236,
                  "id": 6238,
=======
                  "functionReturnParameters": 6271,
                  "id": 6273,
>>>>>>> main
                  "nodeType": "Return",
                  "src": "7327:23:14"
                }
              ]
            },
            "baseFunctions": [
<<<<<<< HEAD
              10115
            ],
            "documentation": {
              "id": 6231,
=======
              10150
            ],
            "documentation": {
              "id": 6266,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "7218:29:14",
              "text": "@inheritdoc ISpaceFactory"
            },
            "functionSelector": "df2cd9fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwnerPermissions",
            "nameLocation": "7259:19:14",
            "parameters": {
<<<<<<< HEAD
              "id": 6232,
=======
              "id": 6267,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7278:2:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 6236,
=======
              "id": 6271,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6235,
=======
                  "id": 6270,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6240,
=======
                  "scope": 6275,
>>>>>>> main
                  "src": "7304:15:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
<<<<<<< HEAD
                      "id": 6233,
=======
                      "id": 6268,
>>>>>>> main
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "7304:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
<<<<<<< HEAD
                    "id": 6234,
=======
                    "id": 6269,
>>>>>>> main
                    "nodeType": "ArrayTypeName",
                    "src": "7304:8:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7303:17:14"
            },
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
<<<<<<< HEAD
            "id": 6346,
=======
            "id": 6381,
>>>>>>> main
            "nodeType": "FunctionDefinition",
            "src": "7454:1093:14",
            "nodes": [],
            "body": {
<<<<<<< HEAD
              "id": 6345,
=======
              "id": 6380,
>>>>>>> main
              "nodeType": "Block",
              "src": "7648:899:14",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 6257,
=======
                    "id": 6292,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
<<<<<<< HEAD
                          "id": 6253,
                          "name": "_extraEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6250,
                          "src": "7658:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10170_memory_ptr",
                            "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                          }
                        },
                        "id": 6254,
=======
                          "id": 6288,
                          "name": "_extraEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6285,
                          "src": "7658:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10214_memory_ptr",
                            "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                          }
                        },
                        "id": 6289,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7677:11:14",
                        "memberName": "permissions",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 10162,
=======
                        "referencedDeclaration": 10206,
>>>>>>> main
                        "src": "7658:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
<<<<<<< HEAD
                      "id": 6255,
=======
                      "id": 6290,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7689:6:14",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7658:37:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 6256,
=======
                      "id": 6291,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7699:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7658:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 6259,
                  "nodeType": "IfStatement",
                  "src": "7654:55:14",
                  "trueBody": {
                    "functionReturnParameters": 6252,
                    "id": 6258,
=======
                  "id": 6294,
                  "nodeType": "IfStatement",
                  "src": "7654:55:14",
                  "trueBody": {
                    "functionReturnParameters": 6287,
                    "id": 6293,
>>>>>>> main
                    "nodeType": "Return",
                    "src": "7702:7:14"
                  }
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    6265
=======
                    6300
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 6265,
=======
                      "id": 6300,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "_entitlements",
                      "nameLocation": "7746:13:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6345,
=======
                      "scope": 6380,
>>>>>>> main
                      "src": "7715:44:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
=======
                        "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                        "typeString": "struct DataTypes.Entitlement[]"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6263,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6262,
=======
                          "id": 6298,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6297,
>>>>>>> main
                            "name": "DataTypes.Entitlement",
                            "nameLocations": [
                              "7715:9:14",
                              "7725:11:14"
                            ],
                            "nodeType": "IdentifierPath",
<<<<<<< HEAD
                            "referencedDeclaration": 10140,
                            "src": "7715:21:14"
                          },
                          "referencedDeclaration": 10140,
                          "src": "7715:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entitlement_$10140_storage_ptr",
                            "typeString": "struct DataTypes.Entitlement"
                          }
                        },
                        "id": 6264,
                        "nodeType": "ArrayTypeName",
                        "src": "7715:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_storage_$dyn_storage_ptr",
=======
                            "referencedDeclaration": 10175,
                            "src": "7715:21:14"
                          },
                          "referencedDeclaration": 10175,
                          "src": "7715:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entitlement_$10175_storage_ptr",
                            "typeString": "struct DataTypes.Entitlement"
                          }
                        },
                        "id": 6299,
                        "nodeType": "ArrayTypeName",
                        "src": "7715:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_storage_$dyn_storage_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 6272,
=======
                  "id": 6307,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
<<<<<<< HEAD
                        "id": 6270,
=======
                        "id": 6305,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7797:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
<<<<<<< HEAD
                      "id": 6269,
=======
                      "id": 6304,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7762:27:14",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr_$",
=======
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr_$",
>>>>>>> main
                        "typeString": "function (uint256) pure returns (struct DataTypes.Entitlement memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6267,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6266,
=======
                          "id": 6302,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6301,
>>>>>>> main
                            "name": "DataTypes.Entitlement",
                            "nameLocations": [
                              "7766:9:14",
                              "7776:11:14"
                            ],
                            "nodeType": "IdentifierPath",
<<<<<<< HEAD
                            "referencedDeclaration": 10140,
                            "src": "7766:21:14"
                          },
                          "referencedDeclaration": 10140,
                          "src": "7766:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entitlement_$10140_storage_ptr",
                            "typeString": "struct DataTypes.Entitlement"
                          }
                        },
                        "id": 6268,
                        "nodeType": "ArrayTypeName",
                        "src": "7766:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_storage_$dyn_storage_ptr",
=======
                            "referencedDeclaration": 10175,
                            "src": "7766:21:14"
                          },
                          "referencedDeclaration": 10175,
                          "src": "7766:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entitlement_$10175_storage_ptr",
                            "typeString": "struct DataTypes.Entitlement"
                          }
                        },
                        "id": 6303,
                        "nodeType": "ArrayTypeName",
                        "src": "7766:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_storage_$dyn_storage_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement[]"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 6271,
=======
                    "id": 6306,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7762:42:14",
                    "tryCall": false,
                    "typeDescriptions": {
<<<<<<< HEAD
                      "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
=======
                      "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                      "typeString": "struct DataTypes.Entitlement memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7715:89:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 6284,
=======
                    "id": 6319,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 6273,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6265,
                        "src": "7810:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DataTypes.Entitlement memory[] memory"
                        }
                      },
                      "id": 6275,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6274,
=======
                        "id": 6308,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6300,
                        "src": "7810:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DataTypes.Entitlement memory[] memory"
                        }
                      },
                      "id": 6310,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6309,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7824:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7810:16:14",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_struct$_Entitlement_$10140_memory_ptr",
=======
                        "typeIdentifier": "t_struct$_Entitlement_$10175_memory_ptr",
>>>>>>> main
                        "typeString": "struct DataTypes.Entitlement memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
<<<<<<< HEAD
                              "id": 6280,
=======
                              "id": 6315,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7859:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
<<<<<<< HEAD
                            "id": 6279,
=======
                            "id": 6314,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7851:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
                              "id": 6278,
=======
                              "id": 6313,
>>>>>>> main
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7851:7:14",
                              "typeDescriptions": {}
                            }
                          },
<<<<<<< HEAD
                          "id": 6281,
=======
                          "id": 6316,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7851:10:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "",
<<<<<<< HEAD
                          "id": 6282,
=======
                          "id": 6317,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7863:2:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
<<<<<<< HEAD
                          "id": 6276,
                          "name": "DataTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10171,
                          "src": "7829:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DataTypes_$10171_$",
                            "typeString": "type(library DataTypes)"
                          }
                        },
                        "id": 6277,
=======
                          "id": 6311,
                          "name": "DataTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10215,
                          "src": "7829:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DataTypes_$10215_$",
                            "typeString": "type(library DataTypes)"
                          }
                        },
                        "id": 6312,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7839:11:14",
                        "memberName": "Entitlement",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 10140,
                        "src": "7829:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Entitlement_$10140_storage_ptr_$",
                          "typeString": "type(struct DataTypes.Entitlement storage pointer)"
                        }
                      },
                      "id": 6283,
=======
                        "referencedDeclaration": 10175,
                        "src": "7829:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Entitlement_$10175_storage_ptr_$",
                          "typeString": "type(struct DataTypes.Entitlement storage pointer)"
                        }
                      },
                      "id": 6318,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7829:37:14",
                      "tryCall": false,
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_struct$_Entitlement_$10140_memory_ptr",
=======
                        "typeIdentifier": "t_struct$_Entitlement_$10175_memory_ptr",
>>>>>>> main
                        "typeString": "struct DataTypes.Entitlement memory"
                      }
                    },
                    "src": "7810:56:14",
                    "typeDescriptions": {
<<<<<<< HEAD
                      "typeIdentifier": "t_struct$_Entitlement_$10140_memory_ptr",
                      "typeString": "struct DataTypes.Entitlement memory"
                    }
                  },
                  "id": 6285,
=======
                      "typeIdentifier": "t_struct$_Entitlement_$10175_memory_ptr",
                      "typeString": "struct DataTypes.Entitlement memory"
                    }
                  },
                  "id": 6320,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "7810:56:14"
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    6287
=======
                    6322
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 6287,
=======
                      "id": 6322,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "additionalRoleId",
                      "nameLocation": "7881:16:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6345,
=======
                      "scope": 6380,
>>>>>>> main
                      "src": "7873:24:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 6286,
=======
                        "id": 6321,
>>>>>>> main
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7873:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 6298,
=======
                  "id": 6333,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 6292,
                          "name": "_extraEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6250,
                          "src": "7938:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10170_memory_ptr",
                            "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                          }
                        },
                        "id": 6293,
=======
                          "id": 6327,
                          "name": "_extraEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6285,
                          "src": "7938:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10214_memory_ptr",
                            "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                          }
                        },
                        "id": 6328,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7957:8:14",
                        "memberName": "roleName",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 10159,
=======
                        "referencedDeclaration": 10203,
>>>>>>> main
                        "src": "7938:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "expression": {
<<<<<<< HEAD
                          "id": 6294,
                          "name": "_extraEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6250,
                          "src": "7973:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10170_memory_ptr",
                            "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                          }
                        },
                        "id": 6295,
=======
                          "id": 6329,
                          "name": "_extraEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6285,
                          "src": "7973:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10214_memory_ptr",
                            "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                          }
                        },
                        "id": 6330,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7992:11:14",
                        "memberName": "permissions",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 10162,
=======
                        "referencedDeclaration": 10206,
>>>>>>> main
                        "src": "7973:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6296,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6265,
                        "src": "8011:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
=======
                        "id": 6331,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6300,
                        "src": "8011:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        },
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
=======
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement memory[] memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 6289,
                            "name": "spaceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6243,
=======
                            "id": 6324,
                            "name": "spaceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6278,
>>>>>>> main
                            "src": "7906:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
<<<<<<< HEAD
                          "id": 6288,
                          "name": "Space",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5692,
                          "src": "7900:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Space_$5692_$",
                            "typeString": "type(contract Space)"
                          }
                        },
                        "id": 6290,
=======
                          "id": 6323,
                          "name": "Space",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5727,
                          "src": "7900:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Space_$5727_$",
                            "typeString": "type(contract Space)"
                          }
                        },
                        "id": 6325,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7900:19:14",
                        "tryCall": false,
                        "typeDescriptions": {
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_Space_$5692",
                          "typeString": "contract Space"
                        }
                      },
                      "id": 6291,
=======
                          "typeIdentifier": "t_contract$_Space_$5727",
                          "typeString": "contract Space"
                        }
                      },
                      "id": 6326,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7920:10:14",
                      "memberName": "createRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4420,
                      "src": "7900:30:14",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory[] memory,struct DataTypes.Entitlement memory[] memory) external returns (uint256)"
                      }
                    },
                    "id": 6297,
=======
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory[] memory,struct DataTypes.Entitlement memory[] memory) external returns (uint256)"
                      }
                    },
                    "id": 6332,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7900:130:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7873:157:14"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 6303,
=======
                    "id": 6338,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
<<<<<<< HEAD
                          "id": 6299,
                          "name": "_extraEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6250,
                          "src": "8080:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10170_memory_ptr",
                            "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                          }
                        },
                        "id": 6300,
=======
                          "id": 6334,
                          "name": "_extraEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6285,
                          "src": "8080:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10214_memory_ptr",
                            "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                          }
                        },
                        "id": 6335,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8099:5:14",
                        "memberName": "users",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 10169,
=======
                        "referencedDeclaration": 10213,
>>>>>>> main
                        "src": "8080:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
<<<<<<< HEAD
                      "id": 6301,
=======
                      "id": 6336,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8105:6:14",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8080:31:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 6302,
=======
                      "id": 6337,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8114:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8080:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 6321,
                  "nodeType": "IfStatement",
                  "src": "8076:212:14",
                  "trueBody": {
                    "id": 6320,
=======
                  "id": 6356,
                  "nodeType": "IfStatement",
                  "src": "8076:212:14",
                  "trueBody": {
                    "id": 6355,
>>>>>>> main
                    "nodeType": "Block",
                    "src": "8117:171:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 6308,
                              "name": "additionalRoleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6287,
=======
                              "id": 6343,
                              "name": "additionalRoleId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6322,
>>>>>>> main
                              "src": "8175:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
<<<<<<< HEAD
                                  "id": 6311,
                                  "name": "userAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6247,
=======
                                  "id": 6346,
                                  "name": "userAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6282,
>>>>>>> main
                                  "src": "8223:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
<<<<<<< HEAD
                                        "id": 6314,
                                        "name": "_extraEntitlements",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6250,
                                        "src": "8247:18:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10170_memory_ptr",
                                          "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                                        }
                                      },
                                      "id": 6315,
=======
                                        "id": 6349,
                                        "name": "_extraEntitlements",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6285,
                                        "src": "8247:18:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10214_memory_ptr",
                                          "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                                        }
                                      },
                                      "id": 6350,
>>>>>>> main
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8266:5:14",
                                      "memberName": "users",
                                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                                      "referencedDeclaration": 10169,
=======
                                      "referencedDeclaration": 10213,
>>>>>>> main
                                      "src": "8247:24:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    ],
                                    "expression": {
<<<<<<< HEAD
                                      "id": 6312,
=======
                                      "id": 6347,
>>>>>>> main
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "8236:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
<<<<<<< HEAD
                                    "id": 6313,
=======
                                    "id": 6348,
>>>>>>> main
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "8240:6:14",
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "8236:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
<<<<<<< HEAD
                                  "id": 6316,
=======
                                  "id": 6351,
>>>>>>> main
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8236:36:14",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
<<<<<<< HEAD
                                  "id": 6309,
                                  "name": "DataTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10171,
                                  "src": "8201:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_DataTypes_$10171_$",
                                    "typeString": "type(library DataTypes)"
                                  }
                                },
                                "id": 6310,
=======
                                  "id": 6344,
                                  "name": "DataTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10215,
                                  "src": "8201:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_DataTypes_$10215_$",
                                    "typeString": "type(library DataTypes)"
                                  }
                                },
                                "id": 6345,
>>>>>>> main
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8211:11:14",
                                "memberName": "Entitlement",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 10140,
                                "src": "8201:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Entitlement_$10140_storage_ptr_$",
                                  "typeString": "type(struct DataTypes.Entitlement storage pointer)"
                                }
                              },
                              "id": 6317,
=======
                                "referencedDeclaration": 10175,
                                "src": "8201:21:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Entitlement_$10175_storage_ptr_$",
                                  "typeString": "type(struct DataTypes.Entitlement storage pointer)"
                                }
                              },
                              "id": 6352,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8201:72:14",
                              "tryCall": false,
                              "typeDescriptions": {
<<<<<<< HEAD
                                "typeIdentifier": "t_struct$_Entitlement_$10140_memory_ptr",
=======
                                "typeIdentifier": "t_struct$_Entitlement_$10175_memory_ptr",
>>>>>>> main
                                "typeString": "struct DataTypes.Entitlement memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_struct$_Entitlement_$10140_memory_ptr",
=======
                                "typeIdentifier": "t_struct$_Entitlement_$10175_memory_ptr",
>>>>>>> main
                                "typeString": "struct DataTypes.Entitlement memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
<<<<<<< HEAD
                                  "id": 6305,
                                  "name": "spaceAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6243,
=======
                                  "id": 6340,
                                  "name": "spaceAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6278,
>>>>>>> main
                                  "src": "8131:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
<<<<<<< HEAD
                                "id": 6304,
                                "name": "Space",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5692,
                                "src": "8125:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Space_$5692_$",
                                  "typeString": "type(contract Space)"
                                }
                              },
                              "id": 6306,
=======
                                "id": 6339,
                                "name": "Space",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5727,
                                "src": "8125:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Space_$5727_$",
                                  "typeString": "type(contract Space)"
                                }
                              },
                              "id": 6341,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8125:19:14",
                              "tryCall": false,
                              "typeDescriptions": {
<<<<<<< HEAD
                                "typeIdentifier": "t_contract$_Space_$5692",
                                "typeString": "contract Space"
                              }
                            },
                            "id": 6307,
=======
                                "typeIdentifier": "t_contract$_Space_$5727",
                                "typeString": "contract Space"
                              }
                            },
                            "id": 6342,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8145:20:14",
                            "memberName": "addRoleToEntitlement",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 5327,
                            "src": "8125:40:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_Entitlement_$10140_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct DataTypes.Entitlement memory) external"
                            }
                          },
                          "id": 6318,
=======
                            "referencedDeclaration": 5362,
                            "src": "8125:40:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_Entitlement_$10175_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,struct DataTypes.Entitlement memory) external"
                            }
                          },
                          "id": 6353,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8125:156:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
<<<<<<< HEAD
                        "id": 6319,
=======
                        "id": 6354,
>>>>>>> main
                        "nodeType": "ExpressionStatement",
                        "src": "8125:156:14"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
<<<<<<< HEAD
                    "id": 6326,
=======
                    "id": 6361,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
<<<<<<< HEAD
                          "id": 6322,
                          "name": "_extraEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6250,
                          "src": "8338:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10170_memory_ptr",
                            "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                          }
                        },
                        "id": 6323,
=======
                          "id": 6357,
                          "name": "_extraEntitlements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6285,
                          "src": "8338:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10214_memory_ptr",
                            "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                          }
                        },
                        "id": 6358,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8357:6:14",
                        "memberName": "tokens",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 10166,
                        "src": "8338:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10150_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DataTypes.ExternalToken memory[] memory"
                        }
                      },
                      "id": 6324,
=======
                        "referencedDeclaration": 10210,
                        "src": "8338:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10194_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DataTypes.ExternalToken memory[] memory"
                        }
                      },
                      "id": 6359,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8364:6:14",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8338:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 6325,
=======
                      "id": 6360,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8374:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8338:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "id": 6328,
                  "nodeType": "IfStatement",
                  "src": "8334:50:14",
                  "trueBody": {
                    "functionReturnParameters": 6252,
                    "id": 6327,
=======
                  "id": 6363,
                  "nodeType": "IfStatement",
                  "src": "8334:50:14",
                  "trueBody": {
                    "functionReturnParameters": 6287,
                    "id": 6362,
>>>>>>> main
                    "nodeType": "Return",
                    "src": "8377:7:14"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 6333,
                        "name": "additionalRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6287,
=======
                        "id": 6368,
                        "name": "additionalRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6322,
>>>>>>> main
                        "src": "8438:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 6336,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6245,
=======
                            "id": 6371,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6280,
>>>>>>> main
                            "src": "8484:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
<<<<<<< HEAD
                                  "id": 6339,
                                  "name": "_extraEntitlements",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6250,
                                  "src": "8509:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10170_memory_ptr",
                                    "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                                  }
                                },
                                "id": 6340,
=======
                                  "id": 6374,
                                  "name": "_extraEntitlements",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6285,
                                  "src": "8509:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10214_memory_ptr",
                                    "typeString": "struct DataTypes.CreateSpaceExtraEntitlements memory"
                                  }
                                },
                                "id": 6375,
>>>>>>> main
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8528:6:14",
                                "memberName": "tokens",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 10166,
                                "src": "8509:25:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10150_memory_ptr_$dyn_memory_ptr",
=======
                                "referencedDeclaration": 10210,
                                "src": "8509:25:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10194_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                                  "typeString": "struct DataTypes.ExternalToken memory[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10150_memory_ptr_$dyn_memory_ptr",
=======
                                  "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10194_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                                  "typeString": "struct DataTypes.ExternalToken memory[] memory"
                                }
                              ],
                              "expression": {
<<<<<<< HEAD
                                "id": 6337,
=======
                                "id": 6372,
>>>>>>> main
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "8498:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
<<<<<<< HEAD
                              "id": 6338,
=======
                              "id": 6373,
>>>>>>> main
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8502:6:14",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "8498:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
<<<<<<< HEAD
                            "id": 6341,
=======
                            "id": 6376,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8498:37:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
<<<<<<< HEAD
                            "id": 6334,
                            "name": "DataTypes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10171,
                            "src": "8462:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_DataTypes_$10171_$",
                              "typeString": "type(library DataTypes)"
                            }
                          },
                          "id": 6335,
=======
                            "id": 6369,
                            "name": "DataTypes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10215,
                            "src": "8462:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_DataTypes_$10215_$",
                              "typeString": "type(library DataTypes)"
                            }
                          },
                          "id": 6370,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8472:11:14",
                          "memberName": "Entitlement",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
                          "referencedDeclaration": 10140,
                          "src": "8462:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Entitlement_$10140_storage_ptr_$",
                            "typeString": "type(struct DataTypes.Entitlement storage pointer)"
                          }
                        },
                        "id": 6342,
=======
                          "referencedDeclaration": 10175,
                          "src": "8462:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Entitlement_$10175_storage_ptr_$",
                            "typeString": "type(struct DataTypes.Entitlement storage pointer)"
                          }
                        },
                        "id": 6377,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8462:74:14",
                        "tryCall": false,
                        "typeDescriptions": {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_Entitlement_$10140_memory_ptr",
=======
                          "typeIdentifier": "t_struct$_Entitlement_$10175_memory_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_struct$_Entitlement_$10140_memory_ptr",
=======
                          "typeIdentifier": "t_struct$_Entitlement_$10175_memory_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 6330,
                            "name": "spaceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6243,
=======
                            "id": 6365,
                            "name": "spaceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6278,
>>>>>>> main
                            "src": "8396:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
<<<<<<< HEAD
                          "id": 6329,
                          "name": "Space",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5692,
                          "src": "8390:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Space_$5692_$",
                            "typeString": "type(contract Space)"
                          }
                        },
                        "id": 6331,
=======
                          "id": 6364,
                          "name": "Space",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5727,
                          "src": "8390:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Space_$5727_$",
                            "typeString": "type(contract Space)"
                          }
                        },
                        "id": 6366,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8390:19:14",
                        "tryCall": false,
                        "typeDescriptions": {
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_Space_$5692",
                          "typeString": "contract Space"
                        }
                      },
                      "id": 6332,
=======
                          "typeIdentifier": "t_contract$_Space_$5727",
                          "typeString": "contract Space"
                        }
                      },
                      "id": 6367,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8410:20:14",
                      "memberName": "addRoleToEntitlement",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 5327,
                      "src": "8390:40:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_Entitlement_$10140_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct DataTypes.Entitlement memory) external"
                      }
                    },
                    "id": 6343,
=======
                      "referencedDeclaration": 5362,
                      "src": "8390:40:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_struct$_Entitlement_$10175_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct DataTypes.Entitlement memory) external"
                      }
                    },
                    "id": 6378,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8390:152:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 6344,
=======
                  "id": 6379,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "8390:152:14"
                }
              ]
            },
            "documentation": {
<<<<<<< HEAD
              "id": 6241,
=======
              "id": 6276,
>>>>>>> main
              "nodeType": "StructuredDocumentation",
              "src": "7359:92:14",
              "text": "****************************\n Internal functions\n ****************************"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createExtraEntitlements",
            "nameLocation": "7463:24:14",
            "parameters": {
<<<<<<< HEAD
              "id": 6251,
=======
              "id": 6286,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6243,
=======
                  "id": 6278,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "spaceAddress",
                  "nameLocation": "7501:12:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6346,
=======
                  "scope": 6381,
>>>>>>> main
                  "src": "7493:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6242,
=======
                    "id": 6277,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7493:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6245,
=======
                  "id": 6280,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "7527:12:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6346,
=======
                  "scope": 6381,
>>>>>>> main
                  "src": "7519:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6244,
=======
                    "id": 6279,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7519:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6247,
=======
                  "id": 6282,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "7553:11:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6346,
=======
                  "scope": 6381,
>>>>>>> main
                  "src": "7545:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6246,
=======
                    "id": 6281,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7545:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6250,
=======
                  "id": 6285,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_extraEntitlements",
                  "nameLocation": "7616:18:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6346,
=======
                  "scope": 6381,
>>>>>>> main
                  "src": "7570:64:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
<<<<<<< HEAD
                    "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10170_memory_ptr",
                    "typeString": "struct DataTypes.CreateSpaceExtraEntitlements"
                  },
                  "typeName": {
                    "id": 6249,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6248,
=======
                    "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10214_memory_ptr",
                    "typeString": "struct DataTypes.CreateSpaceExtraEntitlements"
                  },
                  "typeName": {
                    "id": 6284,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6283,
>>>>>>> main
                      "name": "DataTypes.CreateSpaceExtraEntitlements",
                      "nameLocations": [
                        "7570:9:14",
                        "7580:28:14"
                      ],
                      "nodeType": "IdentifierPath",
<<<<<<< HEAD
                      "referencedDeclaration": 10170,
                      "src": "7570:38:14"
                    },
                    "referencedDeclaration": 10170,
                    "src": "7570:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10170_storage_ptr",
=======
                      "referencedDeclaration": 10214,
                      "src": "7570:38:14"
                    },
                    "referencedDeclaration": 10214,
                    "src": "7570:38:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CreateSpaceExtraEntitlements_$10214_storage_ptr",
>>>>>>> main
                      "typeString": "struct DataTypes.CreateSpaceExtraEntitlements"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7487:151:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 6252,
=======
              "id": 6287,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7648:0:14"
            },
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 6442,
=======
            "id": 6477,
>>>>>>> main
            "nodeType": "FunctionDefinition",
            "src": "8551:960:14",
            "nodes": [],
            "body": {
<<<<<<< HEAD
              "id": 6441,
=======
              "id": 6476,
>>>>>>> main
              "nodeType": "Block",
              "src": "8670:841:14",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
<<<<<<< HEAD
                    6360
=======
                    6395
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 6360,
=======
                      "id": 6395,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "8745:6:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6441,
=======
                      "scope": 6476,
>>>>>>> main
                      "src": "8712:39:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10150_memory_ptr_$dyn_memory_ptr",
=======
                        "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10194_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                        "typeString": "struct DataTypes.ExternalToken[]"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6358,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6357,
=======
                          "id": 6393,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6392,
>>>>>>> main
                            "name": "DataTypes.ExternalToken",
                            "nameLocations": [
                              "8712:9:14",
                              "8722:13:14"
                            ],
                            "nodeType": "IdentifierPath",
<<<<<<< HEAD
                            "referencedDeclaration": 10150,
                            "src": "8712:23:14"
                          },
                          "referencedDeclaration": 10150,
                          "src": "8712:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExternalToken_$10150_storage_ptr",
                            "typeString": "struct DataTypes.ExternalToken"
                          }
                        },
                        "id": 6359,
                        "nodeType": "ArrayTypeName",
                        "src": "8712:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10150_storage_$dyn_storage_ptr",
=======
                            "referencedDeclaration": 10194,
                            "src": "8712:23:14"
                          },
                          "referencedDeclaration": 10194,
                          "src": "8712:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExternalToken_$10194_storage_ptr",
                            "typeString": "struct DataTypes.ExternalToken"
                          }
                        },
                        "id": 6394,
                        "nodeType": "ArrayTypeName",
                        "src": "8712:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10194_storage_$dyn_storage_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.ExternalToken[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 6367,
=======
                  "id": 6402,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
<<<<<<< HEAD
                        "id": 6365,
=======
                        "id": 6400,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8784:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
<<<<<<< HEAD
                      "id": 6364,
=======
                      "id": 6399,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8754:29:14",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ExternalToken_$10150_memory_ptr_$dyn_memory_ptr_$",
=======
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_ExternalToken_$10194_memory_ptr_$dyn_memory_ptr_$",
>>>>>>> main
                        "typeString": "function (uint256) pure returns (struct DataTypes.ExternalToken memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6362,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6361,
=======
                          "id": 6397,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6396,
>>>>>>> main
                            "name": "DataTypes.ExternalToken",
                            "nameLocations": [
                              "8758:9:14",
                              "8768:13:14"
                            ],
                            "nodeType": "IdentifierPath",
<<<<<<< HEAD
                            "referencedDeclaration": 10150,
                            "src": "8758:23:14"
                          },
                          "referencedDeclaration": 10150,
                          "src": "8758:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExternalToken_$10150_storage_ptr",
                            "typeString": "struct DataTypes.ExternalToken"
                          }
                        },
                        "id": 6363,
                        "nodeType": "ArrayTypeName",
                        "src": "8758:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10150_storage_$dyn_storage_ptr",
=======
                            "referencedDeclaration": 10194,
                            "src": "8758:23:14"
                          },
                          "referencedDeclaration": 10194,
                          "src": "8758:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExternalToken_$10194_storage_ptr",
                            "typeString": "struct DataTypes.ExternalToken"
                          }
                        },
                        "id": 6398,
                        "nodeType": "ArrayTypeName",
                        "src": "8758:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10194_storage_$dyn_storage_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.ExternalToken[]"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 6366,
=======
                    "id": 6401,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8754:32:14",
                    "tryCall": false,
                    "typeDescriptions": {
<<<<<<< HEAD
                      "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10150_memory_ptr_$dyn_memory_ptr",
=======
                      "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10194_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                      "typeString": "struct DataTypes.ExternalToken memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8712:74:14"
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    6372
=======
                    6407
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 6372,
=======
                      "id": 6407,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "tokenIds",
                      "nameLocation": "8810:8:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6441,
=======
                      "scope": 6476,
>>>>>>> main
                      "src": "8793:25:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6370,
=======
                          "id": 6405,
>>>>>>> main
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8793:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 6371,
=======
                        "id": 6406,
>>>>>>> main
                        "nodeType": "ArrayTypeName",
                        "src": "8793:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 6378,
=======
                  "id": 6413,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
<<<<<<< HEAD
                        "id": 6376,
=======
                        "id": 6411,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8835:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
<<<<<<< HEAD
                      "id": 6375,
=======
                      "id": 6410,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8821:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6373,
=======
                          "id": 6408,
>>>>>>> main
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8825:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
                        "id": 6374,
=======
                        "id": 6409,
>>>>>>> main
                        "nodeType": "ArrayTypeName",
                        "src": "8825:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 6377,
=======
                    "id": 6412,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8821:16:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8793:44:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 6383,
=======
                    "id": 6418,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 6379,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6372,
=======
                        "id": 6414,
                        "name": "tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6407,
>>>>>>> main
                        "src": "8843:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
<<<<<<< HEAD
                      "id": 6381,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6380,
=======
                      "id": 6416,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6415,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8852:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8843:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
<<<<<<< HEAD
                      "id": 6382,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6352,
=======
                      "id": 6417,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6387,
>>>>>>> main
                      "src": "8857:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8843:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 6384,
=======
                  "id": 6419,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "8843:21:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 6395,
=======
                    "id": 6430,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 6385,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6360,
                        "src": "8906:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10150_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DataTypes.ExternalToken memory[] memory"
                        }
                      },
                      "id": 6387,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6386,
=======
                        "id": 6420,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6395,
                        "src": "8906:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10194_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DataTypes.ExternalToken memory[] memory"
                        }
                      },
                      "id": 6422,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6421,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8913:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8906:9:14",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_struct$_ExternalToken_$10150_memory_ptr",
=======
                        "typeIdentifier": "t_struct$_ExternalToken_$10194_memory_ptr",
>>>>>>> main
                        "typeString": "struct DataTypes.ExternalToken memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
<<<<<<< HEAD
                          "id": 6390,
                          "name": "SPACE_TOKEN_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5754,
=======
                          "id": 6425,
                          "name": "SPACE_TOKEN_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5789,
>>>>>>> main
                          "src": "8967:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "31",
<<<<<<< HEAD
                          "id": 6391,
=======
                          "id": 6426,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9004:1:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "hexValue": "74727565",
<<<<<<< HEAD
                          "id": 6392,
=======
                          "id": 6427,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9028:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
<<<<<<< HEAD
                          "id": 6393,
                          "name": "tokenIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6372,
=======
                          "id": 6428,
                          "name": "tokenIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6407,
>>>>>>> main
                          "src": "9050:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        ],
                        "expression": {
<<<<<<< HEAD
                          "id": 6388,
                          "name": "DataTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10171,
                          "src": "8918:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DataTypes_$10171_$",
                            "typeString": "type(library DataTypes)"
                          }
                        },
                        "id": 6389,
=======
                          "id": 6423,
                          "name": "DataTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10215,
                          "src": "8918:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DataTypes_$10215_$",
                            "typeString": "type(library DataTypes)"
                          }
                        },
                        "id": 6424,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8928:13:14",
                        "memberName": "ExternalToken",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 10150,
                        "src": "8918:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ExternalToken_$10150_storage_ptr_$",
                          "typeString": "type(struct DataTypes.ExternalToken storage pointer)"
                        }
                      },
                      "id": 6394,
=======
                        "referencedDeclaration": 10194,
                        "src": "8918:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ExternalToken_$10194_storage_ptr_$",
                          "typeString": "type(struct DataTypes.ExternalToken storage pointer)"
                        }
                      },
                      "id": 6429,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "8950:15:14",
                        "8994:8:14",
                        "9013:13:14",
                        "9040:8:14"
                      ],
                      "names": [
                        "contractAddress",
                        "quantity",
                        "isSingleToken",
                        "tokenIds"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "8918:147:14",
                      "tryCall": false,
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_struct$_ExternalToken_$10150_memory_ptr",
=======
                        "typeIdentifier": "t_struct$_ExternalToken_$10194_memory_ptr",
>>>>>>> main
                        "typeString": "struct DataTypes.ExternalToken memory"
                      }
                    },
                    "src": "8906:159:14",
                    "typeDescriptions": {
<<<<<<< HEAD
                      "typeIdentifier": "t_struct$_ExternalToken_$10150_memory_ptr",
                      "typeString": "struct DataTypes.ExternalToken memory"
                    }
                  },
                  "id": 6396,
=======
                      "typeIdentifier": "t_struct$_ExternalToken_$10194_memory_ptr",
                      "typeString": "struct DataTypes.ExternalToken memory"
                    }
                  },
                  "id": 6431,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "8906:159:14"
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    6402
=======
                    6437
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 6402,
=======
                      "id": 6437,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "_entitlements",
                      "nameLocation": "9103:13:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6441,
=======
                      "scope": 6476,
>>>>>>> main
                      "src": "9072:44:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
=======
                        "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                        "typeString": "struct DataTypes.Entitlement[]"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6400,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6399,
=======
                          "id": 6435,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6434,
>>>>>>> main
                            "name": "DataTypes.Entitlement",
                            "nameLocations": [
                              "9072:9:14",
                              "9082:11:14"
                            ],
                            "nodeType": "IdentifierPath",
<<<<<<< HEAD
                            "referencedDeclaration": 10140,
                            "src": "9072:21:14"
                          },
                          "referencedDeclaration": 10140,
                          "src": "9072:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entitlement_$10140_storage_ptr",
                            "typeString": "struct DataTypes.Entitlement"
                          }
                        },
                        "id": 6401,
                        "nodeType": "ArrayTypeName",
                        "src": "9072:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_storage_$dyn_storage_ptr",
=======
                            "referencedDeclaration": 10175,
                            "src": "9072:21:14"
                          },
                          "referencedDeclaration": 10175,
                          "src": "9072:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entitlement_$10175_storage_ptr",
                            "typeString": "struct DataTypes.Entitlement"
                          }
                        },
                        "id": 6436,
                        "nodeType": "ArrayTypeName",
                        "src": "9072:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_storage_$dyn_storage_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 6409,
=======
                  "id": 6444,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
<<<<<<< HEAD
                        "id": 6407,
=======
                        "id": 6442,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9154:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
<<<<<<< HEAD
                      "id": 6406,
=======
                      "id": 6441,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9119:27:14",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr_$",
=======
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr_$",
>>>>>>> main
                        "typeString": "function (uint256) pure returns (struct DataTypes.Entitlement memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6404,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6403,
=======
                          "id": 6439,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6438,
>>>>>>> main
                            "name": "DataTypes.Entitlement",
                            "nameLocations": [
                              "9123:9:14",
                              "9133:11:14"
                            ],
                            "nodeType": "IdentifierPath",
<<<<<<< HEAD
                            "referencedDeclaration": 10140,
                            "src": "9123:21:14"
                          },
                          "referencedDeclaration": 10140,
                          "src": "9123:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entitlement_$10140_storage_ptr",
                            "typeString": "struct DataTypes.Entitlement"
                          }
                        },
                        "id": 6405,
                        "nodeType": "ArrayTypeName",
                        "src": "9123:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_storage_$dyn_storage_ptr",
=======
                            "referencedDeclaration": 10175,
                            "src": "9123:21:14"
                          },
                          "referencedDeclaration": 10175,
                          "src": "9123:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entitlement_$10175_storage_ptr",
                            "typeString": "struct DataTypes.Entitlement"
                          }
                        },
                        "id": 6440,
                        "nodeType": "ArrayTypeName",
                        "src": "9123:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_storage_$dyn_storage_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement[]"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 6408,
=======
                    "id": 6443,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9119:42:14",
                    "tryCall": false,
                    "typeDescriptions": {
<<<<<<< HEAD
                      "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
=======
                      "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                      "typeString": "struct DataTypes.Entitlement memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9072:89:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 6421,
=======
                    "id": 6456,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 6410,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6402,
                        "src": "9167:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DataTypes.Entitlement memory[] memory"
                        }
                      },
                      "id": 6412,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6411,
=======
                        "id": 6445,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6437,
                        "src": "9167:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DataTypes.Entitlement memory[] memory"
                        }
                      },
                      "id": 6447,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6446,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9181:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9167:16:14",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_struct$_Entitlement_$10140_memory_ptr",
=======
                        "typeIdentifier": "t_struct$_Entitlement_$10175_memory_ptr",
>>>>>>> main
                        "typeString": "struct DataTypes.Entitlement memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
<<<<<<< HEAD
                          "id": 6415,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6350,
=======
                          "id": 6450,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6385,
>>>>>>> main
                          "src": "9224:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 6418,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6360,
                              "src": "9261:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10150_memory_ptr_$dyn_memory_ptr",
=======
                              "id": 6453,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6395,
                              "src": "9261:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10194_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                                "typeString": "struct DataTypes.ExternalToken memory[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
<<<<<<< HEAD
                                "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10150_memory_ptr_$dyn_memory_ptr",
=======
                                "typeIdentifier": "t_array$_t_struct$_ExternalToken_$10194_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                                "typeString": "struct DataTypes.ExternalToken memory[] memory"
                              }
                            ],
                            "expression": {
<<<<<<< HEAD
                              "id": 6416,
=======
                              "id": 6451,
>>>>>>> main
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "9250:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
<<<<<<< HEAD
                            "id": 6417,
=======
                            "id": 6452,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "9254:6:14",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "9250:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
<<<<<<< HEAD
                          "id": 6419,
=======
                          "id": 6454,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9250:18:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
<<<<<<< HEAD
                          "id": 6413,
                          "name": "DataTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10171,
                          "src": "9186:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DataTypes_$10171_$",
                            "typeString": "type(library DataTypes)"
                          }
                        },
                        "id": 6414,
=======
                          "id": 6448,
                          "name": "DataTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10215,
                          "src": "9186:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DataTypes_$10215_$",
                            "typeString": "type(library DataTypes)"
                          }
                        },
                        "id": 6449,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9196:11:14",
                        "memberName": "Entitlement",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 10140,
                        "src": "9186:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Entitlement_$10140_storage_ptr_$",
                          "typeString": "type(struct DataTypes.Entitlement storage pointer)"
                        }
                      },
                      "id": 6420,
=======
                        "referencedDeclaration": 10175,
                        "src": "9186:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Entitlement_$10175_storage_ptr_$",
                          "typeString": "type(struct DataTypes.Entitlement storage pointer)"
                        }
                      },
                      "id": 6455,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "9216:6:14",
                        "9244:4:14"
                      ],
                      "names": [
                        "module",
                        "data"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "9186:89:14",
                      "tryCall": false,
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_struct$_Entitlement_$10140_memory_ptr",
=======
                        "typeIdentifier": "t_struct$_Entitlement_$10175_memory_ptr",
>>>>>>> main
                        "typeString": "struct DataTypes.Entitlement memory"
                      }
                    },
                    "src": "9167:108:14",
                    "typeDescriptions": {
<<<<<<< HEAD
                      "typeIdentifier": "t_struct$_Entitlement_$10140_memory_ptr",
                      "typeString": "struct DataTypes.Entitlement memory"
                    }
                  },
                  "id": 6422,
=======
                      "typeIdentifier": "t_struct$_Entitlement_$10175_memory_ptr",
                      "typeString": "struct DataTypes.Entitlement memory"
                    }
                  },
                  "id": 6457,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "9167:108:14"
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    6424
=======
                    6459
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 6424,
=======
                      "id": 6459,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "ownerRoleId",
                      "nameLocation": "9336:11:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6441,
=======
                      "scope": 6476,
>>>>>>> main
                      "src": "9328:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
                        "id": 6423,
=======
                        "id": 6458,
>>>>>>> main
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9328:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 6433,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6429,
                        "name": "ownerRoleName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5746,
=======
                  "id": 6468,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6464,
                        "name": "ownerRoleName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5781,
>>>>>>> main
                        "src": "9388:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6430,
                        "name": "ownerPermissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5757,
=======
                        "id": 6465,
                        "name": "ownerPermissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5792,
>>>>>>> main
                        "src": "9409:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6431,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6402,
                        "src": "9433:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
=======
                        "id": 6466,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6437,
                        "src": "9433:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        },
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
=======
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement memory[] memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 6426,
                            "name": "spaceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6348,
=======
                            "id": 6461,
                            "name": "spaceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6383,
>>>>>>> main
                            "src": "9356:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
<<<<<<< HEAD
                          "id": 6425,
                          "name": "Space",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5692,
                          "src": "9350:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Space_$5692_$",
                            "typeString": "type(contract Space)"
                          }
                        },
                        "id": 6427,
=======
                          "id": 6460,
                          "name": "Space",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5727,
                          "src": "9350:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Space_$5727_$",
                            "typeString": "type(contract Space)"
                          }
                        },
                        "id": 6462,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9350:19:14",
                        "tryCall": false,
                        "typeDescriptions": {
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_Space_$5692",
                          "typeString": "contract Space"
                        }
                      },
                      "id": 6428,
=======
                          "typeIdentifier": "t_contract$_Space_$5727",
                          "typeString": "contract Space"
                        }
                      },
                      "id": 6463,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9370:10:14",
                      "memberName": "createRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4420,
                      "src": "9350:30:14",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory[] memory,struct DataTypes.Entitlement memory[] memory) external returns (uint256)"
                      }
                    },
                    "id": 6432,
=======
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory[] memory,struct DataTypes.Entitlement memory[] memory) external returns (uint256)"
                      }
                    },
                    "id": 6467,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9350:102:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9328:124:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 6438,
                        "name": "ownerRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6424,
=======
                        "id": 6473,
                        "name": "ownerRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6459,
>>>>>>> main
                        "src": "9494:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 6435,
                            "name": "spaceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6348,
=======
                            "id": 6470,
                            "name": "spaceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6383,
>>>>>>> main
                            "src": "9465:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
<<<<<<< HEAD
                          "id": 6434,
                          "name": "Space",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5692,
                          "src": "9459:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Space_$5692_$",
                            "typeString": "type(contract Space)"
                          }
                        },
                        "id": 6436,
=======
                          "id": 6469,
                          "name": "Space",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5727,
                          "src": "9459:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Space_$5727_$",
                            "typeString": "type(contract Space)"
                          }
                        },
                        "id": 6471,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9459:19:14",
                        "tryCall": false,
                        "typeDescriptions": {
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_Space_$5692",
                          "typeString": "contract Space"
                        }
                      },
                      "id": 6437,
=======
                          "typeIdentifier": "t_contract$_Space_$5727",
                          "typeString": "contract Space"
                        }
                      },
                      "id": 6472,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9479:14:14",
                      "memberName": "setOwnerRoleId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3931,
                      "src": "9459:34:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
<<<<<<< HEAD
                    "id": 6439,
=======
                    "id": 6474,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9459:47:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 6440,
=======
                  "id": 6475,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "9459:47:14"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createOwnerEntitlement",
            "nameLocation": "8560:23:14",
            "parameters": {
<<<<<<< HEAD
              "id": 6353,
=======
              "id": 6388,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6348,
=======
                  "id": 6383,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "spaceAddress",
                  "nameLocation": "8597:12:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6442,
=======
                  "scope": 6477,
>>>>>>> main
                  "src": "8589:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6347,
=======
                    "id": 6382,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8589:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6350,
=======
                  "id": 6385,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "8623:12:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6442,
=======
                  "scope": 6477,
>>>>>>> main
                  "src": "8615:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6349,
=======
                    "id": 6384,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8615:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6352,
=======
                  "id": 6387,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8649:7:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6442,
=======
                  "scope": 6477,
>>>>>>> main
                  "src": "8641:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6351,
=======
                    "id": 6386,
>>>>>>> main
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8641:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8583:77:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 6354,
=======
              "id": 6389,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8670:0:14"
            },
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 6506,
=======
            "id": 6541,
>>>>>>> main
            "nodeType": "FunctionDefinition",
            "src": "9515:542:14",
            "nodes": [],
            "body": {
<<<<<<< HEAD
              "id": 6505,
=======
              "id": 6540,
>>>>>>> main
              "nodeType": "Block",
              "src": "9649:408:14",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
<<<<<<< HEAD
                    6457
=======
                    6492
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 6457,
=======
                      "id": 6492,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "_entitlements",
                      "nameLocation": "9686:13:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6505,
=======
                      "scope": 6540,
>>>>>>> main
                      "src": "9655:44:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
=======
                        "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                        "typeString": "struct DataTypes.Entitlement[]"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6455,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6454,
=======
                          "id": 6490,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6489,
>>>>>>> main
                            "name": "DataTypes.Entitlement",
                            "nameLocations": [
                              "9655:9:14",
                              "9665:11:14"
                            ],
                            "nodeType": "IdentifierPath",
<<<<<<< HEAD
                            "referencedDeclaration": 10140,
                            "src": "9655:21:14"
                          },
                          "referencedDeclaration": 10140,
                          "src": "9655:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entitlement_$10140_storage_ptr",
                            "typeString": "struct DataTypes.Entitlement"
                          }
                        },
                        "id": 6456,
                        "nodeType": "ArrayTypeName",
                        "src": "9655:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_storage_$dyn_storage_ptr",
=======
                            "referencedDeclaration": 10175,
                            "src": "9655:21:14"
                          },
                          "referencedDeclaration": 10175,
                          "src": "9655:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entitlement_$10175_storage_ptr",
                            "typeString": "struct DataTypes.Entitlement"
                          }
                        },
                        "id": 6491,
                        "nodeType": "ArrayTypeName",
                        "src": "9655:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_storage_$dyn_storage_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 6464,
=======
                  "id": 6499,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
<<<<<<< HEAD
                        "id": 6462,
=======
                        "id": 6497,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9737:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
<<<<<<< HEAD
                      "id": 6461,
=======
                      "id": 6496,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9702:27:14",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr_$",
=======
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr_$",
>>>>>>> main
                        "typeString": "function (uint256) pure returns (struct DataTypes.Entitlement memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6459,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6458,
=======
                          "id": 6494,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6493,
>>>>>>> main
                            "name": "DataTypes.Entitlement",
                            "nameLocations": [
                              "9706:9:14",
                              "9716:11:14"
                            ],
                            "nodeType": "IdentifierPath",
<<<<<<< HEAD
                            "referencedDeclaration": 10140,
                            "src": "9706:21:14"
                          },
                          "referencedDeclaration": 10140,
                          "src": "9706:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entitlement_$10140_storage_ptr",
                            "typeString": "struct DataTypes.Entitlement"
                          }
                        },
                        "id": 6460,
                        "nodeType": "ArrayTypeName",
                        "src": "9706:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_storage_$dyn_storage_ptr",
=======
                            "referencedDeclaration": 10175,
                            "src": "9706:21:14"
                          },
                          "referencedDeclaration": 10175,
                          "src": "9706:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Entitlement_$10175_storage_ptr",
                            "typeString": "struct DataTypes.Entitlement"
                          }
                        },
                        "id": 6495,
                        "nodeType": "ArrayTypeName",
                        "src": "9706:23:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_storage_$dyn_storage_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement[]"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 6463,
=======
                    "id": 6498,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9702:42:14",
                    "tryCall": false,
                    "typeDescriptions": {
<<<<<<< HEAD
                      "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
=======
                      "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                      "typeString": "struct DataTypes.Entitlement memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9655:89:14"
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    6469
=======
                    6504
>>>>>>> main
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
                      "id": 6469,
=======
                      "id": 6504,
>>>>>>> main
                      "mutability": "mutable",
                      "name": "users",
                      "nameLocation": "9768:5:14",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 6505,
=======
                      "scope": 6540,
>>>>>>> main
                      "src": "9751:22:14",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6467,
=======
                          "id": 6502,
>>>>>>> main
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9751:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "id": 6468,
=======
                        "id": 6503,
>>>>>>> main
                        "nodeType": "ArrayTypeName",
                        "src": "9751:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
                  "id": 6475,
=======
                  "id": 6510,
>>>>>>> main
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
<<<<<<< HEAD
                        "id": 6473,
=======
                        "id": 6508,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9790:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
<<<<<<< HEAD
                      "id": 6472,
=======
                      "id": 6507,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9776:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
<<<<<<< HEAD
                          "id": 6470,
=======
                          "id": 6505,
>>>>>>> main
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9780:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "id": 6471,
=======
                        "id": 6506,
>>>>>>> main
                        "nodeType": "ArrayTypeName",
                        "src": "9780:9:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
<<<<<<< HEAD
                    "id": 6474,
=======
                    "id": 6509,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9776:16:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9751:41:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 6481,
=======
                    "id": 6516,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 6476,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6469,
=======
                        "id": 6511,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6504,
>>>>>>> main
                        "src": "9798:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
<<<<<<< HEAD
                      "id": 6478,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6477,
=======
                      "id": 6513,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6512,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9804:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9798:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
<<<<<<< HEAD
                        "id": 6479,
                        "name": "Utils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10478,
                        "src": "9809:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Utils_$10478_$",
                          "typeString": "type(library Utils)"
                        }
                      },
                      "id": 6480,
=======
                        "id": 6514,
                        "name": "Utils",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10522,
                        "src": "9809:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Utils_$10522_$",
                          "typeString": "type(library Utils)"
                        }
                      },
                      "id": 6515,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "9815:16:14",
                      "memberName": "EVERYONE_ADDRESS",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
                      "referencedDeclaration": 10323,
=======
                      "referencedDeclaration": 10367,
>>>>>>> main
                      "src": "9809:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9798:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 6482,
=======
                  "id": 6517,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "9798:33:14"
                },
                {
                  "expression": {
<<<<<<< HEAD
                    "id": 6494,
=======
                    "id": 6529,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
<<<<<<< HEAD
                        "id": 6483,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6457,
                        "src": "9838:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DataTypes.Entitlement memory[] memory"
                        }
                      },
                      "id": 6485,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6484,
=======
                        "id": 6518,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6492,
                        "src": "9838:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DataTypes.Entitlement memory[] memory"
                        }
                      },
                      "id": 6520,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 6519,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9852:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9838:16:14",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_struct$_Entitlement_$10140_memory_ptr",
=======
                        "typeIdentifier": "t_struct$_Entitlement_$10175_memory_ptr",
>>>>>>> main
                        "typeString": "struct DataTypes.Entitlement memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
<<<<<<< HEAD
                          "id": 6488,
                          "name": "userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6446,
=======
                          "id": 6523,
                          "name": "userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6481,
>>>>>>> main
                          "src": "9895:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
<<<<<<< HEAD
                              "id": 6491,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6469,
=======
                              "id": 6526,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6504,
>>>>>>> main
                              "src": "9931:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            ],
                            "expression": {
<<<<<<< HEAD
                              "id": 6489,
=======
                              "id": 6524,
>>>>>>> main
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "9920:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
<<<<<<< HEAD
                            "id": 6490,
=======
                            "id": 6525,
>>>>>>> main
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "9924:6:14",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "9920:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
<<<<<<< HEAD
                          "id": 6492,
=======
                          "id": 6527,
>>>>>>> main
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9920:17:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
<<<<<<< HEAD
                          "id": 6486,
                          "name": "DataTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10171,
                          "src": "9857:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DataTypes_$10171_$",
                            "typeString": "type(library DataTypes)"
                          }
                        },
                        "id": 6487,
=======
                          "id": 6521,
                          "name": "DataTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10215,
                          "src": "9857:9:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_DataTypes_$10215_$",
                            "typeString": "type(library DataTypes)"
                          }
                        },
                        "id": 6522,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9867:11:14",
                        "memberName": "Entitlement",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 10140,
                        "src": "9857:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Entitlement_$10140_storage_ptr_$",
                          "typeString": "type(struct DataTypes.Entitlement storage pointer)"
                        }
                      },
                      "id": 6493,
=======
                        "referencedDeclaration": 10175,
                        "src": "9857:21:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Entitlement_$10175_storage_ptr_$",
                          "typeString": "type(struct DataTypes.Entitlement storage pointer)"
                        }
                      },
                      "id": 6528,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "9887:6:14",
                        "9914:4:14"
                      ],
                      "names": [
                        "module",
                        "data"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "9857:87:14",
                      "tryCall": false,
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_struct$_Entitlement_$10140_memory_ptr",
=======
                        "typeIdentifier": "t_struct$_Entitlement_$10175_memory_ptr",
>>>>>>> main
                        "typeString": "struct DataTypes.Entitlement memory"
                      }
                    },
                    "src": "9838:106:14",
                    "typeDescriptions": {
<<<<<<< HEAD
                      "typeIdentifier": "t_struct$_Entitlement_$10140_memory_ptr",
                      "typeString": "struct DataTypes.Entitlement memory"
                    }
                  },
                  "id": 6495,
=======
                      "typeIdentifier": "t_struct$_Entitlement_$10175_memory_ptr",
                      "typeString": "struct DataTypes.Entitlement memory"
                    }
                  },
                  "id": 6530,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "9838:106:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
                        "id": 6500,
                        "name": "everyoneRoleName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5743,
=======
                        "id": 6535,
                        "name": "everyoneRoleName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5778,
>>>>>>> main
                        "src": "9989:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6501,
                        "name": "_permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6449,
=======
                        "id": 6536,
                        "name": "_permissions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6484,
>>>>>>> main
                        "src": "10013:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      {
<<<<<<< HEAD
                        "id": 6502,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6457,
                        "src": "10033:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
=======
                        "id": 6537,
                        "name": "_entitlements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6492,
                        "src": "10033:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        },
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr",
=======
                          "typeIdentifier": "t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr",
>>>>>>> main
                          "typeString": "struct DataTypes.Entitlement memory[] memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
<<<<<<< HEAD
                            "id": 6497,
                            "name": "spaceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6444,
=======
                            "id": 6532,
                            "name": "spaceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6479,
>>>>>>> main
                            "src": "9957:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
<<<<<<< HEAD
                          "id": 6496,
                          "name": "Space",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5692,
                          "src": "9951:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Space_$5692_$",
                            "typeString": "type(contract Space)"
                          }
                        },
                        "id": 6498,
=======
                          "id": 6531,
                          "name": "Space",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5727,
                          "src": "9951:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Space_$5727_$",
                            "typeString": "type(contract Space)"
                          }
                        },
                        "id": 6533,
>>>>>>> main
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9951:19:14",
                        "tryCall": false,
                        "typeDescriptions": {
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_Space_$5692",
                          "typeString": "contract Space"
                        }
                      },
                      "id": 6499,
=======
                          "typeIdentifier": "t_contract$_Space_$5727",
                          "typeString": "contract Space"
                        }
                      },
                      "id": 6534,
>>>>>>> main
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9971:10:14",
                      "memberName": "createRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4420,
                      "src": "9951:30:14",
                      "typeDescriptions": {
<<<<<<< HEAD
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Entitlement_$10140_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory[] memory,struct DataTypes.Entitlement memory[] memory) external returns (uint256)"
                      }
                    },
                    "id": 6503,
=======
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_Entitlement_$10175_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory,string memory[] memory,struct DataTypes.Entitlement memory[] memory) external returns (uint256)"
                      }
                    },
                    "id": 6538,
>>>>>>> main
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9951:101:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 6504,
=======
                  "id": 6539,
>>>>>>> main
                  "nodeType": "ExpressionStatement",
                  "src": "9951:101:14"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createEveryoneEntitlement",
            "nameLocation": "9524:26:14",
            "parameters": {
<<<<<<< HEAD
              "id": 6450,
=======
              "id": 6485,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6444,
=======
                  "id": 6479,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "spaceAddress",
                  "nameLocation": "9564:12:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6506,
=======
                  "scope": 6541,
>>>>>>> main
                  "src": "9556:20:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6443,
=======
                    "id": 6478,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9556:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6446,
=======
                  "id": 6481,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "9590:11:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6506,
=======
                  "scope": 6541,
>>>>>>> main
                  "src": "9582:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6445,
=======
                    "id": 6480,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9582:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6449,
=======
                  "id": 6484,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "_permissions",
                  "nameLocation": "9623:12:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6506,
=======
                  "scope": 6541,
>>>>>>> main
                  "src": "9607:28:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
<<<<<<< HEAD
                      "id": 6447,
=======
                      "id": 6482,
>>>>>>> main
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "9607:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
<<<<<<< HEAD
                    "id": 6448,
=======
                    "id": 6483,
>>>>>>> main
                    "nodeType": "ArrayTypeName",
                    "src": "9607:8:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9550:89:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 6451,
=======
              "id": 6486,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9649:0:14"
            },
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
<<<<<<< HEAD
            "id": 6515,
=======
            "id": 6550,
>>>>>>> main
            "nodeType": "FunctionDefinition",
            "src": "10061:92:14",
            "nodes": [],
            "body": {
<<<<<<< HEAD
              "id": 6514,
=======
              "id": 6549,
>>>>>>> main
              "nodeType": "Block",
              "src": "10151:2:14",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
<<<<<<< HEAD
              56173
=======
              56196
>>>>>>> main
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "id": 6512,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6511,
=======
                "id": 6547,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6546,
>>>>>>> main
                  "name": "onlyOwner",
                  "nameLocations": [
                    "10141:9:14"
                  ],
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
                  "referencedDeclaration": 55399,
=======
                  "referencedDeclaration": 55422,
>>>>>>> main
                  "src": "10141:9:14"
                },
                "nodeType": "ModifierInvocation",
                "src": "10141:9:14"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "10070:17:14",
            "overrides": {
<<<<<<< HEAD
              "id": 6510,
=======
              "id": 6545,
>>>>>>> main
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10132:8:14"
            },
            "parameters": {
<<<<<<< HEAD
              "id": 6509,
=======
              "id": 6544,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 6508,
=======
                  "id": 6543,
>>>>>>> main
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "10101:17:14",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 6515,
=======
                  "scope": 6550,
>>>>>>> main
                  "src": "10093:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 6507,
=======
                    "id": 6542,
>>>>>>> main
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10093:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10087:35:14"
            },
            "returnParameters": {
<<<<<<< HEAD
              "id": 6513,
=======
              "id": 6548,
>>>>>>> main
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10151:0:14"
            },
<<<<<<< HEAD
            "scope": 6516,
=======
            "scope": 6551,
>>>>>>> main
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
<<<<<<< HEAD
              "id": 5729,
=======
              "id": 5764,
>>>>>>> main
              "name": "Initializable",
              "nameLocations": [
                "1477:13:14"
              ],
              "nodeType": "IdentifierPath",
<<<<<<< HEAD
              "referencedDeclaration": 56043,
              "src": "1477:13:14"
            },
            "id": 5730,
=======
              "referencedDeclaration": 56066,
              "src": "1477:13:14"
            },
            "id": 5765,
>>>>>>> main
            "nodeType": "InheritanceSpecifier",
            "src": "1477:13:14"
          },
          {
            "baseName": {
<<<<<<< HEAD
              "id": 5731,
=======
              "id": 5766,
>>>>>>> main
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "1494:18:14"
              ],
              "nodeType": "IdentifierPath",
<<<<<<< HEAD
              "referencedDeclaration": 55485,
              "src": "1494:18:14"
            },
            "id": 5732,
=======
              "referencedDeclaration": 55508,
              "src": "1494:18:14"
            },
            "id": 5767,
>>>>>>> main
            "nodeType": "InheritanceSpecifier",
            "src": "1494:18:14"
          },
          {
            "baseName": {
<<<<<<< HEAD
              "id": 5733,
=======
              "id": 5768,
>>>>>>> main
              "name": "ReentrancyGuardUpgradeable",
              "nameLocations": [
                "1516:26:14"
              ],
              "nodeType": "IdentifierPath",
<<<<<<< HEAD
              "referencedDeclaration": 56263,
              "src": "1516:26:14"
            },
            "id": 5734,
=======
              "referencedDeclaration": 56286,
              "src": "1516:26:14"
            },
            "id": 5769,
>>>>>>> main
            "nodeType": "InheritanceSpecifier",
            "src": "1516:26:14"
          },
          {
            "baseName": {
<<<<<<< HEAD
              "id": 5735,
=======
              "id": 5770,
>>>>>>> main
              "name": "ERC721HolderUpgradeable",
              "nameLocations": [
                "1546:23:14"
              ],
              "nodeType": "IdentifierPath",
<<<<<<< HEAD
              "referencedDeclaration": 56328,
              "src": "1546:23:14"
            },
            "id": 5736,
=======
              "referencedDeclaration": 56351,
              "src": "1546:23:14"
            },
            "id": 5771,
>>>>>>> main
            "nodeType": "InheritanceSpecifier",
            "src": "1546:23:14"
          },
          {
            "baseName": {
<<<<<<< HEAD
              "id": 5737,
=======
              "id": 5772,
>>>>>>> main
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "1573:15:14"
              ],
              "nodeType": "IdentifierPath",
<<<<<<< HEAD
              "referencedDeclaration": 56179,
              "src": "1573:15:14"
            },
            "id": 5738,
=======
              "referencedDeclaration": 56202,
              "src": "1573:15:14"
            },
            "id": 5773,
>>>>>>> main
            "nodeType": "InheritanceSpecifier",
            "src": "1573:15:14"
          },
          {
            "baseName": {
<<<<<<< HEAD
              "id": 5739,
=======
              "id": 5774,
>>>>>>> main
              "name": "ISpaceFactory",
              "nameLocations": [
                "1592:13:14"
              ],
              "nodeType": "IdentifierPath",
<<<<<<< HEAD
              "referencedDeclaration": 10116,
              "src": "1592:13:14"
            },
            "id": 5740,
=======
              "referencedDeclaration": 10151,
              "src": "1592:13:14"
            },
            "id": 5775,
>>>>>>> main
            "nodeType": "InheritanceSpecifier",
            "src": "1592:13:14"
          }
        ],
        "canonicalName": "SpaceFactory",
        "contractDependencies": [
<<<<<<< HEAD
          57973
=======
          57996
>>>>>>> main
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
<<<<<<< HEAD
          6516,
          10116,
          56179,
          55864,
          55495,
          56328,
          56281,
          56263,
          55485,
          56654,
          56043
        ],
        "name": "SpaceFactory",
        "nameLocation": "1459:12:14",
        "scope": 6517,
        "usedErrors": [
          10175,
          10177,
          10179,
          10181,
          10215
=======
          6551,
          10151,
          56202,
          55887,
          55518,
          56351,
          56304,
          56286,
          55508,
          56677,
          56066
        ],
        "name": "SpaceFactory",
        "nameLocation": "1459:12:14",
        "scope": 6552,
        "usedErrors": [
          10219,
          10221,
          10223,
          10225,
          10259
>>>>>>> main
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 14
}
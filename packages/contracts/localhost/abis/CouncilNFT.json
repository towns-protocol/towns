{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MaxSupply",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintPriceNotPaid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonExistentTokenURI",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawTransfer",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "allowlistMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "alreadyMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "privateMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startPublicMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startWaitlistMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "waitlistMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPayments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162001c3e38038062001c3e8339810160408190526200003491620001b3565b83836000620000448382620002db565b506001620000538282620002db565b505050620000706200006a6200009860201b60201c565b6200009c565b60076200007e8382620002db565b506080525050600a805460ff1916600117905550620003a7565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011657600080fd5b81516001600160401b0380821115620001335762000133620000ee565b604051601f8301601f19908116603f011681019082821181831017156200015e576200015e620000ee565b816040528381526020925086838588010111156200017b57600080fd5b600091505b838210156200019f578582018301518183018401529082019062000180565b600093810190920192909252949350505050565b60008060008060808587031215620001ca57600080fd5b84516001600160401b0380821115620001e257600080fd5b620001f08883890162000104565b955060208701519150808211156200020757600080fd5b620002158883890162000104565b945060408701519150808211156200022c57600080fd5b506200023b8782880162000104565b606096909601519497939650505050565b600181811c908216806200026157607f821691505b6020821081036200028257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d657600081815260208120601f850160051c81016020861015620002b15750805b601f850160051c820191505b81811015620002d257828155600101620002bd565b5050505b505050565b81516001600160401b03811115620002f757620002f7620000ee565b6200030f816200030884546200024c565b8462000288565b602080601f8311600181146200034757600084156200032e5750858301515b600019600386901b1c1916600185901b178555620002d2565b600085815260208120601f198616915b82811015620003785788860151825594840194600190910190840162000357565b5085821015620003975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161187b620003c36000396000610cde015261187b6000f3fe60806040526004361061019b5760003560e01c80636c0360eb116100ec578063a22cb4651161008a578063b88d4fde11610064578063b88d4fde14610481578063c87b56dd146104a1578063e985e9c5146104c1578063f2fde38b146104fc57600080fd5b8063a22cb4651461042d578063a839e5011461044d578063aebb096c1461046257600080fd5b806376c64c62116100c657806376c64c62146103d25780638da5cb5b146103e757806395d89b41146104055780639886a9021461041a57600080fd5b80636c0360eb1461038857806370a082311461039d578063715018a6146103bd57600080fd5b806323b872dd1161015957806341fbddbd1161013357806341fbddbd1461031b57806342842e0e146103355780636352211e146103555780636a6278421461037557600080fd5b806323b872dd146102bb57806326092b83146102db57806331b3eb94146102fb57600080fd5b80629a9b7b146101a057806301ffc9a7146101c957806306fdde03146101f9578063081812fc1461021b578063095ea7b3146102695780630a398b881461028b575b600080fd5b3480156101ac57600080fd5b506101b660085481565b6040519081526020015b60405180910390f35b3480156101d557600080fd5b506101e96101e43660046113bb565b61051c565b60405190151581526020016101c0565b34801561020557600080fd5b5061020e61056e565b6040516101c091906113d8565b34801561022757600080fd5b50610251610236366004611426565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101c0565b34801561027557600080fd5b50610289610284366004611454565b6105fc565b005b34801561029757600080fd5b506101e96102a6366004611480565b60096020526000908152604090205460ff1681565b3480156102c757600080fd5b506102896102d636600461149d565b6106e3565b3480156102e757600080fd5b50600a546101e99062010000900460ff1681565b34801561030757600080fd5b50610289610316366004611480565b6108aa565b34801561032757600080fd5b50600a546101e99060ff1681565b34801561034157600080fd5b5061028961035036600461149d565b61092b565b34801561036157600080fd5b50610251610370366004611426565b6109fb565b6101b6610383366004611480565b610a52565b34801561039457600080fd5b5061020e610b23565b3480156103a957600080fd5b506101b66103b8366004611480565b610b30565b3480156103c957600080fd5b50610289610b93565b3480156103de57600080fd5b50610289610ba7565b3480156103f357600080fd5b506006546001600160a01b0316610251565b34801561041157600080fd5b5061020e610bc2565b6101b66104283660046114de565b610bcf565b34801561043957600080fd5b5061028961044836600461156a565b610d73565b34801561045957600080fd5b50610289610ddf565b34801561046e57600080fd5b50600a546101e990610100900460ff1681565b34801561048d57600080fd5b5061028961049c3660046115a8565b610df9565b3480156104ad57600080fd5b5061020e6104bc366004611426565b610ebe565b3480156104cd57600080fd5b506101e96104dc366004611647565b600560209081526000928352604080842090915290825290205460ff1681565b34801561050857600080fd5b50610289610517366004611480565b610f44565b60006301ffc9a760e01b6001600160e01b03198316148061054d57506380ac58cd60e01b6001600160e01b03198316145b806105685750635b5e139f60e01b6001600160e01b03198316145b92915050565b6000805461057b90611675565b80601f01602080910402602001604051908101604052809291908181526020018280546105a790611675565b80156105f45780601f106105c9576101008083540402835291602001916105f4565b820191906000526020600020905b8154815290600101906020018083116105d757829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061064557506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106875760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600260205260409020546001600160a01b038481169116146107395760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161067e565b6001600160a01b0382166107835760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161067e565b336001600160a01b03841614806107bd57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b806107de57506000818152600460205260409020546001600160a01b031633145b61081b5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161067e565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6108b2610fbd565b60405147906000906001600160a01b0384169083908381818185875af1925050503d80600081146108ff576040519150601f19603f3d011682016040523d82523d6000602084013e610904565b606091505b50509050806109265760405163d23a9e8960e01b815260040160405180910390fd5b505050565b6109368383836106e3565b6001600160a01b0382163b15806109df5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d391906116af565b6001600160e01b031916145b6109265760405162461bcd60e51b815260040161067e906116cc565b6000818152600260205260409020546001600160a01b031680610a4d5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161067e565b919050565b6001600160a01b03811660009081526009602052604081205460ff1615610ab35760405162461bcd60e51b8152602060048201526015602482015274105b1c9958591e481b5a5b9d195908185b88139195605a1b604482015260640161067e565b600a5462010000900460ff161515600114610b1a5760405162461bcd60e51b815260206004820152602160248201527f5075626c6963206d696e74696e67206973206e6f7420616c6c6f7765642079656044820152601d60fa1b606482015260840161067e565b61056882611017565b6007805461057b90611675565b60006001600160a01b038216610b775760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015260640161067e565b506001600160a01b031660009081526003602052604090205490565b610b9b610fbd565b610ba560006110e3565b565b610baf610fbd565b600a805462ffffff191662010000179055565b6001805461057b90611675565b6001600160a01b03841660009081526009602052604081205460ff1615610c0957604051631bbdf5c560e31b815260040160405180910390fd5b600a5460ff161515600103610c685783600114610c685760405162461bcd60e51b815260206004820152601760248201527f4e6f7420616c6c6f77656420746f206d696e7420796574000000000000000000604482015260640161067e565b6040516bffffffffffffffffffffffff19606087901b16602082015260348101859052600090605401604051602081830303815290604052805190602001209050610d098484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506111359050565b610d605760405162461bcd60e51b815260206004820152602260248201527f496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c69604482015261195960f21b606482015260840161067e565b610d6986611017565b9695505050505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610de7610fbd565b600a805462ffffff1916610100179055565b610e048585856106e3565b6001600160a01b0384163b1580610e9b5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610e4c9033908a908990899089906004016116f6565b6020604051808303816000875af1158015610e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8f91906116af565b6001600160e01b031916145b610eb75760405162461bcd60e51b815260040161067e906116cc565b5050505050565b60606000610ecb836109fb565b6001600160a01b031603610ef25760405163d872946b60e01b815260040160405180910390fd5b600060078054610f0190611675565b905011610f1d5760405180602001604052806000815250610568565b6007604051602001610f2f919061174a565b60405160208183030381529060405292915050565b610f4c610fbd565b6001600160a01b038116610fb15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067e565b610fba816110e3565b50565b6006546001600160a01b03163314610ba55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067e565b600067011c37937e0800003414611041576040516310f0c8f160e11b815260040160405180910390fd5b600060086000815461105290611808565b918290555090506109c481111561107c57604051632cdb04a160e21b815260040160405180910390fd5b6001600160a01b0383166000908152600960205260409020805460ff191660011790556110a9838261114b565b6040516001600160a01b038416907f90ddedd5a25821bba11fbb98de02ec1f75c1be90ae147d6450ce873e7b78b5d890600090a292915050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600082611142858461121b565b14949350505050565b6111558282611268565b6001600160a01b0382163b15806111fb5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af11580156111cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ef91906116af565b6001600160e01b031916145b6112175760405162461bcd60e51b815260040161067e906116cc565b5050565b600081815b84518110156112605761124c8286838151811061123f5761123f61182f565b6020026020010151611373565b91508061125881611808565b915050611220565b509392505050565b6001600160a01b0382166112b25760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161067e565b6000818152600260205260409020546001600160a01b0316156113085760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161067e565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600081831061138f57600082815260208490526040902061139e565b60008381526020839052604090205b9392505050565b6001600160e01b031981168114610fba57600080fd5b6000602082840312156113cd57600080fd5b813561139e816113a5565b600060208083528351808285015260005b81811015611405578581018301518582016040015282016113e9565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561143857600080fd5b5035919050565b6001600160a01b0381168114610fba57600080fd5b6000806040838503121561146757600080fd5b82356114728161143f565b946020939093013593505050565b60006020828403121561149257600080fd5b813561139e8161143f565b6000806000606084860312156114b257600080fd5b83356114bd8161143f565b925060208401356114cd8161143f565b929592945050506040919091013590565b600080600080606085870312156114f457600080fd5b84356114ff8161143f565b935060208501359250604085013567ffffffffffffffff8082111561152357600080fd5b818701915087601f83011261153757600080fd5b81358181111561154657600080fd5b8860208260051b850101111561155b57600080fd5b95989497505060200194505050565b6000806040838503121561157d57600080fd5b82356115888161143f565b91506020830135801515811461159d57600080fd5b809150509250929050565b6000806000806000608086880312156115c057600080fd5b85356115cb8161143f565b945060208601356115db8161143f565b935060408601359250606086013567ffffffffffffffff808211156115ff57600080fd5b818801915088601f83011261161357600080fd5b81358181111561162257600080fd5b89602082850101111561163457600080fd5b9699959850939650602001949392505050565b6000806040838503121561165a57600080fd5b82356116658161143f565b9150602083013561159d8161143f565b600181811c9082168061168957607f821691505b6020821081036116a957634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156116c157600080fd5b815161139e816113a5565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600080835481600182811c91508083168061176657607f831692505b6020808410820361178557634e487b7160e01b86526022600452602486fd5b81801561179957600181146117ae576117db565b60ff19861689528415158502890196506117db565b60008a81526020902060005b868110156117d35781548b8201529085019083016117ba565b505084890196505b505050505050611800816e636f756e63696c6d6574616461746160881b8152600f0190565b949350505050565b60006001820161182857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122037d5defba461bb8a366b68a85d7ea79236a514daec3f92b0a1f0110e9e59943664736f6c63430008100033",
    "sourceMap": "614:4116:0:-:0;;;1232:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1354:5;1361:7;2220:4:100;:12;1354:5:0;2220:4:100;:12;:::i;:::-;-1:-1:-1;2242:6:100;:16;2251:7;2242:6;:16;:::i;:::-;;2154:111;;936:32:61;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1376:7:0::1;:18;1386:8:::0;1376:7;:18:::1;:::i;:::-;-1:-1:-1::0;1400:12:0::1;::::0;-1:-1:-1;;1418:13:0::1;:20:::0;;-1:-1:-1;;1418:20:0::1;1434:4;1418:20;::::0;;-1:-1:-1;614:4116:0;;640:96:87;719:10;;640:96::o;2433:187:61:-;2525:6;;;-1:-1:-1;;;;;2541:17:61;;;-1:-1:-1;;;;;;2541:17:61;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:103:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:103;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:103;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:103:o;991:828::-;1118:6;1126;1134;1142;1195:3;1183:9;1174:7;1170:23;1166:33;1163:53;;;1212:1;1209;1202:12;1163:53;1239:16;;-1:-1:-1;;;;;1304:14:103;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;1638:2;1627:9;1623:18;1617:25;1601:41;;1667:2;1657:8;1654:16;1651:36;;;1683:1;1680;1673:12;1651:36;;1706:63;1761:7;1750:8;1739:9;1735:24;1706:63;:::i;:::-;1809:2;1794:18;;;;1788:25;991:828;;;;-1:-1:-1;;;;991:828:103:o;1824:380::-;1903:1;1899:12;;;;1946;;;1967:61;;2021:4;2013:6;2009:17;1999:27;;1967:61;2074:2;2066:6;2063:14;2043:18;2040:38;2037:161;;2120:10;2115:3;2111:20;2108:1;2101:31;2155:4;2152:1;2145:15;2183:4;2180:1;2173:15;2037:161;;1824:380;;;:::o;2335:545::-;2437:2;2432:3;2429:11;2426:448;;;2473:1;2498:5;2494:2;2487:17;2543:4;2539:2;2529:19;2613:2;2601:10;2597:19;2594:1;2590:27;2584:4;2580:38;2649:4;2637:10;2634:20;2631:47;;;-1:-1:-1;2672:4:103;2631:47;2727:2;2722:3;2718:12;2715:1;2711:20;2705:4;2701:31;2691:41;;2782:82;2800:2;2793:5;2790:13;2782:82;;;2845:17;;;2826:1;2815:13;2782:82;;;2786:3;;;2426:448;2335:545;;;:::o;3056:1352::-;3176:10;;-1:-1:-1;;;;;3198:30:103;;3195:56;;;3231:18;;:::i;:::-;3260:97;3350:6;3310:38;3342:4;3336:11;3310:38;:::i;:::-;3304:4;3260:97;:::i;:::-;3412:4;;3476:2;3465:14;;3493:1;3488:663;;;;4195:1;4212:6;4209:89;;;-1:-1:-1;4264:19:103;;;4258:26;4209:89;-1:-1:-1;;3013:1:103;3009:11;;;3005:24;3001:29;2991:40;3037:1;3033:11;;;2988:57;4311:81;;3458:944;;3488:663;2282:1;2275:14;;;2319:4;2306:18;;-1:-1:-1;;3524:20:103;;;3642:236;3656:7;3653:1;3650:14;3642:236;;;3745:19;;;3739:26;3724:42;;3837:27;;;;3805:1;3793:14;;;;3672:19;;3642:236;;;3646:3;3906:6;3897:7;3894:19;3891:201;;;3967:19;;;3961:26;-1:-1:-1;;4050:1:103;4046:14;;;4062:3;4042:24;4038:37;4034:42;4019:58;4004:74;;3891:201;-1:-1:-1;;;;;4138:1:103;4122:14;;;4118:22;4105:36;;-1:-1:-1;3056:1352:103:o;:::-;614:4116:0;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061019b5760003560e01c80636c0360eb116100ec578063a22cb4651161008a578063b88d4fde11610064578063b88d4fde14610481578063c87b56dd146104a1578063e985e9c5146104c1578063f2fde38b146104fc57600080fd5b8063a22cb4651461042d578063a839e5011461044d578063aebb096c1461046257600080fd5b806376c64c62116100c657806376c64c62146103d25780638da5cb5b146103e757806395d89b41146104055780639886a9021461041a57600080fd5b80636c0360eb1461038857806370a082311461039d578063715018a6146103bd57600080fd5b806323b872dd1161015957806341fbddbd1161013357806341fbddbd1461031b57806342842e0e146103355780636352211e146103555780636a6278421461037557600080fd5b806323b872dd146102bb57806326092b83146102db57806331b3eb94146102fb57600080fd5b80629a9b7b146101a057806301ffc9a7146101c957806306fdde03146101f9578063081812fc1461021b578063095ea7b3146102695780630a398b881461028b575b600080fd5b3480156101ac57600080fd5b506101b660085481565b6040519081526020015b60405180910390f35b3480156101d557600080fd5b506101e96101e43660046113bb565b61051c565b60405190151581526020016101c0565b34801561020557600080fd5b5061020e61056e565b6040516101c091906113d8565b34801561022757600080fd5b50610251610236366004611426565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101c0565b34801561027557600080fd5b50610289610284366004611454565b6105fc565b005b34801561029757600080fd5b506101e96102a6366004611480565b60096020526000908152604090205460ff1681565b3480156102c757600080fd5b506102896102d636600461149d565b6106e3565b3480156102e757600080fd5b50600a546101e99062010000900460ff1681565b34801561030757600080fd5b50610289610316366004611480565b6108aa565b34801561032757600080fd5b50600a546101e99060ff1681565b34801561034157600080fd5b5061028961035036600461149d565b61092b565b34801561036157600080fd5b50610251610370366004611426565b6109fb565b6101b6610383366004611480565b610a52565b34801561039457600080fd5b5061020e610b23565b3480156103a957600080fd5b506101b66103b8366004611480565b610b30565b3480156103c957600080fd5b50610289610b93565b3480156103de57600080fd5b50610289610ba7565b3480156103f357600080fd5b506006546001600160a01b0316610251565b34801561041157600080fd5b5061020e610bc2565b6101b66104283660046114de565b610bcf565b34801561043957600080fd5b5061028961044836600461156a565b610d73565b34801561045957600080fd5b50610289610ddf565b34801561046e57600080fd5b50600a546101e990610100900460ff1681565b34801561048d57600080fd5b5061028961049c3660046115a8565b610df9565b3480156104ad57600080fd5b5061020e6104bc366004611426565b610ebe565b3480156104cd57600080fd5b506101e96104dc366004611647565b600560209081526000928352604080842090915290825290205460ff1681565b34801561050857600080fd5b50610289610517366004611480565b610f44565b60006301ffc9a760e01b6001600160e01b03198316148061054d57506380ac58cd60e01b6001600160e01b03198316145b806105685750635b5e139f60e01b6001600160e01b03198316145b92915050565b6000805461057b90611675565b80601f01602080910402602001604051908101604052809291908181526020018280546105a790611675565b80156105f45780601f106105c9576101008083540402835291602001916105f4565b820191906000526020600020905b8154815290600101906020018083116105d757829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061064557506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106875760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600260205260409020546001600160a01b038481169116146107395760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161067e565b6001600160a01b0382166107835760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161067e565b336001600160a01b03841614806107bd57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b806107de57506000818152600460205260409020546001600160a01b031633145b61081b5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161067e565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6108b2610fbd565b60405147906000906001600160a01b0384169083908381818185875af1925050503d80600081146108ff576040519150601f19603f3d011682016040523d82523d6000602084013e610904565b606091505b50509050806109265760405163d23a9e8960e01b815260040160405180910390fd5b505050565b6109368383836106e3565b6001600160a01b0382163b15806109df5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d391906116af565b6001600160e01b031916145b6109265760405162461bcd60e51b815260040161067e906116cc565b6000818152600260205260409020546001600160a01b031680610a4d5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b604482015260640161067e565b919050565b6001600160a01b03811660009081526009602052604081205460ff1615610ab35760405162461bcd60e51b8152602060048201526015602482015274105b1c9958591e481b5a5b9d195908185b88139195605a1b604482015260640161067e565b600a5462010000900460ff161515600114610b1a5760405162461bcd60e51b815260206004820152602160248201527f5075626c6963206d696e74696e67206973206e6f7420616c6c6f7765642079656044820152601d60fa1b606482015260840161067e565b61056882611017565b6007805461057b90611675565b60006001600160a01b038216610b775760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b604482015260640161067e565b506001600160a01b031660009081526003602052604090205490565b610b9b610fbd565b610ba560006110e3565b565b610baf610fbd565b600a805462ffffff191662010000179055565b6001805461057b90611675565b6001600160a01b03841660009081526009602052604081205460ff1615610c0957604051631bbdf5c560e31b815260040160405180910390fd5b600a5460ff161515600103610c685783600114610c685760405162461bcd60e51b815260206004820152601760248201527f4e6f7420616c6c6f77656420746f206d696e7420796574000000000000000000604482015260640161067e565b6040516bffffffffffffffffffffffff19606087901b16602082015260348101859052600090605401604051602081830303815290604052805190602001209050610d098484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506111359050565b610d605760405162461bcd60e51b815260206004820152602260248201527f496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c69604482015261195960f21b606482015260840161067e565b610d6986611017565b9695505050505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610de7610fbd565b600a805462ffffff1916610100179055565b610e048585856106e3565b6001600160a01b0384163b1580610e9b5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610e4c9033908a908990899089906004016116f6565b6020604051808303816000875af1158015610e6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8f91906116af565b6001600160e01b031916145b610eb75760405162461bcd60e51b815260040161067e906116cc565b5050505050565b60606000610ecb836109fb565b6001600160a01b031603610ef25760405163d872946b60e01b815260040160405180910390fd5b600060078054610f0190611675565b905011610f1d5760405180602001604052806000815250610568565b6007604051602001610f2f919061174a565b60405160208183030381529060405292915050565b610f4c610fbd565b6001600160a01b038116610fb15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067e565b610fba816110e3565b50565b6006546001600160a01b03163314610ba55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067e565b600067011c37937e0800003414611041576040516310f0c8f160e11b815260040160405180910390fd5b600060086000815461105290611808565b918290555090506109c481111561107c57604051632cdb04a160e21b815260040160405180910390fd5b6001600160a01b0383166000908152600960205260409020805460ff191660011790556110a9838261114b565b6040516001600160a01b038416907f90ddedd5a25821bba11fbb98de02ec1f75c1be90ae147d6450ce873e7b78b5d890600090a292915050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600082611142858461121b565b14949350505050565b6111558282611268565b6001600160a01b0382163b15806111fb5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af11580156111cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ef91906116af565b6001600160e01b031916145b6112175760405162461bcd60e51b815260040161067e906116cc565b5050565b600081815b84518110156112605761124c8286838151811061123f5761123f61182f565b6020026020010151611373565b91508061125881611808565b915050611220565b509392505050565b6001600160a01b0382166112b25760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161067e565b6000818152600260205260409020546001600160a01b0316156113085760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161067e565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600081831061138f57600082815260208490526040902061139e565b60008381526020839052604090205b9392505050565b6001600160e01b031981168114610fba57600080fd5b6000602082840312156113cd57600080fd5b813561139e816113a5565b600060208083528351808285015260005b81811015611405578581018301518582016040015282016113e9565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561143857600080fd5b5035919050565b6001600160a01b0381168114610fba57600080fd5b6000806040838503121561146757600080fd5b82356114728161143f565b946020939093013593505050565b60006020828403121561149257600080fd5b813561139e8161143f565b6000806000606084860312156114b257600080fd5b83356114bd8161143f565b925060208401356114cd8161143f565b929592945050506040919091013590565b600080600080606085870312156114f457600080fd5b84356114ff8161143f565b935060208501359250604085013567ffffffffffffffff8082111561152357600080fd5b818701915087601f83011261153757600080fd5b81358181111561154657600080fd5b8860208260051b850101111561155b57600080fd5b95989497505060200194505050565b6000806040838503121561157d57600080fd5b82356115888161143f565b91506020830135801515811461159d57600080fd5b809150509250929050565b6000806000806000608086880312156115c057600080fd5b85356115cb8161143f565b945060208601356115db8161143f565b935060408601359250606086013567ffffffffffffffff808211156115ff57600080fd5b818801915088601f83011261161357600080fd5b81358181111561162257600080fd5b89602082850101111561163457600080fd5b9699959850939650602001949392505050565b6000806040838503121561165a57600080fd5b82356116658161143f565b9150602083013561159d8161143f565b600181811c9082168061168957607f821691505b6020821081036116a957634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156116c157600080fd5b815161139e816113a5565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600080835481600182811c91508083168061176657607f831692505b6020808410820361178557634e487b7160e01b86526022600452602486fd5b81801561179957600181146117ae576117db565b60ff19861689528415158502890196506117db565b60008a81526020902060005b868110156117d35781548b8201529085019083016117ba565b505084890196505b505050505050611800816e636f756e63696c6d6574616461746160881b8152600f0190565b949350505050565b60006001820161182857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122037d5defba461bb8a366b68a85d7ea79236a514daec3f92b0a1f0110e9e59943664736f6c63430008100033",
    "sourceMap": "614:4116:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:29;;;;;;;;;;;;;;;;;;;160:25:103;;;148:2;133:18;834:29:0;;;;;;;;4714:335:100;;;;;;;;;;-1:-1:-1;4714:335:100;;;;;:::i;:::-;;:::i;:::-;;;747:14:103;;740:22;722:41;;710:2;695:18;4714:335:100;582:187:103;899:18:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1844:46::-;;;;;;;;;;-1:-1:-1;1844:46:100;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1844:46:100;;;;;;-1:-1:-1;;;;;1676:32:103;;;1658:51;;1646:2;1631:18;1844:46:100;1512:203:103;2453:282:100;;;;;;;;;;-1:-1:-1;2453:282:100;;;;;:::i;:::-;;:::i;:::-;;939:45:0;;;;;;;;;;-1:-1:-1;939:45:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;2950:741:100;;;;;;;;;;-1:-1:-1;2950:741:100;;;;;:::i;:::-;;:::i;1109:22:0:-;;;;;;;;;;-1:-1:-1;1109:22:0;;;;;;;;;;;4069:303;;;;;;;;;;-1:-1:-1;4069:303:0;;;;;:::i;:::-;;:::i;1052:25::-;;;;;;;;;;-1:-1:-1;1052:25:0;;;;;;;;3697:396:100;;;;;;;;;;-1:-1:-1;3697:396:100;;;;;:::i;:::-;;:::i;1327:149::-;;;;;;;;;;-1:-1:-1;1327:149:100;;;;;:::i;:::-;;:::i;2634:244:0:-;;;;;;:::i;:::-;;:::i;755:21::-;;;;;;;;;;;;;:::i;1482:168:100:-;;;;;;;;;;-1:-1:-1;1482:168:100;;;;;:::i;:::-;;:::i;1831:101:61:-;;;;;;;;;;;;;:::i;4603:125:0:-;;;;;;;;;;;;;:::i;1201:85:61:-;;;;;;;;;;-1:-1:-1;1273:6:61;;-1:-1:-1;;;;;1273:6:61;1201:85;;924:20:100;;;;;;;;;;;;;:::i;1851:579:0:-;;;;;;:::i;:::-;;:::i;2741:203:100:-;;;;;;;;;;-1:-1:-1;2741:203:100;;;;;:::i;:::-;;:::i;4425:127:0:-;;;;;;;;;;;;;:::i;1081:24::-;;;;;;;;;;-1:-1:-1;1081:24:0;;;;;;;;;;;4099:427:100;;;;;;;;;;-1:-1:-1;4099:427:100;;;;;:::i;:::-;;:::i;3617:326:0:-;;;;;;;;;;-1:-1:-1;3617:326:0;;;;;:::i;:::-;;:::i;1897:68:100:-;;;;;;;;;;-1:-1:-1;1897:68:100;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2081:198:61;;;;;;;;;;-1:-1:-1;2081:198:61;;;;;:::i;:::-;;:::i;4714:335:100:-;4790:4;-1:-1:-1;;;;;;;;;4825:25:100;;;;:100;;-1:-1:-1;;;;;;;;;;4900:25:100;;;4825:100;:175;;;-1:-1:-1;;;;;;;;;;4975:25:100;;;4825:175;4806:194;4714:335;-1:-1:-1;;4714:335:100:o;899:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2453:282::-;2524:13;2540:12;;;:8;:12;;;;;;-1:-1:-1;;;;;2540:12:100;2571:10;:19;;;:58;;-1:-1:-1;;;;;;2594:23:100;;;;;;:16;:23;;;;;;;;2618:10;2594:35;;;;;;;;;;2571:58;2563:85;;;;-1:-1:-1;;;2563:85:100;;6314:2:103;2563:85:100;;;6296:21:103;6353:2;6333:18;;;6326:30;-1:-1:-1;;;6372:18:103;;;6365:44;6426:18;;2563:85:100;;;;;;;;;2659:15;;;;:11;:15;;;;;;:25;;-1:-1:-1;;;;;;2659:25:100;-1:-1:-1;;;;;2659:25:100;;;;;;;;;2700:28;;2659:15;;2700:28;;;;;;;2514:221;2453:282;;:::o;2950:741::-;3081:12;;;;:8;:12;;;;;;-1:-1:-1;;;;;3073:20:100;;;3081:12;;3073:20;3065:43;;;;-1:-1:-1;;;3065:43:100;;6657:2:103;3065:43:100;;;6639:21:103;6696:2;6676:18;;;6669:30;-1:-1:-1;;;6715:18:103;;;6708:40;6765:18;;3065:43:100;6455:334:103;3065:43:100;-1:-1:-1;;;;;3127:16:100;;3119:46;;;;-1:-1:-1;;;3119:46:100;;6996:2:103;3119:46:100;;;6978:21:103;7035:2;7015:18;;;7008:30;-1:-1:-1;;;7054:18:103;;;7047:47;7111:18;;3119:46:100;6794:341:103;3119:46:100;3197:10;-1:-1:-1;;;;;3197:18:100;;;;:56;;-1:-1:-1;;;;;;3219:22:100;;;;;;:16;:22;;;;;;;;3242:10;3219:34;;;;;;;;;;3197:56;:89;;;-1:-1:-1;3271:15:100;;;;:11;:15;;;;;;-1:-1:-1;;;;;3271:15:100;3257:10;:29;3197:89;3176:150;;;;-1:-1:-1;;;3176:150:100;;6314:2:103;3176:150:100;;;6296:21:103;6353:2;6333:18;;;6326:30;-1:-1:-1;;;6372:18:103;;;6365:44;6426:18;;3176:150:100;6112:338:103;3176:150:100;-1:-1:-1;;;;;3526:16:100;;;;;;;:10;:16;;;;;;;;:18;;-1:-1:-1;;3526:18:100;;;3559:14;;;;;;;;;:16;;3526:18;3559:16;;;3596:12;;;:8;:12;;;;;:17;;-1:-1:-1;;;;;;3596:17:100;;;;;;;;3631:11;:15;;;;;;3624:22;;;;;;;;3662;;3605:2;;3559:14;3526:16;3662:22;;;2950:741;;;:::o;4069:303:0:-;1094:13:61;:11;:13::i;:::-;4268:30:0::1;::::0;4161:21:::1;::::0;4143:15:::1;::::0;-1:-1:-1;;;;;4268:10:0;::::1;::::0;4161:21;;4143:15;4268:30;4143:15;4268:30;4161:21;4268:10;:30:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4246:52;;;4309:10;4304:64;;4336:25;;-1:-1:-1::0;;;4336:25:0::1;;;;;;;;;;;4304:64;4137:235;;4069:303:::0;:::o;3697:396:100:-;3816:26;3829:4;3835:2;3839;3816:12;:26::i;:::-;-1:-1:-1;;;;;3874:14:100;;;:19;;:170;;-1:-1:-1;3913:66:100;;-1:-1:-1;;;3913:66:100;;;3954:10;3913:66;;;7655:34:103;-1:-1:-1;;;;;7725:15:103;;;7705:18;;;7698:43;7757:18;;;7750:34;;;7820:3;7800:18;;;7793:31;-1:-1:-1;7840:19:103;;;7833:30;3999:45:100;;3913:40;;;;3999:45;;7880:19:103;;3913:66:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3913:131:100;;3874:170;3853:233;;;;-1:-1:-1;;;3853:233:100;;;;;;;:::i;1327:149::-;1385:13;1427:12;;;:8;:12;;;;;;-1:-1:-1;;;;;1427:12:100;;1410:59;;;;-1:-1:-1;;;1410:59:100;;8711:2:103;1410:59:100;;;8693:21:103;8750:2;8730:18;;;8723:30;-1:-1:-1;;;8769:18:103;;;8762:40;8819:18;;1410:59:100;8509:334:103;1410:59:100;1327:149;;;:::o;2634:244:0:-;-1:-1:-1;;;;;2714:24:0;;2691:7;2714:24;;;:13;:24;;;;;;;;:33;2706:67;;;;-1:-1:-1;;;2706:67:0;;9050:2:103;2706:67:0;;;9032:21:103;9089:2;9069:18;;;9062:30;-1:-1:-1;;;9108:18:103;;;9101:51;9169:18;;2706:67:0;8848:345:103;2706:67:0;2787:10;;;;;;;:18;;2801:4;2787:18;2779:64;;;;-1:-1:-1;;;2779:64:0;;9400:2:103;2779:64:0;;;9382:21:103;9439:2;9419:18;;;9412:30;9478:34;9458:18;;;9451:62;-1:-1:-1;;;9529:18:103;;;9522:31;9570:19;;2779:64:0;9198:397:103;2779:64:0;2856:17;2863:9;2856:6;:17::i;755:21::-;;;;;;;:::i;1482:168:100:-;1545:7;-1:-1:-1;;;;;1572:19:100;;1564:44;;;;-1:-1:-1;;;1564:44:100;;9802:2:103;1564:44:100;;;9784:21:103;9841:2;9821:18;;;9814:30;-1:-1:-1;;;9860:18:103;;;9853:42;9912:18;;1564:44:100;9600:336:103;1564:44:100;-1:-1:-1;;;;;;1626:17:100;;;;;:10;:17;;;;;;;1482:168::o;1831:101:61:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4603:125:0:-;1094:13:61;:11;:13::i;:::-;4653::0::1;:21:::0;;-1:-1:-1;;4706:17:0;;::::1;::::0;;4603:125::o;924:20:100:-;;;;;;;:::i;1851:579:0:-;-1:-1:-1;;;;;1995:24:0;;1976:7;1995:24;;;:13;:24;;;;;;;;1991:59;;;2028:22;;-1:-1:-1;;;2028:22:0;;;;;;;;;;;1991:59;2061:13;;;;:21;;:13;:21;2057:92;;2100:9;2113:1;2100:14;2092:50;;;;-1:-1:-1;;;2092:50:0;;10143:2:103;2092:50:0;;;10125:21:103;10182:2;10162:18;;;10155:30;10221:25;10201:18;;;10194:53;10264:18;;2092:50:0;9941:347:103;2092:50:0;2243:38;;-1:-1:-1;;10470:2:103;10466:15;;;10462:53;2243:38:0;;;10450:66:103;10532:12;;;10525:28;;;2215:15:0;;10569:12:103;;2243:38:0;;;;;;;;;;;;2233:49;;;;;;2215:67;;2304:40;2323:5;;2304:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2330:4:0;;-1:-1:-1;2336:7:0;;-1:-1:-1;2304:18:0;;-1:-1:-1;2304:40:0:i;:::-;2289:105;;;;-1:-1:-1;;;2289:105:0;;10794:2:103;2289:105:0;;;10776:21:103;10833:2;10813:18;;;10806:30;10872:34;10852:18;;;10845:62;-1:-1:-1;;;10923:18:103;;;10916:32;10965:19;;2289:105:0;10592:398:103;2289:105:0;2408:17;2415:9;2408:6;:17::i;:::-;2401:24;1851:579;-1:-1:-1;;;;;;1851:579:0:o;2741:203:100:-;2843:10;2826:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2826:38:100;;;;;;;;;;;;:49;;-1:-1:-1;;2826:49:100;;;;;;;;;;2891:46;;722:41:103;;;2826:38:100;;2843:10;2891:46;;695:18:103;2891:46:100;;;;;;;2741:203;;:::o;4425:127:0:-;1094:13:61;:11;:13::i;:::-;4477::0::1;:21:::0;;-1:-1:-1;;4529:18:0;4477:21:::1;4529:18:::0;;;4425:127::o;4099:427:100:-;4247:26;4260:4;4266:2;4270;4247:12;:26::i;:::-;-1:-1:-1;;;;;4305:14:100;;;:19;;:172;;-1:-1:-1;4344:68:100;;-1:-1:-1;;;4344:68:100;;;4432:45;-1:-1:-1;;;;;4344:40:100;;;4432:45;;4344:68;;4385:10;;4397:4;;4403:2;;4407:4;;;;4344:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4344:133:100;;4305:172;4284:235;;;;-1:-1:-1;;;4284:235:100;;;;;;;:::i;:::-;4099:427;;;;;:::o;3617:326:0:-;3710:13;3765:1;3737:16;3745:7;3737;:16::i;:::-;-1:-1:-1;;;;;3737:30:0;;3733:86;;3784:28;;-1:-1:-1;;;3784:28:0;;;;;;;;;;;3733:86;3861:1;3843:7;3837:21;;;;;:::i;:::-;;;:25;:101;;;;;;;;;;;;;;;;;3897:7;3880:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;3824:114;3617:326;-1:-1:-1;;3617:326:0:o;2081:198:61:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:61;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:61;;13389:2:103;2161:73:61::1;::::0;::::1;13371:21:103::0;13428:2;13408:18;;;13401:30;13467:34;13447:18;;;13440:62;-1:-1:-1;;;13518:18:103;;;13511:36;13564:19;;2161:73:61::1;13187:402:103::0;2161:73:61::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1273:6;;-1:-1:-1;;;;;1273:6:61;719:10:87;1422:23:61;1414:68;;;;-1:-1:-1;;;1414:68:61;;13796:2:103;1414:68:61;;;13778:21:103;;;13815:18;;;13808:30;13874:34;13854:18;;;13847:62;13926:18;;1414:68:61;13594:356:103;3056:390:0;3108:7;270:10:2;3127:9:0;:33;3123:71;;3169:25;;-1:-1:-1;;;3169:25:0;;;;;;;;;;;3123:71;3201:17;3223:14;;3221:16;;;;;:::i;:::-;;;;;-1:-1:-1;3221:16:0;-1:-1:-1;173:4:2;3247:34:0;;3243:65;;;3290:18;;-1:-1:-1;;;3290:18:0;;;;;;;;;;;3243:65;-1:-1:-1;;;;;3315:24:0;;;;;;:13;:24;;;;;:31;;-1:-1:-1;;3315:31:0;3342:4;3315:31;;;3352;3329:9;3373;3352;:31::i;:::-;3395:24;;-1:-1:-1;;;;;3395:24:0;;;;;;;;3432:9;3056:390;-1:-1:-1;;3056:390:0:o;2433:187:61:-;2525:6;;;-1:-1:-1;;;;;2541:17:61;;;-1:-1:-1;;;;;;2541:17:61;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;1153:184:92:-;1274:4;1326;1297:25;1310:5;1317:4;1297:12;:25::i;:::-;:33;;1153:184;-1:-1:-1;;;;1153:184:92:o;6185:340:100:-;6255:13;6261:2;6265;6255:5;:13::i;:::-;-1:-1:-1;;;;;6300:14:100;;;:19;;:176;;-1:-1:-1;6339:72:100;;-1:-1:-1;;;6339:72:100;;;6380:10;6339:72;;;7655:34:103;6400:1:100;7705:18:103;;;7698:43;;;7757:18;;;7750:34;;;7820:3;7800:18;;;7793:31;7840:19;;;7833:30;6431:45:100;-1:-1:-1;;;;;6339:40:100;;;6431:45;;7880:19:103;;6339:72:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6339:137:100;;6300:176;6279:239;;;;-1:-1:-1;;;6279:239:100;;;;;;;:::i;:::-;6185:340;;:::o;1991:290:92:-;2074:7;2116:4;2074:7;2130:116;2154:5;:12;2150:1;:16;2130:116;;;2202:33;2212:12;2226:5;2232:1;2226:8;;;;;;;;:::i;:::-;;;;;;;2202:9;:33::i;:::-;2187:48;-1:-1:-1;2168:3:92;;;;:::i;:::-;;;;2130:116;;;-1:-1:-1;2262:12:92;1991:290;-1:-1:-1;;;1991:290:92:o;5243:371:100:-;-1:-1:-1;;;;;5317:16:100;;5309:46;;;;-1:-1:-1;;;5309:46:100;;6996:2:103;5309:46:100;;;6978:21:103;7035:2;7015:18;;;7008:30;-1:-1:-1;;;7054:18:103;;;7047:47;7111:18;;5309:46:100;6794:341:103;5309:46:100;5398:1;5374:12;;;:8;:12;;;;;;-1:-1:-1;;;;;5374:12:100;:26;5366:53;;;;-1:-1:-1;;;5366:53:100;;14526:2:103;5366:53:100;;;14508:21:103;14565:2;14545:18;;;14538:30;-1:-1:-1;;;14584:18:103;;;14577:44;14638:18;;5366:53:100;14324:338:103;5366:53:100;-1:-1:-1;;;;;5509:14:100;;;;;;:10;:14;;;;;;;;:16;;;;;;5546:12;;;:8;:12;;;;;;:17;;-1:-1:-1;;;;;;5546:17:100;;;;;5579:28;5555:2;;5509:14;;5579:28;;5509:14;;5579:28;5243:371;;:::o;8054:147:92:-;8117:7;8147:1;8143;:5;:51;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8143:51;;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8151:20;8136:58;8054:147;-1:-1:-1;;;8054:147:92:o;196:131:103:-;-1:-1:-1;;;;;;270:32:103;;260:43;;250:71;;317:1;314;307:12;332:245;390:6;443:2;431:9;422:7;418:23;414:32;411:52;;;459:1;456;449:12;411:52;498:9;485:23;517:30;541:5;517:30;:::i;774:548::-;886:4;915:2;944;933:9;926:21;976:6;970:13;1019:6;1014:2;1003:9;999:18;992:34;1044:1;1054:140;1068:6;1065:1;1062:13;1054:140;;;1163:14;;;1159:23;;1153:30;1129:17;;;1148:2;1125:26;1118:66;1083:10;;1054:140;;;1058:3;1243:1;1238:2;1229:6;1218:9;1214:22;1210:31;1203:42;1313:2;1306;1302:7;1297:2;1289:6;1285:15;1281:29;1270:9;1266:45;1262:54;1254:62;;;;774:548;;;;:::o;1327:180::-;1386:6;1439:2;1427:9;1418:7;1414:23;1410:32;1407:52;;;1455:1;1452;1445:12;1407:52;-1:-1:-1;1478:23:103;;1327:180;-1:-1:-1;1327:180:103:o;1720:131::-;-1:-1:-1;;;;;1795:31:103;;1785:42;;1775:70;;1841:1;1838;1831:12;1856:315;1924:6;1932;1985:2;1973:9;1964:7;1960:23;1956:32;1953:52;;;2001:1;1998;1991:12;1953:52;2040:9;2027:23;2059:31;2084:5;2059:31;:::i;:::-;2109:5;2161:2;2146:18;;;;2133:32;;-1:-1:-1;;;1856:315:103:o;2176:247::-;2235:6;2288:2;2276:9;2267:7;2263:23;2259:32;2256:52;;;2304:1;2301;2294:12;2256:52;2343:9;2330:23;2362:31;2387:5;2362:31;:::i;2428:456::-;2505:6;2513;2521;2574:2;2562:9;2553:7;2549:23;2545:32;2542:52;;;2590:1;2587;2580:12;2542:52;2629:9;2616:23;2648:31;2673:5;2648:31;:::i;:::-;2698:5;-1:-1:-1;2755:2:103;2740:18;;2727:32;2768:33;2727:32;2768:33;:::i;:::-;2428:456;;2820:7;;-1:-1:-1;;;2874:2:103;2859:18;;;;2846:32;;2428:456::o;3149:818::-;3253:6;3261;3269;3277;3330:2;3318:9;3309:7;3305:23;3301:32;3298:52;;;3346:1;3343;3336:12;3298:52;3385:9;3372:23;3404:31;3429:5;3404:31;:::i;:::-;3454:5;-1:-1:-1;3506:2:103;3491:18;;3478:32;;-1:-1:-1;3561:2:103;3546:18;;3533:32;3584:18;3614:14;;;3611:34;;;3641:1;3638;3631:12;3611:34;3679:6;3668:9;3664:22;3654:32;;3724:7;3717:4;3713:2;3709:13;3705:27;3695:55;;3746:1;3743;3736:12;3695:55;3786:2;3773:16;3812:2;3804:6;3801:14;3798:34;;;3828:1;3825;3818:12;3798:34;3881:7;3876:2;3866:6;3863:1;3859:14;3855:2;3851:23;3847:32;3844:45;3841:65;;;3902:1;3899;3892:12;3841:65;3149:818;;;;-1:-1:-1;;3933:2:103;3925:11;;-1:-1:-1;;;3149:818:103:o;3972:416::-;4037:6;4045;4098:2;4086:9;4077:7;4073:23;4069:32;4066:52;;;4114:1;4111;4104:12;4066:52;4153:9;4140:23;4172:31;4197:5;4172:31;:::i;:::-;4222:5;-1:-1:-1;4279:2:103;4264:18;;4251:32;4321:15;;4314:23;4302:36;;4292:64;;4352:1;4349;4342:12;4292:64;4375:7;4365:17;;;3972:416;;;;;:::o;4393:936::-;4490:6;4498;4506;4514;4522;4575:3;4563:9;4554:7;4550:23;4546:33;4543:53;;;4592:1;4589;4582:12;4543:53;4631:9;4618:23;4650:31;4675:5;4650:31;:::i;:::-;4700:5;-1:-1:-1;4757:2:103;4742:18;;4729:32;4770:33;4729:32;4770:33;:::i;:::-;4822:7;-1:-1:-1;4876:2:103;4861:18;;4848:32;;-1:-1:-1;4931:2:103;4916:18;;4903:32;4954:18;4984:14;;;4981:34;;;5011:1;5008;5001:12;4981:34;5049:6;5038:9;5034:22;5024:32;;5094:7;5087:4;5083:2;5079:13;5075:27;5065:55;;5116:1;5113;5106:12;5065:55;5156:2;5143:16;5182:2;5174:6;5171:14;5168:34;;;5198:1;5195;5188:12;5168:34;5243:7;5238:2;5229:6;5225:2;5221:15;5217:24;5214:37;5211:57;;;5264:1;5261;5254:12;5211:57;4393:936;;;;-1:-1:-1;4393:936:103;;-1:-1:-1;5295:2:103;5287:11;;5317:6;4393:936;-1:-1:-1;;;4393:936:103:o;5334:388::-;5402:6;5410;5463:2;5451:9;5442:7;5438:23;5434:32;5431:52;;;5479:1;5476;5469:12;5431:52;5518:9;5505:23;5537:31;5562:5;5537:31;:::i;:::-;5587:5;-1:-1:-1;5644:2:103;5629:18;;5616:32;5657:33;5616:32;5657:33;:::i;5727:380::-;5806:1;5802:12;;;;5849;;;5870:61;;5924:4;5916:6;5912:17;5902:27;;5870:61;5977:2;5969:6;5966:14;5946:18;5943:38;5940:161;;6023:10;6018:3;6014:20;6011:1;6004:31;6058:4;6055:1;6048:15;6086:4;6083:1;6076:15;5940:161;;5727:380;;;:::o;7910:249::-;7979:6;8032:2;8020:9;8011:7;8007:23;8003:32;8000:52;;;8048:1;8045;8038:12;8000:52;8080:9;8074:16;8099:30;8123:5;8099:30;:::i;8164:340::-;8366:2;8348:21;;;8405:2;8385:18;;;8378:30;-1:-1:-1;;;8439:2:103;8424:18;;8417:46;8495:2;8480:18;;8164:340::o;10995:662::-;-1:-1:-1;;;;;11274:15:103;;;11256:34;;11326:15;;11321:2;11306:18;;11299:43;11373:2;11358:18;;11351:34;;;11421:3;11416:2;11401:18;;11394:31;;;11441:19;;11434:35;;;11199:4;11462:6;11512;11236:3;11491:19;;11478:49;11577:1;11571:3;11562:6;11551:9;11547:22;11543:32;11536:43;11647:3;11640:2;11636:7;11631:2;11623:6;11619:15;11615:29;11604:9;11600:45;11596:55;11588:63;;10995:662;;;;;;;;:::o;11922:1260::-;12151:3;12180:1;12213:6;12207:13;12243:3;12265:1;12293:9;12289:2;12285:18;12275:28;;12353:2;12342:9;12338:18;12375;12365:61;;12419:4;12411:6;12407:17;12397:27;;12365:61;12445:2;12493;12485:6;12482:14;12462:18;12459:38;12456:165;;-1:-1:-1;;;12520:33:103;;12576:4;12573:1;12566:15;12606:4;12527:3;12594:17;12456:165;12637:18;12664:133;;;;12811:1;12806:320;;;;12630:496;;12664:133;-1:-1:-1;;12697:24:103;;12685:37;;12770:14;;12763:22;12751:35;;12742:45;;;-1:-1:-1;12664:133:103;;12806:320;11735:1;11728:14;;;11772:4;11759:18;;12901:1;12915:165;12929:6;12926:1;12923:13;12915:165;;;13007:14;;12994:11;;;12987:35;13050:16;;;;12944:10;;12915:165;;;12919:3;;13109:6;13104:3;13100:16;13093:23;;12630:496;;;;;;;13142:34;13172:3;-1:-1:-1;;;11853:30:103;;11908:2;11899:12;;11788:129;13142:34;13135:41;11922:1260;-1:-1:-1;;;;11922:1260:103:o;13955:232::-;13994:3;14015:17;;;14012:140;;14074:10;14069:3;14065:20;14062:1;14055:31;14109:4;14106:1;14099:15;14137:4;14134:1;14127:15;14012:140;-1:-1:-1;14179:1:103;14168:13;;13955:232::o;14192:127::-;14253:10;14248:3;14244:20;14241:1;14234:31;14284:4;14281:1;14274:15;14308:4;14305:1;14298:15",
    "linkReferences": {},
    "immutableReferences": {
      "42": [
        {
          "start": 3294,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowlistMint()": "41fbddbd",
    "alreadyMinted(address)": "0a398b88",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "currentTokenId()": "009a9b7b",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address)": "6a627842",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "privateMint(address,uint256,bytes32[])": "9886a902",
    "publicMint()": "26092b83",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "startPublicMint()": "76c64c62",
    "startWaitlistMint()": "a839e501",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "waitlistMint()": "aebb096c",
    "withdrawPayments(address)": "31b3eb94"
  },
  "ast": {
    "absolutePath": "contracts/zion-governance/src/council/CouncilNFT.sol",
    "id": 330,
    "exportedSymbols": {
      "Constants": [
        903
      ],
      "CouncilNFT": [
        329
      ],
      "ERC721": [
        55219
      ],
      "ERC721TokenReceiver": [
        55239
      ],
      "Errors": [
        955
      ],
      "Events": [
        984
      ],
      "MerkleProof": [
        50312
      ],
      "Ownable": [
        42932
      ],
      "Strings": [
        49235
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:4693:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "38:23:0",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "63:35:0",
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 55240,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "99:76:0",
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 42933,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42932,
              "src": "107:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6,
        "nodeType": "ImportDirective",
        "src": "176:75:0",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "openzeppelin-contracts/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 49236,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5,
              "name": "Strings",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49235,
              "src": "184:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 8,
        "nodeType": "ImportDirective",
        "src": "252:46:0",
        "absolutePath": "contracts/zion-governance/src/council/libraries/Errors.sol",
        "file": "./libraries/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 956,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7,
              "name": "Errors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 955,
              "src": "260:6:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 10,
        "nodeType": "ImportDirective",
        "src": "299:46:0",
        "absolutePath": "contracts/zion-governance/src/council/libraries/Events.sol",
        "file": "./libraries/Events.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 985,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9,
              "name": "Events",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 984,
              "src": "307:6:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12,
        "nodeType": "ImportDirective",
        "src": "346:52:0",
        "absolutePath": "contracts/zion-governance/src/council/libraries/Constants.sol",
        "file": "./libraries/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 904,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11,
              "name": "Constants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 903,
              "src": "354:9:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 14,
        "nodeType": "ImportDirective",
        "src": "399:96:0",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 50313,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13,
              "name": "MerkleProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50312,
              "src": "407:11:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 329,
        "nodeType": "ContractDefinition",
        "src": "614:4116:0",
        "nodes": [
          {
            "id": 22,
            "nodeType": "UsingForDirective",
            "src": "657:26:0",
            "global": false,
            "libraryName": {
              "id": 20,
              "name": "Strings",
              "nameLocations": [
                "663:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49235,
              "src": "663:7:0"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "675:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 25,
            "nodeType": "VariableDeclaration",
            "src": "755:21:0",
            "constant": false,
            "documentation": {
              "id": 23,
              "nodeType": "StructuredDocumentation",
              "src": "687:65:0",
              "text": "@notice the base uri for the nft metadata including image uri"
            },
            "functionSelector": "6c0360eb",
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "769:7:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 24,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "755:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28,
            "nodeType": "VariableDeclaration",
            "src": "834:29:0",
            "constant": false,
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "781:50:0",
              "text": "@notice the counter token id for the next mint"
            },
            "functionSelector": "009a9b7b",
            "mutability": "mutable",
            "name": "currentTokenId",
            "nameLocation": "849:14:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 27,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "834:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33,
            "nodeType": "VariableDeclaration",
            "src": "939:45:0",
            "constant": false,
            "documentation": {
              "id": 29,
              "nodeType": "StructuredDocumentation",
              "src": "868:68:0",
              "text": "@notice mapping to track which  users have already minted an nft"
            },
            "functionSelector": "0a398b88",
            "mutability": "mutable",
            "name": "alreadyMinted",
            "nameLocation": "971:13:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "947:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "939:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 31,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "958:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 35,
            "nodeType": "VariableDeclaration",
            "src": "1052:25:0",
            "constant": false,
            "functionSelector": "41fbddbd",
            "mutability": "mutable",
            "name": "allowlistMint",
            "nameLocation": "1064:13:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 34,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1052:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37,
            "nodeType": "VariableDeclaration",
            "src": "1081:24:0",
            "constant": false,
            "functionSelector": "aebb096c",
            "mutability": "mutable",
            "name": "waitlistMint",
            "nameLocation": "1093:12:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 36,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1081:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39,
            "nodeType": "VariableDeclaration",
            "src": "1109:22:0",
            "constant": false,
            "functionSelector": "26092b83",
            "mutability": "mutable",
            "name": "publicMint",
            "nameLocation": "1121:10:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 38,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1109:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 42,
            "nodeType": "VariableDeclaration",
            "src": "1196:31:0",
            "constant": false,
            "documentation": {
              "id": 40,
              "nodeType": "StructuredDocumentation",
              "src": "1136:57:0",
              "text": "@notice the root of the merkle tree for the allowlist"
            },
            "mutability": "immutable",
            "name": "root",
            "nameLocation": "1223:4:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 41,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1196:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 70,
            "nodeType": "FunctionDefinition",
            "src": "1232:211:0",
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "1370:73:0",
              "statements": [
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1376:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1386:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1376:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:18:0"
                },
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1400:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62,
                      "name": "_root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1407:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1400:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:12:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1418:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1434:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1418:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:20:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 53,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "1354:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 54,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46,
                    "src": "1361:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 55,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 52,
                  "name": "ERC721",
                  "nameLocations": [
                    "1347:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 55219,
                  "src": "1347:6:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1347:22:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1263:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1249:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1288:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1274:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "1315:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1301:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "_root",
                  "nameLocation": "1337:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1329:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1243:103:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 129,
            "nodeType": "FunctionDefinition",
            "src": "1851:579:0",
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1985:445:0",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 83,
                      "name": "alreadyMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1995:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 85,
                    "indexExpression": {
                      "id": 84,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2009:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1995:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91,
                  "nodeType": "IfStatement",
                  "src": "1991:59:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 86,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "2028:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2035:13:0",
                        "memberName": "AlreadyMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 942,
                        "src": "2028:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2028:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 90,
                    "nodeType": "RevertStatement",
                    "src": "2021:29:0"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 92,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2061:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2078:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2061:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 103,
                  "nodeType": "IfStatement",
                  "src": "2057:92:0",
                  "trueBody": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "2084:65:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 96,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75,
                                "src": "2100:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2113:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2100:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420616c6c6f77656420746f206d696e7420796574",
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2116:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_93e88215183578f5aaa04bb5f966ce76eb49ed954a4c7e3c4044873616fa3eee",
                                "typeString": "literal_string \"Not allowed to mint yet\""
                              },
                              "value": "Not allowed to mint yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_93e88215183578f5aaa04bb5f966ce76eb49ed954a4c7e3c4044873616fa3eee",
                                "typeString": "literal_string \"Not allowed to mint yet\""
                              }
                            ],
                            "id": 95,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2092:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2092:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101,
                        "nodeType": "ExpressionStatement",
                        "src": "2092:50:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "mutability": "mutable",
                      "name": "payload",
                      "nameLocation": "2223:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 128,
                      "src": "2215:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 104,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2215:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 113,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 109,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "2260:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 110,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "2271:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 107,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2243:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2247:12:0",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2243:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2243:38:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 106,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2233:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2233:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2215:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 117,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "2323:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 118,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "2330:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 119,
                            "name": "payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "2336:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 115,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50312,
                            "src": "2304:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$50312_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2316:6:0",
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49834,
                          "src": "2304:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2304:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c696564",
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2352:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2f47add308f7d76603eeee5e3edc71de6361e9f105e76633970ce1b8dd69f22",
                          "typeString": "literal_string \"Invalid merkle tree proof supplied\""
                        },
                        "value": "Invalid merkle tree proof supplied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2f47add308f7d76603eeee5e3edc71de6361e9f105e76633970ce1b8dd69f22",
                          "typeString": "literal_string \"Invalid merkle tree proof supplied\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2289:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2289:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2289:105:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 125,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "2415:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 124,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "2408:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2408:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 82,
                  "id": 127,
                  "nodeType": "Return",
                  "src": "2401:24:0"
                }
              ]
            },
            "documentation": {
              "id": 71,
              "nodeType": "StructuredDocumentation",
              "src": "1447:401:0",
              "text": "@notice the primary minting method for the allowlist and waitlist minting periods\n @param recipient the address that will receive the minted NFT\n @param allowance of 1 means user is on the allowlist, @allowance of 0 means user is on the waitlist\n @param proof the generated merkle proof that this user is on the allowlist or waitlist\n @return tokenId token id of the minted NFT"
            },
            "functionSelector": "9886a902",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "privateMint",
            "nameLocation": "1860:11:0",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1885:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1877:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "allowance",
                  "nameLocation": "1908:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1900:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1900:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "1942:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1923:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1923:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 77,
                    "nodeType": "ArrayTypeName",
                    "src": "1923:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1871:80:0"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1976:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1976:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1975:9:0"
            },
            "scope": 329,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 158,
            "nodeType": "FunctionDefinition",
            "src": "2634:244:0",
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "2700:178:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 138,
                            "name": "alreadyMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2714:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 140,
                          "indexExpression": {
                            "id": 139,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "2728:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2714:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2742:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2714:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479206d696e74656420616e204e4654",
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2749:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08f848b7b93077c49a2062c9a8c995a84d478ced136ec2a97db79946837b3e71",
                          "typeString": "literal_string \"Already minted an NFT\""
                        },
                        "value": "Already minted an NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08f848b7b93077c49a2062c9a8c995a84d478ced136ec2a97db79946837b3e71",
                          "typeString": "literal_string \"Already minted an NFT\""
                        }
                      ],
                      "id": 137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2706:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2706:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2706:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 147,
                          "name": "publicMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "2787:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2801:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2787:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c6963206d696e74696e67206973206e6f7420616c6c6f77656420796574",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2807:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3856cc290bfb870311067a6378c21a0013e2d9c7ec535e31b3c89448b1aedb92",
                          "typeString": "literal_string \"Public minting is not allowed yet\""
                        },
                        "value": "Public minting is not allowed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3856cc290bfb870311067a6378c21a0013e2d9c7ec535e31b3c89448b1aedb92",
                          "typeString": "literal_string \"Public minting is not allowed yet\""
                        }
                      ],
                      "id": 146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2779:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2779:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2779:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 154,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "2863:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 153,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "2856:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2856:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 136,
                  "id": 156,
                  "nodeType": "Return",
                  "src": "2849:24:0"
                }
              ]
            },
            "documentation": {
              "id": 130,
              "nodeType": "StructuredDocumentation",
              "src": "2434:197:0",
              "text": "@notice the secondary minting method used only when public minting is active\n @param recipient the address that will receive the minted NFT\n @return tokenId token id of the minted NFT"
            },
            "functionSelector": "6a627842",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2643:4:0",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2656:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2648:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2647:19:0"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2691:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2690:9:0"
            },
            "scope": 329,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 212,
            "nodeType": "FunctionDefinition",
            "src": "3056:390:0",
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "3117:329:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 166,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3127:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3131:5:0",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3127:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 168,
                        "name": "Constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "3140:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Constants_$903_$",
                          "typeString": "type(library Constants)"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3150:10:0",
                      "memberName": "MINT_PRICE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 902,
                      "src": "3140:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3127:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 176,
                  "nodeType": "IfStatement",
                  "src": "3123:71:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 171,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "3169:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3176:16:0",
                        "memberName": "MintPriceNotPaid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "3169:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3169:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 175,
                    "nodeType": "RevertStatement",
                    "src": "3162:32:0"
                  }
                },
                {
                  "assignments": [
                    178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 178,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "3209:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "3201:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3201:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 181,
                  "initialValue": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "3221:16:0",
                    "subExpression": {
                      "id": 179,
                      "name": "currentTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "3223:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3201:36:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 182,
                      "name": "newItemId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "3247:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 183,
                        "name": "Constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "3259:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Constants_$903_$",
                          "typeString": "type(library Constants)"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3269:12:0",
                      "memberName": "TOTAL_SUPPLY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 898,
                      "src": "3259:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3247:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 191,
                  "nodeType": "IfStatement",
                  "src": "3243:65:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 186,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "3290:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3297:9:0",
                        "memberName": "MaxSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 933,
                        "src": "3290:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3290:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 190,
                    "nodeType": "RevertStatement",
                    "src": "3283:25:0"
                  }
                },
                {
                  "expression": {
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 192,
                        "name": "alreadyMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3315:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 194,
                      "indexExpression": {
                        "id": 193,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3329:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3315:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3342:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3315:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "3315:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 199,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3362:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 200,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "3373:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 198,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        55176,
                        55218
                      ],
                      "referencedDeclaration": 55176,
                      "src": "3352:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3352:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3352:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 206,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3409:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 203,
                        "name": "Events",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "3395:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Events_$984_$",
                          "typeString": "type(library Events)"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3402:6:0",
                      "memberName": "Minted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 962,
                      "src": "3395:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3395:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "EmitStatement",
                  "src": "3390:29:0"
                },
                {
                  "expression": {
                    "id": 209,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 178,
                    "src": "3432:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 165,
                  "id": 210,
                  "nodeType": "Return",
                  "src": "3425:16:0"
                }
              ]
            },
            "documentation": {
              "id": 159,
              "nodeType": "StructuredDocumentation",
              "src": "2882:171:0",
              "text": "@notice Verify that the user sent the proper amount of ether to mint\n @notice Verify that there are still more NFTs to mint\n @notice Mint the NFT to the user"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "3065:6:0",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3080:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "3072:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3072:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3071:19:0"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "3108:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3107:9:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 255,
            "nodeType": "FunctionDefinition",
            "src": "3617:326:0",
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "3727:216:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 222,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "3745:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 221,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54744,
                        "src": "3737:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3737:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3765:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3757:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3757:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3757:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3737:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 235,
                  "nodeType": "IfStatement",
                  "src": "3733:86:0",
                  "trueBody": {
                    "id": 234,
                    "nodeType": "Block",
                    "src": "3769:50:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 229,
                              "name": "Errors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "3784:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                                "typeString": "type(library Errors)"
                              }
                            },
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3791:19:0",
                            "memberName": "NonExistentTokenURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 936,
                            "src": "3784:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3784:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 233,
                        "nodeType": "RevertStatement",
                        "src": "3777:35:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 238,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "3843:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3837:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 236,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3837:5:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3837:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3852:6:0",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3837:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3861:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3837:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3936:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3837:101:0",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 247,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "3897:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "hexValue": "636f756e63696c6d65746164617461",
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3906:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fe29c6027f746311fa0ffb1256ea191de5e1b7ce95dde50a8f5de26c1a095a51",
                                "typeString": "literal_string \"councilmetadata\""
                              },
                              "value": "councilmetadata"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fe29c6027f746311fa0ffb1256ea191de5e1b7ce95dde50a8f5de26c1a095a51",
                                "typeString": "literal_string \"councilmetadata\""
                              }
                            ],
                            "expression": {
                              "id": 245,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3880:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3884:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3880:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3880:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3873:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3873:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3873:52:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 220,
                  "id": 253,
                  "nodeType": "Return",
                  "src": "3824:114:0"
                }
              ]
            },
            "baseFunctions": [
              54713
            ],
            "documentation": {
              "id": 213,
              "nodeType": "StructuredDocumentation",
              "src": "3450:164:0",
              "text": "@notice Get the tokenURI for the given tokenId\n @param tokenId the id of the token to get the tokenURI for\n @return the tokenURI for the given tokenId"
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3626:8:0",
            "overrides": {
              "id": 217,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3688:8:0"
            },
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3643:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3635:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3634:17:0"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3710:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3710:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3709:15:0"
            },
            "scope": 329,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 290,
            "nodeType": "FunctionDefinition",
            "src": "4069:303:0",
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "4137:235:0",
              "statements": [
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "4151:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "4143:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 263,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4143:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 270,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 267,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4169:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CouncilNFT_$329",
                            "typeString": "contract CouncilNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CouncilNFT_$329",
                            "typeString": "contract CouncilNFT"
                          }
                        ],
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4161:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4161:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4161:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4175:7:0",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4161:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4143:39:0"
                },
                {
                  "assignments": [
                    272,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 272,
                      "mutability": "mutable",
                      "name": "transferTx",
                      "nameLocation": "4252:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "4247:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 271,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4247:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 279,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4295:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 273,
                          "name": "payee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "4268:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4274:4:0",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4268:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 275,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "4286:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4268:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4268:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4246:52:0"
                },
                {
                  "condition": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4308:11:0",
                    "subExpression": {
                      "id": 280,
                      "name": "transferTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "4309:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 288,
                  "nodeType": "IfStatement",
                  "src": "4304:64:0",
                  "trueBody": {
                    "id": 287,
                    "nodeType": "Block",
                    "src": "4321:47:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 282,
                              "name": "Errors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "4336:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                                "typeString": "type(library Errors)"
                              }
                            },
                            "id": 284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4343:16:0",
                            "memberName": "WithdrawTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 939,
                            "src": "4336:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4336:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 286,
                        "nodeType": "RevertStatement",
                        "src": "4329:32:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 256,
              "nodeType": "StructuredDocumentation",
              "src": "3947:119:0",
              "text": "@notice withdraw the balance from the contract\n @param payee the address that will receive the withdrawn ether"
            },
            "functionSelector": "31b3eb94",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 261,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 260,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4127:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42851,
                  "src": "4127:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4127:9:0"
              }
            ],
            "name": "withdrawPayments",
            "nameLocation": "4078:16:0",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "4111:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "4095:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4095:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4094:23:0"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4137:0:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 309,
            "nodeType": "FunctionDefinition",
            "src": "4425:127:0",
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "4471:81:0",
              "statements": [
                {
                  "expression": {
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 296,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "4477:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4493:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4477:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "4477:21:0"
                },
                {
                  "expression": {
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 300,
                      "name": "waitlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4504:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4519:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4504:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "4504:19:0"
                },
                {
                  "expression": {
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 304,
                      "name": "publicMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "4529:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4542:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4529:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "4529:18:0"
                }
              ]
            },
            "documentation": {
              "id": 291,
              "nodeType": "StructuredDocumentation",
              "src": "4376:46:0",
              "text": "@notice starts the waitlist minting period"
            },
            "functionSelector": "a839e501",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 294,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 293,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4461:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42851,
                  "src": "4461:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4461:9:0"
              }
            ],
            "name": "startWaitlistMint",
            "nameLocation": "4434:17:0",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4451:2:0"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4471:0:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 328,
            "nodeType": "FunctionDefinition",
            "src": "4603:125:0",
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "4647:81:0",
              "statements": [
                {
                  "expression": {
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 315,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "4653:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4669:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4653:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "4653:21:0"
                },
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 319,
                      "name": "waitlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4680:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4695:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4680:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "4680:20:0"
                },
                {
                  "expression": {
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 323,
                      "name": "publicMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "4706:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4719:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4706:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "4706:17:0"
                }
              ]
            },
            "documentation": {
              "id": 310,
              "nodeType": "StructuredDocumentation",
              "src": "4556:44:0",
              "text": "@notice starts the public minting period"
            },
            "functionSelector": "76c64c62",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 313,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 312,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4637:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42851,
                  "src": "4637:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4637:9:0"
              }
            ],
            "name": "startPublicMint",
            "nameLocation": "4612:15:0",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4627:2:0"
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4647:0:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16,
              "name": "ERC721",
              "nameLocations": [
                "637:6:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 55219,
              "src": "637:6:0"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "637:6:0"
          },
          {
            "baseName": {
              "id": 18,
              "name": "Ownable",
              "nameLocations": [
                "645:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42932,
              "src": "645:7:0"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "645:7:0"
          }
        ],
        "canonicalName": "CouncilNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15,
          "nodeType": "StructuredDocumentation",
          "src": "497:116:0",
          "text": " @title CouncilNFT\n @author HNT Labs\n @notice This is the main NFT contract for the council of Zion"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          329,
          42932,
          48935,
          55219
        ],
        "name": "CouncilNFT",
        "nameLocation": "623:10:0",
        "scope": 330,
        "usedErrors": [
          930,
          933,
          936,
          939,
          942
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 0
}
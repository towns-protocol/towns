{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MaxSupply",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintPriceNotPaid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonExistentTokenURI",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawTransfer",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "allowlistMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "alreadyMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "privateMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startPublicMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startWaitlistMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "waitlistMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPayments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b50604051620024ce380380620024ce8339810160408190526200003491620001bb565b83836000620000448382620002e3565b506001620000538282620002e3565b505050620000706200006a6200009860201b60201c565b6200009c565b60076200007e8382620002e3565b506080525050600a805460ff1916600117905550620003af565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011657600080fd5b81516001600160401b0380821115620001335762000133620000ee565b604051601f8301601f19908116603f011681019082821181831017156200015e576200015e620000ee565b816040528381526020925086838588010111156200017b57600080fd5b600091505b838210156200019f578582018301518183018401529082019062000180565b83821115620001b15760008385830101525b9695505050505050565b60008060008060808587031215620001d257600080fd5b84516001600160401b0380821115620001ea57600080fd5b620001f88883890162000104565b955060208701519150808211156200020f57600080fd5b6200021d8883890162000104565b945060408701519150808211156200023457600080fd5b50620002438782880162000104565b606096909601519497939650505050565b600181811c908216806200026957607f821691505b6020821081036200028a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002de57600081815260208120601f850160051c81016020861015620002b95750805b601f850160051c820191505b81811015620002da57828155600101620002c5565b5050505b505050565b81516001600160401b03811115620002ff57620002ff620000ee565b620003178162000310845462000254565b8462000290565b602080601f8311600181146200034f5760008415620003365750858301515b600019600386901b1c1916600185901b178555620002da565b600085815260208120601f198616915b8281101562000380578886015182559484019460019091019084016200035f565b50858210156200039f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051612103620003cb600039600061111e01526121036000f3fe6080604052600436106101ab5760003560e01c80636c0360eb116100ec578063a22cb4651161008a578063b88d4fde11610064578063b88d4fde146104b8578063c87b56dd146104d8578063e985e9c5146104f8578063f2fde38b1461053357600080fd5b8063a22cb46514610464578063a839e50114610484578063aebb096c1461049957600080fd5b806376c64c62116100c657806376c64c62146103fc5780638da5cb5b1461041157806395d89b411461043c5780639886a9021461045157600080fd5b80636c0360eb146103b257806370a08231146103c7578063715018a6146103e757600080fd5b806323b872dd1161015957806341fbddbd1161013357806341fbddbd1461034557806342842e0e1461035f5780636352211e1461037f5780636a6278421461039f57600080fd5b806323b872dd146102e557806326092b831461030557806331b3eb941461032557600080fd5b8063081812fc1161018a578063081812fc1461022b578063095ea7b3146102935780630a398b88146102b557600080fd5b80629a9b7b146101b057806301ffc9a7146101d957806306fdde0314610209575b600080fd5b3480156101bc57600080fd5b506101c660085481565b6040519081526020015b60405180910390f35b3480156101e557600080fd5b506101f96101f4366004611b61565b610553565b60405190151581526020016101d0565b34801561021557600080fd5b5061021e610638565b6040516101d09190611b7e565b34801561023757600080fd5b5061026e610246366004611bf1565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d0565b34801561029f57600080fd5b506102b36102ae366004611c2c565b6106c6565b005b3480156102c157600080fd5b506101f96102d0366004611c58565b60096020526000908152604090205460ff1681565b3480156102f157600080fd5b506102b3610300366004611c75565b610815565b34801561031157600080fd5b50600a546101f99062010000900460ff1681565b34801561033157600080fd5b506102b3610340366004611c58565b610adc565b34801561035157600080fd5b50600a546101f99060ff1681565b34801561036b57600080fd5b506102b361037a366004611c75565b610b83565b34801561038b57600080fd5b5061026e61039a366004611bf1565b610ce8565b6101c66103ad366004611c58565b610d79565b3480156103be57600080fd5b5061021e610eaf565b3480156103d357600080fd5b506101c66103e2366004611c58565b610ebc565b3480156103f357600080fd5b506102b3610f64565b34801561040857600080fd5b506102b3610f78565b34801561041d57600080fd5b5060065473ffffffffffffffffffffffffffffffffffffffff1661026e565b34801561044857600080fd5b5061021e610faf565b6101c661045f366004611cb6565b610fbc565b34801561047057600080fd5b506102b361047f366004611d42565b6111e8565b34801561049057600080fd5b506102b361127f565b3480156104a557600080fd5b50600a546101f990610100900460ff1681565b3480156104c457600080fd5b506102b36104d3366004611d80565b6112b5565b3480156104e457600080fd5b5061021e6104f3366004611bf1565b61140f565b34801561050457600080fd5b506101f9610513366004611e1f565b600560209081526000928352604080842090915290825290205460ff1681565b34801561053f57600080fd5b506102b361054e366004611c58565b6114bb565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614806105e657507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061063257507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000805461064590611e4d565b80601f016020809104026020016040519081016040528092919081815260200182805461067190611e4d565b80156106be5780601f10610693576101008083540402835291602001916106be565b820191906000526020600020905b8154815290600101906020018083116106a157829003601f168201915b505050505081565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633811480610729575073ffffffffffffffffffffffffffffffffffffffff8116600090815260056020908152604080832033845290915290205460ff165b610794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064015b60405180910390fd5b60008281526004602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff8481169116146108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f57524f4e475f46524f4d00000000000000000000000000000000000000000000604482015260640161078b565b73ffffffffffffffffffffffffffffffffffffffff8216610922576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161078b565b3373ffffffffffffffffffffffffffffffffffffffff84161480610976575073ffffffffffffffffffffffffffffffffffffffff8316600090815260056020908152604080832033845290915290205460ff165b806109a4575060008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b610a0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015260640161078b565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260036020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055938616808352848320805460010190558583526002825284832080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610ae4611572565b604051479060009073ffffffffffffffffffffffffffffffffffffffff84169083908381818185875af1925050503d8060008114610b3e576040519150601f19603f3d011682016040523d82523d6000602084013e610b43565b606091505b5050905080610b7e576040517fd23a9e8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b610b8e838383610815565b73ffffffffffffffffffffffffffffffffffffffff82163b1580610c8257506040517f150b7a020000000000000000000000000000000000000000000000000000000080825233600483015273ffffffffffffffffffffffffffffffffffffffff858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610c3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5e9190611ea0565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b610b7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e5400000000000000000000000000000000604482015260640161078b565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1680610d74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e4f545f4d494e54454400000000000000000000000000000000000000000000604482015260640161078b565b919050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526009602052604081205460ff1615610e09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f416c7265616479206d696e74656420616e204e46540000000000000000000000604482015260640161078b565b600a5462010000900460ff161515600114610ea6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5075626c6963206d696e74696e67206973206e6f7420616c6c6f77656420796560448201527f7400000000000000000000000000000000000000000000000000000000000000606482015260840161078b565b610632826115f3565b6007805461064590611e4d565b600073ffffffffffffffffffffffffffffffffffffffff8216610f3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015260640161078b565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b610f6c611572565b610f766000611729565b565b610f80611572565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001662010000179055565b6001805461064590611e4d565b73ffffffffffffffffffffffffffffffffffffffff841660009081526009602052604081205460ff161561101c576040517fddefae2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a5460ff1615156001036110955783600114611095576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4e6f7420616c6c6f77656420746f206d696e7420796574000000000000000000604482015260640161078b565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606087901b166020820152603481018590526000906054016040516020818303038152906040528051906020012090506111498484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506117a09050565b6111d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c6960448201527f6564000000000000000000000000000000000000000000000000000000000000606482015260840161078b565b6111de866115f3565b9695505050505050565b33600081815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611287611572565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016610100179055565b6112c0858585610815565b73ffffffffffffffffffffffffffffffffffffffff84163b15806113a257506040517f150b7a02000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063150b7a029061133b9033908a90899089908990600401611ebd565b6020604051808303816000875af115801561135a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137e9190611ea0565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b611408576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e5400000000000000000000000000000000604482015260640161078b565b5050505050565b6060600061141c83610ce8565b73ffffffffffffffffffffffffffffffffffffffff1603611469576040517fd872946b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006007805461147890611e4d565b9050116114945760405180602001604052806000815250610632565b60076040516020016114a69190611f3c565b60405160208183030381529060405292915050565b6114c3611572565b73ffffffffffffffffffffffffffffffffffffffff8116611566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161078b565b61156f81611729565b50565b60065473ffffffffffffffffffffffffffffffffffffffff163314610f76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161078b565b600067011c37937e0800003414611636576040517f21e191e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008600081546116479061203f565b918290555090506109c481111561168a576040517fb36c128400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556116e283826117b6565b60405173ffffffffffffffffffffffffffffffffffffffff8416907f90ddedd5a25821bba11fbb98de02ec1f75c1be90ae147d6450ce873e7b78b5d890600090a292915050565b6006805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000826117ad858461191b565b14949350505050565b6117c08282611968565b73ffffffffffffffffffffffffffffffffffffffff82163b15806118b157506040517f150b7a0200000000000000000000000000000000000000000000000000000000808252336004830152600060248301819052604483018490526080606484015260848301529073ffffffffffffffffffffffffffffffffffffffff84169063150b7a029060a4016020604051808303816000875af1158015611869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188d9190611ea0565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b611917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e5400000000000000000000000000000000604482015260640161078b565b5050565b600081815b84518110156119605761194c8286838151811061193f5761193f61209e565b6020026020010151611b01565b9150806119588161203f565b915050611920565b509392505050565b73ffffffffffffffffffffffffffffffffffffffff82166119e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161078b565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615611a71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f414c52454144595f4d494e544544000000000000000000000000000000000000604482015260640161078b565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818310611b1d576000828152602084905260409020611b2c565b60008381526020839052604090205b9392505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461156f57600080fd5b600060208284031215611b7357600080fd5b8135611b2c81611b33565b600060208083528351808285015260005b81811015611bab57858101830151858201604001528201611b8f565b81811115611bbd576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600060208284031215611c0357600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461156f57600080fd5b60008060408385031215611c3f57600080fd5b8235611c4a81611c0a565b946020939093013593505050565b600060208284031215611c6a57600080fd5b8135611b2c81611c0a565b600080600060608486031215611c8a57600080fd5b8335611c9581611c0a565b92506020840135611ca581611c0a565b929592945050506040919091013590565b60008060008060608587031215611ccc57600080fd5b8435611cd781611c0a565b935060208501359250604085013567ffffffffffffffff80821115611cfb57600080fd5b818701915087601f830112611d0f57600080fd5b813581811115611d1e57600080fd5b8860208260051b8501011115611d3357600080fd5b95989497505060200194505050565b60008060408385031215611d5557600080fd5b8235611d6081611c0a565b915060208301358015158114611d7557600080fd5b809150509250929050565b600080600080600060808688031215611d9857600080fd5b8535611da381611c0a565b94506020860135611db381611c0a565b935060408601359250606086013567ffffffffffffffff80821115611dd757600080fd5b818801915088601f830112611deb57600080fd5b813581811115611dfa57600080fd5b896020828501011115611e0c57600080fd5b9699959850939650602001949392505050565b60008060408385031215611e3257600080fd5b8235611e3d81611c0a565b91506020830135611d7581611c0a565b600181811c90821680611e6157607f821691505b602082108103611e9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215611eb257600080fd5b8151611b2c81611b33565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011683010190509695505050505050565b600080835481600182811c915080831680611f5857607f831692505b60208084108203611f90577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015611fa45760018114611fd757612004565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650612004565b60008a81526020902060005b86811015611ffc5781548b820152908501908301611fe3565b505084890196505b505050505050612037817f636f756e63696c6d6574616461746100000000000000000000000000000000008152600f0190565b949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612097577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220fc0eff9c7f6f637bae464a5bbb75667a4f1487cb7da2e2896a6b759d10f4ba3d64736f6c634300080f0033",
    "sourceMap": "614:4058:0:-:0;;;1232:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1354:5;1361:7;2220:4:51;:12;1354:5:0;2220:4:51;:12;:::i;:::-;-1:-1:-1;2242:6:51;:16;2251:7;2242:6;:16;:::i;:::-;;2154:111;;936:32:42;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1376:7:0::1;:18;1386:8:::0;1376:7;:18:::1;:::i;:::-;-1:-1:-1::0;1400:12:0::1;::::0;-1:-1:-1;;1418:13:0::1;:20:::0;;-1:-1:-1;;1418:20:0::1;1434:4;1418:20;::::0;;-1:-1:-1;614:4058:0;;640:96:47;719:10;;640:96::o;2433:187:42:-;2525:6;;;-1:-1:-1;;;;;2541:17:42;;;-1:-1:-1;;;;;;2541:17:42;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:92:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:92;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:92;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:92:o;1036:828::-;1163:6;1171;1179;1187;1240:3;1228:9;1219:7;1215:23;1211:33;1208:53;;;1257:1;1254;1247:12;1208:53;1284:16;;-1:-1:-1;;;;;1349:14:92;;;1346:34;;;1376:1;1373;1366:12;1346:34;1399:61;1452:7;1443:6;1432:9;1428:22;1399:61;:::i;:::-;1389:71;;1506:2;1495:9;1491:18;1485:25;1469:41;;1535:2;1525:8;1522:16;1519:36;;;1551:1;1548;1541:12;1519:36;1574:63;1629:7;1618:8;1607:9;1603:24;1574:63;:::i;:::-;1564:73;;1683:2;1672:9;1668:18;1662:25;1646:41;;1712:2;1702:8;1699:16;1696:36;;;1728:1;1725;1718:12;1696:36;;1751:63;1806:7;1795:8;1784:9;1780:24;1751:63;:::i;:::-;1854:2;1839:18;;;;1833:25;1036:828;;;;-1:-1:-1;;;;1036:828:92:o;1869:380::-;1948:1;1944:12;;;;1991;;;2012:61;;2066:4;2058:6;2054:17;2044:27;;2012:61;2119:2;2111:6;2108:14;2088:18;2085:38;2082:161;;2165:10;2160:3;2156:20;2153:1;2146:31;2200:4;2197:1;2190:15;2228:4;2225:1;2218:15;2082:161;;1869:380;;;:::o;2380:545::-;2482:2;2477:3;2474:11;2471:448;;;2518:1;2543:5;2539:2;2532:17;2588:4;2584:2;2574:19;2658:2;2646:10;2642:19;2639:1;2635:27;2629:4;2625:38;2694:4;2682:10;2679:20;2676:47;;;-1:-1:-1;2717:4:92;2676:47;2772:2;2767:3;2763:12;2760:1;2756:20;2750:4;2746:31;2736:41;;2827:82;2845:2;2838:5;2835:13;2827:82;;;2890:17;;;2871:1;2860:13;2827:82;;;2831:3;;;2471:448;2380:545;;;:::o;3101:1352::-;3221:10;;-1:-1:-1;;;;;3243:30:92;;3240:56;;;3276:18;;:::i;:::-;3305:97;3395:6;3355:38;3387:4;3381:11;3355:38;:::i;:::-;3349:4;3305:97;:::i;:::-;3457:4;;3521:2;3510:14;;3538:1;3533:663;;;;4240:1;4257:6;4254:89;;;-1:-1:-1;4309:19:92;;;4303:26;4254:89;-1:-1:-1;;3058:1:92;3054:11;;;3050:24;3046:29;3036:40;3082:1;3078:11;;;3033:57;4356:81;;3503:944;;3533:663;2327:1;2320:14;;;2364:4;2351:18;;-1:-1:-1;;3569:20:92;;;3687:236;3701:7;3698:1;3695:14;3687:236;;;3790:19;;;3784:26;3769:42;;3882:27;;;;3850:1;3838:14;;;;3717:19;;3687:236;;;3691:3;3951:6;3942:7;3939:19;3936:201;;;4012:19;;;4006:26;-1:-1:-1;;4095:1:92;4091:14;;;4107:3;4087:24;4083:37;4079:42;4064:58;4049:74;;3936:201;-1:-1:-1;;;;;4183:1:92;4167:14;;;4163:22;4150:36;;-1:-1:-1;3101:1352:92:o;:::-;614:4058:0;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101ab5760003560e01c80636c0360eb116100ec578063a22cb4651161008a578063b88d4fde11610064578063b88d4fde146104b8578063c87b56dd146104d8578063e985e9c5146104f8578063f2fde38b1461053357600080fd5b8063a22cb46514610464578063a839e50114610484578063aebb096c1461049957600080fd5b806376c64c62116100c657806376c64c62146103fc5780638da5cb5b1461041157806395d89b411461043c5780639886a9021461045157600080fd5b80636c0360eb146103b257806370a08231146103c7578063715018a6146103e757600080fd5b806323b872dd1161015957806341fbddbd1161013357806341fbddbd1461034557806342842e0e1461035f5780636352211e1461037f5780636a6278421461039f57600080fd5b806323b872dd146102e557806326092b831461030557806331b3eb941461032557600080fd5b8063081812fc1161018a578063081812fc1461022b578063095ea7b3146102935780630a398b88146102b557600080fd5b80629a9b7b146101b057806301ffc9a7146101d957806306fdde0314610209575b600080fd5b3480156101bc57600080fd5b506101c660085481565b6040519081526020015b60405180910390f35b3480156101e557600080fd5b506101f96101f4366004611b61565b610553565b60405190151581526020016101d0565b34801561021557600080fd5b5061021e610638565b6040516101d09190611b7e565b34801561023757600080fd5b5061026e610246366004611bf1565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101d0565b34801561029f57600080fd5b506102b36102ae366004611c2c565b6106c6565b005b3480156102c157600080fd5b506101f96102d0366004611c58565b60096020526000908152604090205460ff1681565b3480156102f157600080fd5b506102b3610300366004611c75565b610815565b34801561031157600080fd5b50600a546101f99062010000900460ff1681565b34801561033157600080fd5b506102b3610340366004611c58565b610adc565b34801561035157600080fd5b50600a546101f99060ff1681565b34801561036b57600080fd5b506102b361037a366004611c75565b610b83565b34801561038b57600080fd5b5061026e61039a366004611bf1565b610ce8565b6101c66103ad366004611c58565b610d79565b3480156103be57600080fd5b5061021e610eaf565b3480156103d357600080fd5b506101c66103e2366004611c58565b610ebc565b3480156103f357600080fd5b506102b3610f64565b34801561040857600080fd5b506102b3610f78565b34801561041d57600080fd5b5060065473ffffffffffffffffffffffffffffffffffffffff1661026e565b34801561044857600080fd5b5061021e610faf565b6101c661045f366004611cb6565b610fbc565b34801561047057600080fd5b506102b361047f366004611d42565b6111e8565b34801561049057600080fd5b506102b361127f565b3480156104a557600080fd5b50600a546101f990610100900460ff1681565b3480156104c457600080fd5b506102b36104d3366004611d80565b6112b5565b3480156104e457600080fd5b5061021e6104f3366004611bf1565b61140f565b34801561050457600080fd5b506101f9610513366004611e1f565b600560209081526000928352604080842090915290825290205460ff1681565b34801561053f57600080fd5b506102b361054e366004611c58565b6114bb565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614806105e657507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061063257507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000805461064590611e4d565b80601f016020809104026020016040519081016040528092919081815260200182805461067190611e4d565b80156106be5780601f10610693576101008083540402835291602001916106be565b820191906000526020600020905b8154815290600101906020018083116106a157829003601f168201915b505050505081565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633811480610729575073ffffffffffffffffffffffffffffffffffffffff8116600090815260056020908152604080832033845290915290205460ff165b610794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064015b60405180910390fd5b60008281526004602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff8481169116146108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f57524f4e475f46524f4d00000000000000000000000000000000000000000000604482015260640161078b565b73ffffffffffffffffffffffffffffffffffffffff8216610922576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161078b565b3373ffffffffffffffffffffffffffffffffffffffff84161480610976575073ffffffffffffffffffffffffffffffffffffffff8316600090815260056020908152604080832033845290915290205460ff165b806109a4575060008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b610a0a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a4544000000000000000000000000000000000000604482015260640161078b565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260036020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055938616808352848320805460010190558583526002825284832080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610ae4611572565b604051479060009073ffffffffffffffffffffffffffffffffffffffff84169083908381818185875af1925050503d8060008114610b3e576040519150601f19603f3d011682016040523d82523d6000602084013e610b43565b606091505b5050905080610b7e576040517fd23a9e8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b610b8e838383610815565b73ffffffffffffffffffffffffffffffffffffffff82163b1580610c8257506040517f150b7a020000000000000000000000000000000000000000000000000000000080825233600483015273ffffffffffffffffffffffffffffffffffffffff858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610c3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5e9190611ea0565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b610b7e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e5400000000000000000000000000000000604482015260640161078b565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1680610d74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e4f545f4d494e54454400000000000000000000000000000000000000000000604482015260640161078b565b919050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526009602052604081205460ff1615610e09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f416c7265616479206d696e74656420616e204e46540000000000000000000000604482015260640161078b565b600a5462010000900460ff161515600114610ea6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5075626c6963206d696e74696e67206973206e6f7420616c6c6f77656420796560448201527f7400000000000000000000000000000000000000000000000000000000000000606482015260840161078b565b610632826115f3565b6007805461064590611e4d565b600073ffffffffffffffffffffffffffffffffffffffff8216610f3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a45524f5f414444524553530000000000000000000000000000000000000000604482015260640161078b565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b610f6c611572565b610f766000611729565b565b610f80611572565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001662010000179055565b6001805461064590611e4d565b73ffffffffffffffffffffffffffffffffffffffff841660009081526009602052604081205460ff161561101c576040517fddefae2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a5460ff1615156001036110955783600114611095576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4e6f7420616c6c6f77656420746f206d696e7420796574000000000000000000604482015260640161078b565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606087901b166020820152603481018590526000906054016040516020818303038152906040528051906020012090506111498484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506117a09050565b6111d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c6960448201527f6564000000000000000000000000000000000000000000000000000000000000606482015260840161078b565b6111de866115f3565b9695505050505050565b33600081815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611287611572565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016610100179055565b6112c0858585610815565b73ffffffffffffffffffffffffffffffffffffffff84163b15806113a257506040517f150b7a02000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063150b7a029061133b9033908a90899089908990600401611ebd565b6020604051808303816000875af115801561135a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137e9190611ea0565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b611408576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e5400000000000000000000000000000000604482015260640161078b565b5050505050565b6060600061141c83610ce8565b73ffffffffffffffffffffffffffffffffffffffff1603611469576040517fd872946b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006007805461147890611e4d565b9050116114945760405180602001604052806000815250610632565b60076040516020016114a69190611f3c565b60405160208183030381529060405292915050565b6114c3611572565b73ffffffffffffffffffffffffffffffffffffffff8116611566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161078b565b61156f81611729565b50565b60065473ffffffffffffffffffffffffffffffffffffffff163314610f76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161078b565b600067011c37937e0800003414611636576040517f21e191e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006008600081546116479061203f565b918290555090506109c481111561168a576040517fb36c128400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556116e283826117b6565b60405173ffffffffffffffffffffffffffffffffffffffff8416907f90ddedd5a25821bba11fbb98de02ec1f75c1be90ae147d6450ce873e7b78b5d890600090a292915050565b6006805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000826117ad858461191b565b14949350505050565b6117c08282611968565b73ffffffffffffffffffffffffffffffffffffffff82163b15806118b157506040517f150b7a0200000000000000000000000000000000000000000000000000000000808252336004830152600060248301819052604483018490526080606484015260848301529073ffffffffffffffffffffffffffffffffffffffff84169063150b7a029060a4016020604051808303816000875af1158015611869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188d9190611ea0565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b611917576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e5400000000000000000000000000000000604482015260640161078b565b5050565b600081815b84518110156119605761194c8286838151811061193f5761193f61209e565b6020026020010151611b01565b9150806119588161203f565b915050611920565b509392505050565b73ffffffffffffffffffffffffffffffffffffffff82166119e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e54000000000000000000000000000000604482015260640161078b565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615611a71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f414c52454144595f4d494e544544000000000000000000000000000000000000604482015260640161078b565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818310611b1d576000828152602084905260409020611b2c565b60008381526020839052604090205b9392505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461156f57600080fd5b600060208284031215611b7357600080fd5b8135611b2c81611b33565b600060208083528351808285015260005b81811015611bab57858101830151858201604001528201611b8f565b81811115611bbd576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600060208284031215611c0357600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461156f57600080fd5b60008060408385031215611c3f57600080fd5b8235611c4a81611c0a565b946020939093013593505050565b600060208284031215611c6a57600080fd5b8135611b2c81611c0a565b600080600060608486031215611c8a57600080fd5b8335611c9581611c0a565b92506020840135611ca581611c0a565b929592945050506040919091013590565b60008060008060608587031215611ccc57600080fd5b8435611cd781611c0a565b935060208501359250604085013567ffffffffffffffff80821115611cfb57600080fd5b818701915087601f830112611d0f57600080fd5b813581811115611d1e57600080fd5b8860208260051b8501011115611d3357600080fd5b95989497505060200194505050565b60008060408385031215611d5557600080fd5b8235611d6081611c0a565b915060208301358015158114611d7557600080fd5b809150509250929050565b600080600080600060808688031215611d9857600080fd5b8535611da381611c0a565b94506020860135611db381611c0a565b935060408601359250606086013567ffffffffffffffff80821115611dd757600080fd5b818801915088601f830112611deb57600080fd5b813581811115611dfa57600080fd5b896020828501011115611e0c57600080fd5b9699959850939650602001949392505050565b60008060408385031215611e3257600080fd5b8235611e3d81611c0a565b91506020830135611d7581611c0a565b600181811c90821680611e6157607f821691505b602082108103611e9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215611eb257600080fd5b8151611b2c81611b33565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011683010190509695505050505050565b600080835481600182811c915080831680611f5857607f831692505b60208084108203611f90577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015611fa45760018114611fd757612004565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650612004565b60008a81526020902060005b86811015611ffc5781548b820152908501908301611fe3565b505084890196505b505050505050612037817f636f756e63696c6d6574616461746100000000000000000000000000000000008152600f0190565b949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612097577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220fc0eff9c7f6f637bae464a5bbb75667a4f1487cb7da2e2896a6b759d10f4ba3d64736f6c634300080f0033",
    "sourceMap": "614:4058:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;834:29;;;;;;;;;;;;;;;;;;;160:25:92;;;148:2;133:18;834:29:0;;;;;;;;4714:335:51;;;;;;;;;;-1:-1:-1;4714:335:51;;;;;:::i;:::-;;:::i;:::-;;;793:14:92;;786:22;768:41;;756:2;741:18;4714:335:51;628:187:92;899:18:51;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1844:46::-;;;;;;;;;;-1:-1:-1;1844:46:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1842:42:92;1830:55;;;1812:74;;1800:2;1785:18;1844:46:51;1666:226:92;2453:282:51;;;;;;;;;;-1:-1:-1;2453:282:51;;;;;:::i;:::-;;:::i;:::-;;939:45:0;;;;;;;;;;-1:-1:-1;939:45:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;2950:741:51;;;;;;;;;;-1:-1:-1;2950:741:51;;;;;:::i;:::-;;:::i;1109:22:0:-;;;;;;;;;;-1:-1:-1;1109:22:0;;;;;;;;;;;4069:245;;;;;;;;;;-1:-1:-1;4069:245:0;;;;;:::i;:::-;;:::i;1052:25::-;;;;;;;;;;-1:-1:-1;1052:25:0;;;;;;;;3697:396:51;;;;;;;;;;-1:-1:-1;3697:396:51;;;;;:::i;:::-;;:::i;1327:149::-;;;;;;;;;;-1:-1:-1;1327:149:51;;;;;:::i;:::-;;:::i;2634:244:0:-;;;;;;:::i;:::-;;:::i;755:21::-;;;;;;;;;;;;;:::i;1482:168:51:-;;;;;;;;;;-1:-1:-1;1482:168:51;;;;;:::i;:::-;;:::i;1831:101:42:-;;;;;;;;;;;;;:::i;4545:125:0:-;;;;;;;;;;;;;:::i;1201:85:42:-;;;;;;;;;;-1:-1:-1;1273:6:42;;;;1201:85;;924:20:51;;;;;;;;;;;;;:::i;1851:579:0:-;;;;;;:::i;:::-;;:::i;2741:203:51:-;;;;;;;;;;-1:-1:-1;2741:203:51;;;;;:::i;:::-;;:::i;4367:127:0:-;;;;;;;;;;;;;:::i;1081:24::-;;;;;;;;;;-1:-1:-1;1081:24:0;;;;;;;;;;;4099:427:51;;;;;;;;;;-1:-1:-1;4099:427:51;;;;;:::i;:::-;;:::i;3617:326:0:-;;;;;;;;;;-1:-1:-1;3617:326:0;;;;;:::i;:::-;;:::i;1897:68:51:-;;;;;;;;;;-1:-1:-1;1897:68:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2081:198:42;;;;;;;;;;-1:-1:-1;2081:198:42;;;;;:::i;:::-;;:::i;4714:335:51:-;4790:4;4825:25;;;;;;:100;;-1:-1:-1;4900:25:51;;;;;4825:100;:175;;;-1:-1:-1;4975:25:51;;;;;4825:175;4806:194;4714:335;-1:-1:-1;;4714:335:51:o;899:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2453:282::-;2524:13;2540:12;;;:8;:12;;;;;;;;2571:10;:19;;;:58;;-1:-1:-1;2594:23:51;;;;;;;:16;:23;;;;;;;;2618:10;2594:35;;;;;;;;;;2571:58;2563:85;;;;;;;6571:2:92;2563:85:51;;;6553:21:92;6610:2;6590:18;;;6583:30;6649:16;6629:18;;;6622:44;6683:18;;2563:85:51;;;;;;;;;2659:15;;;;:11;:15;;;;;;:25;;;;;;;;;;;;;;2700:28;;2659:15;;2700:28;;;;;;;2514:221;2453:282;;:::o;2950:741::-;3081:12;;;;:8;:12;;;;;;;3073:20;;;3081:12;;3073:20;3065:43;;;;;;;6914:2:92;3065:43:51;;;6896:21:92;6953:2;6933:18;;;6926:30;6992:12;6972:18;;;6965:40;7022:18;;3065:43:51;6712:334:92;3065:43:51;3127:16;;;3119:46;;;;;;;7253:2:92;3119:46:51;;;7235:21:92;7292:2;7272:18;;;7265:30;7331:19;7311:18;;;7304:47;7368:18;;3119:46:51;7051:341:92;3119:46:51;3197:10;:18;;;;;:56;;-1:-1:-1;3219:22:51;;;;;;;:16;:22;;;;;;;;3242:10;3219:34;;;;;;;;;;3197:56;:89;;;-1:-1:-1;3271:15:51;;;;:11;:15;;;;;;;;3257:10;:29;3197:89;3176:150;;;;;;;6571:2:92;3176:150:51;;;6553:21:92;6610:2;6590:18;;;6583:30;6649:16;6629:18;;;6622:44;6683:18;;3176:150:51;6369:338:92;3176:150:51;3526:16;;;;;;;;:10;:16;;;;;;;;:18;;;;;;3559:14;;;;;;;;;:16;;3526:18;3559:16;;;3596:12;;;:8;:12;;;;;:17;;;;;;;;;;;3631:11;:15;;;;;;3624:22;;;;;;;;3662;;3605:2;;3559:14;3526:16;3662:22;;;2950:741;;;:::o;4069:245:0:-;1094:13:42;:11;:13::i;:::-;4210:30:0::1;::::0;4161:21:::1;::::0;4143:15:::1;::::0;4210:10:::1;::::0;::::1;::::0;4161:21;;4143:15;4210:30;4143:15;4210:30;4161:21;4210:10;:30:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4188:52;;;4251:10;4246:64;;4278:25;;;;;;;;;;;;;;4246:64;4137:177;;4069:245:::0;:::o;3697:396:51:-;3816:26;3829:4;3835:2;3839;3816:12;:26::i;:::-;3874:14;;;;:19;;:170;;-1:-1:-1;3913:66:51;;3999:45;3913:66;;;3954:10;3913:66;;;7935:34:92;3913:40:51;8005:15:92;;;7985:18;;;7978:43;8037:18;;;8030:34;;;8100:3;8080:18;;;8073:31;-1:-1:-1;8120:19:92;;;8113:30;3999:45:51;;3913:40;;;;3999:45;;8160:19:92;;3913:66:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:131;;;3874:170;3853:233;;;;;;;8646:2:92;3853:233:51;;;8628:21:92;8685:2;8665:18;;;8658:30;8724:18;8704;;;8697:46;8760:18;;3853:233:51;8444:340:92;1327:149:51;1385:13;1427:12;;;:8;:12;;;;;;1418:36;1427:12;;1410:59;;;;;;;8991:2:92;1410:59:51;;;8973:21:92;9030:2;9010:18;;;9003:30;9069:12;9049:18;;;9042:40;9099:18;;1410:59:51;8789:334:92;1410:59:51;1327:149;;;:::o;2634:244:0:-;2714:24;;;2691:7;2714:24;;;:13;:24;;;;;;;;:33;2706:67;;;;;;;9330:2:92;2706:67:0;;;9312:21:92;9369:2;9349:18;;;9342:30;9408:23;9388:18;;;9381:51;9449:18;;2706:67:0;9128:345:92;2706:67:0;2787:10;;;;;;;:18;;2801:4;2787:18;2779:64;;;;;;;9680:2:92;2779:64:0;;;9662:21:92;9719:2;9699:18;;;9692:30;9758:34;9738:18;;;9731:62;9829:3;9809:18;;;9802:31;9850:19;;2779:64:0;9478:397:92;2779:64:0;2856:17;2863:9;2856:6;:17::i;755:21::-;;;;;;;:::i;1482:168:51:-;1545:7;1572:19;;;1564:44;;;;;;;10082:2:92;1564:44:51;;;10064:21:92;10121:2;10101:18;;;10094:30;10160:14;10140:18;;;10133:42;10192:18;;1564:44:51;9880:336:92;1564:44:51;-1:-1:-1;1626:17:51;;;;;;:10;:17;;;;;;;1482:168::o;1831:101:42:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4545:125:0:-;1094:13:42;:11;:13::i;:::-;4595::0::1;:21:::0;;4648:17;;;::::1;::::0;;4545:125::o;924:20:51:-;;;;;;;:::i;1851:579:0:-;1995:24;;;1976:7;1995:24;;;:13;:24;;;;;;;;1991:59;;;2028:22;;;;;;;;;;;;;;1991:59;2061:13;;;;:21;;:13;:21;2057:92;;2100:9;2113:1;2100:14;2092:50;;;;;;;10423:2:92;2092:50:0;;;10405:21:92;10462:2;10442:18;;;10435:30;10501:25;10481:18;;;10474:53;10544:18;;2092:50:0;10221:347:92;2092:50:0;2243:38;;10763:66:92;10750:2;10746:15;;;10742:88;2243:38:0;;;10730:101:92;10847:12;;;10840:28;;;2215:15:0;;10884:12:92;;2243:38:0;;;;;;;;;;;;2233:49;;;;;;2215:67;;2304:40;2323:5;;2304:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2330:4:0;;-1:-1:-1;2336:7:0;;-1:-1:-1;2304:18:0;;-1:-1:-1;2304:40:0:i;:::-;2289:105;;;;;;;11109:2:92;2289:105:0;;;11091:21:92;11148:2;11128:18;;;11121:30;11187:34;11167:18;;;11160:62;11258:4;11238:18;;;11231:32;11280:19;;2289:105:0;10907:398:92;2289:105:0;2408:17;2415:9;2408:6;:17::i;:::-;2401:24;1851:579;-1:-1:-1;;;;;;1851:579:0:o;2741:203:51:-;2843:10;2826:28;;;;:16;:28;;;;;;;;;:38;;;;;;;;;;;;:49;;;;;;;;;;;;;2891:46;;768:41:92;;;2826:38:51;;2843:10;2891:46;;741:18:92;2891:46:51;;;;;;;2741:203;;:::o;4367:127:0:-;1094:13:42;:11;:13::i;:::-;4419::0::1;:21:::0;;4471:18;;4419:21:::1;4471:18:::0;;;4367:127::o;4099:427:51:-;4247:26;4260:4;4266:2;4270;4247:12;:26::i;:::-;4305:14;;;;:19;;:172;;-1:-1:-1;4344:68:51;;4432:45;4344:68;;;4432:45;4344:40;;;;4432:45;;4344:68;;4385:10;;4397:4;;4403:2;;4407:4;;;;4344:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:133;;;4305:172;4284:235;;;;;;;8646:2:92;4284:235:51;;;8628:21:92;8685:2;8665:18;;;8658:30;8724:18;8704;;;8697:46;8760:18;;4284:235:51;8444:340:92;4284:235:51;4099:427;;;;;:::o;3617:326:0:-;3710:13;3765:1;3737:16;3745:7;3737;:16::i;:::-;:30;;;3733:86;;3784:28;;;;;;;;;;;;;;3733:86;3861:1;3843:7;3837:21;;;;;:::i;:::-;;;:25;:101;;;;;;;;;;;;;;;;;3897:7;3880:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;3824:114;3617:326;-1:-1:-1;;3617:326:0:o;2081:198:42:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;13901:2:92;2161:73:42::1;::::0;::::1;13883:21:92::0;13940:2;13920:18;;;13913:30;13979:34;13959:18;;;13952:62;14050:8;14030:18;;;14023:36;14076:19;;2161:73:42::1;13699:402:92::0;2161:73:42::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1273:6;;1422:23;1273:6;719:10:47;1422:23:42;1414:68;;;;;;;14308:2:92;1414:68:42;;;14290:21:92;;;14327:18;;;14320:30;14386:34;14366:18;;;14359:62;14438:18;;1414:68:42;14106:356:92;3056:390:0;3108:7;270:10:2;3127:9:0;:33;3123:71;;3169:25;;;;;;;;;;;;;;3123:71;3201:17;3223:14;;3221:16;;;;;:::i;:::-;;;;;-1:-1:-1;3221:16:0;-1:-1:-1;173:4:2;3247:34:0;;3243:65;;;3290:18;;;;;;;;;;;;;;3243:65;3315:24;;;;;;;:13;:24;;;;;:31;;;;3342:4;3315:31;;;3352;3329:9;3373;3352;:31::i;:::-;3395:24;;;;;;;;;;;3432:9;3056:390;-1:-1:-1;;3056:390:0:o;2433:187:42:-;2525:6;;;;2541:17;;;;;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;1153:184:49:-;1274:4;1326;1297:25;1310:5;1317:4;1297:12;:25::i;:::-;:33;;1153:184;-1:-1:-1;;;;1153:184:49:o;6185:340:51:-;6255:13;6261:2;6265;6255:5;:13::i;:::-;6300:14;;;;:19;;:176;;-1:-1:-1;6339:72:51;;6431:45;6339:72;;;6380:10;6339:72;;;7935:34:92;6400:1:51;7985:18:92;;;7978:43;;;8037:18;;;8030:34;;;8100:3;8080:18;;;8073:31;8120:19;;;8113:30;6431:45:51;6339:40;;;;6431:45;;8160:19:92;;6339:72:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:137;;;6300:176;6279:239;;;;;;;8646:2:92;6279:239:51;;;8628:21:92;8685:2;8665:18;;;8658:30;8724:18;8704;;;8697:46;8760:18;;6279:239:51;8444:340:92;6279:239:51;6185:340;;:::o;1991:290:49:-;2074:7;2116:4;2074:7;2130:116;2154:5;:12;2150:1;:16;2130:116;;;2202:33;2212:12;2226:5;2232:1;2226:8;;;;;;;;:::i;:::-;;;;;;;2202:9;:33::i;:::-;2187:48;-1:-1:-1;2168:3:49;;;;:::i;:::-;;;;2130:116;;;-1:-1:-1;2262:12:49;1991:290;-1:-1:-1;;;1991:290:49:o;5243:371:51:-;5317:16;;;5309:46;;;;;;;7253:2:92;5309:46:51;;;7235:21:92;7292:2;7272:18;;;7265:30;7331:19;7311:18;;;7304:47;7368:18;;5309:46:51;7051:341:92;5309:46:51;5398:1;5374:12;;;:8;:12;;;;;;:26;:12;:26;5366:53;;;;;;;15212:2:92;5366:53:51;;;15194:21:92;15251:2;15231:18;;;15224:30;15290:16;15270:18;;;15263:44;15324:18;;5366:53:51;15010:338:92;5366:53:51;5509:14;;;;;;;:10;:14;;;;;;;;:16;;;;;;5546:12;;;:8;:12;;;;;;:17;;;;;;;;5579:28;5555:2;;5509:14;;5579:28;;5509:14;;5579:28;5243:371;;:::o;8054:147:49:-;8117:7;8147:1;8143;:5;:51;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8143:51;;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8151:20;8136:58;8054:147;-1:-1:-1;;;8054:147:49:o;196:177:92:-;281:66;274:5;270:78;263:5;260:89;250:117;;363:1;360;353:12;378:245;436:6;489:2;477:9;468:7;464:23;460:32;457:52;;;505:1;502;495:12;457:52;544:9;531:23;563:30;587:5;563:30;:::i;820:656::-;932:4;961:2;990;979:9;972:21;1022:6;1016:13;1065:6;1060:2;1049:9;1045:18;1038:34;1090:1;1100:140;1114:6;1111:1;1108:13;1100:140;;;1209:14;;;1205:23;;1199:30;1175:17;;;1194:2;1171:26;1164:66;1129:10;;1100:140;;;1258:6;1255:1;1252:13;1249:91;;;1328:1;1323:2;1314:6;1303:9;1299:22;1295:31;1288:42;1249:91;-1:-1:-1;1392:2:92;1380:15;1397:66;1376:88;1361:104;;;;1467:2;1357:113;;820:656;-1:-1:-1;;;820:656:92:o;1481:180::-;1540:6;1593:2;1581:9;1572:7;1568:23;1564:32;1561:52;;;1609:1;1606;1599:12;1561:52;-1:-1:-1;1632:23:92;;1481:180;-1:-1:-1;1481:180:92:o;1897:154::-;1983:42;1976:5;1972:54;1965:5;1962:65;1952:93;;2041:1;2038;2031:12;2056:315;2124:6;2132;2185:2;2173:9;2164:7;2160:23;2156:32;2153:52;;;2201:1;2198;2191:12;2153:52;2240:9;2227:23;2259:31;2284:5;2259:31;:::i;:::-;2309:5;2361:2;2346:18;;;;2333:32;;-1:-1:-1;;;2056:315:92:o;2376:247::-;2435:6;2488:2;2476:9;2467:7;2463:23;2459:32;2456:52;;;2504:1;2501;2494:12;2456:52;2543:9;2530:23;2562:31;2587:5;2562:31;:::i;2628:456::-;2705:6;2713;2721;2774:2;2762:9;2753:7;2749:23;2745:32;2742:52;;;2790:1;2787;2780:12;2742:52;2829:9;2816:23;2848:31;2873:5;2848:31;:::i;:::-;2898:5;-1:-1:-1;2955:2:92;2940:18;;2927:32;2968:33;2927:32;2968:33;:::i;:::-;2628:456;;3020:7;;-1:-1:-1;;;3074:2:92;3059:18;;;;3046:32;;2628:456::o;3349:818::-;3453:6;3461;3469;3477;3530:2;3518:9;3509:7;3505:23;3501:32;3498:52;;;3546:1;3543;3536:12;3498:52;3585:9;3572:23;3604:31;3629:5;3604:31;:::i;:::-;3654:5;-1:-1:-1;3706:2:92;3691:18;;3678:32;;-1:-1:-1;3761:2:92;3746:18;;3733:32;3784:18;3814:14;;;3811:34;;;3841:1;3838;3831:12;3811:34;3879:6;3868:9;3864:22;3854:32;;3924:7;3917:4;3913:2;3909:13;3905:27;3895:55;;3946:1;3943;3936:12;3895:55;3986:2;3973:16;4012:2;4004:6;4001:14;3998:34;;;4028:1;4025;4018:12;3998:34;4081:7;4076:2;4066:6;4063:1;4059:14;4055:2;4051:23;4047:32;4044:45;4041:65;;;4102:1;4099;4092:12;4041:65;3349:818;;;;-1:-1:-1;;4133:2:92;4125:11;;-1:-1:-1;;;3349:818:92:o;4172:416::-;4237:6;4245;4298:2;4286:9;4277:7;4273:23;4269:32;4266:52;;;4314:1;4311;4304:12;4266:52;4353:9;4340:23;4372:31;4397:5;4372:31;:::i;:::-;4422:5;-1:-1:-1;4479:2:92;4464:18;;4451:32;4521:15;;4514:23;4502:36;;4492:64;;4552:1;4549;4542:12;4492:64;4575:7;4565:17;;;4172:416;;;;;:::o;4593:936::-;4690:6;4698;4706;4714;4722;4775:3;4763:9;4754:7;4750:23;4746:33;4743:53;;;4792:1;4789;4782:12;4743:53;4831:9;4818:23;4850:31;4875:5;4850:31;:::i;:::-;4900:5;-1:-1:-1;4957:2:92;4942:18;;4929:32;4970:33;4929:32;4970:33;:::i;:::-;5022:7;-1:-1:-1;5076:2:92;5061:18;;5048:32;;-1:-1:-1;5131:2:92;5116:18;;5103:32;5154:18;5184:14;;;5181:34;;;5211:1;5208;5201:12;5181:34;5249:6;5238:9;5234:22;5224:32;;5294:7;5287:4;5283:2;5279:13;5275:27;5265:55;;5316:1;5313;5306:12;5265:55;5356:2;5343:16;5382:2;5374:6;5371:14;5368:34;;;5398:1;5395;5388:12;5368:34;5443:7;5438:2;5429:6;5425:2;5421:15;5417:24;5414:37;5411:57;;;5464:1;5461;5454:12;5411:57;4593:936;;;;-1:-1:-1;4593:936:92;;-1:-1:-1;5495:2:92;5487:11;;5517:6;4593:936;-1:-1:-1;;;4593:936:92:o;5534:388::-;5602:6;5610;5663:2;5651:9;5642:7;5638:23;5634:32;5631:52;;;5679:1;5676;5669:12;5631:52;5718:9;5705:23;5737:31;5762:5;5737:31;:::i;:::-;5787:5;-1:-1:-1;5844:2:92;5829:18;;5816:32;5857:33;5816:32;5857:33;:::i;5927:437::-;6006:1;6002:12;;;;6049;;;6070:61;;6124:4;6116:6;6112:17;6102:27;;6070:61;6177:2;6169:6;6166:14;6146:18;6143:38;6140:218;;6214:77;6211:1;6204:88;6315:4;6312:1;6305:15;6343:4;6340:1;6333:15;6140:218;;5927:437;;;:::o;8190:249::-;8259:6;8312:2;8300:9;8291:7;8287:23;8283:32;8280:52;;;8328:1;8325;8318:12;8280:52;8360:9;8354:16;8379:30;8403:5;8379:30;:::i;11310:744::-;11514:4;11543:42;11624:2;11616:6;11612:15;11601:9;11594:34;11676:2;11668:6;11664:15;11659:2;11648:9;11644:18;11637:43;;11716:6;11711:2;11700:9;11696:18;11689:34;11759:3;11754:2;11743:9;11739:18;11732:31;11800:6;11794:3;11783:9;11779:19;11772:35;11858:6;11850;11844:3;11833:9;11829:19;11816:49;11915:1;11909:3;11900:6;11889:9;11885:22;11881:32;11874:43;12044:3;11974:66;11969:2;11961:6;11957:15;11953:88;11942:9;11938:104;11934:114;11926:122;;11310:744;;;;;;;;:::o;12319:1375::-;12548:3;12577:1;12610:6;12604:13;12640:3;12662:1;12690:9;12686:2;12682:18;12672:28;;12750:2;12739:9;12735:18;12772;12762:61;;12816:4;12808:6;12804:17;12794:27;;12762:61;12842:2;12890;12882:6;12879:14;12859:18;12856:38;12853:222;;12929:77;12924:3;12917:90;13030:4;13027:1;13020:15;13060:4;13055:3;13048:17;12853:222;13091:18;13118:191;;;;13323:1;13318:320;;;;13084:554;;13118:191;13166:66;13155:9;13151:82;13146:3;13139:95;13289:6;13282:14;13275:22;13267:6;13263:35;13258:3;13254:45;13247:52;;13118:191;;13318:320;12132:1;12125:14;;;12169:4;12156:18;;13413:1;13427:165;13441:6;13438:1;13435:13;13427:165;;;13519:14;;13506:11;;;13499:35;13562:16;;;;13456:10;;13427:165;;;13431:3;;13621:6;13616:3;13612:16;13605:23;;13084:554;;;;;;;13654:34;13684:3;12262:17;12250:30;;12305:2;12296:12;;12185:129;13654:34;13647:41;12319:1375;-1:-1:-1;;;;12319:1375:92:o;14467:349::-;14506:3;14537:66;14530:5;14527:77;14524:257;;14637:77;14634:1;14627:88;14738:4;14735:1;14728:15;14766:4;14763:1;14756:15;14524:257;-1:-1:-1;14808:1:92;14797:13;;14467:349::o;14821:184::-;14873:77;14870:1;14863:88;14970:4;14967:1;14960:15;14994:4;14991:1;14984:15",
    "linkReferences": {},
    "immutableReferences": {
      "42": [
        {
          "start": 4382,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "allowlistMint()": "41fbddbd",
    "alreadyMinted(address)": "0a398b88",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "currentTokenId()": "009a9b7b",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address)": "6a627842",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "privateMint(address,uint256,bytes32[])": "9886a902",
    "publicMint()": "26092b83",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "startPublicMint()": "76c64c62",
    "startWaitlistMint()": "a839e501",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "waitlistMint()": "aebb096c",
    "withdrawPayments(address)": "31b3eb94"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintPriceNotPaid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonExistentTokenURI\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawTransfer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowlistMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"alreadyMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"privateMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPublicMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startWaitlistMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"waitlistMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"HNT Labs\",\"kind\":\"dev\",\"methods\":{\"mint(address)\":{\"params\":{\"recipient\":\"the address that will receive the minted NFT\"},\"returns\":{\"_0\":\"tokenId token id of the minted NFT\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"privateMint(address,uint256,bytes32[])\":{\"params\":{\"allowance\":\"of 1 means user is on the allowlist, @allowance of 0 means user is on the waitlist\",\"proof\":\"the generated merkle proof that this user is on the allowlist or waitlist\",\"recipient\":\"the address that will receive the minted NFT\"},\"returns\":{\"_0\":\"tokenId token id of the minted NFT\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"the id of the token to get the tokenURI for\"},\"returns\":{\"_0\":\"the tokenURI for the given tokenId\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawPayments(address)\":{\"params\":{\"payee\":\"the address that will receive the withdrawn ether\"}}},\"title\":\"CouncilNFT\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyMinted()\":[{\"notice\":\"thrown when user tries to mint more than 1 token with same wallet\"}],\"MaxSupply()\":[{\"notice\":\"thrown when the max supply is reached\"}],\"MintPriceNotPaid()\":[{\"notice\":\"thrown when an incorrect amount of ETH is sent to mint\"}],\"NonExistentTokenURI()\":[{\"notice\":\"thrown when a token is not minted\"}],\"WithdrawTransfer()\":[{\"notice\":\"thrown when the withdraw payment transaction fails\"}]},\"kind\":\"user\",\"methods\":{\"alreadyMinted(address)\":{\"notice\":\"mapping to track which  users have already minted an nft\"},\"baseURI()\":{\"notice\":\"the base uri for the nft metadata including image uri\"},\"currentTokenId()\":{\"notice\":\"the counter token id for the next mint\"},\"mint(address)\":{\"notice\":\"the secondary minting method used only when public minting is active\"},\"privateMint(address,uint256,bytes32[])\":{\"notice\":\"the primary minting method for the allowlist and waitlist minting periods\"},\"startPublicMint()\":{\"notice\":\"starts the public minting period\"},\"startWaitlistMint()\":{\"notice\":\"starts the waitlist minting period\"},\"tokenURI(uint256)\":{\"notice\":\"Get the tokenURI for the given tokenId\"},\"withdrawPayments(address)\":{\"notice\":\"withdraw the balance from the contract\"}},\"notice\":\"This is the main NFT contract for the council of Zion\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/zion-governance/contracts/council/CouncilNFT.sol\":\"CouncilNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@harmony/=node_modules/@harmony/\",\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":contract-debug-ui/=node_modules/contract-debug-ui/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-console/=node_modules/hardhat-console/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-json-writer/=node_modules/solidity-json-writer/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/zion-governance/contracts/council/CouncilNFT.sol\":{\"keccak256\":\"0xc0c38c0d1b739167b6d5346acc580a300c7c5ce79b3c79c31b1d8313a057015b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://42db164dd4827465127197ecbb1e43d0924fcc466c8ca8d3c3e1f77bc0ae173f\",\"dweb:/ipfs/Qmerb8RcvUyTmM7qXmRjffKT54Agqw5H7phMEkK7L1ZuXu\"]},\"contracts/zion-governance/contracts/council/libraries/Constants.sol\":{\"keccak256\":\"0xd28a3be0f0d3732c1813f73019fabafdd2decc262340dc4dc5fcc47f2b40c19b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0a6dd6f360bb06f796972c0ec2df97746ea32f7b8659b40b2179c022070fd4d9\",\"dweb:/ipfs/QmcNAL4eRBDV7cm689EcAmHyr1BcSoUp8txSByZp572FjR\"]},\"contracts/zion-governance/contracts/council/libraries/Errors.sol\":{\"keccak256\":\"0x22691fed8c00c27e6baef8e747cb846a578bd699ec6978d04486c81677a24c2f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://52f1e12630eb8a29450653ab64602fcf99fd568fb2157e8ff36b1a0d01976af6\",\"dweb:/ipfs/QmfY7LeGEZdthVY2sbhNxrbLbXPDHPybJfT146p9yuRFna\"]},\"contracts/zion-governance/contracts/council/libraries/Events.sol\":{\"keccak256\":\"0x373a86836994cde1f186668690f51ace6d5fc645bf9effa6ce0633cf0732659a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://92a00bb216d56259162c1657c8ea73b875ea62a335635604b5d5cb1c75228c00\",\"dweb:/ipfs/QmeW6FVzmsvN4xnVhepDoBvZETNVbFkN2vLxQa9jHeWBjZ\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f49013d50b1011c842f76e96f3c3f146ca7cb15084c8805575e0e0e1a5c700\",\"dweb:/ipfs/QmQ3n5qiuioUA74heD6ZddNkYg1kYihjQBNcy9zgwYXKgM\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "_root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxSupply"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintPriceNotPaid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonExistentTokenURI"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allowlistMint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "alreadyMinted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "privateMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "publicMint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startPublicMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startWaitlistMint"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "waitlistMint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "payee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawPayments"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "mint(address)": {
            "params": {
              "recipient": "the address that will receive the minted NFT"
            },
            "returns": {
              "_0": "tokenId token id of the minted NFT"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "privateMint(address,uint256,bytes32[])": {
            "params": {
              "allowance": "of 1 means user is on the allowlist, @allowance of 0 means user is on the waitlist",
              "proof": "the generated merkle proof that this user is on the allowlist or waitlist",
              "recipient": "the address that will receive the minted NFT"
            },
            "returns": {
              "_0": "tokenId token id of the minted NFT"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "tokenURI(uint256)": {
            "params": {
              "tokenId": "the id of the token to get the tokenURI for"
            },
            "returns": {
              "_0": "the tokenURI for the given tokenId"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdrawPayments(address)": {
            "params": {
              "payee": "the address that will receive the withdrawn ether"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "alreadyMinted(address)": {
            "notice": "mapping to track which  users have already minted an nft"
          },
          "baseURI()": {
            "notice": "the base uri for the nft metadata including image uri"
          },
          "currentTokenId()": {
            "notice": "the counter token id for the next mint"
          },
          "mint(address)": {
            "notice": "the secondary minting method used only when public minting is active"
          },
          "privateMint(address,uint256,bytes32[])": {
            "notice": "the primary minting method for the allowlist and waitlist minting periods"
          },
          "startPublicMint()": {
            "notice": "starts the public minting period"
          },
          "startWaitlistMint()": {
            "notice": "starts the waitlist minting period"
          },
          "tokenURI(uint256)": {
            "notice": "Get the tokenURI for the given tokenId"
          },
          "withdrawPayments(address)": {
            "notice": "withdraw the balance from the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@harmony/=node_modules/@harmony/",
        ":@opengsn/=node_modules/@opengsn/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":contract-debug-ui/=node_modules/contract-debug-ui/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-console/=node_modules/hardhat-console/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solidity-json-writer/=node_modules/solidity-json-writer/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/zion-governance/contracts/council/CouncilNFT.sol": "CouncilNFT"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/zion-governance/contracts/council/CouncilNFT.sol": {
        "keccak256": "0xc0c38c0d1b739167b6d5346acc580a300c7c5ce79b3c79c31b1d8313a057015b",
        "urls": [
          "bzz-raw://42db164dd4827465127197ecbb1e43d0924fcc466c8ca8d3c3e1f77bc0ae173f",
          "dweb:/ipfs/Qmerb8RcvUyTmM7qXmRjffKT54Agqw5H7phMEkK7L1ZuXu"
        ],
        "license": "Apache-2.0"
      },
      "contracts/zion-governance/contracts/council/libraries/Constants.sol": {
        "keccak256": "0xd28a3be0f0d3732c1813f73019fabafdd2decc262340dc4dc5fcc47f2b40c19b",
        "urls": [
          "bzz-raw://0a6dd6f360bb06f796972c0ec2df97746ea32f7b8659b40b2179c022070fd4d9",
          "dweb:/ipfs/QmcNAL4eRBDV7cm689EcAmHyr1BcSoUp8txSByZp572FjR"
        ],
        "license": "Apache-2.0"
      },
      "contracts/zion-governance/contracts/council/libraries/Errors.sol": {
        "keccak256": "0x22691fed8c00c27e6baef8e747cb846a578bd699ec6978d04486c81677a24c2f",
        "urls": [
          "bzz-raw://52f1e12630eb8a29450653ab64602fcf99fd568fb2157e8ff36b1a0d01976af6",
          "dweb:/ipfs/QmfY7LeGEZdthVY2sbhNxrbLbXPDHPybJfT146p9yuRFna"
        ],
        "license": "Apache-2.0"
      },
      "contracts/zion-governance/contracts/council/libraries/Events.sol": {
        "keccak256": "0x373a86836994cde1f186668690f51ace6d5fc645bf9effa6ce0633cf0732659a",
        "urls": [
          "bzz-raw://92a00bb216d56259162c1657c8ea73b875ea62a335635604b5d5cb1c75228c00",
          "dweb:/ipfs/QmeW6FVzmsvN4xnVhepDoBvZETNVbFkN2vLxQa9jHeWBjZ"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7",
        "urls": [
          "bzz-raw://d5f49013d50b1011c842f76e96f3c3f146ca7cb15084c8805575e0e0e1a5c700",
          "dweb:/ipfs/QmQ3n5qiuioUA74heD6ZddNkYg1kYihjQBNcy9zgwYXKgM"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/zion-governance/contracts/council/CouncilNFT.sol",
    "id": 330,
    "exportedSymbols": {
      "Constants": [
        903
      ],
      "CouncilNFT": [
        329
      ],
      "ERC721": [
        40095
      ],
      "ERC721TokenReceiver": [
        40115
      ],
      "Errors": [
        955
      ],
      "Events": [
        984
      ],
      "MerkleProof": [
        39539
      ],
      "Ownable": [
        38589
      ],
      "Strings": [
        39037
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:4635:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "38:23:0",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "63:35:0",
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 40116,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "99:76:0",
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 38590,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38589,
              "src": "107:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6,
        "nodeType": "ImportDirective",
        "src": "176:75:0",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "openzeppelin-contracts/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 39038,
        "symbolAliases": [
          {
            "foreign": {
              "id": 5,
              "name": "Strings",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39037,
              "src": "184:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 8,
        "nodeType": "ImportDirective",
        "src": "252:46:0",
        "absolutePath": "contracts/zion-governance/contracts/council/libraries/Errors.sol",
        "file": "./libraries/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 956,
        "symbolAliases": [
          {
            "foreign": {
              "id": 7,
              "name": "Errors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 955,
              "src": "260:6:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 10,
        "nodeType": "ImportDirective",
        "src": "299:46:0",
        "absolutePath": "contracts/zion-governance/contracts/council/libraries/Events.sol",
        "file": "./libraries/Events.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 985,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9,
              "name": "Events",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 984,
              "src": "307:6:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12,
        "nodeType": "ImportDirective",
        "src": "346:52:0",
        "absolutePath": "contracts/zion-governance/contracts/council/libraries/Constants.sol",
        "file": "./libraries/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 904,
        "symbolAliases": [
          {
            "foreign": {
              "id": 11,
              "name": "Constants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 903,
              "src": "354:9:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 14,
        "nodeType": "ImportDirective",
        "src": "399:96:0",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 330,
        "sourceUnit": 39540,
        "symbolAliases": [
          {
            "foreign": {
              "id": 13,
              "name": "MerkleProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39539,
              "src": "407:11:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 329,
        "nodeType": "ContractDefinition",
        "src": "614:4058:0",
        "nodes": [
          {
            "id": 22,
            "nodeType": "UsingForDirective",
            "src": "657:26:0",
            "global": false,
            "libraryName": {
              "id": 20,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39037,
              "src": "663:7:0"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "675:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 25,
            "nodeType": "VariableDeclaration",
            "src": "755:21:0",
            "constant": false,
            "documentation": {
              "id": 23,
              "nodeType": "StructuredDocumentation",
              "src": "687:65:0",
              "text": "@notice the base uri for the nft metadata including image uri"
            },
            "functionSelector": "6c0360eb",
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "769:7:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 24,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "755:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 28,
            "nodeType": "VariableDeclaration",
            "src": "834:29:0",
            "constant": false,
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "781:50:0",
              "text": "@notice the counter token id for the next mint"
            },
            "functionSelector": "009a9b7b",
            "mutability": "mutable",
            "name": "currentTokenId",
            "nameLocation": "849:14:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 27,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "834:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33,
            "nodeType": "VariableDeclaration",
            "src": "939:45:0",
            "constant": false,
            "documentation": {
              "id": 29,
              "nodeType": "StructuredDocumentation",
              "src": "868:68:0",
              "text": "@notice mapping to track which  users have already minted an nft"
            },
            "functionSelector": "0a398b88",
            "mutability": "mutable",
            "name": "alreadyMinted",
            "nameLocation": "971:13:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "947:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "939:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 31,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "958:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 35,
            "nodeType": "VariableDeclaration",
            "src": "1052:25:0",
            "constant": false,
            "functionSelector": "41fbddbd",
            "mutability": "mutable",
            "name": "allowlistMint",
            "nameLocation": "1064:13:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 34,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1052:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37,
            "nodeType": "VariableDeclaration",
            "src": "1081:24:0",
            "constant": false,
            "functionSelector": "aebb096c",
            "mutability": "mutable",
            "name": "waitlistMint",
            "nameLocation": "1093:12:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 36,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1081:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39,
            "nodeType": "VariableDeclaration",
            "src": "1109:22:0",
            "constant": false,
            "functionSelector": "26092b83",
            "mutability": "mutable",
            "name": "publicMint",
            "nameLocation": "1121:10:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 38,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1109:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 42,
            "nodeType": "VariableDeclaration",
            "src": "1196:31:0",
            "constant": false,
            "documentation": {
              "id": 40,
              "nodeType": "StructuredDocumentation",
              "src": "1136:57:0",
              "text": "@notice the root of the merkle tree for the allowlist"
            },
            "mutability": "immutable",
            "name": "root",
            "nameLocation": "1223:4:0",
            "scope": 329,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 41,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1196:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 70,
            "nodeType": "FunctionDefinition",
            "src": "1232:211:0",
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "1370:73:0",
              "statements": [
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1376:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 58,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1386:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1376:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:18:0"
                },
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1400:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 62,
                      "name": "_root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "1407:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1400:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "1400:12:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 65,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "1418:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1434:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1418:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:20:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 53,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "1354:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 54,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46,
                    "src": "1361:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 55,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 52,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40095,
                  "src": "1347:6:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1347:22:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1263:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1249:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1288:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1274:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "1315:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1301:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "_root",
                  "nameLocation": "1337:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "1329:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1243:103:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:0:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 129,
            "nodeType": "FunctionDefinition",
            "src": "1851:579:0",
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1985:445:0",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 83,
                      "name": "alreadyMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33,
                      "src": "1995:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 85,
                    "indexExpression": {
                      "id": 84,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2009:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1995:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91,
                  "nodeType": "IfStatement",
                  "src": "1991:59:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 86,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "2028:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "AlreadyMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 942,
                        "src": "2028:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2028:22:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 90,
                    "nodeType": "RevertStatement",
                    "src": "2021:29:0"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 92,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "2061:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2078:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2061:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 103,
                  "nodeType": "IfStatement",
                  "src": "2057:92:0",
                  "trueBody": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "2084:65:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 96,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75,
                                "src": "2100:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2113:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2100:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420616c6c6f77656420746f206d696e7420796574",
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2116:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_93e88215183578f5aaa04bb5f966ce76eb49ed954a4c7e3c4044873616fa3eee",
                                "typeString": "literal_string \"Not allowed to mint yet\""
                              },
                              "value": "Not allowed to mint yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_93e88215183578f5aaa04bb5f966ce76eb49ed954a4c7e3c4044873616fa3eee",
                                "typeString": "literal_string \"Not allowed to mint yet\""
                              }
                            ],
                            "id": 95,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2092:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2092:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101,
                        "nodeType": "ExpressionStatement",
                        "src": "2092:50:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105,
                      "mutability": "mutable",
                      "name": "payload",
                      "nameLocation": "2223:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 128,
                      "src": "2215:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 104,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2215:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 113,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 109,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73,
                            "src": "2260:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 110,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "2271:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 107,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2243:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2243:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2243:38:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 106,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2233:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2233:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2215:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 117,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78,
                            "src": "2323:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 118,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "2330:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 119,
                            "name": "payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "2336:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 115,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39539,
                            "src": "2304:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$39539_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39061,
                          "src": "2304:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2304:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c696564",
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2352:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2f47add308f7d76603eeee5e3edc71de6361e9f105e76633970ce1b8dd69f22",
                          "typeString": "literal_string \"Invalid merkle tree proof supplied\""
                        },
                        "value": "Invalid merkle tree proof supplied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2f47add308f7d76603eeee5e3edc71de6361e9f105e76633970ce1b8dd69f22",
                          "typeString": "literal_string \"Invalid merkle tree proof supplied\""
                        }
                      ],
                      "id": 114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2289:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2289:105:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "2289:105:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 125,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "2415:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 124,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "2408:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2408:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 82,
                  "id": 127,
                  "nodeType": "Return",
                  "src": "2401:24:0"
                }
              ]
            },
            "documentation": {
              "id": 71,
              "nodeType": "StructuredDocumentation",
              "src": "1447:401:0",
              "text": "@notice the primary minting method for the allowlist and waitlist minting periods\n @param recipient the address that will receive the minted NFT\n @param allowance of 1 means user is on the allowlist, @allowance of 0 means user is on the waitlist\n @param proof the generated merkle proof that this user is on the allowlist or waitlist\n @return tokenId token id of the minted NFT"
            },
            "functionSelector": "9886a902",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "privateMint",
            "nameLocation": "1860:11:0",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1885:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1877:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1877:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "allowance",
                  "nameLocation": "1908:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1900:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1900:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "1942:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1923:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1923:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 77,
                    "nodeType": "ArrayTypeName",
                    "src": "1923:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1871:80:0"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1976:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1976:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1975:9:0"
            },
            "scope": 329,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 158,
            "nodeType": "FunctionDefinition",
            "src": "2634:244:0",
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "2700:178:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 138,
                            "name": "alreadyMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "2714:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 140,
                          "indexExpression": {
                            "id": 139,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "2728:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2714:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2742:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2714:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479206d696e74656420616e204e4654",
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2749:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08f848b7b93077c49a2062c9a8c995a84d478ced136ec2a97db79946837b3e71",
                          "typeString": "literal_string \"Already minted an NFT\""
                        },
                        "value": "Already minted an NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08f848b7b93077c49a2062c9a8c995a84d478ced136ec2a97db79946837b3e71",
                          "typeString": "literal_string \"Already minted an NFT\""
                        }
                      ],
                      "id": 137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2706:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2706:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2706:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 147,
                          "name": "publicMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "2787:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2801:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2787:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c6963206d696e74696e67206973206e6f7420616c6c6f77656420796574",
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2807:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3856cc290bfb870311067a6378c21a0013e2d9c7ec535e31b3c89448b1aedb92",
                          "typeString": "literal_string \"Public minting is not allowed yet\""
                        },
                        "value": "Public minting is not allowed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3856cc290bfb870311067a6378c21a0013e2d9c7ec535e31b3c89448b1aedb92",
                          "typeString": "literal_string \"Public minting is not allowed yet\""
                        }
                      ],
                      "id": 146,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2779:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2779:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 152,
                  "nodeType": "ExpressionStatement",
                  "src": "2779:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 154,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "2863:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 153,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "2856:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2856:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 136,
                  "id": 156,
                  "nodeType": "Return",
                  "src": "2849:24:0"
                }
              ]
            },
            "documentation": {
              "id": 130,
              "nodeType": "StructuredDocumentation",
              "src": "2434:197:0",
              "text": "@notice the secondary minting method used only when public minting is active\n @param recipient the address that will receive the minted NFT\n @return tokenId token id of the minted NFT"
            },
            "functionSelector": "6a627842",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2643:4:0",
            "parameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2656:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2648:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2648:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2647:19:0"
            },
            "returnParameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "2691:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2690:9:0"
            },
            "scope": 329,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 212,
            "nodeType": "FunctionDefinition",
            "src": "3056:390:0",
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "3117:329:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 166,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3127:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3127:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 168,
                        "name": "Constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "3140:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Constants_$903_$",
                          "typeString": "type(library Constants)"
                        }
                      },
                      "id": 169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "MINT_PRICE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 902,
                      "src": "3140:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3127:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 176,
                  "nodeType": "IfStatement",
                  "src": "3123:71:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 171,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "3169:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "MintPriceNotPaid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 930,
                        "src": "3169:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3169:25:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 175,
                    "nodeType": "RevertStatement",
                    "src": "3162:32:0"
                  }
                },
                {
                  "assignments": [
                    178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 178,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "3209:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "3201:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3201:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 181,
                  "initialValue": {
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "3221:16:0",
                    "subExpression": {
                      "id": 179,
                      "name": "currentTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "3223:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3201:36:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 182,
                      "name": "newItemId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 178,
                      "src": "3247:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 183,
                        "name": "Constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "3259:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Constants_$903_$",
                          "typeString": "type(library Constants)"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "TOTAL_SUPPLY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 898,
                      "src": "3259:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3247:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 191,
                  "nodeType": "IfStatement",
                  "src": "3243:65:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 186,
                          "name": "Errors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 955,
                          "src": "3290:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                            "typeString": "type(library Errors)"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "MaxSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 933,
                        "src": "3290:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3290:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 190,
                    "nodeType": "RevertStatement",
                    "src": "3283:25:0"
                  }
                },
                {
                  "expression": {
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 192,
                        "name": "alreadyMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3315:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 194,
                      "indexExpression": {
                        "id": 193,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3329:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3315:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3342:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3315:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "3315:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 199,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3362:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 200,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 178,
                        "src": "3373:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 198,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        40052,
                        40094
                      ],
                      "referencedDeclaration": 40052,
                      "src": "3352:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3352:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3352:31:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 206,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "3409:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 203,
                        "name": "Events",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "3395:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Events_$984_$",
                          "typeString": "type(library Events)"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "Minted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 962,
                      "src": "3395:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3395:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "EmitStatement",
                  "src": "3390:29:0"
                },
                {
                  "expression": {
                    "id": 209,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 178,
                    "src": "3432:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 165,
                  "id": 210,
                  "nodeType": "Return",
                  "src": "3425:16:0"
                }
              ]
            },
            "documentation": {
              "id": 159,
              "nodeType": "StructuredDocumentation",
              "src": "2882:171:0",
              "text": "@notice Verify that the user sent the proper amount of ether to mint\n @notice Verify that there are still more NFTs to mint\n @notice Mint the NFT to the user"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "3065:6:0",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3080:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "3072:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3072:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3071:19:0"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "3108:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3107:9:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 255,
            "nodeType": "FunctionDefinition",
            "src": "3617:326:0",
            "body": {
              "id": 254,
              "nodeType": "Block",
              "src": "3727:216:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 222,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "3745:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 221,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39620,
                        "src": "3737:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3737:16:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3765:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3757:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3757:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3757:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3737:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 235,
                  "nodeType": "IfStatement",
                  "src": "3733:86:0",
                  "trueBody": {
                    "id": 234,
                    "nodeType": "Block",
                    "src": "3769:50:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 229,
                              "name": "Errors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "3784:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                                "typeString": "type(library Errors)"
                              }
                            },
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "NonExistentTokenURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 936,
                            "src": "3784:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3784:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 233,
                        "nodeType": "RevertStatement",
                        "src": "3777:35:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 238,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "3843:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3837:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 236,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3837:5:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3837:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3837:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3861:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3837:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3936:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3837:101:0",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 247,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "3897:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "hexValue": "636f756e63696c6d65746164617461",
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3906:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fe29c6027f746311fa0ffb1256ea191de5e1b7ce95dde50a8f5de26c1a095a51",
                                "typeString": "literal_string \"councilmetadata\""
                              },
                              "value": "councilmetadata"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fe29c6027f746311fa0ffb1256ea191de5e1b7ce95dde50a8f5de26c1a095a51",
                                "typeString": "literal_string \"councilmetadata\""
                              }
                            ],
                            "expression": {
                              "id": 245,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3880:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3880:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3880:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3873:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3873:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3873:52:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 220,
                  "id": 253,
                  "nodeType": "Return",
                  "src": "3824:114:0"
                }
              ]
            },
            "baseFunctions": [
              39589
            ],
            "documentation": {
              "id": 213,
              "nodeType": "StructuredDocumentation",
              "src": "3450:164:0",
              "text": "@notice Get the tokenURI for the given tokenId\n @param tokenId the id of the token to get the tokenURI for\n @return the tokenURI for the given tokenId"
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3626:8:0",
            "overrides": {
              "id": 217,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3688:8:0"
            },
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3643:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3635:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3634:17:0"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "3710:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3710:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3709:15:0"
            },
            "scope": 329,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 290,
            "nodeType": "FunctionDefinition",
            "src": "4069:245:0",
            "body": {
              "id": 289,
              "nodeType": "Block",
              "src": "4137:177:0",
              "statements": [
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "4151:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "4143:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 263,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4143:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 270,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 267,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4169:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CouncilNFT_$329",
                            "typeString": "contract CouncilNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CouncilNFT_$329",
                            "typeString": "contract CouncilNFT"
                          }
                        ],
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4161:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4161:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4161:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4161:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4143:39:0"
                },
                {
                  "assignments": [
                    272,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 272,
                      "mutability": "mutable",
                      "name": "transferTx",
                      "nameLocation": "4194:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "4189:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 271,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4189:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 279,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4237:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 273,
                          "name": "payee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "4210:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4210:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 275,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 264,
                          "src": "4228:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4210:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4210:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4188:52:0"
                },
                {
                  "condition": {
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4250:11:0",
                    "subExpression": {
                      "id": 280,
                      "name": "transferTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 272,
                      "src": "4251:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 288,
                  "nodeType": "IfStatement",
                  "src": "4246:64:0",
                  "trueBody": {
                    "id": 287,
                    "nodeType": "Block",
                    "src": "4263:47:0",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 282,
                              "name": "Errors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 955,
                              "src": "4278:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Errors_$955_$",
                                "typeString": "type(library Errors)"
                              }
                            },
                            "id": 284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "WithdrawTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 939,
                            "src": "4278:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4278:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 286,
                        "nodeType": "RevertStatement",
                        "src": "4271:32:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 256,
              "nodeType": "StructuredDocumentation",
              "src": "3947:119:0",
              "text": "@notice withdraw the balance from the contract\n @param payee the address that will receive the withdrawn ether"
            },
            "functionSelector": "31b3eb94",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 261,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 260,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38508,
                  "src": "4127:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4127:9:0"
              }
            ],
            "name": "withdrawPayments",
            "nameLocation": "4078:16:0",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "4111:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 290,
                  "src": "4095:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4095:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4094:23:0"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4137:0:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 309,
            "nodeType": "FunctionDefinition",
            "src": "4367:127:0",
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "4413:81:0",
              "statements": [
                {
                  "expression": {
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 296,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "4419:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4435:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4419:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "4419:21:0"
                },
                {
                  "expression": {
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 300,
                      "name": "waitlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4446:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4461:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4446:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "4446:19:0"
                },
                {
                  "expression": {
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 304,
                      "name": "publicMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "4471:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4484:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4471:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "4471:18:0"
                }
              ]
            },
            "documentation": {
              "id": 291,
              "nodeType": "StructuredDocumentation",
              "src": "4318:46:0",
              "text": "@notice starts the waitlist minting period"
            },
            "functionSelector": "a839e501",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 294,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 293,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38508,
                  "src": "4403:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4403:9:0"
              }
            ],
            "name": "startWaitlistMint",
            "nameLocation": "4376:17:0",
            "parameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4393:2:0"
            },
            "returnParameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4413:0:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 328,
            "nodeType": "FunctionDefinition",
            "src": "4545:125:0",
            "body": {
              "id": 327,
              "nodeType": "Block",
              "src": "4589:81:0",
              "statements": [
                {
                  "expression": {
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 315,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "4595:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4611:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4595:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "4595:21:0"
                },
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 319,
                      "name": "waitlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "4622:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4637:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4622:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "4622:20:0"
                },
                {
                  "expression": {
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 323,
                      "name": "publicMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "4648:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4661:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4648:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "4648:17:0"
                }
              ]
            },
            "documentation": {
              "id": 310,
              "nodeType": "StructuredDocumentation",
              "src": "4498:44:0",
              "text": "@notice starts the public minting period"
            },
            "functionSelector": "76c64c62",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 313,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 312,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38508,
                  "src": "4579:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "4579:9:0"
              }
            ],
            "name": "startPublicMint",
            "nameLocation": "4554:15:0",
            "parameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4569:2:0"
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4589:0:0"
            },
            "scope": 329,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40095,
              "src": "637:6:0"
            },
            "id": 17,
            "nodeType": "InheritanceSpecifier",
            "src": "637:6:0"
          },
          {
            "baseName": {
              "id": 18,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38589,
              "src": "645:7:0"
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "645:7:0"
          }
        ],
        "canonicalName": "CouncilNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15,
          "nodeType": "StructuredDocumentation",
          "src": "497:116:0",
          "text": " @title CouncilNFT\n @author HNT Labs\n @notice This is the main NFT contract for the council of Zion"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          329,
          38589,
          38811,
          40095
        ],
        "name": "CouncilNFT",
        "nameLocation": "623:10:0",
        "scope": 330,
        "usedErrors": [
          930,
          933,
          936,
          939,
          942
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 0
}
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MaxSupply",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintPriceNotPaid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonExistentTokenURI",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawTransfer",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINT_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOTAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowlistMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "alreadyMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "privateMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startPublicMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startWaitlistMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "waitlistMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPayments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162001c9638038062001c968339810160408190526200003491620001b3565b83836000620000448382620002db565b506001620000538282620002db565b505050620000706200006a6200009860201b60201c565b6200009c565b60076200007e8382620002db565b506080525050600a805460ff1916600117905550620003a7565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011657600080fd5b81516001600160401b0380821115620001335762000133620000ee565b604051601f8301601f19908116603f011681019082821181831017156200015e576200015e620000ee565b816040528381526020925086838588010111156200017b57600080fd5b600091505b838210156200019f578582018301518183018401529082019062000180565b600093810190920192909252949350505050565b60008060008060808587031215620001ca57600080fd5b84516001600160401b0380821115620001e257600080fd5b620001f08883890162000104565b955060208701519150808211156200020757600080fd5b620002158883890162000104565b945060408701519150808211156200022c57600080fd5b506200023b8782880162000104565b606096909601519497939650505050565b600181811c908216806200026157607f821691505b6020821081036200028257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d657600081815260208120601f850160051c81016020861015620002b15750805b601f850160051c820191505b81811015620002d257828155600101620002bd565b5050505b505050565b81516001600160401b03811115620002f757620002f7620000ee565b6200030f816200030884546200024c565b8462000288565b602080601f8311600181146200034757600084156200032e5750858301515b600019600386901b1c1916600185901b178555620002d2565b600085815260208120601f198616915b82811015620003785788860151825594840194600190910190840162000357565b5085821015620003975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516118d3620003c36000396000610d3601526118d36000f3fe6080604052600436106101c15760003560e01c806370a08231116100f7578063a22cb46511610095578063c002d23d11610064578063c002d23d146104dd578063c87b56dd146104f9578063e985e9c514610519578063f2fde38b1461055457600080fd5b8063a22cb46514610469578063a839e50114610489578063aebb096c1461049e578063b88d4fde146104bd57600080fd5b80638da5cb5b116100d15780638da5cb5b1461040d578063902d55a51461042b57806395d89b41146104415780639886a9021461045657600080fd5b806370a08231146103c3578063715018a6146103e357806376c64c62146103f857600080fd5b806326092b831161016457806342842e0e1161013e57806342842e0e1461035b5780636352211e1461037b5780636a6278421461039b5780636c0360eb146103ae57600080fd5b806326092b831461030157806331b3eb941461032157806341fbddbd1461034157600080fd5b8063081812fc116101a0578063081812fc14610241578063095ea7b31461028f5780630a398b88146102b157806323b872dd146102e157600080fd5b80629a9b7b146101c657806301ffc9a7146101ef57806306fdde031461021f575b600080fd5b3480156101d257600080fd5b506101dc60085481565b6040519081526020015b60405180910390f35b3480156101fb57600080fd5b5061020f61020a366004611413565b610574565b60405190151581526020016101e6565b34801561022b57600080fd5b506102346105c6565b6040516101e69190611430565b34801561024d57600080fd5b5061027761025c36600461147e565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101e6565b34801561029b57600080fd5b506102af6102aa3660046114ac565b610654565b005b3480156102bd57600080fd5b5061020f6102cc3660046114d8565b60096020526000908152604090205460ff1681565b3480156102ed57600080fd5b506102af6102fc3660046114f5565b61073b565b34801561030d57600080fd5b50600a5461020f9062010000900460ff1681565b34801561032d57600080fd5b506102af61033c3660046114d8565b610902565b34801561034d57600080fd5b50600a5461020f9060ff1681565b34801561036757600080fd5b506102af6103763660046114f5565b610983565b34801561038757600080fd5b5061027761039636600461147e565b610a53565b6101dc6103a93660046114d8565b610aaa565b3480156103ba57600080fd5b50610234610b7b565b3480156103cf57600080fd5b506101dc6103de3660046114d8565b610b88565b3480156103ef57600080fd5b506102af610beb565b34801561040457600080fd5b506102af610bff565b34801561041957600080fd5b506006546001600160a01b0316610277565b34801561043757600080fd5b506101dc6109c481565b34801561044d57600080fd5b50610234610c1a565b6101dc610464366004611536565b610c27565b34801561047557600080fd5b506102af6104843660046115c2565b610dcb565b34801561049557600080fd5b506102af610e37565b3480156104aa57600080fd5b50600a5461020f90610100900460ff1681565b3480156104c957600080fd5b506102af6104d8366004611600565b610e51565b3480156104e957600080fd5b506101dc67011c37937e08000081565b34801561050557600080fd5b5061023461051436600461147e565b610f16565b34801561052557600080fd5b5061020f61053436600461169f565b600560209081526000928352604080842090915290825290205460ff1681565b34801561056057600080fd5b506102af61056f3660046114d8565b610f9c565b60006301ffc9a760e01b6001600160e01b0319831614806105a557506380ac58cd60e01b6001600160e01b03198316145b806105c05750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546105d3906116cd565b80601f01602080910402602001604051908101604052809291908181526020018280546105ff906116cd565b801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061069d57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106df5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600260205260409020546001600160a01b038481169116146107915760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106d6565b6001600160a01b0382166107db5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106d6565b336001600160a01b038416148061081557506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061083657506000818152600460205260409020546001600160a01b031633145b6108735760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106d6565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61090a611015565b60405147906000906001600160a01b0384169083908381818185875af1925050503d8060008114610957576040519150601f19603f3d011682016040523d82523d6000602084013e61095c565b606091505b505090508061097e5760405163d23a9e8960e01b815260040160405180910390fd5b505050565b61098e83838361073b565b6001600160a01b0382163b1580610a375750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610a07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611707565b6001600160e01b031916145b61097e5760405162461bcd60e51b81526004016106d690611724565b6000818152600260205260409020546001600160a01b031680610aa55760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016106d6565b919050565b6001600160a01b03811660009081526009602052604081205460ff1615610b0b5760405162461bcd60e51b8152602060048201526015602482015274105b1c9958591e481b5a5b9d195908185b88139195605a1b60448201526064016106d6565b600a5462010000900460ff161515600114610b725760405162461bcd60e51b815260206004820152602160248201527f5075626c6963206d696e74696e67206973206e6f7420616c6c6f7765642079656044820152601d60fa1b60648201526084016106d6565b6105c08261106f565b600780546105d3906116cd565b60006001600160a01b038216610bcf5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016106d6565b506001600160a01b031660009081526003602052604090205490565b610bf3611015565b610bfd600061113b565b565b610c07611015565b600a805462ffffff191662010000179055565b600180546105d3906116cd565b6001600160a01b03841660009081526009602052604081205460ff1615610c6157604051631bbdf5c560e31b815260040160405180910390fd5b600a5460ff161515600103610cc05783600114610cc05760405162461bcd60e51b815260206004820152601760248201527f4e6f7420616c6c6f77656420746f206d696e742079657400000000000000000060448201526064016106d6565b6040516bffffffffffffffffffffffff19606087901b16602082015260348101859052600090605401604051602081830303815290604052805190602001209050610d618484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f0000000000000000000000000000000000000000000000000000000000000000925085915061118d9050565b610db85760405162461bcd60e51b815260206004820152602260248201527f496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c69604482015261195960f21b60648201526084016106d6565b610dc18661106f565b9695505050505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610e3f611015565b600a805462ffffff1916610100179055565b610e5c85858561073b565b6001600160a01b0384163b1580610ef35750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610ea49033908a9089908990899060040161174e565b6020604051808303816000875af1158015610ec3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee79190611707565b6001600160e01b031916145b610f0f5760405162461bcd60e51b81526004016106d690611724565b5050505050565b60606000610f2383610a53565b6001600160a01b031603610f4a5760405163d872946b60e01b815260040160405180910390fd5b600060078054610f59906116cd565b905011610f7557604051806020016040528060008152506105c0565b6007604051602001610f8791906117a2565b60405160208183030381529060405292915050565b610fa4611015565b6001600160a01b0381166110095760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106d6565b6110128161113b565b50565b6006546001600160a01b03163314610bfd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106d6565b600067011c37937e0800003414611099576040516310f0c8f160e11b815260040160405180910390fd5b60006008600081546110aa90611860565b918290555090506109c48111156110d457604051632cdb04a160e21b815260040160405180910390fd5b6001600160a01b0383166000908152600960205260409020805460ff1916600117905561110183826111a3565b6040516001600160a01b038416907f90ddedd5a25821bba11fbb98de02ec1f75c1be90ae147d6450ce873e7b78b5d890600090a292915050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008261119a8584611273565b14949350505050565b6111ad82826112c0565b6001600160a01b0382163b15806112535750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015611223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112479190611707565b6001600160e01b031916145b61126f5760405162461bcd60e51b81526004016106d690611724565b5050565b600081815b84518110156112b8576112a48286838151811061129757611297611887565b60200260200101516113cb565b9150806112b081611860565b915050611278565b509392505050565b6001600160a01b03821661130a5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106d6565b6000818152600260205260409020546001600160a01b0316156113605760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016106d6565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008183106113e75760008281526020849052604090206113f6565b60008381526020839052604090205b9392505050565b6001600160e01b03198116811461101257600080fd5b60006020828403121561142557600080fd5b81356113f6816113fd565b600060208083528351808285015260005b8181101561145d57858101830151858201604001528201611441565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561149057600080fd5b5035919050565b6001600160a01b038116811461101257600080fd5b600080604083850312156114bf57600080fd5b82356114ca81611497565b946020939093013593505050565b6000602082840312156114ea57600080fd5b81356113f681611497565b60008060006060848603121561150a57600080fd5b833561151581611497565b9250602084013561152581611497565b929592945050506040919091013590565b6000806000806060858703121561154c57600080fd5b843561155781611497565b935060208501359250604085013567ffffffffffffffff8082111561157b57600080fd5b818701915087601f83011261158f57600080fd5b81358181111561159e57600080fd5b8860208260051b85010111156115b357600080fd5b95989497505060200194505050565b600080604083850312156115d557600080fd5b82356115e081611497565b9150602083013580151581146115f557600080fd5b809150509250929050565b60008060008060006080868803121561161857600080fd5b853561162381611497565b9450602086013561163381611497565b935060408601359250606086013567ffffffffffffffff8082111561165757600080fd5b818801915088601f83011261166b57600080fd5b81358181111561167a57600080fd5b89602082850101111561168c57600080fd5b9699959850939650602001949392505050565b600080604083850312156116b257600080fd5b82356116bd81611497565b915060208301356115f581611497565b600181811c908216806116e157607f821691505b60208210810361170157634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561171957600080fd5b81516113f6816113fd565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b600080835481600182811c9150808316806117be57607f831692505b602080841082036117dd57634e487b7160e01b86526022600452602486fd5b8180156117f1576001811461180657611833565b60ff1986168952841515850289019650611833565b60008a81526020902060005b8681101561182b5781548b820152908501908301611812565b505084890196505b505050505050611858816e636f756e63696c6d6574616461746160881b8152600f0190565b949350505050565b60006001820161188057634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122053e56821faff0b7603c1d0bab01841b3ff264a8df06e9922d69935f2c0ed105a64736f6c63430008110033",
    "sourceMap": "589:4324:7:-:0;;;1407:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1529:5;1536:7;2220:4:191;:12;1529:5:7;2220:4:191;:12;:::i;:::-;-1:-1:-1;2242:6:191;:16;2251:7;2242:6;:16;:::i;:::-;;2154:111;;936:32:142;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1551:7:7::1;:18;1561:8:::0;1551:7;:18:::1;:::i;:::-;-1:-1:-1::0;1575:12:7::1;::::0;-1:-1:-1;;1593:13:7::1;:20:::0;;-1:-1:-1;;1593:20:7::1;1609:4;1593:20;::::0;;-1:-1:-1;589:4324:7;;640:96:178;719:10;;640:96::o;2433:187:142:-;2525:6;;;-1:-1:-1;;;;;2541:17:142;;;-1:-1:-1;;;;;;2541:17:142;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:194:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:194;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:194;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:194:o;991:828::-;1118:6;1126;1134;1142;1195:3;1183:9;1174:7;1170:23;1166:33;1163:53;;;1212:1;1209;1202:12;1163:53;1239:16;;-1:-1:-1;;;;;1304:14:194;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;1638:2;1627:9;1623:18;1617:25;1601:41;;1667:2;1657:8;1654:16;1651:36;;;1683:1;1680;1673:12;1651:36;;1706:63;1761:7;1750:8;1739:9;1735:24;1706:63;:::i;:::-;1809:2;1794:18;;;;1788:25;991:828;;;;-1:-1:-1;;;;991:828:194:o;1824:380::-;1903:1;1899:12;;;;1946;;;1967:61;;2021:4;2013:6;2009:17;1999:27;;1967:61;2074:2;2066:6;2063:14;2043:18;2040:38;2037:161;;2120:10;2115:3;2111:20;2108:1;2101:31;2155:4;2152:1;2145:15;2183:4;2180:1;2173:15;2037:161;;1824:380;;;:::o;2335:545::-;2437:2;2432:3;2429:11;2426:448;;;2473:1;2498:5;2494:2;2487:17;2543:4;2539:2;2529:19;2613:2;2601:10;2597:19;2594:1;2590:27;2584:4;2580:38;2649:4;2637:10;2634:20;2631:47;;;-1:-1:-1;2672:4:194;2631:47;2727:2;2722:3;2718:12;2715:1;2711:20;2705:4;2701:31;2691:41;;2782:82;2800:2;2793:5;2790:13;2782:82;;;2845:17;;;2826:1;2815:13;2782:82;;;2786:3;;;2426:448;2335:545;;;:::o;3056:1352::-;3176:10;;-1:-1:-1;;;;;3198:30:194;;3195:56;;;3231:18;;:::i;:::-;3260:97;3350:6;3310:38;3342:4;3336:11;3310:38;:::i;:::-;3304:4;3260:97;:::i;:::-;3412:4;;3476:2;3465:14;;3493:1;3488:663;;;;4195:1;4212:6;4209:89;;;-1:-1:-1;4264:19:194;;;4258:26;4209:89;-1:-1:-1;;3013:1:194;3009:11;;;3005:24;3001:29;2991:40;3037:1;3033:11;;;2988:57;4311:81;;3458:944;;3488:663;2282:1;2275:14;;;2319:4;2306:18;;-1:-1:-1;;3524:20:194;;;3642:236;3656:7;3653:1;3650:14;3642:236;;;3745:19;;;3739:26;3724:42;;3837:27;;;;3805:1;3793:14;;;;3672:19;;3642:236;;;3646:3;3906:6;3897:7;3894:19;3891:201;;;3967:19;;;3961:26;-1:-1:-1;;4050:1:194;4046:14;;;4062:3;4042:24;4038:37;4034:42;4019:58;4004:74;;3891:201;-1:-1:-1;;;;;4138:1:194;4122:14;;;4118:22;4105:36;;-1:-1:-1;3056:1352:194:o;:::-;589:4324:7;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "589:4324:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1009:29;;;;;;;;;;;;;;;;;;;160:25:194;;;148:2;133:18;1009:29:7;;;;;;;;4714:335:191;;;;;;;;;;-1:-1:-1;4714:335:191;;;;;:::i;:::-;;:::i;:::-;;;747:14:194;;740:22;722:41;;710:2;695:18;4714:335:191;582:187:194;899:18:191;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1844:46::-;;;;;;;;;;-1:-1:-1;1844:46:191;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1844:46:191;;;;;;-1:-1:-1;;;;;1676:32:194;;;1658:51;;1646:2;1631:18;1844:46:191;1512:203:194;2453:282:191;;;;;;;;;;-1:-1:-1;2453:282:191;;;;;:::i;:::-;;:::i;:::-;;1114:45:7;;;;;;;;;;-1:-1:-1;1114:45:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;2950:741:191;;;;;;;;;;-1:-1:-1;2950:741:191;;;;;:::i;:::-;;:::i;1284:22:7:-;;;;;;;;;;-1:-1:-1;1284:22:7;;;;;;;;;;;4245:310;;;;;;;;;;-1:-1:-1;4245:310:7;;;;;:::i;:::-;;:::i;1227:25::-;;;;;;;;;;-1:-1:-1;1227:25:7;;;;;;;;3697:396:191;;;;;;;;;;-1:-1:-1;3697:396:191;;;;;:::i;:::-;;:::i;1327:149::-;;;;;;;;;;-1:-1:-1;1327:149:191;;;;;:::i;:::-;;:::i;2816:244:7:-;;;;;;:::i;:::-;;:::i;930:21::-;;;;;;;;;;;;;:::i;1482:168:191:-;;;;;;;;;;-1:-1:-1;1482:168:191;;;;;:::i;:::-;;:::i;1831:101:142:-;;;;;;;;;;;;;:::i;4786:125:7:-;;;;;;;;;;;;;:::i;1201:85:142:-;;;;;;;;;;-1:-1:-1;1273:6:142;;-1:-1:-1;;;;;1273:6:142;1201:85;;711:43:7;;;;;;;;;;;;750:4;711:43;;924:20:191;;;;;;;;;;;;;:::i;2026:586:7:-;;;;;;:::i;:::-;;:::i;2741:203:191:-;;;;;;;;;;-1:-1:-1;2741:203:191;;;;;:::i;:::-;;:::i;4608:127:7:-;;;;;;;;;;;;;:::i;1256:24::-;;;;;;;;;;-1:-1:-1;1256:24:7;;;;;;;;;;;4099:427:191;;;;;;;;;;-1:-1:-1;4099:427:191;;;;;:::i;:::-;;:::i;810:47:7:-;;;;;;;;;;;;847:10;810:47;;3800:319;;;;;;;;;;-1:-1:-1;3800:319:7;;;;;:::i;:::-;;:::i;1897:68:191:-;;;;;;;;;;-1:-1:-1;1897:68:191;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2081:198:142;;;;;;;;;;-1:-1:-1;2081:198:142;;;;;:::i;:::-;;:::i;4714:335:191:-;4790:4;-1:-1:-1;;;;;;;;;4825:25:191;;;;:100;;-1:-1:-1;;;;;;;;;;4900:25:191;;;4825:100;:175;;;-1:-1:-1;;;;;;;;;;4975:25:191;;;4825:175;4806:194;4714:335;-1:-1:-1;;4714:335:191:o;899:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2453:282::-;2524:13;2540:12;;;:8;:12;;;;;;-1:-1:-1;;;;;2540:12:191;2571:10;:19;;;:58;;-1:-1:-1;;;;;;2594:23:191;;;;;;:16;:23;;;;;;;;2618:10;2594:35;;;;;;;;;;2571:58;2563:85;;;;-1:-1:-1;;;2563:85:191;;6314:2:194;2563:85:191;;;6296:21:194;6353:2;6333:18;;;6326:30;-1:-1:-1;;;6372:18:194;;;6365:44;6426:18;;2563:85:191;;;;;;;;;2659:15;;;;:11;:15;;;;;;:25;;-1:-1:-1;;;;;;2659:25:191;-1:-1:-1;;;;;2659:25:191;;;;;;;;;2700:28;;2659:15;;2700:28;;;;;;;2514:221;2453:282;;:::o;2950:741::-;3081:12;;;;:8;:12;;;;;;-1:-1:-1;;;;;3073:20:191;;;3081:12;;3073:20;3065:43;;;;-1:-1:-1;;;3065:43:191;;6657:2:194;3065:43:191;;;6639:21:194;6696:2;6676:18;;;6669:30;-1:-1:-1;;;6715:18:194;;;6708:40;6765:18;;3065:43:191;6455:334:194;3065:43:191;-1:-1:-1;;;;;3127:16:191;;3119:46;;;;-1:-1:-1;;;3119:46:191;;6996:2:194;3119:46:191;;;6978:21:194;7035:2;7015:18;;;7008:30;-1:-1:-1;;;7054:18:194;;;7047:47;7111:18;;3119:46:191;6794:341:194;3119:46:191;3197:10;-1:-1:-1;;;;;3197:18:191;;;;:56;;-1:-1:-1;;;;;;3219:22:191;;;;;;:16;:22;;;;;;;;3242:10;3219:34;;;;;;;;;;3197:56;:89;;;-1:-1:-1;3271:15:191;;;;:11;:15;;;;;;-1:-1:-1;;;;;3271:15:191;3257:10;:29;3197:89;3176:150;;;;-1:-1:-1;;;3176:150:191;;6314:2:194;3176:150:191;;;6296:21:194;6353:2;6333:18;;;6326:30;-1:-1:-1;;;6372:18:194;;;6365:44;6426:18;;3176:150:191;6112:338:194;3176:150:191;-1:-1:-1;;;;;3526:16:191;;;;;;;:10;:16;;;;;;;;:18;;-1:-1:-1;;3526:18:191;;;3559:14;;;;;;;;;:16;;3526:18;3559:16;;;3596:12;;;:8;:12;;;;;:17;;-1:-1:-1;;;;;;3596:17:191;;;;;;;;3631:11;:15;;;;;;3624:22;;;;;;;;3662;;3605:2;;3559:14;3526:16;3662:22;;;2950:741;;;:::o;4245:310:7:-;1094:13:142;:11;:13::i;:::-;4444:30:7::1;::::0;4337:21:::1;::::0;4319:15:::1;::::0;-1:-1:-1;;;;;4444:10:7;::::1;::::0;4337:21;;4319:15;4444:30;4319:15;4444:30;4337:21;4444:10;:30:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4422:52;;;4485:10;4480:71;;4512:32;;-1:-1:-1::0;;;4512:32:7::1;;;;;;;;;;;4480:71;4313:242;;4245:310:::0;:::o;3697:396:191:-;3816:26;3829:4;3835:2;3839;3816:12;:26::i;:::-;-1:-1:-1;;;;;3874:14:191;;;:19;;:170;;-1:-1:-1;3913:66:191;;-1:-1:-1;;;3913:66:191;;;3954:10;3913:66;;;7655:34:194;-1:-1:-1;;;;;7725:15:194;;;7705:18;;;7698:43;7757:18;;;7750:34;;;7820:3;7800:18;;;7793:31;-1:-1:-1;7840:19:194;;;7833:30;3999:45:191;;3913:40;;;;3999:45;;7880:19:194;;3913:66:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;3913:131:191;;3874:170;3853:233;;;;-1:-1:-1;;;3853:233:191;;;;;;;:::i;1327:149::-;1385:13;1427:12;;;:8;:12;;;;;;-1:-1:-1;;;;;1427:12:191;;1410:59;;;;-1:-1:-1;;;1410:59:191;;8711:2:194;1410:59:191;;;8693:21:194;8750:2;8730:18;;;8723:30;-1:-1:-1;;;8769:18:194;;;8762:40;8819:18;;1410:59:191;8509:334:194;1410:59:191;1327:149;;;:::o;2816:244:7:-;-1:-1:-1;;;;;2896:24:7;;2873:7;2896:24;;;:13;:24;;;;;;;;:33;2888:67;;;;-1:-1:-1;;;2888:67:7;;9050:2:194;2888:67:7;;;9032:21:194;9089:2;9069:18;;;9062:30;-1:-1:-1;;;9108:18:194;;;9101:51;9169:18;;2888:67:7;8848:345:194;2888:67:7;2969:10;;;;;;;:18;;2983:4;2969:18;2961:64;;;;-1:-1:-1;;;2961:64:7;;9400:2:194;2961:64:7;;;9382:21:194;9439:2;9419:18;;;9412:30;9478:34;9458:18;;;9451:62;-1:-1:-1;;;9529:18:194;;;9522:31;9570:19;;2961:64:7;9198:397:194;2961:64:7;3038:17;3045:9;3038:6;:17::i;930:21::-;;;;;;;:::i;1482:168:191:-;1545:7;-1:-1:-1;;;;;1572:19:191;;1564:44;;;;-1:-1:-1;;;1564:44:191;;9802:2:194;1564:44:191;;;9784:21:194;9841:2;9821:18;;;9814:30;-1:-1:-1;;;9860:18:194;;;9853:42;9912:18;;1564:44:191;9600:336:194;1564:44:191;-1:-1:-1;;;;;;1626:17:191;;;;;:10;:17;;;;;;;1482:168::o;1831:101:142:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4786:125:7:-;1094:13:142;:11;:13::i;:::-;4836::7::1;:21:::0;;-1:-1:-1;;4889:17:7;;::::1;::::0;;4786:125::o;924:20:191:-;;;;;;;:::i;2026:586:7:-;-1:-1:-1;;;;;2170:24:7;;2151:7;2170:24;;;:13;:24;;;;;;;;2166:66;;;2203:29;;-1:-1:-1;;;2203:29:7;;;;;;;;;;;2166:66;2243:13;;;;:21;;:13;:21;2239:92;;2282:9;2295:1;2282:14;2274:50;;;;-1:-1:-1;;;2274:50:7;;10143:2:194;2274:50:7;;;10125:21:194;10182:2;10162:18;;;10155:30;10221:25;10201:18;;;10194:53;10264:18;;2274:50:7;9941:347:194;2274:50:7;2425:38;;-1:-1:-1;;10470:2:194;10466:15;;;10462:53;2425:38:7;;;10450:66:194;10532:12;;;10525:28;;;2397:15:7;;10569:12:194;;2425:38:7;;;;;;;;;;;;2415:49;;;;;;2397:67;;2486:40;2505:5;;2486:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2512:4:7;;-1:-1:-1;2518:7:7;;-1:-1:-1;2486:18:7;;-1:-1:-1;2486:40:7:i;:::-;2471:105;;;;-1:-1:-1;;;2471:105:7;;10794:2:194;2471:105:7;;;10776:21:194;10833:2;10813:18;;;10806:30;10872:34;10852:18;;;10845:62;-1:-1:-1;;;10923:18:194;;;10916:32;10965:19;;2471:105:7;10592:398:194;2471:105:7;2590:17;2597:9;2590:6;:17::i;:::-;2583:24;2026:586;-1:-1:-1;;;;;;2026:586:7:o;2741:203:191:-;2843:10;2826:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;2826:38:191;;;;;;;;;;;;:49;;-1:-1:-1;;2826:49:191;;;;;;;;;;2891:46;;722:41:194;;;2826:38:191;;2843:10;2891:46;;695:18:194;2891:46:191;;;;;;;2741:203;;:::o;4608:127:7:-;1094:13:142;:11;:13::i;:::-;4660::7::1;:21:::0;;-1:-1:-1;;4712:18:7;4660:21:::1;4712:18:::0;;;4608:127::o;4099:427:191:-;4247:26;4260:4;4266:2;4270;4247:12;:26::i;:::-;-1:-1:-1;;;;;4305:14:191;;;:19;;:172;;-1:-1:-1;4344:68:191;;-1:-1:-1;;;4344:68:191;;;4432:45;-1:-1:-1;;;;;4344:40:191;;;4432:45;;4344:68;;4385:10;;4397:4;;4403:2;;4407:4;;;;4344:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;4344:133:191;;4305:172;4284:235;;;;-1:-1:-1;;;4284:235:191;;;;;;;:::i;:::-;4099:427;;;;;:::o;3800:319:7:-;3881:13;3934:1;3906:16;3914:7;3906;:16::i;:::-;-1:-1:-1;;;;;3906:30:7;;3902:93;;3953:35;;-1:-1:-1;;;3953:35:7;;;;;;;;;;;3902:93;4037:1;4019:7;4013:21;;;;;:::i;:::-;;;:25;:101;;;;;;;;;;;;;;;;;4073:7;4056:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;4000:114;3800:319;-1:-1:-1;;3800:319:7:o;2081:198:142:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:142;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:142;;13389:2:194;2161:73:142::1;::::0;::::1;13371:21:194::0;13428:2;13408:18;;;13401:30;13467:34;13447:18;;;13440:62;-1:-1:-1;;;13518:18:194;;;13511:36;13564:19;;2161:73:142::1;13187:402:194::0;2161:73:142::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1273:6;;-1:-1:-1;;;;;1273:6:142;719:10:178;1422:23:142;1414:68;;;;-1:-1:-1;;;1414:68:142;;13796:2:194;1414:68:142;;;13778:21:194;;;13815:18;;;13808:30;13874:34;13854:18;;;13847:62;13926:18;;1414:68:142;13594:356:194;3238:391:7;3290:7;847:10;3309:9;:23;3305:68;;3341:32;;-1:-1:-1;;;3341:32:7;;;;;;;;;;;3305:68;3380:17;3402:14;;3400:16;;;;;:::i;:::-;;;;;-1:-1:-1;3400:16:7;-1:-1:-1;750:4:7;3426:24;;3422:62;;;3459:25;;-1:-1:-1;;;3459:25:7;;;;;;;;;;;3422:62;-1:-1:-1;;;;;3491:24:7;;;;;;:13;:24;;;;;:31;;-1:-1:-1;;3491:31:7;3518:4;3491:31;;;3528;3505:9;3549;3528;:31::i;:::-;3571;;-1:-1:-1;;;;;3571:31:7;;;;;;;;3615:9;3238:391;-1:-1:-1;;3238:391:7:o;2433:187:142:-;2525:6;;;-1:-1:-1;;;;;2541:17:142;;;-1:-1:-1;;;;;;2541:17:142;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;1156:184:185:-;1277:4;1329;1300:25;1313:5;1320:4;1300:12;:25::i;:::-;:33;;1156:184;-1:-1:-1;;;;1156:184:185:o;6185:340:191:-;6255:13;6261:2;6265;6255:5;:13::i;:::-;-1:-1:-1;;;;;6300:14:191;;;:19;;:176;;-1:-1:-1;6339:72:191;;-1:-1:-1;;;6339:72:191;;;6380:10;6339:72;;;7655:34:194;6400:1:191;7705:18:194;;;7698:43;;;7757:18;;;7750:34;;;7820:3;7800:18;;;7793:31;7840:19;;;7833:30;6431:45:191;-1:-1:-1;;;;;6339:40:191;;;6431:45;;7880:19:194;;6339:72:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;6339:137:191;;6300:176;6279:239;;;;-1:-1:-1;;;6279:239:191;;;;;;;:::i;:::-;6185:340;;:::o;1994:290:185:-;2077:7;2119:4;2077:7;2133:116;2157:5;:12;2153:1;:16;2133:116;;;2205:33;2215:12;2229:5;2235:1;2229:8;;;;;;;;:::i;:::-;;;;;;;2205:9;:33::i;:::-;2190:48;-1:-1:-1;2171:3:185;;;;:::i;:::-;;;;2133:116;;;-1:-1:-1;2265:12:185;1994:290;-1:-1:-1;;;1994:290:185:o;5243:371:191:-;-1:-1:-1;;;;;5317:16:191;;5309:46;;;;-1:-1:-1;;;5309:46:191;;6996:2:194;5309:46:191;;;6978:21:194;7035:2;7015:18;;;7008:30;-1:-1:-1;;;7054:18:194;;;7047:47;7111:18;;5309:46:191;6794:341:194;5309:46:191;5398:1;5374:12;;;:8;:12;;;;;;-1:-1:-1;;;;;5374:12:191;:26;5366:53;;;;-1:-1:-1;;;5366:53:191;;14526:2:194;5366:53:191;;;14508:21:194;14565:2;14545:18;;;14538:30;-1:-1:-1;;;14584:18:194;;;14577:44;14638:18;;5366:53:191;14324:338:194;5366:53:191;-1:-1:-1;;;;;5509:14:191;;;;;;:10;:14;;;;;;;;:16;;;;;;5546:12;;;:8;:12;;;;;;:17;;-1:-1:-1;;;;;;5546:17:191;;;;;5579:28;5555:2;;5509:14;;5579:28;;5509:14;;5579:28;5243:371;;:::o;8879:147:185:-;8942:7;8972:1;8968;:5;:51;;9100:13;9191:15;;;9226:4;9219:15;;;9272:4;9256:21;;8968:51;;;9100:13;9191:15;;;9226:4;9219:15;;;9272:4;9256:21;;8976:20;8961:58;8879:147;-1:-1:-1;;;8879:147:185:o;196:131:194:-;-1:-1:-1;;;;;;270:32:194;;260:43;;250:71;;317:1;314;307:12;332:245;390:6;443:2;431:9;422:7;418:23;414:32;411:52;;;459:1;456;449:12;411:52;498:9;485:23;517:30;541:5;517:30;:::i;774:548::-;886:4;915:2;944;933:9;926:21;976:6;970:13;1019:6;1014:2;1003:9;999:18;992:34;1044:1;1054:140;1068:6;1065:1;1062:13;1054:140;;;1163:14;;;1159:23;;1153:30;1129:17;;;1148:2;1125:26;1118:66;1083:10;;1054:140;;;1058:3;1243:1;1238:2;1229:6;1218:9;1214:22;1210:31;1203:42;1313:2;1306;1302:7;1297:2;1289:6;1285:15;1281:29;1270:9;1266:45;1262:54;1254:62;;;;774:548;;;;:::o;1327:180::-;1386:6;1439:2;1427:9;1418:7;1414:23;1410:32;1407:52;;;1455:1;1452;1445:12;1407:52;-1:-1:-1;1478:23:194;;1327:180;-1:-1:-1;1327:180:194:o;1720:131::-;-1:-1:-1;;;;;1795:31:194;;1785:42;;1775:70;;1841:1;1838;1831:12;1856:315;1924:6;1932;1985:2;1973:9;1964:7;1960:23;1956:32;1953:52;;;2001:1;1998;1991:12;1953:52;2040:9;2027:23;2059:31;2084:5;2059:31;:::i;:::-;2109:5;2161:2;2146:18;;;;2133:32;;-1:-1:-1;;;1856:315:194:o;2176:247::-;2235:6;2288:2;2276:9;2267:7;2263:23;2259:32;2256:52;;;2304:1;2301;2294:12;2256:52;2343:9;2330:23;2362:31;2387:5;2362:31;:::i;2428:456::-;2505:6;2513;2521;2574:2;2562:9;2553:7;2549:23;2545:32;2542:52;;;2590:1;2587;2580:12;2542:52;2629:9;2616:23;2648:31;2673:5;2648:31;:::i;:::-;2698:5;-1:-1:-1;2755:2:194;2740:18;;2727:32;2768:33;2727:32;2768:33;:::i;:::-;2428:456;;2820:7;;-1:-1:-1;;;2874:2:194;2859:18;;;;2846:32;;2428:456::o;3149:818::-;3253:6;3261;3269;3277;3330:2;3318:9;3309:7;3305:23;3301:32;3298:52;;;3346:1;3343;3336:12;3298:52;3385:9;3372:23;3404:31;3429:5;3404:31;:::i;:::-;3454:5;-1:-1:-1;3506:2:194;3491:18;;3478:32;;-1:-1:-1;3561:2:194;3546:18;;3533:32;3584:18;3614:14;;;3611:34;;;3641:1;3638;3631:12;3611:34;3679:6;3668:9;3664:22;3654:32;;3724:7;3717:4;3713:2;3709:13;3705:27;3695:55;;3746:1;3743;3736:12;3695:55;3786:2;3773:16;3812:2;3804:6;3801:14;3798:34;;;3828:1;3825;3818:12;3798:34;3881:7;3876:2;3866:6;3863:1;3859:14;3855:2;3851:23;3847:32;3844:45;3841:65;;;3902:1;3899;3892:12;3841:65;3149:818;;;;-1:-1:-1;;3933:2:194;3925:11;;-1:-1:-1;;;3149:818:194:o;3972:416::-;4037:6;4045;4098:2;4086:9;4077:7;4073:23;4069:32;4066:52;;;4114:1;4111;4104:12;4066:52;4153:9;4140:23;4172:31;4197:5;4172:31;:::i;:::-;4222:5;-1:-1:-1;4279:2:194;4264:18;;4251:32;4321:15;;4314:23;4302:36;;4292:64;;4352:1;4349;4342:12;4292:64;4375:7;4365:17;;;3972:416;;;;;:::o;4393:936::-;4490:6;4498;4506;4514;4522;4575:3;4563:9;4554:7;4550:23;4546:33;4543:53;;;4592:1;4589;4582:12;4543:53;4631:9;4618:23;4650:31;4675:5;4650:31;:::i;:::-;4700:5;-1:-1:-1;4757:2:194;4742:18;;4729:32;4770:33;4729:32;4770:33;:::i;:::-;4822:7;-1:-1:-1;4876:2:194;4861:18;;4848:32;;-1:-1:-1;4931:2:194;4916:18;;4903:32;4954:18;4984:14;;;4981:34;;;5011:1;5008;5001:12;4981:34;5049:6;5038:9;5034:22;5024:32;;5094:7;5087:4;5083:2;5079:13;5075:27;5065:55;;5116:1;5113;5106:12;5065:55;5156:2;5143:16;5182:2;5174:6;5171:14;5168:34;;;5198:1;5195;5188:12;5168:34;5243:7;5238:2;5229:6;5225:2;5221:15;5217:24;5214:37;5211:57;;;5264:1;5261;5254:12;5211:57;4393:936;;;;-1:-1:-1;4393:936:194;;-1:-1:-1;5295:2:194;5287:11;;5317:6;4393:936;-1:-1:-1;;;4393:936:194:o;5334:388::-;5402:6;5410;5463:2;5451:9;5442:7;5438:23;5434:32;5431:52;;;5479:1;5476;5469:12;5431:52;5518:9;5505:23;5537:31;5562:5;5537:31;:::i;:::-;5587:5;-1:-1:-1;5644:2:194;5629:18;;5616:32;5657:33;5616:32;5657:33;:::i;5727:380::-;5806:1;5802:12;;;;5849;;;5870:61;;5924:4;5916:6;5912:17;5902:27;;5870:61;5977:2;5969:6;5966:14;5946:18;5943:38;5940:161;;6023:10;6018:3;6014:20;6011:1;6004:31;6058:4;6055:1;6048:15;6086:4;6083:1;6076:15;5940:161;;5727:380;;;:::o;7910:249::-;7979:6;8032:2;8020:9;8011:7;8007:23;8003:32;8000:52;;;8048:1;8045;8038:12;8000:52;8080:9;8074:16;8099:30;8123:5;8099:30;:::i;8164:340::-;8366:2;8348:21;;;8405:2;8385:18;;;8378:30;-1:-1:-1;;;8439:2:194;8424:18;;8417:46;8495:2;8480:18;;8164:340::o;10995:662::-;-1:-1:-1;;;;;11274:15:194;;;11256:34;;11326:15;;11321:2;11306:18;;11299:43;11373:2;11358:18;;11351:34;;;11421:3;11416:2;11401:18;;11394:31;;;11441:19;;11434:35;;;11199:4;11462:6;11512;11236:3;11491:19;;11478:49;11577:1;11571:3;11562:6;11551:9;11547:22;11543:32;11536:43;11647:3;11640:2;11636:7;11631:2;11623:6;11619:15;11615:29;11604:9;11600:45;11596:55;11588:63;;10995:662;;;;;;;;:::o;11922:1260::-;12151:3;12180:1;12213:6;12207:13;12243:3;12265:1;12293:9;12289:2;12285:18;12275:28;;12353:2;12342:9;12338:18;12375;12365:61;;12419:4;12411:6;12407:17;12397:27;;12365:61;12445:2;12493;12485:6;12482:14;12462:18;12459:38;12456:165;;-1:-1:-1;;;12520:33:194;;12576:4;12573:1;12566:15;12606:4;12527:3;12594:17;12456:165;12637:18;12664:133;;;;12811:1;12806:320;;;;12630:496;;12664:133;-1:-1:-1;;12697:24:194;;12685:37;;12770:14;;12763:22;12751:35;;12742:45;;;-1:-1:-1;12664:133:194;;12806:320;11735:1;11728:14;;;11772:4;11759:18;;12901:1;12915:165;12929:6;12926:1;12923:13;12915:165;;;13007:14;;12994:11;;;12987:35;13050:16;;;;12944:10;;12915:165;;;12919:3;;13109:6;13104:3;13100:16;13093:23;;12630:496;;;;;;;13142:34;13172:3;-1:-1:-1;;;11853:30:194;;11908:2;11899:12;;11788:129;13142:34;13135:41;11922:1260;-1:-1:-1;;;;11922:1260:194:o;13955:232::-;13994:3;14015:17;;;14012:140;;14074:10;14069:3;14065:20;14062:1;14055:31;14109:4;14106:1;14099:15;14137:4;14134:1;14127:15;14012:140;-1:-1:-1;14179:1:194;14168:13;;13955:232::o;14192:127::-;14253:10;14248:3;14244:20;14241:1;14234:31;14284:4;14281:1;14274:15;14308:4;14305:1;14298:15",
    "linkReferences": {},
    "immutableReferences": {
      "1549": [
        {
          "start": 3382,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MINT_PRICE()": "c002d23d",
    "TOTAL_SUPPLY()": "902d55a5",
    "allowlistMint()": "41fbddbd",
    "alreadyMinted(address)": "0a398b88",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "currentTokenId()": "009a9b7b",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address)": "6a627842",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "privateMint(address,uint256,bytes32[])": "9886a902",
    "publicMint()": "26092b83",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "startPublicMint()": "76c64c62",
    "startWaitlistMint()": "a839e501",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "waitlistMint()": "aebb096c",
    "withdrawPayments(address)": "31b3eb94"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintPriceNotPaid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonExistentTokenURI\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawTransfer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowlistMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"alreadyMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"privateMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPublicMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startWaitlistMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"waitlistMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"HNT Labs\",\"kind\":\"dev\",\"methods\":{\"mint(address)\":{\"params\":{\"recipient\":\"the address that will receive the minted NFT\"},\"returns\":{\"_0\":\"tokenId token id of the minted NFT\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"privateMint(address,uint256,bytes32[])\":{\"params\":{\"allowance\":\"of 1 means user is on the allowlist, @allowance of 0 means user is on the waitlist\",\"proof\":\"the generated merkle proof that this user is on the allowlist or waitlist\",\"recipient\":\"the address that will receive the minted NFT\"},\"returns\":{\"_0\":\"tokenId token id of the minted NFT\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"the id of the token to get the tokenURI for\"},\"returns\":{\"_0\":\"the tokenURI for the given tokenId\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawPayments(address)\":{\"params\":{\"payee\":\"the address that will receive the withdrawn ether\"}}},\"title\":\"CouncilNFT\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyMinted()\":[{\"notice\":\"thrown when user tries to mint more than 1 token with same wallet\"}],\"MaxSupply()\":[{\"notice\":\"thrown when the max supply is reached\"}],\"MintPriceNotPaid()\":[{\"notice\":\"thrown when an incorrect amount of ETH is sent to mint\"}],\"NonExistentTokenURI()\":[{\"notice\":\"thrown when a token is not minted\"}],\"WithdrawTransfer()\":[{\"notice\":\"thrown when the withdraw payment transaction fails\"}]},\"kind\":\"user\",\"methods\":{\"MINT_PRICE()\":{\"notice\":\"the mint price for an individual nft\"},\"TOTAL_SUPPLY()\":{\"notice\":\"the total supply of the collection\"},\"alreadyMinted(address)\":{\"notice\":\"mapping to track which  users have already minted an nft\"},\"baseURI()\":{\"notice\":\"the base uri for the nft metadata including image uri\"},\"currentTokenId()\":{\"notice\":\"the counter token id for the next mint\"},\"mint(address)\":{\"notice\":\"the secondary minting method used only when public minting is active\"},\"privateMint(address,uint256,bytes32[])\":{\"notice\":\"the primary minting method for the allowlist and waitlist minting periods\"},\"startPublicMint()\":{\"notice\":\"starts the public minting period\"},\"startWaitlistMint()\":{\"notice\":\"starts the waitlist minting period\"},\"tokenURI(uint256)\":{\"notice\":\"Get the tokenURI for the given tokenId\"},\"withdrawPayments(address)\":{\"notice\":\"withdraw the balance from the contract\"}},\"notice\":\"This is the main NFT contract for the council of Zion\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/council/CouncilNFT.sol\":\"CouncilNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":council/=lib/council/contracts/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/src/council/CouncilNFT.sol\":{\"keccak256\":\"0x41115345c1b873b0438e71ce22d026be4ef65fa1d1a09101ecb49d7cc23229fd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6e63498b1fd063d5b22746347b3160dc097f0d1d1e6e88fe660bbfad2b50ea0\",\"dweb:/ipfs/QmckANMuB9M2rjGPpxHkoFNynym5htzUVnSgXM6VLBewPf\"]},\"contracts/src/council/libraries/CouncilErrors.sol\":{\"keccak256\":\"0x5e7ef03bdac9b2acca7cc67467765787e5387c533fb99807d761d639d78a1949\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a8afb26af4a9b7cb160ac10f822f591efdfcf74423ff58289264f1205cb8f578\",\"dweb:/ipfs/QmXYwWyy2bJSps8nUeLBss7wCY4zUJzDotaqh4tZUMu6jc\"]},\"contracts/src/council/libraries/CouncilEvents.sol\":{\"keccak256\":\"0x8aaeb1b2e207af77f4a2991319bd40355d55a4dafad0291c63d9a2767cbbc4ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1cfaad4621e80c43319ce12c07acdf75693a8fb28d17cd97ddfd1f8936b09e97\",\"dweb:/ipfs/QmXwNeZDJ2zhjjoPGtyTaKrLagCf3D4RVx543PWHwtnxpB\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616\",\"dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xba1ae0497d71bf30f3710c38aba13a5b68c31d81ff04dd73e5dd55a05a9c903d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d77f4aee3f6534fe2dbc6583385fc123340f8ccb9bf3c8c04555e538a3d9a4b5\",\"dweb:/ipfs/QmVtP4Fz9tB2DFvMHJaSFbLxnEHE1NKDA92fviV7jDkEnL\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "_root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxSupply"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintPriceNotPaid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonExistentTokenURI"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINT_PRICE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TOTAL_SUPPLY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allowlistMint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "alreadyMinted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "privateMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "publicMint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startPublicMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startWaitlistMint"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "waitlistMint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "payee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawPayments"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "mint(address)": {
            "params": {
              "recipient": "the address that will receive the minted NFT"
            },
            "returns": {
              "_0": "tokenId token id of the minted NFT"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "privateMint(address,uint256,bytes32[])": {
            "params": {
              "allowance": "of 1 means user is on the allowlist, @allowance of 0 means user is on the waitlist",
              "proof": "the generated merkle proof that this user is on the allowlist or waitlist",
              "recipient": "the address that will receive the minted NFT"
            },
            "returns": {
              "_0": "tokenId token id of the minted NFT"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "tokenURI(uint256)": {
            "params": {
              "tokenId": "the id of the token to get the tokenURI for"
            },
            "returns": {
              "_0": "the tokenURI for the given tokenId"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdrawPayments(address)": {
            "params": {
              "payee": "the address that will receive the withdrawn ether"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MINT_PRICE()": {
            "notice": "the mint price for an individual nft"
          },
          "TOTAL_SUPPLY()": {
            "notice": "the total supply of the collection"
          },
          "alreadyMinted(address)": {
            "notice": "mapping to track which  users have already minted an nft"
          },
          "baseURI()": {
            "notice": "the base uri for the nft metadata including image uri"
          },
          "currentTokenId()": {
            "notice": "the counter token id for the next mint"
          },
          "mint(address)": {
            "notice": "the secondary minting method used only when public minting is active"
          },
          "privateMint(address,uint256,bytes32[])": {
            "notice": "the primary minting method for the allowlist and waitlist minting periods"
          },
          "startPublicMint()": {
            "notice": "starts the public minting period"
          },
          "startWaitlistMint()": {
            "notice": "starts the waitlist minting period"
          },
          "tokenURI(uint256)": {
            "notice": "Get the tokenURI for the given tokenId"
          },
          "withdrawPayments(address)": {
            "notice": "withdraw the balance from the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@opengsn/=node_modules/@opengsn/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":council/=lib/council/contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/src/council/CouncilNFT.sol": "CouncilNFT"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/council/CouncilNFT.sol": {
        "keccak256": "0x41115345c1b873b0438e71ce22d026be4ef65fa1d1a09101ecb49d7cc23229fd",
        "urls": [
          "bzz-raw://a6e63498b1fd063d5b22746347b3160dc097f0d1d1e6e88fe660bbfad2b50ea0",
          "dweb:/ipfs/QmckANMuB9M2rjGPpxHkoFNynym5htzUVnSgXM6VLBewPf"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/council/libraries/CouncilErrors.sol": {
        "keccak256": "0x5e7ef03bdac9b2acca7cc67467765787e5387c533fb99807d761d639d78a1949",
        "urls": [
          "bzz-raw://a8afb26af4a9b7cb160ac10f822f591efdfcf74423ff58289264f1205cb8f578",
          "dweb:/ipfs/QmXYwWyy2bJSps8nUeLBss7wCY4zUJzDotaqh4tZUMu6jc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/src/council/libraries/CouncilEvents.sol": {
        "keccak256": "0x8aaeb1b2e207af77f4a2991319bd40355d55a4dafad0291c63d9a2767cbbc4ca",
        "urls": [
          "bzz-raw://1cfaad4621e80c43319ce12c07acdf75693a8fb28d17cd97ddfd1f8936b09e97",
          "dweb:/ipfs/QmXwNeZDJ2zhjjoPGtyTaKrLagCf3D4RVx543PWHwtnxpB"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xd466e8b07f4c6220eac16da5127f3ff142e65f0c15c03c7d38f257b02c8585e1",
        "urls": [
          "bzz-raw://e6b3cab69f655e40117bbdd8e68d7423f26d1b24248fb189c295f08de8940616",
          "dweb:/ipfs/QmWoyRthsBDMa7gJpH5UCjpa8uNUQfyaGbSgY3uvhBH9F3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xba1ae0497d71bf30f3710c38aba13a5b68c31d81ff04dd73e5dd55a05a9c903d",
        "urls": [
          "bzz-raw://d77f4aee3f6534fe2dbc6583385fc123340f8ccb9bf3c8c04555e538a3d9a4b5",
          "dweb:/ipfs/QmVtP4Fz9tB2DFvMHJaSFbLxnEHE1NKDA92fviV7jDkEnL"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/council/CouncilNFT.sol",
    "id": 1835,
    "exportedSymbols": {
      "CouncilErrors": [
        2444
      ],
      "CouncilEvents": [
        2473
      ],
      "CouncilNFT": [
        1834
      ],
      "ERC721": [
        81138
      ],
      "ERC721TokenReceiver": [
        81158
      ],
      "MerkleProof": [
        77810
      ],
      "Ownable": [
        66154
      ],
      "Strings": [
        76579
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:4876:7",
    "nodes": [
      {
        "id": 1502,
        "nodeType": "PragmaDirective",
        "src": "38:23:7",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 1503,
        "nodeType": "ImportDirective",
        "src": "63:35:7",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1835,
        "sourceUnit": 81159,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1505,
        "nodeType": "ImportDirective",
        "src": "99:76:7",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1835,
        "sourceUnit": 66155,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1504,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66154,
              "src": "107:7:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1507,
        "nodeType": "ImportDirective",
        "src": "176:75:7",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "openzeppelin-contracts/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1835,
        "sourceUnit": 76580,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1506,
              "name": "Strings",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 76579,
              "src": "184:7:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1509,
        "nodeType": "ImportDirective",
        "src": "252:60:7",
        "nodes": [],
        "absolutePath": "contracts/src/council/libraries/CouncilErrors.sol",
        "file": "./libraries/CouncilErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1835,
        "sourceUnit": 2445,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1508,
              "name": "CouncilErrors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2444,
              "src": "260:13:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1511,
        "nodeType": "ImportDirective",
        "src": "313:60:7",
        "nodes": [],
        "absolutePath": "contracts/src/council/libraries/CouncilEvents.sol",
        "file": "./libraries/CouncilEvents.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1835,
        "sourceUnit": 2474,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1510,
              "name": "CouncilEvents",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2473,
              "src": "321:13:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1513,
        "nodeType": "ImportDirective",
        "src": "374:96:7",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1835,
        "sourceUnit": 77811,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1512,
              "name": "MerkleProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 77810,
              "src": "382:11:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1834,
        "nodeType": "ContractDefinition",
        "src": "589:4324:7",
        "nodes": [
          {
            "id": 1521,
            "nodeType": "UsingForDirective",
            "src": "632:26:7",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1519,
              "name": "Strings",
              "nameLocations": [
                "638:7:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 76579,
              "src": "638:7:7"
            },
            "typeName": {
              "id": 1520,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "650:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1525,
            "nodeType": "VariableDeclaration",
            "src": "711:43:7",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 1522,
              "nodeType": "StructuredDocumentation",
              "src": "662:46:7",
              "text": "@notice the total supply of the collection"
            },
            "functionSelector": "902d55a5",
            "mutability": "constant",
            "name": "TOTAL_SUPPLY",
            "nameLocation": "735:12:7",
            "scope": 1834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1523,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "711:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32353030",
              "id": 1524,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "750:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2500_by_1",
                "typeString": "int_const 2500"
              },
              "value": "2500"
            },
            "visibility": "public"
          },
          {
            "id": 1529,
            "nodeType": "VariableDeclaration",
            "src": "810:47:7",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 1526,
              "nodeType": "StructuredDocumentation",
              "src": "759:48:7",
              "text": "@notice the mint price for an individual nft"
            },
            "functionSelector": "c002d23d",
            "mutability": "constant",
            "name": "MINT_PRICE",
            "nameLocation": "834:10:7",
            "scope": 1834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1527,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "810:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3038",
              "id": 1528,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "847:10:7",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_80000000000000000_by_1",
                "typeString": "int_const 80000000000000000"
              },
              "value": "0.08"
            },
            "visibility": "public"
          },
          {
            "id": 1532,
            "nodeType": "VariableDeclaration",
            "src": "930:21:7",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1530,
              "nodeType": "StructuredDocumentation",
              "src": "862:65:7",
              "text": "@notice the base uri for the nft metadata including image uri"
            },
            "functionSelector": "6c0360eb",
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "944:7:7",
            "scope": 1834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1531,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "930:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1535,
            "nodeType": "VariableDeclaration",
            "src": "1009:29:7",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1533,
              "nodeType": "StructuredDocumentation",
              "src": "956:50:7",
              "text": "@notice the counter token id for the next mint"
            },
            "functionSelector": "009a9b7b",
            "mutability": "mutable",
            "name": "currentTokenId",
            "nameLocation": "1024:14:7",
            "scope": 1834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1534,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1009:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1540,
            "nodeType": "VariableDeclaration",
            "src": "1114:45:7",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1536,
              "nodeType": "StructuredDocumentation",
              "src": "1043:68:7",
              "text": "@notice mapping to track which  users have already minted an nft"
            },
            "functionSelector": "0a398b88",
            "mutability": "mutable",
            "name": "alreadyMinted",
            "nameLocation": "1146:13:7",
            "scope": 1834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1539,
              "keyType": {
                "id": 1537,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:24:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1538,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1133:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 1542,
            "nodeType": "VariableDeclaration",
            "src": "1227:25:7",
            "nodes": [],
            "constant": false,
            "functionSelector": "41fbddbd",
            "mutability": "mutable",
            "name": "allowlistMint",
            "nameLocation": "1239:13:7",
            "scope": 1834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1541,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1227:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1544,
            "nodeType": "VariableDeclaration",
            "src": "1256:24:7",
            "nodes": [],
            "constant": false,
            "functionSelector": "aebb096c",
            "mutability": "mutable",
            "name": "waitlistMint",
            "nameLocation": "1268:12:7",
            "scope": 1834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1543,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1256:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1546,
            "nodeType": "VariableDeclaration",
            "src": "1284:22:7",
            "nodes": [],
            "constant": false,
            "functionSelector": "26092b83",
            "mutability": "mutable",
            "name": "publicMint",
            "nameLocation": "1296:10:7",
            "scope": 1834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1545,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1284:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1549,
            "nodeType": "VariableDeclaration",
            "src": "1371:31:7",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1547,
              "nodeType": "StructuredDocumentation",
              "src": "1311:57:7",
              "text": "@notice the root of the merkle tree for the allowlist"
            },
            "mutability": "immutable",
            "name": "root",
            "nameLocation": "1398:4:7",
            "scope": 1834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1548,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1371:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1577,
            "nodeType": "FunctionDefinition",
            "src": "1407:211:7",
            "nodes": [],
            "body": {
              "id": 1576,
              "nodeType": "Block",
              "src": "1545:73:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1564,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1532,
                      "src": "1551:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1565,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1555,
                      "src": "1561:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1551:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1567,
                  "nodeType": "ExpressionStatement",
                  "src": "1551:18:7"
                },
                {
                  "expression": {
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1568,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1549,
                      "src": "1575:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1569,
                      "name": "_root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1557,
                      "src": "1582:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1575:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:12:7"
                },
                {
                  "expression": {
                    "id": 1574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1572,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1542,
                      "src": "1593:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1609:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1593:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1575,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:20:7"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1560,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1551,
                    "src": "1529:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1561,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1553,
                    "src": "1536:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1562,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1559,
                  "name": "ERC721",
                  "nameLocations": [
                    "1522:6:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 81138,
                  "src": "1522:6:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1522:22:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1551,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1438:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1424:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1550,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1553,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1463:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1449:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1552,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1555,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "1490:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1476:22:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1557,
                  "mutability": "mutable",
                  "name": "_root",
                  "nameLocation": "1512:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1504:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1556,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1504:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:103:7"
            },
            "returnParameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1545:0:7"
            },
            "scope": 1834,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1636,
            "nodeType": "FunctionDefinition",
            "src": "2026:586:7",
            "nodes": [],
            "body": {
              "id": 1635,
              "nodeType": "Block",
              "src": "2160:452:7",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 1590,
                      "name": "alreadyMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1540,
                      "src": "2170:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1592,
                    "indexExpression": {
                      "id": 1591,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1580,
                      "src": "2184:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2170:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1598,
                  "nodeType": "IfStatement",
                  "src": "2166:66:7",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1593,
                          "name": "CouncilErrors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2444,
                          "src": "2203:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CouncilErrors_$2444_$",
                            "typeString": "type(library CouncilErrors)"
                          }
                        },
                        "id": 1595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2217:13:7",
                        "memberName": "AlreadyMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2431,
                        "src": "2203:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2203:29:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1597,
                    "nodeType": "RevertStatement",
                    "src": "2196:36:7"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1599,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1542,
                      "src": "2243:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 1600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2260:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2243:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1610,
                  "nodeType": "IfStatement",
                  "src": "2239:92:7",
                  "trueBody": {
                    "id": 1609,
                    "nodeType": "Block",
                    "src": "2266:65:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1603,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1582,
                                "src": "2282:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1604,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2295:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2282:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420616c6c6f77656420746f206d696e7420796574",
                              "id": 1606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2298:25:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_93e88215183578f5aaa04bb5f966ce76eb49ed954a4c7e3c4044873616fa3eee",
                                "typeString": "literal_string \"Not allowed to mint yet\""
                              },
                              "value": "Not allowed to mint yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_93e88215183578f5aaa04bb5f966ce76eb49ed954a4c7e3c4044873616fa3eee",
                                "typeString": "literal_string \"Not allowed to mint yet\""
                              }
                            ],
                            "id": 1602,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2274:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2274:50:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1608,
                        "nodeType": "ExpressionStatement",
                        "src": "2274:50:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1612,
                      "mutability": "mutable",
                      "name": "payload",
                      "nameLocation": "2405:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1635,
                      "src": "2397:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1611,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2397:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1620,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1616,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1580,
                            "src": "2442:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1617,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1582,
                            "src": "2453:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1614,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2425:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2429:12:7",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2425:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2425:38:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1613,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2415:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2415:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2397:67:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1624,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1585,
                            "src": "2505:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 1625,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1549,
                            "src": "2512:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1626,
                            "name": "payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1612,
                            "src": "2518:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1622,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77810,
                            "src": "2486:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$77810_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 1623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2498:6:7",
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 77332,
                          "src": "2486:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 1627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2486:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c696564",
                        "id": 1628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2534:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2f47add308f7d76603eeee5e3edc71de6361e9f105e76633970ce1b8dd69f22",
                          "typeString": "literal_string \"Invalid merkle tree proof supplied\""
                        },
                        "value": "Invalid merkle tree proof supplied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2f47add308f7d76603eeee5e3edc71de6361e9f105e76633970ce1b8dd69f22",
                          "typeString": "literal_string \"Invalid merkle tree proof supplied\""
                        }
                      ],
                      "id": 1621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2471:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:105:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1630,
                  "nodeType": "ExpressionStatement",
                  "src": "2471:105:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1632,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1580,
                        "src": "2597:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1631,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1717,
                      "src": "2590:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2590:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1589,
                  "id": 1634,
                  "nodeType": "Return",
                  "src": "2583:24:7"
                }
              ]
            },
            "documentation": {
              "id": 1578,
              "nodeType": "StructuredDocumentation",
              "src": "1622:401:7",
              "text": "@notice the primary minting method for the allowlist and waitlist minting periods\n @param recipient the address that will receive the minted NFT\n @param allowance of 1 means user is on the allowlist, @allowance of 0 means user is on the waitlist\n @param proof the generated merkle proof that this user is on the allowlist or waitlist\n @return tokenId token id of the minted NFT"
            },
            "functionSelector": "9886a902",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "privateMint",
            "nameLocation": "2035:11:7",
            "parameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2060:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "2052:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2052:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1582,
                  "mutability": "mutable",
                  "name": "allowance",
                  "nameLocation": "2083:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "2075:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2075:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1585,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "2117:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "2098:24:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1583,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2098:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1584,
                    "nodeType": "ArrayTypeName",
                    "src": "2098:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2046:80:7"
            },
            "returnParameters": {
              "id": 1589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1588,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "2151:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2150:9:7"
            },
            "scope": 1834,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1665,
            "nodeType": "FunctionDefinition",
            "src": "2816:244:7",
            "nodes": [],
            "body": {
              "id": 1664,
              "nodeType": "Block",
              "src": "2882:178:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1645,
                            "name": "alreadyMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1540,
                            "src": "2896:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1647,
                          "indexExpression": {
                            "id": 1646,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1639,
                            "src": "2910:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2896:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2924:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2896:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479206d696e74656420616e204e4654",
                        "id": 1650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2931:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08f848b7b93077c49a2062c9a8c995a84d478ced136ec2a97db79946837b3e71",
                          "typeString": "literal_string \"Already minted an NFT\""
                        },
                        "value": "Already minted an NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08f848b7b93077c49a2062c9a8c995a84d478ced136ec2a97db79946837b3e71",
                          "typeString": "literal_string \"Already minted an NFT\""
                        }
                      ],
                      "id": 1644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2888:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2888:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1652,
                  "nodeType": "ExpressionStatement",
                  "src": "2888:67:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1654,
                          "name": "publicMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1546,
                          "src": "2969:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2983:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2969:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c6963206d696e74696e67206973206e6f7420616c6c6f77656420796574",
                        "id": 1657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2989:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3856cc290bfb870311067a6378c21a0013e2d9c7ec535e31b3c89448b1aedb92",
                          "typeString": "literal_string \"Public minting is not allowed yet\""
                        },
                        "value": "Public minting is not allowed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3856cc290bfb870311067a6378c21a0013e2d9c7ec535e31b3c89448b1aedb92",
                          "typeString": "literal_string \"Public minting is not allowed yet\""
                        }
                      ],
                      "id": 1653,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2961:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2961:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1659,
                  "nodeType": "ExpressionStatement",
                  "src": "2961:64:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1661,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1639,
                        "src": "3045:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1660,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1717,
                      "src": "3038:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3038:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1643,
                  "id": 1663,
                  "nodeType": "Return",
                  "src": "3031:24:7"
                }
              ]
            },
            "documentation": {
              "id": 1637,
              "nodeType": "StructuredDocumentation",
              "src": "2616:197:7",
              "text": "@notice the secondary minting method used only when public minting is active\n @param recipient the address that will receive the minted NFT\n @return tokenId token id of the minted NFT"
            },
            "functionSelector": "6a627842",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2825:4:7",
            "parameters": {
              "id": 1640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1639,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2838:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1665,
                  "src": "2830:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2830:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2829:19:7"
            },
            "returnParameters": {
              "id": 1643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1642,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1665,
                  "src": "2873:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2872:9:7"
            },
            "scope": 1834,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1717,
            "nodeType": "FunctionDefinition",
            "src": "3238:391:7",
            "nodes": [],
            "body": {
              "id": 1716,
              "nodeType": "Block",
              "src": "3299:330:7",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1673,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3309:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3313:5:7",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3309:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1675,
                      "name": "MINT_PRICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1529,
                      "src": "3322:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3309:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1682,
                  "nodeType": "IfStatement",
                  "src": "3305:68:7",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1677,
                          "name": "CouncilErrors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2444,
                          "src": "3341:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CouncilErrors_$2444_$",
                            "typeString": "type(library CouncilErrors)"
                          }
                        },
                        "id": 1679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3355:16:7",
                        "memberName": "MintPriceNotPaid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2419,
                        "src": "3341:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3341:32:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1681,
                    "nodeType": "RevertStatement",
                    "src": "3334:39:7"
                  }
                },
                {
                  "assignments": [
                    1684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1684,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "3388:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1716,
                      "src": "3380:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1683,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3380:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1687,
                  "initialValue": {
                    "id": 1686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "3400:16:7",
                    "subExpression": {
                      "id": 1685,
                      "name": "currentTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1535,
                      "src": "3402:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3380:36:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1688,
                      "name": "newItemId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1684,
                      "src": "3426:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1689,
                      "name": "TOTAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1525,
                      "src": "3438:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3426:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1696,
                  "nodeType": "IfStatement",
                  "src": "3422:62:7",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1691,
                          "name": "CouncilErrors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2444,
                          "src": "3459:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CouncilErrors_$2444_$",
                            "typeString": "type(library CouncilErrors)"
                          }
                        },
                        "id": 1693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3473:9:7",
                        "memberName": "MaxSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2422,
                        "src": "3459:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3459:25:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1695,
                    "nodeType": "RevertStatement",
                    "src": "3452:32:7"
                  }
                },
                {
                  "expression": {
                    "id": 1701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1697,
                        "name": "alreadyMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1540,
                        "src": "3491:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1699,
                      "indexExpression": {
                        "id": 1698,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1668,
                        "src": "3505:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3491:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3518:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3491:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1702,
                  "nodeType": "ExpressionStatement",
                  "src": "3491:31:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1704,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1668,
                        "src": "3538:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1705,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "3549:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1703,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        81095,
                        81137
                      ],
                      "referencedDeclaration": 81095,
                      "src": "3528:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3528:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1707,
                  "nodeType": "ExpressionStatement",
                  "src": "3528:31:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1711,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1668,
                        "src": "3592:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1708,
                        "name": "CouncilEvents",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2473,
                        "src": "3571:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CouncilEvents_$2473_$",
                          "typeString": "type(library CouncilEvents)"
                        }
                      },
                      "id": 1710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3585:6:7",
                      "memberName": "Minted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2451,
                      "src": "3571:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3571:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1713,
                  "nodeType": "EmitStatement",
                  "src": "3566:36:7"
                },
                {
                  "expression": {
                    "id": 1714,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1684,
                    "src": "3615:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1672,
                  "id": 1715,
                  "nodeType": "Return",
                  "src": "3608:16:7"
                }
              ]
            },
            "documentation": {
              "id": 1666,
              "nodeType": "StructuredDocumentation",
              "src": "3064:171:7",
              "text": "@notice Verify that the user sent the proper amount of ether to mint\n @notice Verify that there are still more NFTs to mint\n @notice Mint the NFT to the user"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "3247:6:7",
            "parameters": {
              "id": 1669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1668,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3262:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1717,
                  "src": "3254:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3254:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3253:19:7"
            },
            "returnParameters": {
              "id": 1672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1671,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1717,
                  "src": "3290:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3290:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3289:9:7"
            },
            "scope": 1834,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1760,
            "nodeType": "FunctionDefinition",
            "src": "3800:319:7",
            "nodes": [],
            "body": {
              "id": 1759,
              "nodeType": "Block",
              "src": "3896:223:7",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1727,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1720,
                          "src": "3914:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1726,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80663,
                        "src": "3906:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 1728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3906:16:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3934:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3926:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1729,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3926:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3926:10:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3906:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1740,
                  "nodeType": "IfStatement",
                  "src": "3902:93:7",
                  "trueBody": {
                    "id": 1739,
                    "nodeType": "Block",
                    "src": "3938:57:7",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1734,
                              "name": "CouncilErrors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2444,
                              "src": "3953:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CouncilErrors_$2444_$",
                                "typeString": "type(library CouncilErrors)"
                              }
                            },
                            "id": 1736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3967:19:7",
                            "memberName": "NonExistentTokenURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2425,
                            "src": "3953:33:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3953:35:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1738,
                        "nodeType": "RevertStatement",
                        "src": "3946:42:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1743,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1532,
                              "src": "4019:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 1742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4013:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 1741,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4013:5:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4013:14:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "id": 1745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4028:6:7",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4013:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4037:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4013:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 1756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4112:2:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4013:101:7",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1752,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1532,
                              "src": "4073:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "hexValue": "636f756e63696c6d65746164617461",
                              "id": 1753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4082:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fe29c6027f746311fa0ffb1256ea191de5e1b7ce95dde50a8f5de26c1a095a51",
                                "typeString": "literal_string \"councilmetadata\""
                              },
                              "value": "councilmetadata"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fe29c6027f746311fa0ffb1256ea191de5e1b7ce95dde50a8f5de26c1a095a51",
                                "typeString": "literal_string \"councilmetadata\""
                              }
                            ],
                            "expression": {
                              "id": 1750,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4056:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4060:12:7",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "4056:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4056:44:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4049:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 1748,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4049:6:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4049:52:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1725,
                  "id": 1758,
                  "nodeType": "Return",
                  "src": "4000:114:7"
                }
              ]
            },
            "baseFunctions": [
              80632
            ],
            "documentation": {
              "id": 1718,
              "nodeType": "StructuredDocumentation",
              "src": "3633:164:7",
              "text": "@notice Get the tokenURI for the given tokenId\n @param tokenId the id of the token to get the tokenURI for\n @return the tokenURI for the given tokenId"
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3809:8:7",
            "overrides": {
              "id": 1722,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3863:8:7"
            },
            "parameters": {
              "id": 1721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1720,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3831:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "3823:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3823:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3817:25:7"
            },
            "returnParameters": {
              "id": 1725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1724,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "3881:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1723,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3881:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3880:15:7"
            },
            "scope": 1834,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 1795,
            "nodeType": "FunctionDefinition",
            "src": "4245:310:7",
            "nodes": [],
            "body": {
              "id": 1794,
              "nodeType": "Block",
              "src": "4313:242:7",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1769,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "4327:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1794,
                      "src": "4319:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1768,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4319:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1775,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1772,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4345:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CouncilNFT_$1834",
                            "typeString": "contract CouncilNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CouncilNFT_$1834",
                            "typeString": "contract CouncilNFT"
                          }
                        ],
                        "id": 1771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4337:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1770,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4337:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4337:13:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4351:7:7",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4337:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4319:39:7"
                },
                {
                  "assignments": [
                    1777,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1777,
                      "mutability": "mutable",
                      "name": "transferTx",
                      "nameLocation": "4428:10:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1794,
                      "src": "4423:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1776,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4423:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1784,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4471:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1778,
                          "name": "payee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "4444:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4450:4:7",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4444:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1780,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1769,
                          "src": "4462:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4444:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4444:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4422:52:7"
                },
                {
                  "condition": {
                    "id": 1786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4484:11:7",
                    "subExpression": {
                      "id": 1785,
                      "name": "transferTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1777,
                      "src": "4485:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1793,
                  "nodeType": "IfStatement",
                  "src": "4480:71:7",
                  "trueBody": {
                    "id": 1792,
                    "nodeType": "Block",
                    "src": "4497:54:7",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1787,
                              "name": "CouncilErrors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2444,
                              "src": "4512:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CouncilErrors_$2444_$",
                                "typeString": "type(library CouncilErrors)"
                              }
                            },
                            "id": 1789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4526:16:7",
                            "memberName": "WithdrawTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2428,
                            "src": "4512:30:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4512:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1791,
                        "nodeType": "RevertStatement",
                        "src": "4505:39:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1761,
              "nodeType": "StructuredDocumentation",
              "src": "4123:119:7",
              "text": "@notice withdraw the balance from the contract\n @param payee the address that will receive the withdrawn ether"
            },
            "functionSelector": "31b3eb94",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1766,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1765,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4303:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66073,
                  "src": "4303:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4303:9:7"
              }
            ],
            "name": "withdrawPayments",
            "nameLocation": "4254:16:7",
            "parameters": {
              "id": 1764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1763,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "4287:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1795,
                  "src": "4271:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4271:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4270:23:7"
            },
            "returnParameters": {
              "id": 1767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4313:0:7"
            },
            "scope": 1834,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1814,
            "nodeType": "FunctionDefinition",
            "src": "4608:127:7",
            "nodes": [],
            "body": {
              "id": 1813,
              "nodeType": "Block",
              "src": "4654:81:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1801,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1542,
                      "src": "4660:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4676:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4660:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1804,
                  "nodeType": "ExpressionStatement",
                  "src": "4660:21:7"
                },
                {
                  "expression": {
                    "id": 1807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1805,
                      "name": "waitlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1544,
                      "src": "4687:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4702:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4687:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1808,
                  "nodeType": "ExpressionStatement",
                  "src": "4687:19:7"
                },
                {
                  "expression": {
                    "id": 1811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1809,
                      "name": "publicMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "4712:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4725:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4712:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1812,
                  "nodeType": "ExpressionStatement",
                  "src": "4712:18:7"
                }
              ]
            },
            "documentation": {
              "id": 1796,
              "nodeType": "StructuredDocumentation",
              "src": "4559:46:7",
              "text": "@notice starts the waitlist minting period"
            },
            "functionSelector": "a839e501",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1799,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1798,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4644:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66073,
                  "src": "4644:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4644:9:7"
              }
            ],
            "name": "startWaitlistMint",
            "nameLocation": "4617:17:7",
            "parameters": {
              "id": 1797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4634:2:7"
            },
            "returnParameters": {
              "id": 1800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4654:0:7"
            },
            "scope": 1834,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1833,
            "nodeType": "FunctionDefinition",
            "src": "4786:125:7",
            "nodes": [],
            "body": {
              "id": 1832,
              "nodeType": "Block",
              "src": "4830:81:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1820,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1542,
                      "src": "4836:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4852:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4836:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1823,
                  "nodeType": "ExpressionStatement",
                  "src": "4836:21:7"
                },
                {
                  "expression": {
                    "id": 1826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1824,
                      "name": "waitlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1544,
                      "src": "4863:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4878:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4863:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1827,
                  "nodeType": "ExpressionStatement",
                  "src": "4863:20:7"
                },
                {
                  "expression": {
                    "id": 1830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1828,
                      "name": "publicMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "4889:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4902:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4889:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1831,
                  "nodeType": "ExpressionStatement",
                  "src": "4889:17:7"
                }
              ]
            },
            "documentation": {
              "id": 1815,
              "nodeType": "StructuredDocumentation",
              "src": "4739:44:7",
              "text": "@notice starts the public minting period"
            },
            "functionSelector": "76c64c62",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1818,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1817,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4820:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66073,
                  "src": "4820:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4820:9:7"
              }
            ],
            "name": "startPublicMint",
            "nameLocation": "4795:15:7",
            "parameters": {
              "id": 1816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4810:2:7"
            },
            "returnParameters": {
              "id": 1819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4830:0:7"
            },
            "scope": 1834,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1515,
              "name": "ERC721",
              "nameLocations": [
                "612:6:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 81138,
              "src": "612:6:7"
            },
            "id": 1516,
            "nodeType": "InheritanceSpecifier",
            "src": "612:6:7"
          },
          {
            "baseName": {
              "id": 1517,
              "name": "Ownable",
              "nameLocations": [
                "620:7:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66154,
              "src": "620:7:7"
            },
            "id": 1518,
            "nodeType": "InheritanceSpecifier",
            "src": "620:7:7"
          }
        ],
        "canonicalName": "CouncilNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1514,
          "nodeType": "StructuredDocumentation",
          "src": "472:116:7",
          "text": " @title CouncilNFT\n @author HNT Labs\n @notice This is the main NFT contract for the council of Zion"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1834,
          66154,
          76270,
          81138
        ],
        "name": "CouncilNFT",
        "nameLocation": "598:10:7",
        "scope": 1835,
        "usedErrors": [
          2419,
          2422,
          2425,
          2428,
          2431
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 7
}
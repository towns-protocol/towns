{
  "compiler": {
    "version": "0.8.19+commit.7dd6d404"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "InvalidParameters",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "NameContainsInvalidCharacters",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "NameLengthInvalid",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "NotAllowed",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "PermissionAlreadyExists",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "SpaceAlreadyRegistered",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "previousAdmin",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "newAdmin",
            "type": "address"
          }
        ],
        "name": "AdminChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "beacon",
            "type": "address"
          }
        ],
        "name": "BeaconUpgraded",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint8",
            "name": "version",
            "type": "uint8"
          }
        ],
        "name": "Initialized",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Paused",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Unpaused",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "implementation",
            "type": "address"
          }
        ],
        "name": "Upgraded",
        "type": "event"
      },
      {
        "inputs": [],
        "name": "GATE_TOKEN_ADDRESS",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "SPACE_IMPLEMENTATION_ADDRESS",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "SPACE_TOKEN_ADDRESS",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "TOKEN_IMPLEMENTATION_ADDRESS",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "USER_IMPLEMENTATION_ADDRESS",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string[]",
            "name": "_permissions",
            "type": "string[]"
          }
        ],
        "name": "addOwnerPermissions",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "spaceName",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "spaceNetworkId",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "spaceMetadata",
            "type": "string"
          },
          {
            "internalType": "string[]",
            "name": "_everyonePermissions",
            "type": "string[]"
          },
          {
            "components": [
              {
                "internalType": "string",
                "name": "roleName",
                "type": "string"
              },
              {
                "internalType": "string[]",
                "name": "permissions",
                "type": "string[]"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "contractAddress",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "quantity",
                    "type": "uint256"
                  },
                  {
                    "internalType": "bool",
                    "name": "isSingleToken",
                    "type": "bool"
                  },
                  {
                    "internalType": "uint256[]",
                    "name": "tokenIds",
                    "type": "uint256[]"
                  }
                ],
                "internalType": "struct DataTypes.ExternalToken[]",
                "name": "tokens",
                "type": "tuple[]"
              },
              {
                "internalType": "address[]",
                "name": "users",
                "type": "address[]"
              }
            ],
            "internalType": "struct DataTypes.CreateSpaceExtraEntitlements",
            "name": "_extraEntitlements",
            "type": "tuple"
          }
        ],
        "name": "createSpace",
        "outputs": [
          {
            "internalType": "address",
            "name": "_spaceAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "gatingEnabled",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getOwnerPermissions",
        "outputs": [
          {
            "internalType": "string[]",
            "name": "",
            "type": "string[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "spaceNetworkId",
            "type": "string"
          }
        ],
        "name": "getSpaceAddressByNetworkId",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "spaceNetworkId",
            "type": "string"
          }
        ],
        "name": "getTokenIdByNetworkId",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_space",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_tokenEntitlement",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_userEntitlement",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_spaceToken",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_gateToken",
            "type": "address"
          },
          {
            "internalType": "string[]",
            "name": "_permissions",
            "type": "string[]"
          }
        ],
        "name": "initialize",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "",
            "type": "bytes"
          }
        ],
        "name": "onERC721Received",
        "outputs": [
          {
            "internalType": "bytes4",
            "name": "",
            "type": "bytes4"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "ownerPermissions",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "paused",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "proxiableUUID",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "renounceOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bool",
            "name": "_gatingEnabled",
            "type": "bool"
          }
        ],
        "name": "setGatingEnabled",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bool",
            "name": "_paused",
            "type": "bool"
          }
        ],
        "name": "setPaused",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_spaceToken",
            "type": "address"
          }
        ],
        "name": "setSpaceToken",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "name": "spaceByHash",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "name": "tokenByHash",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_space",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_tokenEntitlement",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_userEntitlement",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_gateToken",
            "type": "address"
          }
        ],
        "name": "updateImplementations",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newImplementation",
            "type": "address"
          }
        ],
        "name": "upgradeTo",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newImplementation",
            "type": "address"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "upgradeToAndCall",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      }
    ],
    "devdoc": {
      "events": {
        "AdminChanged(address,address)": {
          "details": "Emitted when the admin account has changed."
        },
        "BeaconUpgraded(address)": {
          "details": "Emitted when the beacon is upgraded."
        },
        "Initialized(uint8)": {
          "details": "Triggered when the contract has been initialized or reinitialized."
        },
        "Paused(address)": {
          "details": "Emitted when the pause is triggered by `account`."
        },
        "Unpaused(address)": {
          "details": "Emitted when the pause is lifted by `account`."
        },
        "Upgraded(address)": {
          "details": "Emitted when the implementation is upgraded."
        }
      },
      "kind": "dev",
      "methods": {
        "addOwnerPermissions(string[])": {
          "params": {
            "_permissions": "The permissions to add"
          }
        },
        "constructor": {
          "custom:oz-upgrades-unsafe-allow": "constructor"
        },
        "createSpace(string,string,string,string[],(string,string[],(address,uint256,bool,uint256[])[],address[]))": {
          "details": "The space network id must be unique",
          "params": {
            "_everyonePermissions": "The permissions of the everyone role",
            "_extraEntitlements": "The extra entitlements of the space",
            "spaceMetadata": "The metadata of the space",
            "spaceName": "The name of the space",
            "spaceNetworkId": "The network id of the space"
          },
          "returns": {
            "_spaceAddress": "The address of the new space"
          }
        },
        "onERC721Received(address,address,uint256,bytes)": {
          "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "paused()": {
          "details": "Returns true if the contract is paused, and false otherwise."
        },
        "proxiableUUID()": {
          "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        },
        "upgradeTo(address)": {
          "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
        },
        "upgradeToAndCall(address,bytes)": {
          "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
        }
      },
      "stateVariables": {
        "__gap": {
          "details": "Added to allow future versions to add new variables in case this contract becomes      inherited. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "addOwnerPermissions(string[])": {
          "notice": "Adds permissions to the owner role at space creation"
        },
        "createSpace(string,string,string,string[],(string,string[],(address,uint256,bool,uint256[])[],address[]))": {
          "notice": "Creates a new space"
        },
        "getOwnerPermissions()": {
          "notice": "Returns the initial owner permissions at space creation"
        },
        "getSpaceAddressByNetworkId(string)": {
          "notice": "Returns space address by network id"
        },
        "getTokenIdByNetworkId(string)": {
          "notice": "Returns token id by network id"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/src/core/spaces/SpaceFactory.sol": "SpaceFactory"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@openzeppelin/=lib/openzeppelin-contracts/",
      ":ERC721A/=lib/ERC721A/contracts/",
      ":contracts/=contracts/",
      ":council/=lib/council/contracts/",
      ":ds-test/=lib/ds-test/src/",
      ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
      ":forge-std/=lib/forge-std/src/",
      ":murky/=lib/murky/src/",
      ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
      ":operator-filter-registry/=lib/operator-filter-registry/",
      ":solmate/=lib/solmate/src/"
    ]
  },
  "sources": {
    "contracts/src/core/base/ERC721Base.sol": {
      "keccak256": "0xe9d066bd179b3018e5c767d5cb60069b6901755c44df29cf46c02a8bd74f500c",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://c99aa5111d7dea0ec1873544dd62285235b2c4ee59678efa7a7f1238ff134a04",
        "dweb:/ipfs/QmRqN7C9J7TPjnY5JBh5mBFoZwpSvM2JwB3BhhJPtBVobJ"
      ]
    },
    "contracts/src/core/spaces/Space.sol": {
      "keccak256": "0x00edb3c55538db00ac45095cda2660cea4e321730c463ae2bf2d18d1068c8647",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://95cf6735baa49e27bba602d37a944dd9558dd6149c2560b905ba38044944f0b8",
        "dweb:/ipfs/QmTcSLst3f52AJ3ZaTn9WcnkwbjwjVVuNVm3GAUHNRWy9P"
      ]
    },
    "contracts/src/core/spaces/SpaceFactory.sol": {
      "keccak256": "0x58e802679dda0a492a96d248323f2542ad020736e5e2900b73f389f5edf7d9af",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://3a7ad610e4030140788d7bb8a74a2dec6551ab9f5e1c630e7c600fe526cc51a7",
        "dweb:/ipfs/QmXwPs7cJ9aHd63kzJcPhbUBZwmbvbz1xiSfJHme67chyX"
      ]
    },
    "contracts/src/core/spaces/entitlements/TokenEntitlement.sol": {
      "keccak256": "0x53166d43bc67df3c27a401688702a666076c9c6584c23a02d164792ebf1a10e7",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://5bda2833c075b1e7859d55729a1a0f55f517271bd1c42802a396551b668f3ba5",
        "dweb:/ipfs/QmVSZtkyAiPpZNRRme9wB1h5Mvqn7Xmtk8Lmw9DvY6SSCN"
      ]
    },
    "contracts/src/core/spaces/entitlements/UserEntitlement.sol": {
      "keccak256": "0xa27c21152dc8a8918513088462b6e48c862db1e12abf4754017caa98637d611d",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://55e3af3391e22500f1b2be90e0ad0a0c7ab99fbe24d25da3006a550ddcbe2735",
        "dweb:/ipfs/Qme21VjuA9KRJSiqquMJux8KWfkifX6zoKZXdTo6AZtgKn"
      ]
    },
    "contracts/src/core/tokens/TownOwner.sol": {
      "keccak256": "0x2361fff718e8b549405b1ba52b1f809a60e9e1a56db5845a69db8729a3de573c",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://dd056a629d9f11bfd0ed31b93987083f42ec06d045e0cd69beab549be8155862",
        "dweb:/ipfs/QmbFZqhgbwe6GbKTuMAK8bPPEmtnyzQMm87ir2F8hYRzzX"
      ]
    },
    "contracts/src/interfaces/IEntitlement.sol": {
      "keccak256": "0xf2902303ba01ca2f9e5e0e9c947de3958f92f67a3301e54236472862a39388df",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://99a5e5bfef7a2249c272ac6fc9b5b95a7b14a194e34b2a5d92d3affb76cadbf2",
        "dweb:/ipfs/QmSPdcBPLQ6hgX7s5zfuWkRqSErfmgrX4wyvm5pQ61w88W"
      ]
    },
    "contracts/src/interfaces/ISpace.sol": {
      "keccak256": "0x6adbf7a1aed2a1d2524741ede2955288263ec249220bd1165df7597e166d966e",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://12d1d6a18c3ba048528cbdcb5c63aee805b2ae83f66c5e0936d9c9ad2136acaa",
        "dweb:/ipfs/Qmbd85p3KjbtM2q5adjtsenCUVHiCcSGLRmL2mnBweKmF5"
      ]
    },
    "contracts/src/interfaces/ISpaceFactory.sol": {
      "keccak256": "0xd9891b2665ccc28db7cd375afda72e7591e75ec5bef4cf83b90f14d92148e4e9",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://cf947fe789d68bdc019d4e0cf017c6f42539c7e649a6ac0af03cea0998c0df7c",
        "dweb:/ipfs/Qme7tS3A7R5WFiMD2dBsdH1FGBn5sGC22DArNT7PQB9Gms"
      ]
    },
    "contracts/src/libraries/DataTypes.sol": {
      "keccak256": "0x01634666eef1a193d7ce2bc1840dd3424c0e86f3e6b500ea3d5244e6d230785b",
      "license": "Apache-20",
      "urls": [
        "bzz-raw://66f2c398430ae10384660520d872851bd99dc35685615632dd07e7e55761cbdc",
        "dweb:/ipfs/QmQhjnuzDzC14QtqiiXgo2f9myxUzUg5nCbV5mdQAqenyY"
      ]
    },
    "contracts/src/libraries/Errors.sol": {
      "keccak256": "0x2d478c9688870f6780a19ea34d73db957f194702cbc3c4f4707f9825ba502cf1",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://2d777ea8d3fa5ce20b9cc36fc5194d7d129dc7b2ece31d060087f797628566fa",
        "dweb:/ipfs/QmZ1KjfrYZ9A2FTUJkYs3rezxFrsUQWZySJRBL6RHQoyQF"
      ]
    },
    "contracts/src/libraries/Events.sol": {
      "keccak256": "0xaab06310ec51a878125595216b6c1b72fa26096859c8297ed4d19cc91b6b4701",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://a26b81e03bae742ca30dfa0af4d8b3c2017798829f6a75ecca3550bb2cc37c46",
        "dweb:/ipfs/QmWsUqtx3frKovXz9YQRSjxPVWUp8BzmRxY8s4u3hQbzzz"
      ]
    },
    "contracts/src/libraries/Permissions.sol": {
      "keccak256": "0xf3c61d5c68e9d55d82c1d2b888881fc08211ee9c7b1ef579458f043965265399",
      "license": "UNLICENSED",
      "urls": [
        "bzz-raw://4b5a2696f26adaa6f9e919ccbde2a2cfb4a17ae7c6000a9e965496b8602b5a1a",
        "dweb:/ipfs/QmTS1uQ82B5i9C1ZJjU8jHSMU6vrRKDDhvcyrENmc9JMU1"
      ]
    },
    "contracts/src/libraries/Utils.sol": {
      "keccak256": "0xf97297476d7fb903873593803aa8d4be3e300c02b83bb707e5a99e07d60786f0",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://71a549a9281a0a60e37f221d4ae0fdb6da9a8994d9c5a274b343585c88916af9",
        "dweb:/ipfs/QmTr6J7qqkF8xiZkJSt8e812r4srdmXQetZk6jTgJbcasJ"
      ]
    },
    "contracts/src/misc/BatchMintMetadata.sol": {
      "keccak256": "0xc31b684a5468ab93b62237c8ad3034f24c99d911611c853adf580e822c412633",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://7483fbc43177661d106fc6d10a22fcbf2d639d64c97b80347daf9c0c96d2572c",
        "dweb:/ipfs/Qmd8juQGEgsbrhqPiz8LaSkvtKho1z5YtDjeANXmBpSXHo"
      ]
    },
    "contracts/src/misc/Metadata.sol": {
      "keccak256": "0xc1530022c5ebb294986fc963c97e12edf7d3a83a6759e2f5942b61c09deaa775",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://ce76d3926fa45d1a8e97400dbffa9f96803a6df18b58ca9062769cdf87762c73",
        "dweb:/ipfs/Qmcpz7ZEsZMcF4CwFooJnCjZx5nxiXdzTtkmaXdKnKVfds"
      ]
    },
    "contracts/src/misc/MultiCaller.sol": {
      "keccak256": "0x3441542d90123c265e94b948a4215418c4a5f8a8e23bca3ba929671ef6bc8246",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://fab07fcf9c590926072868d314ccc453eece66a02a6fd5cba7aceed36b4ac33e",
        "dweb:/ipfs/QmR29MwNCevmsa13kVoLDUf5LFCJw1SnY6VuB4f54TC7Ly"
      ]
    },
    "contracts/src/misc/Royalty.sol": {
      "keccak256": "0x5e1e58e7c440a4875ff1b987e6a00e769ef0c975478211d1fa54588c09f36693",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://5e7b9e94508e23dca23778e635f72ea6f5db2263202a0e35d5015260815fb970",
        "dweb:/ipfs/QmPNYC2KZd8hEoBqSHp2QPxPiDAGqRxdWiiLAeVN5xZgUK"
      ]
    },
    "contracts/src/misc/interfaces/IMetadata.sol": {
      "keccak256": "0xd16cdbf4362883382409025e41760f2382470cabada7fe0ce5fe165855debf52",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://0c3424b5243f243c7ea9d1760a99636ef8587beab81a161eae31ad65be66b702",
        "dweb:/ipfs/QmUMsXbkA667dBhTwjmPE8VtLQCWeFWHqcrTmeAuWqw5Dn"
      ]
    },
    "contracts/src/misc/interfaces/IRoyalty.sol": {
      "keccak256": "0xd30f1ed1064fe4ee19f77c5a5e6a28a17875d36aac843b9e6eb6af00a5b504eb",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://8aa0dd8029159199f4daa1d01b3d16d94b56683bd064c42532bb1ba964023894",
        "dweb:/ipfs/QmbtXPTreUbKVXnAuDzd7wRrjtfPAYLuBQTyca9wpzEU6f"
      ]
    },
    "lib/ERC721A/contracts/ERC721A.sol": {
      "keccak256": "0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c",
      "license": "MIT",
      "urls": [
        "bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809",
        "dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy"
      ]
    },
    "lib/ERC721A/contracts/IERC721A.sol": {
      "keccak256": "0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad",
      "license": "MIT",
      "urls": [
        "bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9",
        "dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
      "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
      "license": "MIT",
      "urls": [
        "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
        "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
      "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
      "license": "MIT",
      "urls": [
        "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
        "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
      "keccak256": "0x315887e846f1e5f8d8fa535a229d318bb9290aaa69485117f1ee8a9a6b3be823",
      "license": "MIT",
      "urls": [
        "bzz-raw://29dda00da6d269685b555e710e4abf1c3eb6d00c15b888a7880a2f8dd3c4fdc2",
        "dweb:/ipfs/QmSqcjtdECygtT1Gy7uEo42x8542srpgGEeKKHfcnQqXgn"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
      "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
      "license": "MIT",
      "urls": [
        "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
        "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
      "keccak256": "0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549",
      "license": "MIT",
      "urls": [
        "bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0",
        "dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
      "keccak256": "0xcf6837f68b5376c07f7b5130dc8de39f00f357f119113a82a15229bf2b96fdc5",
      "license": "MIT",
      "urls": [
        "bzz-raw://6be1e3e05f79a714c08a446a994dba2939203092d7aa97302d7b2ab157b437fb",
        "dweb:/ipfs/QmdgBbHNijVgApRQ9UM17qds6QdhTgXxKHUoLAswA6VNyH"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol": {
      "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
      "license": "MIT",
      "urls": [
        "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
        "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
      "keccak256": "0xab6029e025f8da00444f741cdf6714301865d302450d24e7e8493cf27c709e2f",
      "license": "MIT",
      "urls": [
        "bzz-raw://0e8109ef362b9426afb526a9280cb2de559c50fa2649b03b2cbc0ce4a7f9826c",
        "dweb:/ipfs/QmcC2XjeAHw6rgTywXDFNZt6qGv4ddTv6EhdkxYFXEoMAk"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
      "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
      "license": "MIT",
      "urls": [
        "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
        "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol": {
      "keccak256": "0xb7f90ab8af7dae0bd4acfa088f9e606ea039110face097ca7c8beef563f71e90",
      "license": "MIT",
      "urls": [
        "bzz-raw://e980a0ad8d2f81f38d378994a80d46dbb0c46efed9799d6272f69b177e1f0f3c",
        "dweb:/ipfs/QmdgyvytrBV9RC6v8ojAnU9nFE1zPicdbGqHGskbopyHyn"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
      "keccak256": "0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0",
      "license": "MIT",
      "urls": [
        "bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de",
        "dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
      "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
      "license": "MIT",
      "urls": [
        "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
        "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
      "keccak256": "0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a",
      "license": "MIT",
      "urls": [
        "bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3",
        "dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
      "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
      "license": "MIT",
      "urls": [
        "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
        "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
      ]
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
      "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
      "license": "MIT",
      "urls": [
        "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
        "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
      ]
    },
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
      "license": "MIT",
      "urls": [
        "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
        "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
      ]
    },
    "lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol": {
      "keccak256": "0x4ee5b7d227cbf6132d24c73b7cf523959db8f136e2f9fc921a3b45cab4149657",
      "license": "MIT",
      "urls": [
        "bzz-raw://f53ac91349e07828eafc35b449828dbdeb4db211f19fcbfe03b67bc4345726c2",
        "dweb:/ipfs/Qmc6PAijgqMWU62uQzgk9TW7uSxY2Pj676Jw5ta8i4r4gb"
      ]
    },
    "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
      "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
      "license": "MIT",
      "urls": [
        "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
        "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
      ]
    },
    "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
      "keccak256": "0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d",
      "license": "MIT",
      "urls": [
        "bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5",
        "dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn"
      ]
    },
    "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
      "keccak256": "0xca0e780718bf80299ebf00e6852b6cda81a476e35bb39a83029aee03080c7bed",
      "license": "MIT",
      "urls": [
        "bzz-raw://5cd9ccfa0e1c1b26b2fb1b0e279bdd5fe497a6b23266540ead345c275f3e190a",
        "dweb:/ipfs/QmRBSSoUAuWVE3AdbaDcCFwde3fYb1i4DGYWmquimNjGkp"
      ]
    },
    "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
      "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
      "license": "MIT",
      "urls": [
        "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
        "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
      ]
    },
    "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
      "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
      "license": "MIT",
      "urls": [
        "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
        "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
      ]
    },
    "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
      "keccak256": "0x622b1e5ba6b160cfccda15953f5040355fbd91428247decde191eb978eaafc39",
      "license": "MIT",
      "urls": [
        "bzz-raw://a4db206433c87f5f161267e9d6908f0762c59a367c72c47e8676e2613791fd52",
        "dweb:/ipfs/QmbDmK1NGJqZyaYEmz8S1gGLCPyRAqYciwamMtk8thshEW"
      ]
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
      "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
      "license": "MIT",
      "urls": [
        "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
        "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
      ]
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
      "keccak256": "0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886",
      "license": "MIT",
      "urls": [
        "bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a",
        "dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
      "keccak256": "0x2e53602b96c1bf97c731ed3e2a981b4f85e23a9410a5ebd36e549a4cc93340dc",
      "license": "MIT",
      "urls": [
        "bzz-raw://523f47b3ecc6d4e47b4b998d3356199988eef8a42a10dff5a3660d5f9e76cc71",
        "dweb:/ipfs/QmRLH8CNvDsuLzNCjsbpLM3RHD9he5ESXroYoDT3tpaTCA"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
      "license": "MIT",
      "urls": [
        "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
        "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
      "keccak256": "0x2cd251d89d8a49e146e681d44a4dd126924a3265333259a528dcfd76150df8fb",
      "license": "MIT",
      "urls": [
        "bzz-raw://da3cb31df217eb7533f3a1e651486e62f2631877d88f4cf1df4844c8ae185079",
        "dweb:/ipfs/QmWr39ZLjM9USWsm5ewzGWJCRdMS8FtdkWPg7dGJt26zPr"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
      "license": "MIT",
      "urls": [
        "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
        "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
      "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
      "license": "MIT",
      "urls": [
        "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
        "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
      "license": "MIT",
      "urls": [
        "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
        "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "keccak256": "0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41",
      "license": "MIT",
      "urls": [
        "bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903",
        "dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
      "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
      "license": "MIT",
      "urls": [
        "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
        "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
      ]
    },
    "lib/operator-filter-registry/src/DefaultOperatorFilterer.sol": {
      "keccak256": "0xf65af8e5c2d6a8719cdbc5aa0e6923e1701bdc59f77ff0101b38d9d03d76d65b",
      "license": "MIT",
      "urls": [
        "bzz-raw://8d3ea78dfa813244258d9192a05a3ae13f46880647da5a4c026c8231f38e2507",
        "dweb:/ipfs/QmeE4ycD8bw1uj7o33L48kiXT7YZ7RkegaNWb24nQ7MLgc"
      ]
    },
    "lib/operator-filter-registry/src/IOperatorFilterRegistry.sol": {
      "keccak256": "0x56ad8df389958dbf89cc30196e5f37779ee87d2e8b551d84a8d0a696e1c69937",
      "license": "MIT",
      "urls": [
        "bzz-raw://7ca12c8b2d8a6c0ef1ba2204be8628c1443d9371c37aa619a3cc485267b6a30c",
        "dweb:/ipfs/QmaKXZeCR6kPRXCYo6NZJFnbBEa4eWwBKRYAKyY87vBrtc"
      ]
    },
    "lib/operator-filter-registry/src/OperatorFilterer.sol": {
      "keccak256": "0xa09fc95700d92846d0809a2dc39ca36eb4fcf48642fc83c3d1b5ebe62f957256",
      "license": "MIT",
      "urls": [
        "bzz-raw://adf63229f1f5484c27ca8d86cf73af5244bf163c8e77cc193701f359c9bdb175",
        "dweb:/ipfs/QmVZPr3BM9CjwLyxHjdjbqBUUSS2Vzr1WRktadgV9UDqvq"
      ]
    },
    "lib/operator-filter-registry/src/lib/Constants.sol": {
      "keccak256": "0xd7972e1e9ed993e5084ba985a22ea7bd46d48eb247a39b4357ab59d1dc368584",
      "license": "MIT",
      "urls": [
        "bzz-raw://56b9b55dd1725b6b7debf91f8b83bf1441deb10269368e4898cb58109143e582",
        "dweb:/ipfs/QmT5s7qASkza5kXp4nsYixohghGy1RN3iGhFmAFGmQ4dad"
      ]
    }
  },
  "version": 1
}
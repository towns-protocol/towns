/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Zioneer, ZioneerInterface } from "../Zioneer";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentTokenURI",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "TOTAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedAddressesList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allowedAddressesListLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allow",
        type: "bool",
      },
    ],
    name: "setAllowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintReward",
        type: "uint256",
      },
    ],
    name: "setMintReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405267016345785d8a0000600a553480156200001d57600080fd5b50604051620020a0380380620020a08339810160408190526200004091620001b4565b82826000620000508382620002d4565b5060016200005f8282620002d4565b5050506200007c620000766200009960201b60201c565b6200009d565b600160075560086200008f8282620002d4565b50505050620003a0565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011757600080fd5b81516001600160401b0380821115620001345762000134620000ef565b604051601f8301601f19908116603f011681019082821181831017156200015f576200015f620000ef565b816040528381526020925086838588010111156200017c57600080fd5b600091505b83821015620001a0578582018301518183018401529082019062000181565b600093810190920192909252949350505050565b600080600060608486031215620001ca57600080fd5b83516001600160401b0380821115620001e257600080fd5b620001f08783880162000105565b945060208601519150808211156200020757600080fd5b620002158783880162000105565b935060408601519150808211156200022c57600080fd5b506200023b8682870162000105565b9150509250925092565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002cf57600081815260208120601f850160051c81016020861015620002aa5750805b601f850160051c820191505b81811015620002cb57828155600101620002b6565b5050505b505050565b81516001600160401b03811115620002f057620002f0620000ef565b620003088162000301845462000245565b8462000281565b602080601f831160018114620003405760008415620003275750858301515b600019600386901b1c1916600185901b178555620002cb565b600085815260208120601f198616915b82811015620003715788860151825594840194600190910190840162000350565b5085821015620003905787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611cf080620003b06000396000f3fe60806040526004361061018a5760003560e01c806370a08231116100e05780639bbaa95811610084578063c87b56dd11610061578063c87b56dd14610464578063d63a8e1114610484578063e985e9c5146104b4578063f2fde38b146104d457005b80639bbaa9581461040f578063a22cb46514610424578063b88d4fde1461044457005b806380e801ba116100bd57806380e801ba146103a65780638da5cb5b146103c6578063902d55a5146103e457806395d89b41146103fa57005b806370a0823114610351578063715018a614610371578063755edd171461038657005b806323b872dd116101475780634697f05d116101245780634697f05d146102dc57806351cff8d9146102fc5780636352211e1461031c5780636c0360eb1461033c57005b806323b872dd1461027c57806326a763dd1461029c57806342842e0e146102bc57005b80629a9b7b1461019357806301ffc9a7146101bc57806306fdde03146101ec578063081812fc1461020e578063095ea7b314610246578063174f57af1461026657005b3661019157005b005b34801561019f57600080fd5b506101a960095481565b6040519081526020015b60405180910390f35b3480156101c857600080fd5b506101dc6101d7366004611762565b6104f4565b60405190151581526020016101b3565b3480156101f857600080fd5b50610201610546565b6040516101b391906117d6565b34801561021a57600080fd5b5061022e6102293660046117e9565b6105d8565b6040516001600160a01b0390911681526020016101b3565b34801561025257600080fd5b50610191610261366004611819565b6105ff565b34801561027257600080fd5b506101a9600a5481565b34801561028857600080fd5b50610191610297366004611843565b610719565b3480156102a857600080fd5b5061022e6102b73660046117e9565b61074a565b3480156102c857600080fd5b506101916102d7366004611843565b610774565b3480156102e857600080fd5b506101916102f736600461187f565b61078f565b34801561030857600080fd5b506101916103173660046118bb565b61096c565b34801561032857600080fd5b5061022e6103373660046117e9565b610981565b34801561034857600080fd5b506102016109e1565b34801561035d57600080fd5b506101a961036c3660046118bb565b610a6f565b34801561037d57600080fd5b50610191610af5565b34801561039257600080fd5b506101a96103a13660046118bb565b610b09565b3480156103b257600080fd5b506101916103c13660046117e9565b610bd2565b3480156103d257600080fd5b506006546001600160a01b031661022e565b3480156103f057600080fd5b506101a961271081565b34801561040657600080fd5b50610201610bdf565b34801561041b57600080fd5b50600c546101a9565b34801561043057600080fd5b5061019161043f36600461187f565b610bee565b34801561045057600080fd5b5061019161045f3660046118ec565b610bf9565b34801561047057600080fd5b5061020161047f3660046117e9565b610c31565b34801561049057600080fd5b506101dc61049f3660046118bb565b600b6020526000908152604090205460ff1681565b3480156104c057600080fd5b506101dc6104cf3660046119c8565b610cc1565b3480156104e057600080fd5b506101916104ef3660046118bb565b610cef565b60006001600160e01b031982166380ac58cd60e01b148061052557506001600160e01b03198216635b5e139f60e01b145b8061054057506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610555906119fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610581906119fb565b80156105ce5780601f106105a3576101008083540402835291602001916105ce565b820191906000526020600020905b8154815290600101906020018083116105b157829003601f168201915b5050505050905090565b60006105e382610d65565b506000908152600460205260409020546001600160a01b031690565b600061060a82610981565b9050806001600160a01b0316836001600160a01b03160361067c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061069857506106988133610cc1565b61070a5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610673565b6107148383610dc4565b505050565b6107233382610e32565b61073f5760405162461bcd60e51b815260040161067390611a35565b610714838383610e91565b600c818154811061075a57600080fd5b6000918252602090912001546001600160a01b0316905081565b61071483838360405180602001604052806000815250610bf9565b610797611002565b6001600160a01b0382166107be57604051631eb49d6d60e11b815260040160405180910390fd5b6001600160a01b0382166000908152600b602052604090205460ff16151581151514610968576001600160a01b0382166000908152600b60205260409020805460ff1916821580159190911790915561086057600c80546001810182556000919091527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180546001600160a01b0319166001600160a01b0384161790555050565b60005b600c5481101561071457826001600160a01b0316600c828154811061088a5761088a611a82565b6000918252602090912001546001600160a01b03160361095657600c80546108b490600190611aae565b815481106108c4576108c4611a82565b600091825260209091200154600c80546001600160a01b0390921691839081106108f0576108f0611a82565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550600c80548061092f5761092f611ac1565b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b8061096081611ad7565b915050610863565b5050565b610974611002565b61097e814761105c565b50565b6000818152600260205260408120546001600160a01b0316806105405760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610673565b600880546109ee906119fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1a906119fb565b8015610a675780601f10610a3c57610100808354040283529160200191610a67565b820191906000526020600020905b815481529060010190602001808311610a4a57829003601f168201915b505050505081565b60006001600160a01b038216610ad95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610673565b506001600160a01b031660009081526003602052604090205490565b610afd611002565b610b076000611113565b565b336000908152600b602052604081205460ff16610b3957604051631eb49d6d60e11b815260040160405180910390fd5b610b41611165565b6001600160a01b038216610b6857604051631eb49d6d60e11b815260040160405180910390fd5b6000600960008154610b7990611ad7565b91829055509050612710811115610ba35760405163d05cb60960e01b815260040160405180910390fd5b610bad83826111be565b600a5415610bc157610bc183600a5461105c565b9050610bcd6001600755565b919050565b610bda611002565b600a55565b606060018054610555906119fb565b610968338383611357565b610c033383610e32565b610c1f5760405162461bcd60e51b815260040161067390611a35565b610c2b84848484611425565b50505050565b60606000610c3e83610981565b6001600160a01b031603610c655760405163d872946b60e01b815260040160405180910390fd5b600060088054610c74906119fb565b905011610c905760405180602001604052806000815250610540565b6008610c9b83611458565b604051602001610cac929190611b0c565b60405160208183030381529060405292915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610cf7611002565b6001600160a01b038116610d5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610673565b61097e81611113565b6000818152600260205260409020546001600160a01b031661097e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610673565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610df982610981565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610e3e83610981565b9050806001600160a01b0316846001600160a01b03161480610e655750610e658185610cc1565b80610e895750836001600160a01b0316610e7e846105d8565b6001600160a01b0316145b949350505050565b826001600160a01b0316610ea482610981565b6001600160a01b031614610eca5760405162461bcd60e51b815260040161067390611bb6565b6001600160a01b038216610f2c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610673565b610f3983838360016114eb565b826001600160a01b0316610f4c82610981565b6001600160a01b031614610f725760405162461bcd60e51b815260040161067390611bb6565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b03163314610b075760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610673565b4781111561107d57604051631e9acf1760e31b815260040160405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146110ca576040519150601f19603f3d011682016040523d82523d6000602084013e6110cf565b606091505b50509050806107145760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606401610673565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6002600754036111b75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610673565b6002600755565b6001600160a01b0382166112145760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610673565b6000818152600260205260409020546001600160a01b0316156112795760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610673565b6112876000838360016114eb565b6000818152600260205260409020546001600160a01b0316156112ec5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610673565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b816001600160a01b0316836001600160a01b0316036113b85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610673565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611430848484610e91565b61143c84848484611573565b610c2b5760405162461bcd60e51b815260040161067390611bfb565b6060600061146583611674565b600101905060008167ffffffffffffffff811115611485576114856118d6565b6040519080825280601f01601f1916602001820160405280156114af576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846114b957509392505050565b6001811115610c2b576001600160a01b03841615611531576001600160a01b0384166000908152600360205260408120805483929061152b908490611aae565b90915550505b6001600160a01b03831615610c2b576001600160a01b03831660009081526003602052604081208054839290611568908490611c4d565b909155505050505050565b60006001600160a01b0384163b1561166957604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906115b7903390899088908890600401611c60565b6020604051808303816000875af19250505080156115f2575060408051601f3d908101601f191682019092526115ef91810190611c9d565b60015b61164f573d808015611620576040519150601f19603f3d011682016040523d82523d6000602084013e611625565b606091505b5080516000036116475760405162461bcd60e51b815260040161067390611bfb565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e89565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106116b35772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106116df576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106116fd57662386f26fc10000830492506010015b6305f5e1008310611715576305f5e100830492506008015b612710831061172957612710830492506004015b6064831061173b576064830492506002015b600a83106105405760010192915050565b6001600160e01b03198116811461097e57600080fd5b60006020828403121561177457600080fd5b813561177f8161174c565b9392505050565b60005b838110156117a1578181015183820152602001611789565b50506000910152565b600081518084526117c2816020860160208601611786565b601f01601f19169290920160200192915050565b60208152600061177f60208301846117aa565b6000602082840312156117fb57600080fd5b5035919050565b80356001600160a01b0381168114610bcd57600080fd5b6000806040838503121561182c57600080fd5b61183583611802565b946020939093013593505050565b60008060006060848603121561185857600080fd5b61186184611802565b925061186f60208501611802565b9150604084013590509250925092565b6000806040838503121561189257600080fd5b61189b83611802565b9150602083013580151581146118b057600080fd5b809150509250929050565b6000602082840312156118cd57600080fd5b61177f82611802565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561190257600080fd5b61190b85611802565b935061191960208601611802565b925060408501359150606085013567ffffffffffffffff8082111561193d57600080fd5b818701915087601f83011261195157600080fd5b813581811115611963576119636118d6565b604051601f8201601f19908116603f0116810190838211818310171561198b5761198b6118d6565b816040528281528a60208487010111156119a457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156119db57600080fd5b6119e483611802565b91506119f260208401611802565b90509250929050565b600181811c90821680611a0f57607f821691505b602082108103611a2f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561054057610540611a98565b634e487b7160e01b600052603160045260246000fd5b600060018201611ae957611ae9611a98565b5060010190565b60008151611b02818560208601611786565b9290920192915050565b600080845481600182811c915080831680611b2857607f831692505b60208084108203611b4757634e487b7160e01b86526022600452602486fd5b818015611b5b5760018114611b7057611b9d565b60ff1986168952841515850289019650611b9d565b60008b81526020902060005b86811015611b955781548b820152908501908301611b7c565b505084890196505b505050505050611bad8185611af0565b95945050505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b8082018082111561054057610540611a98565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c93908301846117aa565b9695505050505050565b600060208284031215611caf57600080fd5b815161177f8161174c56fea26469706673582212208e80abfbf12995785fc8c584c4a078664337e06e769ee0182512325fdc67d82064736f6c63430008110033";

type ZioneerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZioneerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Zioneer__factory extends ContractFactory {
  constructor(...args: ZioneerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    baseURI_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Zioneer> {
    return super.deploy(
      name_,
      symbol_,
      baseURI_,
      overrides || {}
    ) as Promise<Zioneer>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    baseURI_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      baseURI_,
      overrides || {}
    );
  }
  override attach(address: string): Zioneer {
    return super.attach(address) as Zioneer;
  }
  override connect(signer: Signer): Zioneer__factory {
    return super.connect(signer) as Zioneer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZioneerInterface {
    return new utils.Interface(_abi) as ZioneerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Zioneer {
    return new Contract(address, _abi, signerOrProvider) as Zioneer;
  }
}

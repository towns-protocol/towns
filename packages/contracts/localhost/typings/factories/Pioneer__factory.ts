/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Pioneer, PioneerInterface } from "../Pioneer";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentTokenURI",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "allow",
        type: "bool",
      },
    ],
    name: "SetAllowed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "TOTAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allow",
        type: "bool",
      },
    ],
    name: "setAllowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintReward",
        type: "uint256",
      },
    ],
    name: "setMintReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405267016345785d8a0000600a553480156200001d57600080fd5b506040516200209a3803806200209a8339810160408190526200004091620001cf565b82826000620000508382620002ef565b5060016200005f8282620002ef565b5050506200007c62000076620000b460201b60201c565b620000b8565b600160075560086200008f8282620002ef565b5050336000908152600b60205260409020805460ff1916600117905550620003bb9050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013257600080fd5b81516001600160401b03808211156200014f576200014f6200010a565b604051601f8301601f19908116603f011681019082821181831017156200017a576200017a6200010a565b816040528381526020925086838588010111156200019757600080fd5b600091505b83821015620001bb57858201830151818301840152908201906200019c565b600093810190920192909252949350505050565b600080600060608486031215620001e557600080fd5b83516001600160401b0380821115620001fd57600080fd5b6200020b8783880162000120565b945060208601519150808211156200022257600080fd5b620002308783880162000120565b935060408601519150808211156200024757600080fd5b50620002568682870162000120565b9150509250925092565b600181811c908216806200027557607f821691505b6020821081036200029657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ea57600081815260208120601f850160051c81016020861015620002c55750805b601f850160051c820191505b81811015620002e657828155600101620002d1565b5050505b505050565b81516001600160401b038111156200030b576200030b6200010a565b62000323816200031c845462000260565b846200029c565b602080601f8311600181146200035b5760008415620003425750858301515b600019600386901b1c1916600185901b178555620002e6565b600085815260208120601f198616915b828110156200038c578886015182559484019460019091019084016200036b565b5085821015620003ab5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611ccf80620003cb6000396000f3fe6080604052600436106101725760003560e01c806370a08231116100c857806395d89b4111610084578063c87b56dd11610061578063c87b56dd14610437578063d63a8e1114610457578063e985e9c514610487578063f2fde38b146104a757005b806395d89b41146103e2578063a22cb465146103f7578063b88d4fde1461041757005b806370a0823114610339578063715018a614610359578063755edd171461036e57806380e801ba1461038e5780638da5cb5b146103ae578063902d55a5146103cc57005b806323b872dd1161012f57806351cff8d91161010c57806351cff8d9146102c457806355f804b3146102e45780636352211e146103045780636c0360eb1461032457005b806323b872dd1461026457806342842e0e146102845780634697f05d146102a457005b80629a9b7b1461017b57806301ffc9a7146101a457806306fdde03146101d4578063081812fc146101f6578063095ea7b31461022e578063174f57af1461024e57005b3661017957005b005b34801561018757600080fd5b5061019160095481565b6040519081526020015b60405180910390f35b3480156101b057600080fd5b506101c46101bf36600461163f565b6104c7565b604051901515815260200161019b565b3480156101e057600080fd5b506101e9610519565b60405161019b91906116b3565b34801561020257600080fd5b506102166102113660046116c6565b6105ab565b6040516001600160a01b03909116815260200161019b565b34801561023a57600080fd5b506101796102493660046116f6565b6105d2565b34801561025a57600080fd5b50610191600a5481565b34801561027057600080fd5b5061017961027f366004611720565b6106ec565b34801561029057600080fd5b5061017961029f366004611720565b61071d565b3480156102b057600080fd5b506101796102bf36600461175c565b610738565b3480156102d057600080fd5b506101796102df366004611798565b610807565b3480156102f057600080fd5b506101796102ff36600461183f565b61081c565b34801561031057600080fd5b5061021661031f3660046116c6565b610834565b34801561033057600080fd5b506101e9610894565b34801561034557600080fd5b50610191610354366004611798565b610922565b34801561036557600080fd5b506101796109a8565b34801561037a57600080fd5b50610191610389366004611798565b6109bc565b34801561039a57600080fd5b506101796103a93660046116c6565b610aaf565b3480156103ba57600080fd5b506006546001600160a01b0316610216565b3480156103d857600080fd5b5061019161271081565b3480156103ee57600080fd5b506101e9610abc565b34801561040357600080fd5b5061017961041236600461175c565b610acb565b34801561042357600080fd5b50610179610432366004611888565b610ad6565b34801561044357600080fd5b506101e96104523660046116c6565b610b0e565b34801561046357600080fd5b506101c4610472366004611798565b600b6020526000908152604090205460ff1681565b34801561049357600080fd5b506101c46104a2366004611904565b610b9e565b3480156104b357600080fd5b506101796104c2366004611798565b610bcc565b60006001600160e01b031982166380ac58cd60e01b14806104f857506001600160e01b03198216635b5e139f60e01b145b8061051357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461052890611937565b80601f016020809104026020016040519081016040528092919081815260200182805461055490611937565b80156105a15780601f10610576576101008083540402835291602001916105a1565b820191906000526020600020905b81548152906001019060200180831161058457829003601f168201915b5050505050905090565b60006105b682610c42565b506000908152600460205260409020546001600160a01b031690565b60006105dd82610834565b9050806001600160a01b0316836001600160a01b03160361064f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061066b575061066b8133610b9e565b6106dd5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610646565b6106e78383610ca1565b505050565b6106f63382610d0f565b6107125760405162461bcd60e51b815260040161064690611971565b6106e7838383610d6e565b6106e783838360405180602001604052806000815250610ad6565b610740610edf565b6001600160a01b03821661076757604051631eb49d6d60e11b815260040160405180910390fd5b6001600160a01b0382166000908152600b602052604090205481151560ff9091161515036107a857604051636a4648d760e01b815260040160405180910390fd5b6001600160a01b0382166000818152600b6020908152604091829020805460ff191685151590811790915591519182527f91d426a6b868d3a9f12f044bfd4dfb1df6e3e050a71a34b090d8ce43a5023c29910160405180910390a25050565b61080f610edf565b6108198147610f39565b50565b610824610edf565b60086108308282611a0c565b5050565b6000818152600260205260408120546001600160a01b0316806105135760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610646565b600880546108a190611937565b80601f01602080910402602001604051908101604052809291908181526020018280546108cd90611937565b801561091a5780601f106108ef5761010080835404028352916020019161091a565b820191906000526020600020905b8154815290600101906020018083116108fd57829003601f168201915b505050505081565b60006001600160a01b03821661098c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610646565b506001600160a01b031660009081526003602052604090205490565b6109b0610edf565b6109ba6000610ff0565b565b336000908152600b602052604081205460ff166109ec57604051631eb49d6d60e11b815260040160405180910390fd5b6109f4611042565b6001600160a01b038216610a1b57604051631eb49d6d60e11b815260040160405180910390fd5b6000610a2683610922565b1115610a4557604051631bbdf5c560e31b815260040160405180910390fd5b6000600960008154610a5690611ae2565b91829055509050612710811115610a805760405163d05cb60960e01b815260040160405180910390fd5b610a8a838261109b565b600a5415610a9e57610a9e83600a54610f39565b9050610aaa6001600755565b919050565b610ab7610edf565b600a55565b60606001805461052890611937565b610830338383611234565b610ae03383610d0f565b610afc5760405162461bcd60e51b815260040161064690611971565b610b0884848484611302565b50505050565b60606000610b1b83610834565b6001600160a01b031603610b425760405163d872946b60e01b815260040160405180910390fd5b600060088054610b5190611937565b905011610b6d5760405180602001604052806000815250610513565b6008610b7883611335565b604051602001610b89929190611afb565b60405160208183030381529060405292915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610bd4610edf565b6001600160a01b038116610c395760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610646565b61081981610ff0565b6000818152600260205260409020546001600160a01b03166108195760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610646565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610cd682610834565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d1b83610834565b9050806001600160a01b0316846001600160a01b03161480610d425750610d428185610b9e565b80610d665750836001600160a01b0316610d5b846105ab565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d8182610834565b6001600160a01b031614610da75760405162461bcd60e51b815260040161064690611b82565b6001600160a01b038216610e095760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610646565b610e1683838360016113c8565b826001600160a01b0316610e2982610834565b6001600160a01b031614610e4f5760405162461bcd60e51b815260040161064690611b82565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146109ba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610646565b47811115610f5a57604051631e9acf1760e31b815260040160405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610fa7576040519150601f19603f3d011682016040523d82523d6000602084013e610fac565b606091505b50509050806106e75760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606401610646565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6002600754036110945760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610646565b6002600755565b6001600160a01b0382166110f15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610646565b6000818152600260205260409020546001600160a01b0316156111565760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610646565b6111646000838360016113c8565b6000818152600260205260409020546001600160a01b0316156111c95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610646565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b816001600160a01b0316836001600160a01b0316036112955760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610646565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61130d848484610d6e565b61131984848484611450565b610b085760405162461bcd60e51b815260040161064690611bc7565b6060600061134283611551565b600101905060008167ffffffffffffffff811115611362576113626117b3565b6040519080825280601f01601f19166020018201604052801561138c576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461139657509392505050565b6001811115610b08576001600160a01b0384161561140e576001600160a01b03841660009081526003602052604081208054839290611408908490611c19565b90915550505b6001600160a01b03831615610b08576001600160a01b03831660009081526003602052604081208054839290611445908490611c2c565b909155505050505050565b60006001600160a01b0384163b1561154657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611494903390899088908890600401611c3f565b6020604051808303816000875af19250505080156114cf575060408051601f3d908101601f191682019092526114cc91810190611c7c565b60015b61152c573d8080156114fd576040519150601f19603f3d011682016040523d82523d6000602084013e611502565b606091505b5080516000036115245760405162461bcd60e51b815260040161064690611bc7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d66565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106115905772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106115bc576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106115da57662386f26fc10000830492506010015b6305f5e10083106115f2576305f5e100830492506008015b612710831061160657612710830492506004015b60648310611618576064830492506002015b600a83106105135760010192915050565b6001600160e01b03198116811461081957600080fd5b60006020828403121561165157600080fd5b813561165c81611629565b9392505050565b60005b8381101561167e578181015183820152602001611666565b50506000910152565b6000815180845261169f816020860160208601611663565b601f01601f19169290920160200192915050565b60208152600061165c6020830184611687565b6000602082840312156116d857600080fd5b5035919050565b80356001600160a01b0381168114610aaa57600080fd5b6000806040838503121561170957600080fd5b611712836116df565b946020939093013593505050565b60008060006060848603121561173557600080fd5b61173e846116df565b925061174c602085016116df565b9150604084013590509250925092565b6000806040838503121561176f57600080fd5b611778836116df565b91506020830135801515811461178d57600080fd5b809150509250929050565b6000602082840312156117aa57600080fd5b61165c826116df565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156117e4576117e46117b3565b604051601f8501601f19908116603f0116810190828211818310171561180c5761180c6117b3565b8160405280935085815286868601111561182557600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561185157600080fd5b813567ffffffffffffffff81111561186857600080fd5b8201601f8101841361187957600080fd5b610d66848235602084016117c9565b6000806000806080858703121561189e57600080fd5b6118a7856116df565b93506118b5602086016116df565b925060408501359150606085013567ffffffffffffffff8111156118d857600080fd5b8501601f810187136118e957600080fd5b6118f8878235602084016117c9565b91505092959194509250565b6000806040838503121561191757600080fd5b611920836116df565b915061192e602084016116df565b90509250929050565b600181811c9082168061194b57607f821691505b60208210810361196b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b601f8211156106e757600081815260208120601f850160051c810160208610156119e55750805b601f850160051c820191505b81811015611a04578281556001016119f1565b505050505050565b815167ffffffffffffffff811115611a2657611a266117b3565b611a3a81611a348454611937565b846119be565b602080601f831160018114611a6f5760008415611a575750858301515b600019600386901b1c1916600185901b178555611a04565b600085815260208120601f198616915b82811015611a9e57888601518255948401946001909101908401611a7f565b5085821015611abc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600060018201611af457611af4611acc565b5060010190565b6000808454611b0981611937565b60018281168015611b215760018114611b3657611b65565b60ff1984168752821515830287019450611b65565b8860005260208060002060005b85811015611b5c5781548a820152908401908201611b43565b50505082870194505b505050508351611b79818360208801611663565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b8181038181111561051357610513611acc565b8082018082111561051357610513611acc565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611c7290830184611687565b9695505050505050565b600060208284031215611c8e57600080fd5b815161165c8161162956fea2646970667358221220fb2a53100d098448b9f77287cfb6b7655bcbeb1e8515a02547f8ee213c20e1e864736f6c63430008110033";

type PioneerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PioneerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pioneer__factory extends ContractFactory {
  constructor(...args: PioneerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    baseURI_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Pioneer> {
    return super.deploy(
      name_,
      symbol_,
      baseURI_,
      overrides || {}
    ) as Promise<Pioneer>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    baseURI_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      baseURI_,
      overrides || {}
    );
  }
  override attach(address: string): Pioneer {
    return super.attach(address) as Pioneer;
  }
  override connect(signer: Signer): Pioneer__factory {
    return super.connect(signer) as Pioneer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PioneerInterface {
    return new utils.Interface(_abi) as PioneerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Pioneer {
    return new Contract(address, _abi, signerOrProvider) as Pioneer;
  }
}

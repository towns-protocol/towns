"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CouncilStaking__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract IERC721",
                name: "_councilNFT",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "NoPointsToClaim",
        type: "error",
    },
    {
        inputs: [],
        name: "NoStakedTokens",
        type: "error",
    },
    {
        inputs: [],
        name: "NotTokenOwner",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [],
        name: "claimPoints",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "councilNFT",
        outputs: [
            {
                internalType: "contract IERC721",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_staker",
                type: "address",
            },
        ],
        name: "getAvailablePoints",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_user",
                type: "address",
            },
        ],
        name: "getStakedTokensByAddress",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "staker",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256",
                    },
                ],
                internalType: "struct CouncilDataTypes.StakedToken[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
            },
        ],
        name: "getStakerAddressByTokenId",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_staker",
                type: "address",
            },
        ],
        name: "getStakerByAddress",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "amountStaked",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "staker",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "tokenId",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct CouncilDataTypes.StakedToken[]",
                        name: "stakedTokens",
                        type: "tuple[]",
                    },
                    {
                        internalType: "uint256",
                        name: "timeOfLastUpdate",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "unclaimedPoints",
                        type: "uint256",
                    },
                ],
                internalType: "struct CouncilDataTypes.Staker",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
            },
        ],
        name: "stakeToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
            },
        ],
        name: "withdrawToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "";
const isSuperArgs = (xs) => xs.length > 1;
class CouncilStaking__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_councilNFT, overrides) {
        return super.deploy(_councilNFT, overrides || {});
    }
    getDeployTransaction(_councilNFT, overrides) {
        return super.getDeployTransaction(_councilNFT, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.CouncilStaking__factory = CouncilStaking__factory;
CouncilStaking__factory.bytecode = _bytecode;
CouncilStaking__factory.abi = _abi;
//# sourceMappingURL=CouncilStaking__factory.js.map
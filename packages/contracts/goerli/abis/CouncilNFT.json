{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MaxSupply",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintPriceNotPaid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NonExistentTokenURI",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WithdrawTransfer",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINT_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOTAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allowlistMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "alreadyMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "privateMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "publicMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startPublicMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startWaitlistMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "waitlistMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPayments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162002507380380620025078339810160408190526200003491620001b3565b83836000620000448382620002db565b506001620000538282620002db565b505050620000706200006a6200009860201b60201c565b6200009c565b60076200007e8382620002db565b506080525050600a805460ff1916600117905550620003a7565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011657600080fd5b81516001600160401b0380821115620001335762000133620000ee565b604051601f8301601f19908116603f011681019082821181831017156200015e576200015e620000ee565b816040528381526020925086838588010111156200017b57600080fd5b600091505b838210156200019f578582018301518183018401529082019062000180565b600093810190920192909252949350505050565b60008060008060808587031215620001ca57600080fd5b84516001600160401b0380821115620001e257600080fd5b620001f08883890162000104565b955060208701519150808211156200020757600080fd5b620002158883890162000104565b945060408701519150808211156200022c57600080fd5b506200023b8782880162000104565b606096909601519497939650505050565b600181811c908216806200026157607f821691505b6020821081036200028257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002d657600081815260208120601f850160051c81016020861015620002b15750805b601f850160051c820191505b81811015620002d257828155600101620002bd565b5050505b505050565b81516001600160401b03811115620002f757620002f7620000ee565b6200030f816200030884546200024c565b8462000288565b602080601f8311600181146200034757600084156200032e5750858301515b600019600386901b1c1916600185901b178555620002d2565b600085815260208120601f198616915b82811015620003785788860151825594840194600190910190840162000357565b5085821015620003975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051612144620003c3600039600061116601526121446000f3fe6080604052600436106101c15760003560e01c806370a08231116100f7578063a22cb46511610095578063c002d23d11610064578063c002d23d14610504578063c87b56dd14610520578063e985e9c514610540578063f2fde38b1461057b57600080fd5b8063a22cb46514610490578063a839e501146104b0578063aebb096c146104c5578063b88d4fde146104e457600080fd5b80638da5cb5b116100d15780638da5cb5b14610427578063902d55a51461045257806395d89b41146104685780639886a9021461047d57600080fd5b806370a08231146103dd578063715018a6146103fd57806376c64c621461041257600080fd5b806326092b831161016457806342842e0e1161013e57806342842e0e146103755780636352211e146103955780636a627842146103b55780636c0360eb146103c857600080fd5b806326092b831461031b57806331b3eb941461033b57806341fbddbd1461035b57600080fd5b8063081812fc116101a0578063081812fc14610241578063095ea7b3146102a95780630a398b88146102cb57806323b872dd146102fb57600080fd5b80629a9b7b146101c657806301ffc9a7146101ef57806306fdde031461021f575b600080fd5b3480156101d257600080fd5b506101dc60085481565b6040519081526020015b60405180910390f35b3480156101fb57600080fd5b5061020f61020a366004611ba9565b61059b565b60405190151581526020016101e6565b34801561022b57600080fd5b50610234610680565b6040516101e69190611bc6565b34801561024d57600080fd5b5061028461025c366004611c32565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e6565b3480156102b557600080fd5b506102c96102c4366004611c6d565b61070e565b005b3480156102d757600080fd5b5061020f6102e6366004611c99565b60096020526000908152604090205460ff1681565b34801561030757600080fd5b506102c9610316366004611cb6565b61085d565b34801561032757600080fd5b50600a5461020f9062010000900460ff1681565b34801561034757600080fd5b506102c9610356366004611c99565b610b24565b34801561036757600080fd5b50600a5461020f9060ff1681565b34801561038157600080fd5b506102c9610390366004611cb6565b610bcb565b3480156103a157600080fd5b506102846103b0366004611c32565b610d30565b6101dc6103c3366004611c99565b610dc1565b3480156103d457600080fd5b50610234610ef7565b3480156103e957600080fd5b506101dc6103f8366004611c99565b610f04565b34801561040957600080fd5b506102c9610fac565b34801561041e57600080fd5b506102c9610fc0565b34801561043357600080fd5b5060065473ffffffffffffffffffffffffffffffffffffffff16610284565b34801561045e57600080fd5b506101dc6109c481565b34801561047457600080fd5b50610234610ff7565b6101dc61048b366004611cf7565b611004565b34801561049c57600080fd5b506102c96104ab366004611d83565b611230565b3480156104bc57600080fd5b506102c96112c7565b3480156104d157600080fd5b50600a5461020f90610100900460ff1681565b3480156104f057600080fd5b506102c96104ff366004611dc1565b6112fd565b34801561051057600080fd5b506101dc67011c37937e08000081565b34801561052c57600080fd5b5061023461053b366004611c32565b611457565b34801561054c57600080fd5b5061020f61055b366004611e60565b600560209081526000928352604080842090915290825290205460ff1681565b34801561058757600080fd5b506102c9610596366004611c99565b611503565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061062e57507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061067a57507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000805461068d90611e8e565b80601f01602080910402602001604051908101604052809291908181526020018280546106b990611e8e565b80156107065780601f106106db57610100808354040283529160200191610706565b820191906000526020600020905b8154815290600101906020018083116106e957829003601f168201915b505050505081565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633811480610771575073ffffffffffffffffffffffffffffffffffffffff8116600090815260056020908152604080832033845290915290205460ff165b6107dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064015b60405180910390fd5b60008281526004602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff8481169116146108ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f57524f4e475f46524f4d0000000000000000000000000000000000000000000060448201526064016107d3565b73ffffffffffffffffffffffffffffffffffffffff821661096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016107d3565b3373ffffffffffffffffffffffffffffffffffffffff841614806109be575073ffffffffffffffffffffffffffffffffffffffff8316600090815260056020908152604080832033845290915290205460ff165b806109ec575060008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b610a52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064016107d3565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260036020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055938616808352848320805460010190558583526002825284832080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b2c6115ba565b604051479060009073ffffffffffffffffffffffffffffffffffffffff84169083908381818185875af1925050503d8060008114610b86576040519150601f19603f3d011682016040523d82523d6000602084013e610b8b565b606091505b5050905080610bc6576040517fd23a9e8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b610bd683838361085d565b73ffffffffffffffffffffffffffffffffffffffff82163b1580610cca57506040517f150b7a020000000000000000000000000000000000000000000000000000000080825233600483015273ffffffffffffffffffffffffffffffffffffffff858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca69190611ee1565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b610bc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e540000000000000000000000000000000060448201526064016107d3565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1680610dbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e4f545f4d494e5445440000000000000000000000000000000000000000000060448201526064016107d3565b919050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526009602052604081205460ff1615610e51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f416c7265616479206d696e74656420616e204e4654000000000000000000000060448201526064016107d3565b600a5462010000900460ff161515600114610eee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5075626c6963206d696e74696e67206973206e6f7420616c6c6f77656420796560448201527f740000000000000000000000000000000000000000000000000000000000000060648201526084016107d3565b61067a8261163b565b6007805461068d90611e8e565b600073ffffffffffffffffffffffffffffffffffffffff8216610f83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a45524f5f41444452455353000000000000000000000000000000000000000060448201526064016107d3565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b610fb46115ba565b610fbe6000611771565b565b610fc86115ba565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001662010000179055565b6001805461068d90611e8e565b73ffffffffffffffffffffffffffffffffffffffff841660009081526009602052604081205460ff1615611064576040517fddefae2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a5460ff1615156001036110dd57836001146110dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4e6f7420616c6c6f77656420746f206d696e742079657400000000000000000060448201526064016107d3565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606087901b166020820152603481018590526000906054016040516020818303038152906040528051906020012090506111918484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506117e89050565b61121d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c6960448201527f656400000000000000000000000000000000000000000000000000000000000060648201526084016107d3565b6112268661163b565b9695505050505050565b33600081815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6112cf6115ba565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016610100179055565b61130885858561085d565b73ffffffffffffffffffffffffffffffffffffffff84163b15806113ea57506040517f150b7a02000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063150b7a02906113839033908a90899089908990600401611efe565b6020604051808303816000875af11580156113a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c69190611ee1565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b611450576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e540000000000000000000000000000000060448201526064016107d3565b5050505050565b6060600061146483610d30565b73ffffffffffffffffffffffffffffffffffffffff16036114b1576040517fd872946b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600780546114c090611e8e565b9050116114dc576040518060200160405280600081525061067a565b60076040516020016114ee9190611f7d565b60405160208183030381529060405292915050565b61150b6115ba565b73ffffffffffffffffffffffffffffffffffffffff81166115ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107d3565b6115b781611771565b50565b60065473ffffffffffffffffffffffffffffffffffffffff163314610fbe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107d3565b600067011c37937e080000341461167e576040517f21e191e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060086000815461168f90612080565b918290555090506109c48111156116d2576040517fb36c128400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905561172a83826117fe565b60405173ffffffffffffffffffffffffffffffffffffffff8416907f90ddedd5a25821bba11fbb98de02ec1f75c1be90ae147d6450ce873e7b78b5d890600090a292915050565b6006805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000826117f58584611963565b14949350505050565b61180882826119b0565b73ffffffffffffffffffffffffffffffffffffffff82163b15806118f957506040517f150b7a0200000000000000000000000000000000000000000000000000000000808252336004830152600060248301819052604483018490526080606484015260848301529073ffffffffffffffffffffffffffffffffffffffff84169063150b7a029060a4016020604051808303816000875af11580156118b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d59190611ee1565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b61195f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e540000000000000000000000000000000060448201526064016107d3565b5050565b600081815b84518110156119a85761199482868381518110611987576119876120df565b6020026020010151611b49565b9150806119a081612080565b915050611968565b509392505050565b73ffffffffffffffffffffffffffffffffffffffff8216611a2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016107d3565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615611ab9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f414c52454144595f4d494e54454400000000000000000000000000000000000060448201526064016107d3565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818310611b65576000828152602084905260409020611b74565b60008381526020839052604090205b9392505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146115b757600080fd5b600060208284031215611bbb57600080fd5b8135611b7481611b7b565b600060208083528351808285015260005b81811015611bf357858101830151858201604001528201611bd7565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b600060208284031215611c4457600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146115b757600080fd5b60008060408385031215611c8057600080fd5b8235611c8b81611c4b565b946020939093013593505050565b600060208284031215611cab57600080fd5b8135611b7481611c4b565b600080600060608486031215611ccb57600080fd5b8335611cd681611c4b565b92506020840135611ce681611c4b565b929592945050506040919091013590565b60008060008060608587031215611d0d57600080fd5b8435611d1881611c4b565b935060208501359250604085013567ffffffffffffffff80821115611d3c57600080fd5b818701915087601f830112611d5057600080fd5b813581811115611d5f57600080fd5b8860208260051b8501011115611d7457600080fd5b95989497505060200194505050565b60008060408385031215611d9657600080fd5b8235611da181611c4b565b915060208301358015158114611db657600080fd5b809150509250929050565b600080600080600060808688031215611dd957600080fd5b8535611de481611c4b565b94506020860135611df481611c4b565b935060408601359250606086013567ffffffffffffffff80821115611e1857600080fd5b818801915088601f830112611e2c57600080fd5b813581811115611e3b57600080fd5b896020828501011115611e4d57600080fd5b9699959850939650602001949392505050565b60008060408385031215611e7357600080fd5b8235611e7e81611c4b565b91506020830135611db681611c4b565b600181811c90821680611ea257607f821691505b602082108103611edb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215611ef357600080fd5b8151611b7481611b7b565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011683010190509695505050505050565b600080835481600182811c915080831680611f9957607f831692505b60208084108203611fd1577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015611fe5576001811461201857612045565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650612045565b60008a81526020902060005b8681101561203d5781548b820152908501908301612024565b505084890196505b505050505050612078817f636f756e63696c6d6574616461746100000000000000000000000000000000008152600f0190565b949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122037f2e76de4d46a8917a7101b9ccaff402b83549fda21cdb5a0a9780ea569421564736f6c63430008110033",
    "sourceMap": "589:4338:5:-:0;;;1407:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1529:5;1536:7;2220:4:112;:12;1529:5:5;2220:4:112;:12;:::i;:::-;-1:-1:-1;2242:6:112;:16;2251:7;2242:6;:16;:::i;:::-;;2154:111;;936:32:74;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1551:7:5::1;:18;1561:8:::0;1551:7;:18:::1;:::i;:::-;-1:-1:-1::0;1575:12:5::1;::::0;-1:-1:-1;;1593:13:5::1;:20:::0;;-1:-1:-1;;1593:20:5::1;1609:4;1593:20;::::0;;-1:-1:-1;589:4338:5;;640:96:99;719:10;;640:96::o;2433:187:74:-;2525:6;;;-1:-1:-1;;;;;2541:17:74;;;-1:-1:-1;;;;;;2541:17:74;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:116:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:116;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:116;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:116:o;991:828::-;1118:6;1126;1134;1142;1195:3;1183:9;1174:7;1170:23;1166:33;1163:53;;;1212:1;1209;1202:12;1163:53;1239:16;;-1:-1:-1;;;;;1304:14:116;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;1638:2;1627:9;1623:18;1617:25;1601:41;;1667:2;1657:8;1654:16;1651:36;;;1683:1;1680;1673:12;1651:36;;1706:63;1761:7;1750:8;1739:9;1735:24;1706:63;:::i;:::-;1809:2;1794:18;;;;1788:25;991:828;;;;-1:-1:-1;;;;991:828:116:o;1824:380::-;1903:1;1899:12;;;;1946;;;1967:61;;2021:4;2013:6;2009:17;1999:27;;1967:61;2074:2;2066:6;2063:14;2043:18;2040:38;2037:161;;2120:10;2115:3;2111:20;2108:1;2101:31;2155:4;2152:1;2145:15;2183:4;2180:1;2173:15;2037:161;;1824:380;;;:::o;2335:545::-;2437:2;2432:3;2429:11;2426:448;;;2473:1;2498:5;2494:2;2487:17;2543:4;2539:2;2529:19;2613:2;2601:10;2597:19;2594:1;2590:27;2584:4;2580:38;2649:4;2637:10;2634:20;2631:47;;;-1:-1:-1;2672:4:116;2631:47;2727:2;2722:3;2718:12;2715:1;2711:20;2705:4;2701:31;2691:41;;2782:82;2800:2;2793:5;2790:13;2782:82;;;2845:17;;;2826:1;2815:13;2782:82;;;2786:3;;;2426:448;2335:545;;;:::o;3056:1352::-;3176:10;;-1:-1:-1;;;;;3198:30:116;;3195:56;;;3231:18;;:::i;:::-;3260:97;3350:6;3310:38;3342:4;3336:11;3310:38;:::i;:::-;3304:4;3260:97;:::i;:::-;3412:4;;3476:2;3465:14;;3493:1;3488:663;;;;4195:1;4212:6;4209:89;;;-1:-1:-1;4264:19:116;;;4258:26;4209:89;-1:-1:-1;;3013:1:116;3009:11;;;3005:24;3001:29;2991:40;3037:1;3033:11;;;2988:57;4311:81;;3458:944;;3488:663;2282:1;2275:14;;;2319:4;2306:18;;-1:-1:-1;;3524:20:116;;;3642:236;3656:7;3653:1;3650:14;3642:236;;;3745:19;;;3739:26;3724:42;;3837:27;;;;3805:1;3793:14;;;;3672:19;;3642:236;;;3646:3;3906:6;3897:7;3894:19;3891:201;;;3967:19;;;3961:26;-1:-1:-1;;4050:1:116;4046:14;;;4062:3;4042:24;4038:37;4034:42;4019:58;4004:74;;3891:201;-1:-1:-1;;;;;4138:1:116;4122:14;;;4118:22;4105:36;;-1:-1:-1;3056:1352:116:o;:::-;589:4338:5;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101c15760003560e01c806370a08231116100f7578063a22cb46511610095578063c002d23d11610064578063c002d23d14610504578063c87b56dd14610520578063e985e9c514610540578063f2fde38b1461057b57600080fd5b8063a22cb46514610490578063a839e501146104b0578063aebb096c146104c5578063b88d4fde146104e457600080fd5b80638da5cb5b116100d15780638da5cb5b14610427578063902d55a51461045257806395d89b41146104685780639886a9021461047d57600080fd5b806370a08231146103dd578063715018a6146103fd57806376c64c621461041257600080fd5b806326092b831161016457806342842e0e1161013e57806342842e0e146103755780636352211e146103955780636a627842146103b55780636c0360eb146103c857600080fd5b806326092b831461031b57806331b3eb941461033b57806341fbddbd1461035b57600080fd5b8063081812fc116101a0578063081812fc14610241578063095ea7b3146102a95780630a398b88146102cb57806323b872dd146102fb57600080fd5b80629a9b7b146101c657806301ffc9a7146101ef57806306fdde031461021f575b600080fd5b3480156101d257600080fd5b506101dc60085481565b6040519081526020015b60405180910390f35b3480156101fb57600080fd5b5061020f61020a366004611ba9565b61059b565b60405190151581526020016101e6565b34801561022b57600080fd5b50610234610680565b6040516101e69190611bc6565b34801561024d57600080fd5b5061028461025c366004611c32565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101e6565b3480156102b557600080fd5b506102c96102c4366004611c6d565b61070e565b005b3480156102d757600080fd5b5061020f6102e6366004611c99565b60096020526000908152604090205460ff1681565b34801561030757600080fd5b506102c9610316366004611cb6565b61085d565b34801561032757600080fd5b50600a5461020f9062010000900460ff1681565b34801561034757600080fd5b506102c9610356366004611c99565b610b24565b34801561036757600080fd5b50600a5461020f9060ff1681565b34801561038157600080fd5b506102c9610390366004611cb6565b610bcb565b3480156103a157600080fd5b506102846103b0366004611c32565b610d30565b6101dc6103c3366004611c99565b610dc1565b3480156103d457600080fd5b50610234610ef7565b3480156103e957600080fd5b506101dc6103f8366004611c99565b610f04565b34801561040957600080fd5b506102c9610fac565b34801561041e57600080fd5b506102c9610fc0565b34801561043357600080fd5b5060065473ffffffffffffffffffffffffffffffffffffffff16610284565b34801561045e57600080fd5b506101dc6109c481565b34801561047457600080fd5b50610234610ff7565b6101dc61048b366004611cf7565b611004565b34801561049c57600080fd5b506102c96104ab366004611d83565b611230565b3480156104bc57600080fd5b506102c96112c7565b3480156104d157600080fd5b50600a5461020f90610100900460ff1681565b3480156104f057600080fd5b506102c96104ff366004611dc1565b6112fd565b34801561051057600080fd5b506101dc67011c37937e08000081565b34801561052c57600080fd5b5061023461053b366004611c32565b611457565b34801561054c57600080fd5b5061020f61055b366004611e60565b600560209081526000928352604080842090915290825290205460ff1681565b34801561058757600080fd5b506102c9610596366004611c99565b611503565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061062e57507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061067a57507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000805461068d90611e8e565b80601f01602080910402602001604051908101604052809291908181526020018280546106b990611e8e565b80156107065780601f106106db57610100808354040283529160200191610706565b820191906000526020600020905b8154815290600101906020018083116106e957829003601f168201915b505050505081565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633811480610771575073ffffffffffffffffffffffffffffffffffffffff8116600090815260056020908152604080832033845290915290205460ff165b6107dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064015b60405180910390fd5b60008281526004602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff8481169116146108ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f57524f4e475f46524f4d0000000000000000000000000000000000000000000060448201526064016107d3565b73ffffffffffffffffffffffffffffffffffffffff821661096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016107d3565b3373ffffffffffffffffffffffffffffffffffffffff841614806109be575073ffffffffffffffffffffffffffffffffffffffff8316600090815260056020908152604080832033845290915290205460ff165b806109ec575060008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b610a52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064016107d3565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260036020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055938616808352848320805460010190558583526002825284832080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b2c6115ba565b604051479060009073ffffffffffffffffffffffffffffffffffffffff84169083908381818185875af1925050503d8060008114610b86576040519150601f19603f3d011682016040523d82523d6000602084013e610b8b565b606091505b5050905080610bc6576040517fd23a9e8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b610bd683838361085d565b73ffffffffffffffffffffffffffffffffffffffff82163b1580610cca57506040517f150b7a020000000000000000000000000000000000000000000000000000000080825233600483015273ffffffffffffffffffffffffffffffffffffffff858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca69190611ee1565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b610bc6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e540000000000000000000000000000000060448201526064016107d3565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1680610dbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e4f545f4d494e5445440000000000000000000000000000000000000000000060448201526064016107d3565b919050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526009602052604081205460ff1615610e51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f416c7265616479206d696e74656420616e204e4654000000000000000000000060448201526064016107d3565b600a5462010000900460ff161515600114610eee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5075626c6963206d696e74696e67206973206e6f7420616c6c6f77656420796560448201527f740000000000000000000000000000000000000000000000000000000000000060648201526084016107d3565b61067a8261163b565b6007805461068d90611e8e565b600073ffffffffffffffffffffffffffffffffffffffff8216610f83576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f5a45524f5f41444452455353000000000000000000000000000000000000000060448201526064016107d3565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b610fb46115ba565b610fbe6000611771565b565b610fc86115ba565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000001662010000179055565b6001805461068d90611e8e565b73ffffffffffffffffffffffffffffffffffffffff841660009081526009602052604081205460ff1615611064576040517fddefae2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a5460ff1615156001036110dd57836001146110dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4e6f7420616c6c6f77656420746f206d696e742079657400000000000000000060448201526064016107d3565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606087901b166020820152603481018590526000906054016040516020818303038152906040528051906020012090506111918484808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152507f000000000000000000000000000000000000000000000000000000000000000092508591506117e89050565b61121d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c6960448201527f656400000000000000000000000000000000000000000000000000000000000060648201526084016107d3565b6112268661163b565b9695505050505050565b33600081815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6112cf6115ba565b600a80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016610100179055565b61130885858561085d565b73ffffffffffffffffffffffffffffffffffffffff84163b15806113ea57506040517f150b7a02000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063150b7a02906113839033908a90899089908990600401611efe565b6020604051808303816000875af11580156113a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c69190611ee1565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b611450576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e540000000000000000000000000000000060448201526064016107d3565b5050505050565b6060600061146483610d30565b73ffffffffffffffffffffffffffffffffffffffff16036114b1576040517fd872946b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600780546114c090611e8e565b9050116114dc576040518060200160405280600081525061067a565b60076040516020016114ee9190611f7d565b60405160208183030381529060405292915050565b61150b6115ba565b73ffffffffffffffffffffffffffffffffffffffff81166115ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107d3565b6115b781611771565b50565b60065473ffffffffffffffffffffffffffffffffffffffff163314610fbe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107d3565b600067011c37937e080000341461167e576040517f21e191e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060086000815461168f90612080565b918290555090506109c48111156116d2576040517fb36c128400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905561172a83826117fe565b60405173ffffffffffffffffffffffffffffffffffffffff8416907f90ddedd5a25821bba11fbb98de02ec1f75c1be90ae147d6450ce873e7b78b5d890600090a292915050565b6006805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000826117f58584611963565b14949350505050565b61180882826119b0565b73ffffffffffffffffffffffffffffffffffffffff82163b15806118f957506040517f150b7a0200000000000000000000000000000000000000000000000000000000808252336004830152600060248301819052604483018490526080606484015260848301529073ffffffffffffffffffffffffffffffffffffffff84169063150b7a029060a4016020604051808303816000875af11580156118b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d59190611ee1565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b61195f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f554e534146455f524543495049454e540000000000000000000000000000000060448201526064016107d3565b5050565b600081815b84518110156119a85761199482868381518110611987576119876120df565b6020026020010151611b49565b9150806119a081612080565b915050611968565b509392505050565b73ffffffffffffffffffffffffffffffffffffffff8216611a2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f494e56414c49445f524543495049454e5400000000000000000000000000000060448201526064016107d3565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615611ab9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f414c52454144595f4d494e54454400000000000000000000000000000000000060448201526064016107d3565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818310611b65576000828152602084905260409020611b74565b60008381526020839052604090205b9392505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146115b757600080fd5b600060208284031215611bbb57600080fd5b8135611b7481611b7b565b600060208083528351808285015260005b81811015611bf357858101830151858201604001528201611bd7565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b600060208284031215611c4457600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146115b757600080fd5b60008060408385031215611c8057600080fd5b8235611c8b81611c4b565b946020939093013593505050565b600060208284031215611cab57600080fd5b8135611b7481611c4b565b600080600060608486031215611ccb57600080fd5b8335611cd681611c4b565b92506020840135611ce681611c4b565b929592945050506040919091013590565b60008060008060608587031215611d0d57600080fd5b8435611d1881611c4b565b935060208501359250604085013567ffffffffffffffff80821115611d3c57600080fd5b818701915087601f830112611d5057600080fd5b813581811115611d5f57600080fd5b8860208260051b8501011115611d7457600080fd5b95989497505060200194505050565b60008060408385031215611d9657600080fd5b8235611da181611c4b565b915060208301358015158114611db657600080fd5b809150509250929050565b600080600080600060808688031215611dd957600080fd5b8535611de481611c4b565b94506020860135611df481611c4b565b935060408601359250606086013567ffffffffffffffff80821115611e1857600080fd5b818801915088601f830112611e2c57600080fd5b813581811115611e3b57600080fd5b896020828501011115611e4d57600080fd5b9699959850939650602001949392505050565b60008060408385031215611e7357600080fd5b8235611e7e81611c4b565b91506020830135611db681611c4b565b600181811c90821680611ea257607f821691505b602082108103611edb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600060208284031215611ef357600080fd5b8151611b7481611b7b565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011683010190509695505050505050565b600080835481600182811c915080831680611f9957607f831692505b60208084108203611fd1577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b818015611fe5576001811461201857612045565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952841515850289019650612045565b60008a81526020902060005b8681101561203d5781548b820152908501908301612024565b505084890196505b505050505050612078817f636f756e63696c6d6574616461746100000000000000000000000000000000008152600f0190565b949350505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122037f2e76de4d46a8917a7101b9ccaff402b83549fda21cdb5a0a9780ea569421564736f6c63430008110033",
    "sourceMap": "589:4338:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1009:29;;;;;;;;;;;;;;;;;;;160:25:116;;;148:2;133:18;1009:29:5;;;;;;;;4714:335:112;;;;;;;;;;-1:-1:-1;4714:335:112;;;;;:::i;:::-;;:::i;:::-;;;793:14:116;;786:22;768:41;;756:2;741:18;4714:335:112;628:187:116;899:18:112;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1844:46::-;;;;;;;;;;-1:-1:-1;1844:46:112;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1793:42:116;1781:55;;;1763:74;;1751:2;1736:18;1844:46:112;1617:226:116;2453:282:112;;;;;;;;;;-1:-1:-1;2453:282:112;;;;;:::i;:::-;;:::i;:::-;;1114:45:5;;;;;;;;;;-1:-1:-1;1114:45:5;;;;;:::i;:::-;;;;;;;;;;;;;;;;2950:741:112;;;;;;;;;;-1:-1:-1;2950:741:112;;;;;:::i;:::-;;:::i;1284:22:5:-;;;;;;;;;;-1:-1:-1;1284:22:5;;;;;;;;;;;4259:310;;;;;;;;;;-1:-1:-1;4259:310:5;;;;;:::i;:::-;;:::i;1227:25::-;;;;;;;;;;-1:-1:-1;1227:25:5;;;;;;;;3697:396:112;;;;;;;;;;-1:-1:-1;3697:396:112;;;;;:::i;:::-;;:::i;1327:149::-;;;;;;;;;;-1:-1:-1;1327:149:112;;;;;:::i;:::-;;:::i;2816:244:5:-;;;;;;:::i;:::-;;:::i;930:21::-;;;;;;;;;;;;;:::i;1482:168:112:-;;;;;;;;;;-1:-1:-1;1482:168:112;;;;;:::i;:::-;;:::i;1831:101:74:-;;;;;;;;;;;;;:::i;4800:125:5:-;;;;;;;;;;;;;:::i;1201:85:74:-;;;;;;;;;;-1:-1:-1;1273:6:74;;;;1201:85;;711:43:5;;;;;;;;;;;;750:4;711:43;;924:20:112;;;;;;;;;;;;;:::i;2026:586:5:-;;;;;;:::i;:::-;;:::i;2741:203:112:-;;;;;;;;;;-1:-1:-1;2741:203:112;;;;;:::i;:::-;;:::i;4622:127:5:-;;;;;;;;;;;;;:::i;1256:24::-;;;;;;;;;;-1:-1:-1;1256:24:5;;;;;;;;;;;4099:427:112;;;;;;;;;;-1:-1:-1;4099:427:112;;;;;:::i;:::-;;:::i;810:47:5:-;;;;;;;;;;;;847:10;810:47;;3800:333;;;;;;;;;;-1:-1:-1;3800:333:5;;;;;:::i;:::-;;:::i;1897:68:112:-;;;;;;;;;;-1:-1:-1;1897:68:112;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2081:198:74;;;;;;;;;;-1:-1:-1;2081:198:74;;;;;:::i;:::-;;:::i;4714:335:112:-;4790:4;4825:25;;;;;;:100;;-1:-1:-1;4900:25:112;;;;;4825:100;:175;;;-1:-1:-1;4975:25:112;;;;;4825:175;4806:194;4714:335;-1:-1:-1;;4714:335:112:o;899:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2453:282::-;2524:13;2540:12;;;:8;:12;;;;;;;;2571:10;:19;;;:58;;-1:-1:-1;2594:23:112;;;;;;;:16;:23;;;;;;;;2618:10;2594:35;;;;;;;;;;2571:58;2563:85;;;;;;;6522:2:116;2563:85:112;;;6504:21:116;6561:2;6541:18;;;6534:30;6600:16;6580:18;;;6573:44;6634:18;;2563:85:112;;;;;;;;;2659:15;;;;:11;:15;;;;;;:25;;;;;;;;;;;;;;2700:28;;2659:15;;2700:28;;;;;;;2514:221;2453:282;;:::o;2950:741::-;3081:12;;;;:8;:12;;;;;;;3073:20;;;3081:12;;3073:20;3065:43;;;;;;;6865:2:116;3065:43:112;;;6847:21:116;6904:2;6884:18;;;6877:30;6943:12;6923:18;;;6916:40;6973:18;;3065:43:112;6663:334:116;3065:43:112;3127:16;;;3119:46;;;;;;;7204:2:116;3119:46:112;;;7186:21:116;7243:2;7223:18;;;7216:30;7282:19;7262:18;;;7255:47;7319:18;;3119:46:112;7002:341:116;3119:46:112;3197:10;:18;;;;;:56;;-1:-1:-1;3219:22:112;;;;;;;:16;:22;;;;;;;;3242:10;3219:34;;;;;;;;;;3197:56;:89;;;-1:-1:-1;3271:15:112;;;;:11;:15;;;;;;;;3257:10;:29;3197:89;3176:150;;;;;;;6522:2:116;3176:150:112;;;6504:21:116;6561:2;6541:18;;;6534:30;6600:16;6580:18;;;6573:44;6634:18;;3176:150:112;6320:338:116;3176:150:112;3526:16;;;;;;;;:10;:16;;;;;;;;:18;;;;;;3559:14;;;;;;;;;:16;;3526:18;3559:16;;;3596:12;;;:8;:12;;;;;:17;;;;;;;;;;;3631:11;:15;;;;;;3624:22;;;;;;;;3662;;3605:2;;3559:14;3526:16;3662:22;;;2950:741;;;:::o;4259:310:5:-;1094:13:74;:11;:13::i;:::-;4458:30:5::1;::::0;4351:21:::1;::::0;4333:15:::1;::::0;4458:10:::1;::::0;::::1;::::0;4351:21;;4333:15;4458:30;4333:15;4458:30;4351:21;4458:10;:30:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4436:52;;;4499:10;4494:71;;4526:32;;;;;;;;;;;;;;4494:71;4327:242;;4259:310:::0;:::o;3697:396:112:-;3816:26;3829:4;3835:2;3839;3816:12;:26::i;:::-;3874:14;;;;:19;;:170;;-1:-1:-1;3913:66:112;;3999:45;3913:66;;;3954:10;3913:66;;;7886:34:116;3913:40:112;7956:15:116;;;7936:18;;;7929:43;7988:18;;;7981:34;;;8051:3;8031:18;;;8024:31;-1:-1:-1;8071:19:116;;;8064:30;3999:45:112;;3913:40;;;;3999:45;;8111:19:116;;3913:66:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:131;;;3874:170;3853:233;;;;;;;8597:2:116;3853:233:112;;;8579:21:116;8636:2;8616:18;;;8609:30;8675:18;8655;;;8648:46;8711:18;;3853:233:112;8395:340:116;1327:149:112;1385:13;1427:12;;;:8;:12;;;;;;1418:36;1427:12;;1410:59;;;;;;;8942:2:116;1410:59:112;;;8924:21:116;8981:2;8961:18;;;8954:30;9020:12;9000:18;;;8993:40;9050:18;;1410:59:112;8740:334:116;1410:59:112;1327:149;;;:::o;2816:244:5:-;2896:24;;;2873:7;2896:24;;;:13;:24;;;;;;;;:33;2888:67;;;;;;;9281:2:116;2888:67:5;;;9263:21:116;9320:2;9300:18;;;9293:30;9359:23;9339:18;;;9332:51;9400:18;;2888:67:5;9079:345:116;2888:67:5;2969:10;;;;;;;:18;;2983:4;2969:18;2961:64;;;;;;;9631:2:116;2961:64:5;;;9613:21:116;9670:2;9650:18;;;9643:30;9709:34;9689:18;;;9682:62;9780:3;9760:18;;;9753:31;9801:19;;2961:64:5;9429:397:116;2961:64:5;3038:17;3045:9;3038:6;:17::i;930:21::-;;;;;;;:::i;1482:168:112:-;1545:7;1572:19;;;1564:44;;;;;;;10033:2:116;1564:44:112;;;10015:21:116;10072:2;10052:18;;;10045:30;10111:14;10091:18;;;10084:42;10143:18;;1564:44:112;9831:336:116;1564:44:112;-1:-1:-1;1626:17:112;;;;;;:10;:17;;;;;;;1482:168::o;1831:101:74:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4800:125:5:-;1094:13:74;:11;:13::i;:::-;4850::5::1;:21:::0;;4903:17;;;::::1;::::0;;4800:125::o;924:20:112:-;;;;;;;:::i;2026:586:5:-;2170:24;;;2151:7;2170:24;;;:13;:24;;;;;;;;2166:66;;;2203:29;;;;;;;;;;;;;;2166:66;2243:13;;;;:21;;:13;:21;2239:92;;2282:9;2295:1;2282:14;2274:50;;;;;;;10374:2:116;2274:50:5;;;10356:21:116;10413:2;10393:18;;;10386:30;10452:25;10432:18;;;10425:53;10495:18;;2274:50:5;10172:347:116;2274:50:5;2425:38;;10714:66:116;10701:2;10697:15;;;10693:88;2425:38:5;;;10681:101:116;10798:12;;;10791:28;;;2397:15:5;;10835:12:116;;2425:38:5;;;;;;;;;;;;2415:49;;;;;;2397:67;;2486:40;2505:5;;2486:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2512:4:5;;-1:-1:-1;2518:7:5;;-1:-1:-1;2486:18:5;;-1:-1:-1;2486:40:5:i;:::-;2471:105;;;;;;;11060:2:116;2471:105:5;;;11042:21:116;11099:2;11079:18;;;11072:30;11138:34;11118:18;;;11111:62;11209:4;11189:18;;;11182:32;11231:19;;2471:105:5;10858:398:116;2471:105:5;2590:17;2597:9;2590:6;:17::i;:::-;2583:24;2026:586;-1:-1:-1;;;;;;2026:586:5:o;2741:203:112:-;2843:10;2826:28;;;;:16;:28;;;;;;;;;:38;;;;;;;;;;;;:49;;;;;;;;;;;;;2891:46;;768:41:116;;;2826:38:112;;2843:10;2891:46;;741:18:116;2891:46:112;;;;;;;2741:203;;:::o;4622:127:5:-;1094:13:74;:11;:13::i;:::-;4674::5::1;:21:::0;;4726:18;;4674:21:::1;4726:18:::0;;;4622:127::o;4099:427:112:-;4247:26;4260:4;4266:2;4270;4247:12;:26::i;:::-;4305:14;;;;:19;;:172;;-1:-1:-1;4344:68:112;;4432:45;4344:68;;;4432:45;4344:40;;;;4432:45;;4344:68;;4385:10;;4397:4;;4403:2;;4407:4;;;;4344:68;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:133;;;4305:172;4284:235;;;;;;;8597:2:116;4284:235:112;;;8579:21:116;8636:2;8616:18;;;8609:30;8675:18;8655;;;8648:46;8711:18;;4284:235:112;8395:340:116;4284:235:112;4099:427;;;;;:::o;3800:333:5:-;3893:13;3948:1;3920:16;3928:7;3920;:16::i;:::-;:30;;;3916:93;;3967:35;;;;;;;;;;;;;;3916:93;4051:1;4033:7;4027:21;;;;;:::i;:::-;;;:25;:101;;;;;;;;;;;;;;;;;4087:7;4070:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;4014:114;3800:333;-1:-1:-1;;3800:333:5:o;2081:198:74:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;13852:2:116;2161:73:74::1;::::0;::::1;13834:21:116::0;13891:2;13871:18;;;13864:30;13930:34;13910:18;;;13903:62;14001:8;13981:18;;;13974:36;14027:19;;2161:73:74::1;13650:402:116::0;2161:73:74::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1273:6;;1422:23;1273:6;719:10:99;1422:23:74;1414:68;;;;;;;14259:2:116;1414:68:74;;;14241:21:116;;;14278:18;;;14271:30;14337:34;14317:18;;;14310:62;14389:18;;1414:68:74;14057:356:116;3238:391:5;3290:7;847:10;3309:9;:23;3305:68;;3341:32;;;;;;;;;;;;;;3305:68;3380:17;3402:14;;3400:16;;;;;:::i;:::-;;;;;-1:-1:-1;3400:16:5;-1:-1:-1;750:4:5;3426:24;;3422:62;;;3459:25;;;;;;;;;;;;;;3422:62;3491:24;;;;;;;:13;:24;;;;;:31;;;;3518:4;3491:31;;;3528;3505:9;3549;3528;:31::i;:::-;3571;;;;;;;;;;;3615:9;3238:391;-1:-1:-1;;3238:391:5:o;2433:187:74:-;2525:6;;;;2541:17;;;;;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;1153:184:104:-;1274:4;1326;1297:25;1310:5;1317:4;1297:12;:25::i;:::-;:33;;1153:184;-1:-1:-1;;;;1153:184:104:o;6185:340:112:-;6255:13;6261:2;6265;6255:5;:13::i;:::-;6300:14;;;;:19;;:176;;-1:-1:-1;6339:72:112;;6431:45;6339:72;;;6380:10;6339:72;;;7886:34:116;6400:1:112;7936:18:116;;;7929:43;;;7988:18;;;7981:34;;;8051:3;8031:18;;;8024:31;8071:19;;;8064:30;6431:45:112;6339:40;;;;6431:45;;8111:19:116;;6339:72:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:137;;;6300:176;6279:239;;;;;;;8597:2:116;6279:239:112;;;8579:21:116;8636:2;8616:18;;;8609:30;8675:18;8655;;;8648:46;8711:18;;6279:239:112;8395:340:116;6279:239:112;6185:340;;:::o;1991:290:104:-;2074:7;2116:4;2074:7;2130:116;2154:5;:12;2150:1;:16;2130:116;;;2202:33;2212:12;2226:5;2232:1;2226:8;;;;;;;;:::i;:::-;;;;;;;2202:9;:33::i;:::-;2187:48;-1:-1:-1;2168:3:104;;;;:::i;:::-;;;;2130:116;;;-1:-1:-1;2262:12:104;1991:290;-1:-1:-1;;;1991:290:104:o;5243:371:112:-;5317:16;;;5309:46;;;;;;;7204:2:116;5309:46:112;;;7186:21:116;7243:2;7223:18;;;7216:30;7282:19;7262:18;;;7255:47;7319:18;;5309:46:112;7002:341:116;5309:46:112;5398:1;5374:12;;;:8;:12;;;;;;:26;:12;:26;5366:53;;;;;;;15163:2:116;5366:53:112;;;15145:21:116;15202:2;15182:18;;;15175:30;15241:16;15221:18;;;15214:44;15275:18;;5366:53:112;14961:338:116;5366:53:112;5509:14;;;;;;;:10;:14;;;;;;;;:16;;;;;;5546:12;;;:8;:12;;;;;;:17;;;;;;;;5579:28;5555:2;;5509:14;;5579:28;;5509:14;;5579:28;5243:371;;:::o;8054:147:104:-;8117:7;8147:1;8143;:5;:51;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8143:51;;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8151:20;8136:58;8054:147;-1:-1:-1;;;8054:147:104:o;196:177:116:-;281:66;274:5;270:78;263:5;260:89;250:117;;363:1;360;353:12;378:245;436:6;489:2;477:9;468:7;464:23;460:32;457:52;;;505:1;502;495:12;457:52;544:9;531:23;563:30;587:5;563:30;:::i;820:607::-;932:4;961:2;990;979:9;972:21;1022:6;1016:13;1065:6;1060:2;1049:9;1045:18;1038:34;1090:1;1100:140;1114:6;1111:1;1108:13;1100:140;;;1209:14;;;1205:23;;1199:30;1175:17;;;1194:2;1171:26;1164:66;1129:10;;1100:140;;;1104:3;1289:1;1284:2;1275:6;1264:9;1260:22;1256:31;1249:42;1418:2;1348:66;1343:2;1335:6;1331:15;1327:88;1316:9;1312:104;1308:113;1300:121;;;;820:607;;;;:::o;1432:180::-;1491:6;1544:2;1532:9;1523:7;1519:23;1515:32;1512:52;;;1560:1;1557;1550:12;1512:52;-1:-1:-1;1583:23:116;;1432:180;-1:-1:-1;1432:180:116:o;1848:154::-;1934:42;1927:5;1923:54;1916:5;1913:65;1903:93;;1992:1;1989;1982:12;2007:315;2075:6;2083;2136:2;2124:9;2115:7;2111:23;2107:32;2104:52;;;2152:1;2149;2142:12;2104:52;2191:9;2178:23;2210:31;2235:5;2210:31;:::i;:::-;2260:5;2312:2;2297:18;;;;2284:32;;-1:-1:-1;;;2007:315:116:o;2327:247::-;2386:6;2439:2;2427:9;2418:7;2414:23;2410:32;2407:52;;;2455:1;2452;2445:12;2407:52;2494:9;2481:23;2513:31;2538:5;2513:31;:::i;2579:456::-;2656:6;2664;2672;2725:2;2713:9;2704:7;2700:23;2696:32;2693:52;;;2741:1;2738;2731:12;2693:52;2780:9;2767:23;2799:31;2824:5;2799:31;:::i;:::-;2849:5;-1:-1:-1;2906:2:116;2891:18;;2878:32;2919:33;2878:32;2919:33;:::i;:::-;2579:456;;2971:7;;-1:-1:-1;;;3025:2:116;3010:18;;;;2997:32;;2579:456::o;3300:818::-;3404:6;3412;3420;3428;3481:2;3469:9;3460:7;3456:23;3452:32;3449:52;;;3497:1;3494;3487:12;3449:52;3536:9;3523:23;3555:31;3580:5;3555:31;:::i;:::-;3605:5;-1:-1:-1;3657:2:116;3642:18;;3629:32;;-1:-1:-1;3712:2:116;3697:18;;3684:32;3735:18;3765:14;;;3762:34;;;3792:1;3789;3782:12;3762:34;3830:6;3819:9;3815:22;3805:32;;3875:7;3868:4;3864:2;3860:13;3856:27;3846:55;;3897:1;3894;3887:12;3846:55;3937:2;3924:16;3963:2;3955:6;3952:14;3949:34;;;3979:1;3976;3969:12;3949:34;4032:7;4027:2;4017:6;4014:1;4010:14;4006:2;4002:23;3998:32;3995:45;3992:65;;;4053:1;4050;4043:12;3992:65;3300:818;;;;-1:-1:-1;;4084:2:116;4076:11;;-1:-1:-1;;;3300:818:116:o;4123:416::-;4188:6;4196;4249:2;4237:9;4228:7;4224:23;4220:32;4217:52;;;4265:1;4262;4255:12;4217:52;4304:9;4291:23;4323:31;4348:5;4323:31;:::i;:::-;4373:5;-1:-1:-1;4430:2:116;4415:18;;4402:32;4472:15;;4465:23;4453:36;;4443:64;;4503:1;4500;4493:12;4443:64;4526:7;4516:17;;;4123:416;;;;;:::o;4544:936::-;4641:6;4649;4657;4665;4673;4726:3;4714:9;4705:7;4701:23;4697:33;4694:53;;;4743:1;4740;4733:12;4694:53;4782:9;4769:23;4801:31;4826:5;4801:31;:::i;:::-;4851:5;-1:-1:-1;4908:2:116;4893:18;;4880:32;4921:33;4880:32;4921:33;:::i;:::-;4973:7;-1:-1:-1;5027:2:116;5012:18;;4999:32;;-1:-1:-1;5082:2:116;5067:18;;5054:32;5105:18;5135:14;;;5132:34;;;5162:1;5159;5152:12;5132:34;5200:6;5189:9;5185:22;5175:32;;5245:7;5238:4;5234:2;5230:13;5226:27;5216:55;;5267:1;5264;5257:12;5216:55;5307:2;5294:16;5333:2;5325:6;5322:14;5319:34;;;5349:1;5346;5339:12;5319:34;5394:7;5389:2;5380:6;5376:2;5372:15;5368:24;5365:37;5362:57;;;5415:1;5412;5405:12;5362:57;4544:936;;;;-1:-1:-1;4544:936:116;;-1:-1:-1;5446:2:116;5438:11;;5468:6;4544:936;-1:-1:-1;;;4544:936:116:o;5485:388::-;5553:6;5561;5614:2;5602:9;5593:7;5589:23;5585:32;5582:52;;;5630:1;5627;5620:12;5582:52;5669:9;5656:23;5688:31;5713:5;5688:31;:::i;:::-;5738:5;-1:-1:-1;5795:2:116;5780:18;;5767:32;5808:33;5767:32;5808:33;:::i;5878:437::-;5957:1;5953:12;;;;6000;;;6021:61;;6075:4;6067:6;6063:17;6053:27;;6021:61;6128:2;6120:6;6117:14;6097:18;6094:38;6091:218;;6165:77;6162:1;6155:88;6266:4;6263:1;6256:15;6294:4;6291:1;6284:15;6091:218;;5878:437;;;:::o;8141:249::-;8210:6;8263:2;8251:9;8242:7;8238:23;8234:32;8231:52;;;8279:1;8276;8269:12;8231:52;8311:9;8305:16;8330:30;8354:5;8330:30;:::i;11261:744::-;11465:4;11494:42;11575:2;11567:6;11563:15;11552:9;11545:34;11627:2;11619:6;11615:15;11610:2;11599:9;11595:18;11588:43;;11667:6;11662:2;11651:9;11647:18;11640:34;11710:3;11705:2;11694:9;11690:18;11683:31;11751:6;11745:3;11734:9;11730:19;11723:35;11809:6;11801;11795:3;11784:9;11780:19;11767:49;11866:1;11860:3;11851:6;11840:9;11836:22;11832:32;11825:43;11995:3;11925:66;11920:2;11912:6;11908:15;11904:88;11893:9;11889:104;11885:114;11877:122;;11261:744;;;;;;;;:::o;12270:1375::-;12499:3;12528:1;12561:6;12555:13;12591:3;12613:1;12641:9;12637:2;12633:18;12623:28;;12701:2;12690:9;12686:18;12723;12713:61;;12767:4;12759:6;12755:17;12745:27;;12713:61;12793:2;12841;12833:6;12830:14;12810:18;12807:38;12804:222;;12880:77;12875:3;12868:90;12981:4;12978:1;12971:15;13011:4;13006:3;12999:17;12804:222;13042:18;13069:191;;;;13274:1;13269:320;;;;13035:554;;13069:191;13117:66;13106:9;13102:82;13097:3;13090:95;13240:6;13233:14;13226:22;13218:6;13214:35;13209:3;13205:45;13198:52;;13069:191;;13269:320;12083:1;12076:14;;;12120:4;12107:18;;13364:1;13378:165;13392:6;13389:1;13386:13;13378:165;;;13470:14;;13457:11;;;13450:35;13513:16;;;;13407:10;;13378:165;;;13382:3;;13572:6;13567:3;13563:16;13556:23;;13035:554;;;;;;;13605:34;13635:3;12213:17;12201:30;;12256:2;12247:12;;12136:129;13605:34;13598:41;12270:1375;-1:-1:-1;;;;12270:1375:116:o;14418:349::-;14457:3;14488:66;14481:5;14478:77;14475:257;;14588:77;14585:1;14578:88;14689:4;14686:1;14679:15;14717:4;14714:1;14707:15;14475:257;-1:-1:-1;14759:1:116;14748:13;;14418:349::o;14772:184::-;14824:77;14821:1;14814:88;14921:4;14918:1;14911:15;14945:4;14942:1;14935:15",
    "linkReferences": {},
    "immutableReferences": {
      "1234": [
        {
          "start": 4454,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MINT_PRICE()": "c002d23d",
    "TOTAL_SUPPLY()": "902d55a5",
    "allowlistMint()": "41fbddbd",
    "alreadyMinted(address)": "0a398b88",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "currentTokenId()": "009a9b7b",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address)": "6a627842",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "privateMint(address,uint256,bytes32[])": "9886a902",
    "publicMint()": "26092b83",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "startPublicMint()": "76c64c62",
    "startWaitlistMint()": "a839e501",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "waitlistMint()": "aebb096c",
    "withdrawPayments(address)": "31b3eb94"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintPriceNotPaid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NonExistentTokenURI\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawTransfer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINT_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowlistMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"alreadyMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"privateMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPublicMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startWaitlistMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"waitlistMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"HNT Labs\",\"kind\":\"dev\",\"methods\":{\"mint(address)\":{\"params\":{\"recipient\":\"the address that will receive the minted NFT\"},\"returns\":{\"_0\":\"tokenId token id of the minted NFT\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"privateMint(address,uint256,bytes32[])\":{\"params\":{\"allowance\":\"of 1 means user is on the allowlist, @allowance of 0 means user is on the waitlist\",\"proof\":\"the generated merkle proof that this user is on the allowlist or waitlist\",\"recipient\":\"the address that will receive the minted NFT\"},\"returns\":{\"_0\":\"tokenId token id of the minted NFT\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"tokenURI(uint256)\":{\"params\":{\"tokenId\":\"the id of the token to get the tokenURI for\"},\"returns\":{\"_0\":\"the tokenURI for the given tokenId\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawPayments(address)\":{\"params\":{\"payee\":\"the address that will receive the withdrawn ether\"}}},\"title\":\"CouncilNFT\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyMinted()\":[{\"notice\":\"thrown when user tries to mint more than 1 token with same wallet\"}],\"MaxSupply()\":[{\"notice\":\"thrown when the max supply is reached\"}],\"MintPriceNotPaid()\":[{\"notice\":\"thrown when an incorrect amount of ETH is sent to mint\"}],\"NonExistentTokenURI()\":[{\"notice\":\"thrown when a token is not minted\"}],\"WithdrawTransfer()\":[{\"notice\":\"thrown when the withdraw payment transaction fails\"}]},\"kind\":\"user\",\"methods\":{\"MINT_PRICE()\":{\"notice\":\"the mint price for an individual nft\"},\"TOTAL_SUPPLY()\":{\"notice\":\"the total supply of the collection\"},\"alreadyMinted(address)\":{\"notice\":\"mapping to track which  users have already minted an nft\"},\"baseURI()\":{\"notice\":\"the base uri for the nft metadata including image uri\"},\"currentTokenId()\":{\"notice\":\"the counter token id for the next mint\"},\"mint(address)\":{\"notice\":\"the secondary minting method used only when public minting is active\"},\"privateMint(address,uint256,bytes32[])\":{\"notice\":\"the primary minting method for the allowlist and waitlist minting periods\"},\"startPublicMint()\":{\"notice\":\"starts the public minting period\"},\"startWaitlistMint()\":{\"notice\":\"starts the waitlist minting period\"},\"tokenURI(uint256)\":{\"notice\":\"Get the tokenURI for the given tokenId\"},\"withdrawPayments(address)\":{\"notice\":\"withdraw the balance from the contract\"}},\"notice\":\"This is the main NFT contract for the council of Zion\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/zion-governance/src/council/CouncilNFT.sol\":\"CouncilNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@harmony/=node_modules/@harmony/\",\":@opengsn/=node_modules/@opengsn/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity-json-writer/=node_modules/solidity-json-writer/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/zion-governance/src/council/CouncilNFT.sol\":{\"keccak256\":\"0x149fcec41ae04c02504dc760c947f4a436385156b3c66af2b9954911feaf5d2c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3196ee62b968875a47315279e6f6c90f77b64c7477c0608a286eca5450fbfd71\",\"dweb:/ipfs/QmPo2xANXAa2E4qGHJPiH33S6rfeT5uSGtPWTms41jvXXn\"]},\"contracts/zion-governance/src/council/libraries/CouncilErrors.sol\":{\"keccak256\":\"0x5e7ef03bdac9b2acca7cc67467765787e5387c533fb99807d761d639d78a1949\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a8afb26af4a9b7cb160ac10f822f591efdfcf74423ff58289264f1205cb8f578\",\"dweb:/ipfs/QmXYwWyy2bJSps8nUeLBss7wCY4zUJzDotaqh4tZUMu6jc\"]},\"contracts/zion-governance/src/council/libraries/CouncilEvents.sol\":{\"keccak256\":\"0x8aaeb1b2e207af77f4a2991319bd40355d55a4dafad0291c63d9a2767cbbc4ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1cfaad4621e80c43319ce12c07acdf75693a8fb28d17cd97ddfd1f8936b09e97\",\"dweb:/ipfs/QmXwNeZDJ2zhjjoPGtyTaKrLagCf3D4RVx543PWHwtnxpB\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f49013d50b1011c842f76e96f3c3f146ca7cb15084c8805575e0e0e1a5c700\",\"dweb:/ipfs/QmQ3n5qiuioUA74heD6ZddNkYg1kYihjQBNcy9zgwYXKgM\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403\",\"dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "_root",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MaxSupply"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MintPriceNotPaid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NonExistentTokenURI"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "WithdrawTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINT_PRICE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TOTAL_SUPPLY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "allowlistMint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "alreadyMinted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "privateMint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "publicMint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startPublicMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startWaitlistMint"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "waitlistMint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "payee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawPayments"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "mint(address)": {
            "params": {
              "recipient": "the address that will receive the minted NFT"
            },
            "returns": {
              "_0": "tokenId token id of the minted NFT"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "privateMint(address,uint256,bytes32[])": {
            "params": {
              "allowance": "of 1 means user is on the allowlist, @allowance of 0 means user is on the waitlist",
              "proof": "the generated merkle proof that this user is on the allowlist or waitlist",
              "recipient": "the address that will receive the minted NFT"
            },
            "returns": {
              "_0": "tokenId token id of the minted NFT"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "tokenURI(uint256)": {
            "params": {
              "tokenId": "the id of the token to get the tokenURI for"
            },
            "returns": {
              "_0": "the tokenURI for the given tokenId"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdrawPayments(address)": {
            "params": {
              "payee": "the address that will receive the withdrawn ether"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MINT_PRICE()": {
            "notice": "the mint price for an individual nft"
          },
          "TOTAL_SUPPLY()": {
            "notice": "the total supply of the collection"
          },
          "alreadyMinted(address)": {
            "notice": "mapping to track which  users have already minted an nft"
          },
          "baseURI()": {
            "notice": "the base uri for the nft metadata including image uri"
          },
          "currentTokenId()": {
            "notice": "the counter token id for the next mint"
          },
          "mint(address)": {
            "notice": "the secondary minting method used only when public minting is active"
          },
          "privateMint(address,uint256,bytes32[])": {
            "notice": "the primary minting method for the allowlist and waitlist minting periods"
          },
          "startPublicMint()": {
            "notice": "starts the public minting period"
          },
          "startWaitlistMint()": {
            "notice": "starts the waitlist minting period"
          },
          "tokenURI(uint256)": {
            "notice": "Get the tokenURI for the given tokenId"
          },
          "withdrawPayments(address)": {
            "notice": "withdraw the balance from the contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@harmony/=node_modules/@harmony/",
        ":@opengsn/=node_modules/@opengsn/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":murky/=lib/murky/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solidity-json-writer/=node_modules/solidity-json-writer/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/zion-governance/src/council/CouncilNFT.sol": "CouncilNFT"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/zion-governance/src/council/CouncilNFT.sol": {
        "keccak256": "0x149fcec41ae04c02504dc760c947f4a436385156b3c66af2b9954911feaf5d2c",
        "urls": [
          "bzz-raw://3196ee62b968875a47315279e6f6c90f77b64c7477c0608a286eca5450fbfd71",
          "dweb:/ipfs/QmPo2xANXAa2E4qGHJPiH33S6rfeT5uSGtPWTms41jvXXn"
        ],
        "license": "Apache-2.0"
      },
      "contracts/zion-governance/src/council/libraries/CouncilErrors.sol": {
        "keccak256": "0x5e7ef03bdac9b2acca7cc67467765787e5387c533fb99807d761d639d78a1949",
        "urls": [
          "bzz-raw://a8afb26af4a9b7cb160ac10f822f591efdfcf74423ff58289264f1205cb8f578",
          "dweb:/ipfs/QmXYwWyy2bJSps8nUeLBss7wCY4zUJzDotaqh4tZUMu6jc"
        ],
        "license": "Apache-2.0"
      },
      "contracts/zion-governance/src/council/libraries/CouncilEvents.sol": {
        "keccak256": "0x8aaeb1b2e207af77f4a2991319bd40355d55a4dafad0291c63d9a2767cbbc4ca",
        "urls": [
          "bzz-raw://1cfaad4621e80c43319ce12c07acdf75693a8fb28d17cd97ddfd1f8936b09e97",
          "dweb:/ipfs/QmXwNeZDJ2zhjjoPGtyTaKrLagCf3D4RVx543PWHwtnxpB"
        ],
        "license": "Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7",
        "urls": [
          "bzz-raw://d5f49013d50b1011c842f76e96f3c3f146ca7cb15084c8805575e0e0e1a5c700",
          "dweb:/ipfs/QmQ3n5qiuioUA74heD6ZddNkYg1kYihjQBNcy9zgwYXKgM"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0x04af19f16f00ba65ae168d6d10da5210dc18da6bcec6974dccf984ba388aa22d",
        "urls": [
          "bzz-raw://098e69f22b67da6927e03203c12ebfda5b0490518f6d9cce7853001ac5ad8403",
          "dweb:/ipfs/QmYyzfurQe88PsVjRNfutV3gS7Vi68f7zgtVZVtLfd4ViK"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/zion-governance/src/council/CouncilNFT.sol",
    "id": 1520,
    "exportedSymbols": {
      "CouncilErrors": [
        2129
      ],
      "CouncilEvents": [
        2158
      ],
      "CouncilNFT": [
        1519
      ],
      "ERC721": [
        51826
      ],
      "ERC721TokenReceiver": [
        51846
      ],
      "MerkleProof": [
        46919
      ],
      "Ownable": [
        39542
      ],
      "Strings": [
        45842
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:4890:5",
    "nodes": [
      {
        "id": 1187,
        "nodeType": "PragmaDirective",
        "src": "38:23:5",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 1188,
        "nodeType": "ImportDirective",
        "src": "63:35:5",
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "solmate/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1520,
        "sourceUnit": 51847,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1190,
        "nodeType": "ImportDirective",
        "src": "99:76:5",
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1520,
        "sourceUnit": 39543,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1189,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39542,
              "src": "107:7:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1192,
        "nodeType": "ImportDirective",
        "src": "176:75:5",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "openzeppelin-contracts/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1520,
        "sourceUnit": 45843,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1191,
              "name": "Strings",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45842,
              "src": "184:7:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1194,
        "nodeType": "ImportDirective",
        "src": "252:60:5",
        "absolutePath": "contracts/zion-governance/src/council/libraries/CouncilErrors.sol",
        "file": "./libraries/CouncilErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1520,
        "sourceUnit": 2130,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1193,
              "name": "CouncilErrors",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2129,
              "src": "260:13:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1196,
        "nodeType": "ImportDirective",
        "src": "313:60:5",
        "absolutePath": "contracts/zion-governance/src/council/libraries/CouncilEvents.sol",
        "file": "./libraries/CouncilEvents.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1520,
        "sourceUnit": 2159,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1195,
              "name": "CouncilEvents",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2158,
              "src": "321:13:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1198,
        "nodeType": "ImportDirective",
        "src": "374:96:5",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1520,
        "sourceUnit": 46920,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1197,
              "name": "MerkleProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46919,
              "src": "382:11:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1519,
        "nodeType": "ContractDefinition",
        "src": "589:4338:5",
        "nodes": [
          {
            "id": 1206,
            "nodeType": "UsingForDirective",
            "src": "632:26:5",
            "global": false,
            "libraryName": {
              "id": 1204,
              "name": "Strings",
              "nameLocations": [
                "638:7:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45842,
              "src": "638:7:5"
            },
            "typeName": {
              "id": 1205,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "650:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1210,
            "nodeType": "VariableDeclaration",
            "src": "711:43:5",
            "constant": true,
            "documentation": {
              "id": 1207,
              "nodeType": "StructuredDocumentation",
              "src": "662:46:5",
              "text": "@notice the total supply of the collection"
            },
            "functionSelector": "902d55a5",
            "mutability": "constant",
            "name": "TOTAL_SUPPLY",
            "nameLocation": "735:12:5",
            "scope": 1519,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1208,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "711:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32353030",
              "id": 1209,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "750:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2500_by_1",
                "typeString": "int_const 2500"
              },
              "value": "2500"
            },
            "visibility": "public"
          },
          {
            "id": 1214,
            "nodeType": "VariableDeclaration",
            "src": "810:47:5",
            "constant": true,
            "documentation": {
              "id": 1211,
              "nodeType": "StructuredDocumentation",
              "src": "759:48:5",
              "text": "@notice the mint price for an individual nft"
            },
            "functionSelector": "c002d23d",
            "mutability": "constant",
            "name": "MINT_PRICE",
            "nameLocation": "834:10:5",
            "scope": 1519,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1212,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "810:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3038",
              "id": 1213,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "847:10:5",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_80000000000000000_by_1",
                "typeString": "int_const 80000000000000000"
              },
              "value": "0.08"
            },
            "visibility": "public"
          },
          {
            "id": 1217,
            "nodeType": "VariableDeclaration",
            "src": "930:21:5",
            "constant": false,
            "documentation": {
              "id": 1215,
              "nodeType": "StructuredDocumentation",
              "src": "862:65:5",
              "text": "@notice the base uri for the nft metadata including image uri"
            },
            "functionSelector": "6c0360eb",
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "944:7:5",
            "scope": 1519,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1216,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "930:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1220,
            "nodeType": "VariableDeclaration",
            "src": "1009:29:5",
            "constant": false,
            "documentation": {
              "id": 1218,
              "nodeType": "StructuredDocumentation",
              "src": "956:50:5",
              "text": "@notice the counter token id for the next mint"
            },
            "functionSelector": "009a9b7b",
            "mutability": "mutable",
            "name": "currentTokenId",
            "nameLocation": "1024:14:5",
            "scope": 1519,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1219,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1009:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1225,
            "nodeType": "VariableDeclaration",
            "src": "1114:45:5",
            "constant": false,
            "documentation": {
              "id": 1221,
              "nodeType": "StructuredDocumentation",
              "src": "1043:68:5",
              "text": "@notice mapping to track which  users have already minted an nft"
            },
            "functionSelector": "0a398b88",
            "mutability": "mutable",
            "name": "alreadyMinted",
            "nameLocation": "1146:13:5",
            "scope": 1519,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1224,
              "keyType": {
                "id": 1222,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1122:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1114:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1223,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1133:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 1227,
            "nodeType": "VariableDeclaration",
            "src": "1227:25:5",
            "constant": false,
            "functionSelector": "41fbddbd",
            "mutability": "mutable",
            "name": "allowlistMint",
            "nameLocation": "1239:13:5",
            "scope": 1519,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1226,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1227:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1229,
            "nodeType": "VariableDeclaration",
            "src": "1256:24:5",
            "constant": false,
            "functionSelector": "aebb096c",
            "mutability": "mutable",
            "name": "waitlistMint",
            "nameLocation": "1268:12:5",
            "scope": 1519,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1228,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1256:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1231,
            "nodeType": "VariableDeclaration",
            "src": "1284:22:5",
            "constant": false,
            "functionSelector": "26092b83",
            "mutability": "mutable",
            "name": "publicMint",
            "nameLocation": "1296:10:5",
            "scope": 1519,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1230,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1284:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1234,
            "nodeType": "VariableDeclaration",
            "src": "1371:31:5",
            "constant": false,
            "documentation": {
              "id": 1232,
              "nodeType": "StructuredDocumentation",
              "src": "1311:57:5",
              "text": "@notice the root of the merkle tree for the allowlist"
            },
            "mutability": "immutable",
            "name": "root",
            "nameLocation": "1398:4:5",
            "scope": 1519,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1233,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1371:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1262,
            "nodeType": "FunctionDefinition",
            "src": "1407:211:5",
            "body": {
              "id": 1261,
              "nodeType": "Block",
              "src": "1545:73:5",
              "statements": [
                {
                  "expression": {
                    "id": 1251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1249,
                      "name": "baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1217,
                      "src": "1551:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1250,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1240,
                      "src": "1561:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1551:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1252,
                  "nodeType": "ExpressionStatement",
                  "src": "1551:18:5"
                },
                {
                  "expression": {
                    "id": 1255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1253,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1234,
                      "src": "1575:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1254,
                      "name": "_root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1242,
                      "src": "1582:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1575:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1256,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:12:5"
                },
                {
                  "expression": {
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1257,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1227,
                      "src": "1593:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1609:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1593:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1260,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:20:5"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1245,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1236,
                    "src": "1529:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1246,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1238,
                    "src": "1536:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1247,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1244,
                  "name": "ERC721",
                  "nameLocations": [
                    "1522:6:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51826,
                  "src": "1522:6:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1522:22:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1236,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1438:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "1424:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1235,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1238,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1463:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "1449:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1237,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1240,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "1490:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "1476:22:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1239,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1242,
                  "mutability": "mutable",
                  "name": "_root",
                  "nameLocation": "1512:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1262,
                  "src": "1504:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1241,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1504:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1418:103:5"
            },
            "returnParameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1545:0:5"
            },
            "scope": 1519,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1321,
            "nodeType": "FunctionDefinition",
            "src": "2026:586:5",
            "body": {
              "id": 1320,
              "nodeType": "Block",
              "src": "2160:452:5",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 1275,
                      "name": "alreadyMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "2170:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1277,
                    "indexExpression": {
                      "id": 1276,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1265,
                      "src": "2184:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2170:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1283,
                  "nodeType": "IfStatement",
                  "src": "2166:66:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1278,
                          "name": "CouncilErrors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2129,
                          "src": "2203:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CouncilErrors_$2129_$",
                            "typeString": "type(library CouncilErrors)"
                          }
                        },
                        "id": 1280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2217:13:5",
                        "memberName": "AlreadyMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2116,
                        "src": "2203:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2203:29:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1282,
                    "nodeType": "RevertStatement",
                    "src": "2196:36:5"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1284,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1227,
                      "src": "2243:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2260:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2243:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1295,
                  "nodeType": "IfStatement",
                  "src": "2239:92:5",
                  "trueBody": {
                    "id": 1294,
                    "nodeType": "Block",
                    "src": "2266:65:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1288,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1267,
                                "src": "2282:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2295:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2282:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420616c6c6f77656420746f206d696e7420796574",
                              "id": 1291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2298:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_93e88215183578f5aaa04bb5f966ce76eb49ed954a4c7e3c4044873616fa3eee",
                                "typeString": "literal_string \"Not allowed to mint yet\""
                              },
                              "value": "Not allowed to mint yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_93e88215183578f5aaa04bb5f966ce76eb49ed954a4c7e3c4044873616fa3eee",
                                "typeString": "literal_string \"Not allowed to mint yet\""
                              }
                            ],
                            "id": 1287,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2274:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2274:50:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1293,
                        "nodeType": "ExpressionStatement",
                        "src": "2274:50:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1297
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1297,
                      "mutability": "mutable",
                      "name": "payload",
                      "nameLocation": "2405:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1320,
                      "src": "2397:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1296,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2397:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1305,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1301,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "2442:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1302,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1267,
                            "src": "2453:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1299,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2425:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2429:12:5",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2425:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2425:38:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1298,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2415:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2415:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2397:67:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1309,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1270,
                            "src": "2505:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 1310,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1234,
                            "src": "2512:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1311,
                            "name": "payload",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1297,
                            "src": "2518:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1307,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46919,
                            "src": "2486:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$46919_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 1308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2498:6:5",
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46441,
                          "src": "2486:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2486:40:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206d65726b6c6520747265652070726f6f6620737570706c696564",
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2534:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2f47add308f7d76603eeee5e3edc71de6361e9f105e76633970ce1b8dd69f22",
                          "typeString": "literal_string \"Invalid merkle tree proof supplied\""
                        },
                        "value": "Invalid merkle tree proof supplied"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2f47add308f7d76603eeee5e3edc71de6361e9f105e76633970ce1b8dd69f22",
                          "typeString": "literal_string \"Invalid merkle tree proof supplied\""
                        }
                      ],
                      "id": 1306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2471:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2471:105:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1315,
                  "nodeType": "ExpressionStatement",
                  "src": "2471:105:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1317,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1265,
                        "src": "2597:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1316,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1402,
                      "src": "2590:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2590:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1274,
                  "id": 1319,
                  "nodeType": "Return",
                  "src": "2583:24:5"
                }
              ]
            },
            "documentation": {
              "id": 1263,
              "nodeType": "StructuredDocumentation",
              "src": "1622:401:5",
              "text": "@notice the primary minting method for the allowlist and waitlist minting periods\n @param recipient the address that will receive the minted NFT\n @param allowance of 1 means user is on the allowlist, @allowance of 0 means user is on the waitlist\n @param proof the generated merkle proof that this user is on the allowlist or waitlist\n @return tokenId token id of the minted NFT"
            },
            "functionSelector": "9886a902",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "privateMint",
            "nameLocation": "2035:11:5",
            "parameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1265,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2060:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "2052:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1264,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2052:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1267,
                  "mutability": "mutable",
                  "name": "allowance",
                  "nameLocation": "2083:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "2075:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2075:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1270,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "2117:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "2098:24:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1268,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2098:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1269,
                    "nodeType": "ArrayTypeName",
                    "src": "2098:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2046:80:5"
            },
            "returnParameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1273,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "2151:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2150:9:5"
            },
            "scope": 1519,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1350,
            "nodeType": "FunctionDefinition",
            "src": "2816:244:5",
            "body": {
              "id": 1349,
              "nodeType": "Block",
              "src": "2882:178:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1330,
                            "name": "alreadyMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "2896:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1332,
                          "indexExpression": {
                            "id": 1331,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1324,
                            "src": "2910:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2896:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2924:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2896:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479206d696e74656420616e204e4654",
                        "id": 1335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2931:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08f848b7b93077c49a2062c9a8c995a84d478ced136ec2a97db79946837b3e71",
                          "typeString": "literal_string \"Already minted an NFT\""
                        },
                        "value": "Already minted an NFT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08f848b7b93077c49a2062c9a8c995a84d478ced136ec2a97db79946837b3e71",
                          "typeString": "literal_string \"Already minted an NFT\""
                        }
                      ],
                      "id": 1329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2888:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2888:67:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "2888:67:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1339,
                          "name": "publicMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1231,
                          "src": "2969:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2983:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2969:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5075626c6963206d696e74696e67206973206e6f7420616c6c6f77656420796574",
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2989:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3856cc290bfb870311067a6378c21a0013e2d9c7ec535e31b3c89448b1aedb92",
                          "typeString": "literal_string \"Public minting is not allowed yet\""
                        },
                        "value": "Public minting is not allowed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3856cc290bfb870311067a6378c21a0013e2d9c7ec535e31b3c89448b1aedb92",
                          "typeString": "literal_string \"Public minting is not allowed yet\""
                        }
                      ],
                      "id": 1338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2961:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2961:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1344,
                  "nodeType": "ExpressionStatement",
                  "src": "2961:64:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1346,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1324,
                        "src": "3045:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1345,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1402,
                      "src": "3038:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3038:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1328,
                  "id": 1348,
                  "nodeType": "Return",
                  "src": "3031:24:5"
                }
              ]
            },
            "documentation": {
              "id": 1322,
              "nodeType": "StructuredDocumentation",
              "src": "2616:197:5",
              "text": "@notice the secondary minting method used only when public minting is active\n @param recipient the address that will receive the minted NFT\n @return tokenId token id of the minted NFT"
            },
            "functionSelector": "6a627842",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "2825:4:5",
            "parameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1324,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2838:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1350,
                  "src": "2830:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2830:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2829:19:5"
            },
            "returnParameters": {
              "id": 1328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1327,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1350,
                  "src": "2873:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2873:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2872:9:5"
            },
            "scope": 1519,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1402,
            "nodeType": "FunctionDefinition",
            "src": "3238:391:5",
            "body": {
              "id": 1401,
              "nodeType": "Block",
              "src": "3299:330:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1358,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3309:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3313:5:5",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3309:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1360,
                      "name": "MINT_PRICE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1214,
                      "src": "3322:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3309:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1367,
                  "nodeType": "IfStatement",
                  "src": "3305:68:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1362,
                          "name": "CouncilErrors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2129,
                          "src": "3341:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CouncilErrors_$2129_$",
                            "typeString": "type(library CouncilErrors)"
                          }
                        },
                        "id": 1364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3355:16:5",
                        "memberName": "MintPriceNotPaid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2104,
                        "src": "3341:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3341:32:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1366,
                    "nodeType": "RevertStatement",
                    "src": "3334:39:5"
                  }
                },
                {
                  "assignments": [
                    1369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1369,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "3388:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1401,
                      "src": "3380:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1368,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3380:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1372,
                  "initialValue": {
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "3400:16:5",
                    "subExpression": {
                      "id": 1370,
                      "name": "currentTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1220,
                      "src": "3402:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3380:36:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1373,
                      "name": "newItemId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1369,
                      "src": "3426:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1374,
                      "name": "TOTAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1210,
                      "src": "3438:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3426:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1381,
                  "nodeType": "IfStatement",
                  "src": "3422:62:5",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 1376,
                          "name": "CouncilErrors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2129,
                          "src": "3459:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CouncilErrors_$2129_$",
                            "typeString": "type(library CouncilErrors)"
                          }
                        },
                        "id": 1378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3473:9:5",
                        "memberName": "MaxSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2107,
                        "src": "3459:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3459:25:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1380,
                    "nodeType": "RevertStatement",
                    "src": "3452:32:5"
                  }
                },
                {
                  "expression": {
                    "id": 1386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1382,
                        "name": "alreadyMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1225,
                        "src": "3491:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1384,
                      "indexExpression": {
                        "id": 1383,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1353,
                        "src": "3505:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3491:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3518:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3491:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1387,
                  "nodeType": "ExpressionStatement",
                  "src": "3491:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1389,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1353,
                        "src": "3538:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1390,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1369,
                        "src": "3549:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1388,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        51783,
                        51825
                      ],
                      "referencedDeclaration": 51783,
                      "src": "3528:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3528:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1392,
                  "nodeType": "ExpressionStatement",
                  "src": "3528:31:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1396,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1353,
                        "src": "3592:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1393,
                        "name": "CouncilEvents",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2158,
                        "src": "3571:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CouncilEvents_$2158_$",
                          "typeString": "type(library CouncilEvents)"
                        }
                      },
                      "id": 1395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3585:6:5",
                      "memberName": "Minted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2136,
                      "src": "3571:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3571:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1398,
                  "nodeType": "EmitStatement",
                  "src": "3566:36:5"
                },
                {
                  "expression": {
                    "id": 1399,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1369,
                    "src": "3615:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1357,
                  "id": 1400,
                  "nodeType": "Return",
                  "src": "3608:16:5"
                }
              ]
            },
            "documentation": {
              "id": 1351,
              "nodeType": "StructuredDocumentation",
              "src": "3064:171:5",
              "text": "@notice Verify that the user sent the proper amount of ether to mint\n @notice Verify that there are still more NFTs to mint\n @notice Mint the NFT to the user"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "3247:6:5",
            "parameters": {
              "id": 1354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1353,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3262:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1402,
                  "src": "3254:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3254:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3253:19:5"
            },
            "returnParameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1356,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1402,
                  "src": "3290:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3290:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3289:9:5"
            },
            "scope": 1519,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 1445,
            "nodeType": "FunctionDefinition",
            "src": "3800:333:5",
            "body": {
              "id": 1444,
              "nodeType": "Block",
              "src": "3910:223:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 1412,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1405,
                          "src": "3928:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1411,
                        "name": "ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51351,
                        "src": "3920:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 1413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3920:16:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3948:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3940:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1414,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3940:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3940:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3920:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1425,
                  "nodeType": "IfStatement",
                  "src": "3916:93:5",
                  "trueBody": {
                    "id": 1424,
                    "nodeType": "Block",
                    "src": "3952:57:5",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1419,
                              "name": "CouncilErrors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2129,
                              "src": "3967:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CouncilErrors_$2129_$",
                                "typeString": "type(library CouncilErrors)"
                              }
                            },
                            "id": 1421,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3981:19:5",
                            "memberName": "NonExistentTokenURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2110,
                            "src": "3967:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3967:35:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1423,
                        "nodeType": "RevertStatement",
                        "src": "3960:42:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1428,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1217,
                              "src": "4033:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "id": 1427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4027:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 1426,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4027:5:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4027:14:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes storage pointer"
                          }
                        },
                        "id": 1430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4042:6:5",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4027:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4051:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4027:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 1441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4126:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 1442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4027:101:5",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1437,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1217,
                              "src": "4087:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "hexValue": "636f756e63696c6d65746164617461",
                              "id": 1438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4096:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fe29c6027f746311fa0ffb1256ea191de5e1b7ce95dde50a8f5de26c1a095a51",
                                "typeString": "literal_string \"councilmetadata\""
                              },
                              "value": "councilmetadata"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fe29c6027f746311fa0ffb1256ea191de5e1b7ce95dde50a8f5de26c1a095a51",
                                "typeString": "literal_string \"councilmetadata\""
                              }
                            ],
                            "expression": {
                              "id": 1435,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "4070:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4074:12:5",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "4070:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4070:44:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4063:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 1433,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4063:6:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4063:52:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1410,
                  "id": 1443,
                  "nodeType": "Return",
                  "src": "4014:114:5"
                }
              ]
            },
            "baseFunctions": [
              51320
            ],
            "documentation": {
              "id": 1403,
              "nodeType": "StructuredDocumentation",
              "src": "3633:164:5",
              "text": "@notice Get the tokenURI for the given tokenId\n @param tokenId the id of the token to get the tokenURI for\n @return the tokenURI for the given tokenId"
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "3809:8:5",
            "overrides": {
              "id": 1407,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3871:8:5"
            },
            "parameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3826:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1445,
                  "src": "3818:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3818:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3817:17:5"
            },
            "returnParameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1409,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1445,
                  "src": "3893:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1408,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3893:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3892:15:5"
            },
            "scope": 1519,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 1480,
            "nodeType": "FunctionDefinition",
            "src": "4259:310:5",
            "body": {
              "id": 1479,
              "nodeType": "Block",
              "src": "4327:242:5",
              "statements": [
                {
                  "assignments": [
                    1454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1454,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "4341:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1479,
                      "src": "4333:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1453,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4333:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1460,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1457,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4359:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CouncilNFT_$1519",
                            "typeString": "contract CouncilNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CouncilNFT_$1519",
                            "typeString": "contract CouncilNFT"
                          }
                        ],
                        "id": 1456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4351:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1455,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4351:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4351:13:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4365:7:5",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4351:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4333:39:5"
                },
                {
                  "assignments": [
                    1462,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1462,
                      "mutability": "mutable",
                      "name": "transferTx",
                      "nameLocation": "4442:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1479,
                      "src": "4437:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1461,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4437:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1469,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4485:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1463,
                          "name": "payee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "4458:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4464:4:5",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4458:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1465,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "4476:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4458:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4458:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4436:52:5"
                },
                {
                  "condition": {
                    "id": 1471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4498:11:5",
                    "subExpression": {
                      "id": 1470,
                      "name": "transferTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1462,
                      "src": "4499:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1478,
                  "nodeType": "IfStatement",
                  "src": "4494:71:5",
                  "trueBody": {
                    "id": 1477,
                    "nodeType": "Block",
                    "src": "4511:54:5",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1472,
                              "name": "CouncilErrors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2129,
                              "src": "4526:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CouncilErrors_$2129_$",
                                "typeString": "type(library CouncilErrors)"
                              }
                            },
                            "id": 1474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4540:16:5",
                            "memberName": "WithdrawTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2113,
                            "src": "4526:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4526:32:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1476,
                        "nodeType": "RevertStatement",
                        "src": "4519:39:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1446,
              "nodeType": "StructuredDocumentation",
              "src": "4137:119:5",
              "text": "@notice withdraw the balance from the contract\n @param payee the address that will receive the withdrawn ether"
            },
            "functionSelector": "31b3eb94",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1451,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1450,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4317:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39461,
                  "src": "4317:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4317:9:5"
              }
            ],
            "name": "withdrawPayments",
            "nameLocation": "4268:16:5",
            "parameters": {
              "id": 1449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1448,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "4301:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1480,
                  "src": "4285:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4285:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4284:23:5"
            },
            "returnParameters": {
              "id": 1452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4327:0:5"
            },
            "scope": 1519,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1499,
            "nodeType": "FunctionDefinition",
            "src": "4622:127:5",
            "body": {
              "id": 1498,
              "nodeType": "Block",
              "src": "4668:81:5",
              "statements": [
                {
                  "expression": {
                    "id": 1488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1486,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1227,
                      "src": "4674:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4690:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4674:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1489,
                  "nodeType": "ExpressionStatement",
                  "src": "4674:21:5"
                },
                {
                  "expression": {
                    "id": 1492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1490,
                      "name": "waitlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1229,
                      "src": "4701:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4716:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4701:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1493,
                  "nodeType": "ExpressionStatement",
                  "src": "4701:19:5"
                },
                {
                  "expression": {
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1494,
                      "name": "publicMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1231,
                      "src": "4726:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4739:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4726:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1497,
                  "nodeType": "ExpressionStatement",
                  "src": "4726:18:5"
                }
              ]
            },
            "documentation": {
              "id": 1481,
              "nodeType": "StructuredDocumentation",
              "src": "4573:46:5",
              "text": "@notice starts the waitlist minting period"
            },
            "functionSelector": "a839e501",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1484,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1483,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4658:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39461,
                  "src": "4658:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4658:9:5"
              }
            ],
            "name": "startWaitlistMint",
            "nameLocation": "4631:17:5",
            "parameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4648:2:5"
            },
            "returnParameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4668:0:5"
            },
            "scope": 1519,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1518,
            "nodeType": "FunctionDefinition",
            "src": "4800:125:5",
            "body": {
              "id": 1517,
              "nodeType": "Block",
              "src": "4844:81:5",
              "statements": [
                {
                  "expression": {
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1505,
                      "name": "allowlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1227,
                      "src": "4850:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4866:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4850:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1508,
                  "nodeType": "ExpressionStatement",
                  "src": "4850:21:5"
                },
                {
                  "expression": {
                    "id": 1511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1509,
                      "name": "waitlistMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1229,
                      "src": "4877:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4892:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4877:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1512,
                  "nodeType": "ExpressionStatement",
                  "src": "4877:20:5"
                },
                {
                  "expression": {
                    "id": 1515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1513,
                      "name": "publicMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1231,
                      "src": "4903:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4916:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4903:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1516,
                  "nodeType": "ExpressionStatement",
                  "src": "4903:17:5"
                }
              ]
            },
            "documentation": {
              "id": 1500,
              "nodeType": "StructuredDocumentation",
              "src": "4753:44:5",
              "text": "@notice starts the public minting period"
            },
            "functionSelector": "76c64c62",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1503,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1502,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4834:9:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39461,
                  "src": "4834:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4834:9:5"
              }
            ],
            "name": "startPublicMint",
            "nameLocation": "4809:15:5",
            "parameters": {
              "id": 1501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4824:2:5"
            },
            "returnParameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4844:0:5"
            },
            "scope": 1519,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1200,
              "name": "ERC721",
              "nameLocations": [
                "612:6:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51826,
              "src": "612:6:5"
            },
            "id": 1201,
            "nodeType": "InheritanceSpecifier",
            "src": "612:6:5"
          },
          {
            "baseName": {
              "id": 1202,
              "name": "Ownable",
              "nameLocations": [
                "620:7:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39542,
              "src": "620:7:5"
            },
            "id": 1203,
            "nodeType": "InheritanceSpecifier",
            "src": "620:7:5"
          }
        ],
        "canonicalName": "CouncilNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1199,
          "nodeType": "StructuredDocumentation",
          "src": "472:116:5",
          "text": " @title CouncilNFT\n @author HNT Labs\n @notice This is the main NFT contract for the council of Zion"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1519,
          39542,
          45542,
          51826
        ],
        "name": "CouncilNFT",
        "nameLocation": "598:10:5",
        "scope": 1520,
        "usedErrors": [
          2104,
          2107,
          2110,
          2113,
          2116
        ]
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 5
}
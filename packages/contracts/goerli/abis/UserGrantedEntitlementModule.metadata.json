{
  "compiler": {
    "version": "0.8.17+commit.8df45f5f"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name_",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "description_",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "moduleType_",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "spaceManager_",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "roleManager_",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "permissionRegistry_",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "InvalidParameters",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "NotSpaceManager",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "RoleAlreadyExists",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "_permisionRegistry",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "_roleManager",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "_spaceManager",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "channelId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "addRoleIdToChannel",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "description",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "getEntitlementDataByRoleId",
        "outputs": [
          {
            "internalType": "bytes[]",
            "name": "",
            "type": "bytes[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          }
        ],
        "name": "getUserRoles",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "roleId",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "internalType": "struct DataTypes.Role[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "channelId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              }
            ],
            "internalType": "struct DataTypes.Permission",
            "name": "permission",
            "type": "tuple"
          }
        ],
        "name": "isEntitled",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "moduleType",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "channelId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "name": "removeRoleIdFromChannel",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "entitlementData",
            "type": "bytes"
          }
        ],
        "name": "removeSpaceEntitlement",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "spaceId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "entitlementData",
            "type": "bytes"
          }
        ],
        "name": "setSpaceEntitlement",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "supportsInterface(bytes4)": {
          "details": "See {IERC165-supportsInterface}."
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "addRoleIdToChannel(uint256,uint256,uint256)": {
          "notice": "Adds a roleId to a channel"
        },
        "description()": {
          "notice": "The description of the entitlement module"
        },
        "getEntitlementDataByRoleId(uint256,uint256)": {
          "notice": "Gets the list of entitlement data for a role"
        },
        "moduleType()": {
          "notice": "The type of the entitlement module"
        },
        "name()": {
          "notice": "The name of the entitlement module"
        },
        "removeRoleIdFromChannel(uint256,uint256,uint256)": {
          "notice": "Removes  a roleId from a channel"
        },
        "removeSpaceEntitlement(uint256,uint256,bytes)": {
          "notice": "Removes an entitlement from a space"
        },
        "setSpaceEntitlement(uint256,uint256,bytes)": {
          "notice": "Sets a new entitlement for a space"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/src/spaces/modules/entitlements/UserGrantedEntitlementModule.sol": "UserGrantedEntitlementModule"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@opengsn/=node_modules/@opengsn/",
      ":@openzeppelin/=node_modules/@openzeppelin/",
      ":council/=lib/council/contracts/",
      ":ds-test/=lib/ds-test/src/",
      ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
      ":forge-std/=lib/forge-std/src/",
      ":murky/=lib/murky/src/",
      ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
      ":solidity-json-writer/=lib/solidity-json-writer/contracts/",
      ":solmate/=lib/solmate/src/"
    ]
  },
  "sources": {
    "contracts/src/spaces/interfaces/IEntitlementModule.sol": {
      "keccak256": "0x9f87cc45c58af0f48d79089c154594c37c4e0416584c129b394ef62ddc1bd613",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://78aa9d235e4aa42fae181b356c7743def26b23c1a20c88b624f713df65c48817",
        "dweb:/ipfs/QmVz7EqmspN62hvAeeVA1t2k7HqEbuXD3QYcZoXBiv4YJi"
      ]
    },
    "contracts/src/spaces/interfaces/IRoleManager.sol": {
      "keccak256": "0x92b6478cd53bec46caffe0618507e4152cfc7d3720a17df62bf0da0567643212",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://67891a6bb4c3167eecf4527a57486cccaeae3e4ddfa0d7b249053dc32f19742a",
        "dweb:/ipfs/QmVTkRTXHS4eeZJWbDDEedh15wvaPDwL1Tx28njbaXLyEk"
      ]
    },
    "contracts/src/spaces/interfaces/ISpaceManager.sol": {
      "keccak256": "0xd1d3d8b7a196bb2ec5526eb8b25883d6a9f04d03026a05e73b895f9db187bef5",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://625064a7ac0a50c603325dd5e70375aad8cf856fb80c6376e4b5c601ada8ba55",
        "dweb:/ipfs/QmRDsV42pSCZxGsgjfPLKUbvTd1BmfbiVif7oA8b3oEuAD"
      ]
    },
    "contracts/src/spaces/libraries/Constants.sol": {
      "keccak256": "0xe9e3a6c723495eb46b9aed6868d882eced8b2766133d28a438bdd1b9d1f62695",
      "license": "MIT",
      "urls": [
        "bzz-raw://e605be1bc8a9416c54b48d6e61e47be0266e9e2ea5cad27cbf5a4349ef799406",
        "dweb:/ipfs/QmRBhdHM7ziCfYshEJiDozK51C9zt4T7TGFnSeLZiaNQ8J"
      ]
    },
    "contracts/src/spaces/libraries/DataTypes.sol": {
      "keccak256": "0x75114eced808ede585f99552ecbefcaed45f0499a141ca02bb5d8dcd294da64c",
      "license": "Apache-20",
      "urls": [
        "bzz-raw://76a2693d7c819212adfebf5a1727c59a151a729ca4c3a28239cad46be1580c99",
        "dweb:/ipfs/QmNy393dm59MyqS3ww64VHbzf38c44uGSkPDrttFxu7JbB"
      ]
    },
    "contracts/src/spaces/libraries/Errors.sol": {
      "keccak256": "0x9a941e4fc071bba09676638161d691f9d5e0cef3270d4eeb8d97c1fd091e08b5",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://b33c1d41f30be06a7dd4c4308320703bf217a568a53a22b6af7f1390fd5bc580",
        "dweb:/ipfs/QmXLCmvmkTmyGs8HGGF9McFX7vCG8Pxsu4xHorgkSPYiW6"
      ]
    },
    "contracts/src/spaces/libraries/PermissionTypes.sol": {
      "keccak256": "0xf2b4fa33252ee1f20f93ef3a36c76256c5194e46a217b7630160ca95ca6d569c",
      "license": "UNLICENSED",
      "urls": [
        "bzz-raw://781f4af73155e4642927a0077660ae6e7334b801321d276d681fb671ec7a8d86",
        "dweb:/ipfs/QmR2Jsvy7KFGqttabBMAiS9SBQN52zh9CiQVTX2XxsJU6A"
      ]
    },
    "contracts/src/spaces/libraries/Utils.sol": {
      "keccak256": "0x208f0437ba3da7fa39745826f05109a76974115877c7751bd3c5aab8731fa411",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://e7f7a4af20ad9acbc951d5c3c42083f7d7b55553f6dd34998a1bcb1689973570",
        "dweb:/ipfs/QmZu3LK8rrZp6FbZfFrowTZendH8KPM1qPpKfkce3Wf6iL"
      ]
    },
    "contracts/src/spaces/modules/EntitlementModuleBase.sol": {
      "keccak256": "0x3934c1aa22268287edc9b9e2d1c12b09ad12a0d62a1561bd346cc8ba0cb85e1c",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://384e8253a35d8c5bbf305a522d6f6b17bba744256fd068ba0cb5f6482b13b1df",
        "dweb:/ipfs/Qmb5Z9v473mGrAjb7c6TFLNQdyAJvWeoNX1srNHiBcTHot"
      ]
    },
    "contracts/src/spaces/modules/entitlements/UserGrantedEntitlementModule.sol": {
      "keccak256": "0x5baf1d694acf269bc864c2c33df39e1cbfff2c7329ded2ea1779188e3ac9bab5",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://4da4a2c338669168020f9756036e21906574de8398a69589c92843d84f29d073",
        "dweb:/ipfs/QmPVWTXQvV44DEVz6aKfQR5H1DkmFttWYhY2j66ixWor2Z"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
      "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
      "license": "MIT",
      "urls": [
        "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
        "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
      ]
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
      "license": "MIT",
      "urls": [
        "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
        "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
      ]
    }
  },
  "version": 1
}
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ZionRoleManager,
  ZionRoleManagerInterface,
} from "../ZionRoleManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "permissionRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidParameters",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSpaceManager",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spaceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roleId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.Permission",
        name: "permission",
        type: "tuple",
      },
    ],
    name: "addPermissionToRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spaceId",
        type: "uint256",
      },
    ],
    name: "createOwnerRole",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spaceId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "createRole",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spaceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roleId",
        type: "uint256",
      },
    ],
    name: "getPermissionsBySpaceIdByRoleId",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.Permission[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spaceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roleId",
        type: "uint256",
      },
    ],
    name: "getRoleBySpaceIdByRoleId",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "roleId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.Role",
        name: "role",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spaceId",
        type: "uint256",
      },
    ],
    name: "getRolesBySpaceId",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "roleId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.Role[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spaceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roleId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newRoleName",
        type: "string",
      },
    ],
    name: "modifyRoleName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spaceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roleId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.Permission",
        name: "permission",
        type: "tuple",
      },
    ],
    name: "removePermissionFromRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spaceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roleId",
        type: "uint256",
      },
    ],
    name: "removeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spaceManager",
        type: "address",
      },
    ],
    name: "setSpaceManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001c3f38038062001c3f8339810160408190526200003491620000c9565b6200003f3362000079565b6001600160a01b0381166200006757604051630e52390960e41b815260040160405180910390fd5b6001600160a01b0316608052620000fb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000dc57600080fd5b81516001600160a01b0381168114620000f457600080fd5b9392505050565b608051611b216200011e60003960008181610c700152610d6f0152611b216000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063a7d325fc1161008c578063db474ecb11610066578063db474ecb146101ae578063e88ca8a1146101c1578063f2fde38b146101e2578063f62df4df146101f557600080fd5b8063a7d325fc1461015b578063cdb0ba501461017b578063d9af4ecf1461018e57600080fd5b80633368c918146100d45780634b30a330146100e957806352f1bea2146100fc57806368959a0214610125578063715018a6146101385780638da5cb5b14610140575b600080fd5b6100e76100e23660046112e6565b610208565b005b6100e76100f736600461137e565b61024c565b61010f61010a3660046113a7565b610276565b60405161011c9190611437565b60405180910390f35b6100e7610133366004611499565b610387565b6100e761061f565b6000546040516001600160a01b03909116815260200161011c565b61016e610169366004611519565b610633565b60405161011c919061153b565b6100e7610189366004611519565b610736565b6101a161019c366004611519565b610996565b60405161011c9190611598565b6100e76101bc3660046112e6565b610b13565b6101d46101cf3660046115ab565b610b52565b60405190815260200161011c565b6100e76101f036600461137e565b610b93565b6101d46102033660046113a7565b610c11565b6003546001600160a01b03163314610233576040516312cb521760e11b815260040160405180910390fd5b61023c81610d3a565b610247838383610e51565b505050565b610254610e5e565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b606060016000838152602001908152602001600020600101805480602002602001604051908101604052809291908181526020016000905b8282101561037c5783829060005260206000209060020201604051806040016040529081600082015481526020016001820180546102eb906115f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610317906115f2565b80156103645780601f1061033957610100808354040283529160200191610364565b820191906000526020600020905b81548152906001019060200180831161034757829003601f168201915b505050505081525050815260200190600101906102ae565b505050509050919050565b6003546001600160a01b031633146103b2576040516312cb521760e11b815260040160405180910390fd5b61040e82828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060408051808201909152600581526427bbb732b960d91b60208201529150610eb89050565b1561042c57604051630e52390960e41b815260040160405180910390fd5b600084815260016020818152604080842090920180548351818402810184019094528084529091849084015b82821015610526578382906000526020600020906002020160405180604001604052908160008201548152602001600182018054610495906115f2565b80601f01602080910402602001604051908101604052809291908181526020018280546104c1906115f2565b801561050e5780601f106104e35761010080835404028352916020019161050e565b820191906000526020600020905b8154815290600101906020018083116104f157829003601f168201915b50505050508152505081526020019060010190610458565b5050825192935060009150505b818110156106165782818151811061054d5761054d61162c565b602002602001015160000151860361060e576105bc8382815181106105745761057461162c565b60200260200101516020015186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610eb892505050565b610609578484600160008a815260200190815260200160002060010183815481106105e9576105e961162c565b9060005260206000209060020201600101918261060792919061169d565b505b610616565b600101610533565b50505050505050565b610627610e5e565b6106316000610f50565b565b60008281526002602090815260408083208484528252808320805482518185028101850190935280835260609492939192909184015b8282101561072957838290600052602060002001604051806020016040529081600082018054610698906115f2565b80601f01602080910402602001604051908101604052809291908181526020018280546106c4906115f2565b80156107115780601f106106e657610100808354040283529160200191610711565b820191906000526020600020905b8154815290600101906020018083116106f457829003601f168201915b50505050508152505081526020019060010190610669565b5050505090505b92915050565b6003546001600160a01b03163314610761576040516312cb521760e11b815260040160405180910390fd5b6000828152600160208190526040822001805490915b8181101561098f578281815481106107915761079161162c565b9060005260206000209060020201600001548403610987576000858152600260209081526040808320878452825280832080548251818502810185019093528083529192909190849084015b8282101561089d5783829060005260206000200160405180602001604052908160008201805461080c906115f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610838906115f2565b80156108855780601f1061085a57610100808354040283529160200191610885565b820191906000526020600020905b81548152906001019060200180831161086857829003601f168201915b505050505081525050815260200190600101906107dd565b5050825192935060009150505b818110156108de576108d688888584815181106108c9576108c961162c565b6020026020010151610fa0565b6001016108aa565b50846108eb60018661176d565b815481106108fb576108fb61162c565b906000526020600020906002020185848154811061091b5761091b61162c565b60009182526020909120825460029092020190815560018082019061094290840182611780565b509050508480548061095657610956611857565b6000828152602081206002600019909301928302018181559061097c60018301826111d3565b50509055505061098f565b600101610777565b5050505050565b604080518082019091526000815260606020820152600083815260016020818152604080842090920180548351818402810184019094528084529091849084015b82821015610aa5578382906000526020600020906002020160405180604001604052908160008201548152602001600182018054610a14906115f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610a40906115f2565b8015610a8d5780601f10610a6257610100808354040283529160200191610a8d565b820191906000526020600020905b815481529060010190602001808311610a7057829003601f168201915b505050505081525050815260200190600101906109d7565b5050825192935060009150505b81811015610b0a57828181518110610acc57610acc61162c565b6020026020010151600001518503610b0257828181518110610af057610af061162c565b60200260200101519350505050610730565b600101610ab2565b50505092915050565b6003546001600160a01b03163314610b3e576040516312cb521760e11b815260040160405180910390fd5b610b4781610d3a565b610247838383610fa0565b6003546000906001600160a01b03163314610b80576040516312cb521760e11b815260040160405180910390fd5b610b8c8383600161111c565b9392505050565b610b9b610e5e565b6001600160a01b038116610c055760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610c0e81610f50565b50565b6003546000906001600160a01b03163314610c3f576040516312cb521760e11b815260040160405180910390fd5b6000610c6a836040518060400160405280600581526020016427bbb732b960d91b815250600161111c565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b989e2c56040518163ffffffff1660e01b8152600401600060405180830381865afa158015610ccc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cf4919081019061190d565b805190915060005b81811015610d3057610d288685858481518110610d1b57610d1b61162c565b6020026020010151610e51565b600101610cfc565b5091949350505050565b60405163173c4a6360e01b81527f929f3fd6848015f83b9210c89f7744e3941acae1195c8bf9f5798c090dc8f49760048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063173c4a6390602401600060405180830381865afa158015610dbe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610de691908101906119d0565b604051602001610df69190611a05565b6040516020818303038152906040528051906020012081604051602001610e1d9190611a05565b6040516020818303038152906040528051906020012003610c0e57604051630e52390960e41b815260040160405180910390fd5b610247838383600261119b565b6000546001600160a01b031633146106315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bfc565b8151815160009184918491908114610ed65760009350505050610730565b60005b81811015610f4357828181518110610ef357610ef361162c565b602001015160f81c60f81b6001600160f81b031916848281518110610f1a57610f1a61162c565b01602001516001600160f81b03191614610f3b576000945050505050610730565b600101610ed9565b5060019695505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008381526002602090815260408083208584529091528120805490915b818110156111145761107b8460000151848381548110610fe057610fe061162c565b906000526020600020016000018054610ff8906115f2565b80601f0160208091040260200160405190810160405280929190818152602001828054611024906115f2565b80156110715780601f1061104657610100808354040283529160200191611071565b820191906000526020600020905b81548152906001019060200180831161105457829003601f168201915b5050505050610eb8565b1561110c578261108c60018461176d565b8154811061109c5761109c61162c565b906000526020600020018382815481106110b8576110b861162c565b6000918252602090912001806110ce8382611780565b50905050828054806110e2576110e2611857565b600190038181906000526020600020016000808201600061110391906111d3565b50509055611114565b600101610fbe565b505050505050565b6000838152602082905260408120805482918261113883611a20565b909155506000868152602085815260408083208151808301909252848252818301898152600191820180548084018255908652939094208251600290940201928355925193945092909182019061118f9082611a39565b50919695505050505050565b600084815260208281526040808320868452825282208054600181018255908352912083518492919091019081906106169082611a39565b5080546111df906115f2565b6000825580601f106111ef575050565b601f016020900490600052602060002090810190610c0e91905b8082111561121d5760008155600101611209565b5090565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561126057611260611221565b604052919050565b600067ffffffffffffffff82111561128257611282611221565b50601f01601f191660200190565b600082601f8301126112a157600080fd5b81356112b46112af82611268565b611237565b8181528460208386010111156112c957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000606084860312156112fb57600080fd5b8335925060208401359150604084013567ffffffffffffffff8082111561132157600080fd5b908501906020828803121561133557600080fd5b60405160208101818110838211171561135057611350611221565b60405282358281111561136257600080fd5b61136e89828601611290565b8252508093505050509250925092565b60006020828403121561139057600080fd5b81356001600160a01b0381168114610b8c57600080fd5b6000602082840312156113b957600080fd5b5035919050565b60005b838110156113db5781810151838201526020016113c3565b50506000910152565b600081518084526113fc8160208601602086016113c0565b601f01601f19169290920160200192915050565b80518252600060208201516040602085015261142f60408501826113e4565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561148c57603f1988860301845261147a858351611410565b9450928501929085019060010161145e565b5092979650505050505050565b600080600080606085870312156114af57600080fd5b8435935060208501359250604085013567ffffffffffffffff808211156114d557600080fd5b818701915087601f8301126114e957600080fd5b8135818111156114f857600080fd5b88602082850101111561150a57600080fd5b95989497505060200194505050565b6000806040838503121561152c57600080fd5b50508035926020909101359150565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561148c57878503603f19018452815151868652611585878701826113e4565b9550509285019290850190600101611562565b602081526000610b8c6020830184611410565b600080604083850312156115be57600080fd5b82359150602083013567ffffffffffffffff8111156115dc57600080fd5b6115e885828601611290565b9150509250929050565b600181811c9082168061160657607f821691505b60208210810361162657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b601f82111561024757600081815260208120601f850160051c810160208610156116695750805b601f850160051c820191505b8181101561111457828155600101611675565b600019600383901b1c191660019190911b1790565b67ffffffffffffffff8311156116b5576116b5611221565b6116c9836116c383546115f2565b83611642565b6000601f8411600181146116f757600085156116e55750838201355b6116ef8682611688565b84555061098f565b600083815260209020601f19861690835b828110156117285786850135825560209485019460019092019101611708565b50868210156117455760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561073057610730611757565b81810361178b575050565b61179582546115f2565b67ffffffffffffffff8111156117ad576117ad611221565b6117c1816117bb84546115f2565b84611642565b6000601f8211600181146117ef57600083156117dd5750848201545b6117e78482611688565b85555061098f565b600085815260209020601f19841690600086815260209020845b838110156118295782860154825560019586019590910190602001611809565b50858310156118475781850154600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603160045260246000fd5b60006020828403121561187f57600080fd5b6040516020810167ffffffffffffffff82821081831117156118a3576118a3611221565b8160405282935084519150808211156118bb57600080fd5b508301601f810185136118cd57600080fd5b80516118db6112af82611268565b8181528660208385010111156118f057600080fd5b6119018260208301602086016113c0565b90925250909392505050565b6000602080838503121561192057600080fd5b825167ffffffffffffffff8082111561193857600080fd5b818501915085601f83011261194c57600080fd5b81518181111561195e5761195e611221565b8060051b61196d858201611237565b918252838101850191858101908984111561198757600080fd5b86860192505b838310156119c3578251858111156119a55760008081fd5b6119b38b89838a010161186d565b835250918601919086019061198d565b9998505050505050505050565b6000602082840312156119e257600080fd5b815167ffffffffffffffff8111156119f957600080fd5b61142f8482850161186d565b602081526000825160208084015261142f60408401826113e4565b600060018201611a3257611a32611757565b5060010190565b815167ffffffffffffffff811115611a5357611a53611221565b611a61816117bb84546115f2565b602080601f831160018114611a905760008415611a7e5750858301515b611a888582611688565b865550611114565b600085815260208120601f198616915b82811015611abf57888601518255948401946001909101908401611aa0565b508582101561184757939096015160001960f8600387901b161c19169092555050600190811b0190555056fea26469706673582212204e7a97de658d73b6fa623bd2fe9c217fedb272f8f700193ac00c4f001cfe346464736f6c63430008110033";

type ZionRoleManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZionRoleManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZionRoleManager__factory extends ContractFactory {
  constructor(...args: ZionRoleManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    permissionRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZionRoleManager> {
    return super.deploy(
      permissionRegistry,
      overrides || {}
    ) as Promise<ZionRoleManager>;
  }
  override getDeployTransaction(
    permissionRegistry: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(permissionRegistry, overrides || {});
  }
  override attach(address: string): ZionRoleManager {
    return super.attach(address) as ZionRoleManager;
  }
  override connect(signer: Signer): ZionRoleManager__factory {
    return super.connect(signer) as ZionRoleManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZionRoleManagerInterface {
    return new utils.Interface(_abi) as ZionRoleManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZionRoleManager {
    return new Contract(address, _abi, signerOrProvider) as ZionRoleManager;
  }
}
